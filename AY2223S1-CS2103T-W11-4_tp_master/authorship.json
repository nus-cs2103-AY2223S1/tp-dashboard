[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CFSY"},"content":"# Waddle ðŸ¦†","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W11-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103-W11-4/tp/actions)","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W11-4/tp/branch/master/graph/badge.svg?token\u003d45LHH4UIGB)](https://codecov.io/gh/AY2223S1-CS2103T-W11-4/tp)","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"### Introduction","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":"* **Waddle** is a simple, no-frills travel planning application catered to people who love doing everything on their keyboards.","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"ningtan11"},"content":"* **Features :**","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":"  * You can plan your travels in 3 simple steps!","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"CFSY"},"content":"    * Create a trip","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"CFSY"},"content":"    * Add activities","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"    * Schedule","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"  * After you plan your trip, easily export your itinerary for easy reference during the trip itself.","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"ningtan11"},"content":"* Visit our product website for a detailed documentation, **[Waddle Product Website](https://github.com/AY2223S1-CS2103T-W11-4/tp/blob/master/docs/UserGuide.md)**.","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"CFSY"},"content":"### Acknowledgements","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"CFSY"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"CFSY":20,"ningtan11":2,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"seox123"},"content":"mainClassName \u003d \u0027seedu.waddle.Main\u0027","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":"run {","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"ciaoosuuu"},"content":"    implementation group: \u0027org.apache.pdfbox\u0027, name: \u0027pdfbox\u0027, version: \u00272.0.27\u0027","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"CFSY"},"content":"    implementation group: \u0027org.apache.commons\u0027, name: \u0027commons-lang3\u0027, version: \u00273.4\u0027","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":76,"author":{"gitId":"ciaoosuuu"},"content":"    archiveFileName \u003d \u0027waddle.jar\u0027","lastModifiedDate":"2022-10-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ciaoosuuu":7,"CFSY":1,"-":70,"seox123":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":"### Clement Foo Shi Yu","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"CFSY"},"content":"\u003cimg src\u003d\"images/cfsy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"[[github](https://github.com/CFSY)]","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"[[portfolio](team/cfsy.md)]","lastModifiedDate":"2022-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"CFSY"},"content":"* Role: Developer","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"* Responsibilities: Logic","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"ciaoosuuu"},"content":"### Chen Shun","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"\u003cimg src\u003d\"images/ciaoosuuu.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"[[github](http://github.com/ciaoosuuu)]","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"[[portfolio](team/ciaoosuuu.md)]","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"* Role: Developer","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"pewggls"},"content":"### Hui Yi Lu","lastModifiedDate":"2022-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"pewggls"},"content":"\u003cimg src\u003d\"images/pewggls.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"pewggls"},"content":"[[github](http://github.com/pewggls)] [[portfolio](team/pewggls.md)]","lastModifiedDate":"2022-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"pewggls"},"content":"* Responsibilities: Developer","lastModifiedDate":"2022-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"seox123"},"content":"### Law Sean Meng","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"seox123"},"content":"\u003cimg src\u003d\"images/seox123.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"seox123"},"content":"[[github](http://github.com/seox123)]","lastModifiedDate":"2022-09-28"},{"lineNumber":46,"author":{"gitId":"seox123"},"content":"[[portfolio](team/seox123.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"ningtan11"},"content":"### Tan Shao Ning","lastModifiedDate":"2022-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"ningtan11"},"content":"\u003cimg src\u003d\"images/ningtan11.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"ningtan11"},"content":"[[github](http://github.com/ningtan11)]","lastModifiedDate":"2022-09-29"},{"lineNumber":56,"author":{"gitId":"ningtan11"},"content":"[[portfolio](team/ningtan11.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"CFSY":6,"ciaoosuuu":5,"pewggls":4,"ningtan11":4,"-":36,"seox123":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"ningtan11"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S1-CS2103T-W11-4/tp/blob/master/src/main/java/seedu/waddle/Main.java) and [`MainApp`](https://github.com/AY2223S1-CS2103T-W11-4/tp/blob/master/src/main/java/seedu/waddle/MainApp.java). It is responsible for,","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"CFSY"},"content":"The rest of the App consists of five components.","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"CFSY"},"content":"* [**`StageManager`**](#stageManager-component): Keeps track of the App\u0027s current stage.","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"CFSY"},"content":"StageManager (shown in the diagram above) uses the Singleton pattern and is accessible by the Logic component for checking and changing the app\u0027s current stage.","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"CFSY"},"content":"The other four main components (also shown in the diagram above),","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"ningtan11"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S1-CS2103T-W11-4/tp/blob/master/src/main/java/seedu/waddle/ui/Ui.java)","lastModifiedDate":"2022-10-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"CFSY"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `ItineraryListPanel`, `ItemGroupListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"ningtan11"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S1-CS2103T-W11-4/tp/blob/master/src/main/java/seedu/waddle/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S1-CS2103T-W11-4/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2022-10-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"CFSY"},"content":"* depends on some classes in the `Model` component, as it displays `Itinerary` object residing in the `Model`.","lastModifiedDate":"2022-10-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"ningtan11"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S1-CS2103T-W11-4/tp/blob/master/src/main/java/seedu/waddle/logic/Logic.java)","lastModifiedDate":"2022-10-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"ningtan11"},"content":"1. When `Logic` is called upon to execute a command, it uses the `WaddleParser` class to parse the user command.","lastModifiedDate":"2022-10-18"},{"lineNumber":100,"author":{"gitId":"ningtan11"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2022-10-18"},{"lineNumber":101,"author":{"gitId":"ningtan11"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to add an item).","lastModifiedDate":"2022-10-18"},{"lineNumber":102,"author":{"gitId":"ningtan11"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2022-10-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"ningtan11"},"content":"* When called upon to parse a user command, the `WaddleParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `WaddleParser` returns back as a `Command` object.","lastModifiedDate":"2022-10-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"ningtan11"},"content":"**API** : [`Model.java`](https://github.com/AY2223S1-CS2103T-W11-4/tp/blob/master/src/main/java/seedu/waddle/model/Model.java)","lastModifiedDate":"2022-10-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"ningtan11"},"content":"* stores the app data i.e., all `Itinerary` objects (which are contained in a `UniqueItineraryList` object).","lastModifiedDate":"2022-10-18"},{"lineNumber":128,"author":{"gitId":"ningtan11"},"content":"* stores the currently \u0027selected\u0027 `Itinerary` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cItinerary\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-10-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"ciaoosuuu"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components).","lastModifiedDate":"2022-10-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"ningtan11"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S1-CS2103T-W11-4/tp/blob/master/src/main/java/seedu/waddle/storage/Storage.java)","lastModifiedDate":"2022-10-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"ningtan11"},"content":"* can save both Waddle data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2022-10-18"},{"lineNumber":140,"author":{"gitId":"ningtan11"},"content":"* inherits from both `WaddleStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-10-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"ningtan11"},"content":"Classes used by multiple components are in the `seedu.waddle.commons` package.","lastModifiedDate":"2022-10-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"CFSY"},"content":"### Plan/Unplan Feature","lastModifiedDate":"2022-10-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"CFSY"},"content":"The Plan/Unplan feature allows users to allocate an item to a particular time slot within a day.","lastModifiedDate":"2022-10-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"CFSY"},"content":"#### Implementation","lastModifiedDate":"2022-10-26"},{"lineNumber":158,"author":{"gitId":"CFSY"},"content":" The Plan/Unplan mechanism is facilitated mainly by the `Itinerary` and `Day` classes. First, let us take a look at class structure of the `Itinerary` ,`Day` and  `item` classes.","lastModifiedDate":"2022-10-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":160,"author":{"gitId":"CFSY"},"content":"![ItineraryClassDiagram](images/ItineraryClassDiagram.png)","lastModifiedDate":"2022-10-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":162,"author":{"gitId":"CFSY"},"content":"The diagram above is a partial class diagram containing the all the fields and relevant methods needed to understand the Plan/Unplan implementation.","lastModifiedDate":"2022-10-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":164,"author":{"gitId":"CFSY"},"content":"The fields of particular concern are explained below.","lastModifiedDate":"2022-10-26"},{"lineNumber":165,"author":{"gitId":"CFSY"},"content":"* `unscheduledItemList`â€‰â€”â€‰A UniqueItemList of unscheduled items in an Itinerary.","lastModifiedDate":"2022-10-26"},{"lineNumber":166,"author":{"gitId":"CFSY"},"content":"* `days`â€‰â€”â€‰A List of Days in an Itinerary.","lastModifiedDate":"2022-10-26"},{"lineNumber":167,"author":{"gitId":"CFSY"},"content":"* `itemList`â€‰â€”â€‰A UniqueItemList of scheduled items in a Day.","lastModifiedDate":"2022-10-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":169,"author":{"gitId":"CFSY"},"content":"Additionally, we will explain the methods of particular concern below.","lastModifiedDate":"2022-10-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":171,"author":{"gitId":"CFSY"},"content":"* `Itinerary#planItem(Index, dayNumber, LocalTime)`â€‰â€”â€‰Transfers the selected item from the itinerary\u0027s unscheduledItemList to the itemList of the selected day. Sets the startTime of the itinerary to the specified startTime. Returns the item.","lastModifiedDate":"2022-10-26"},{"lineNumber":172,"author":{"gitId":"CFSY"},"content":"* `Itinerary#unplanItem(MultiIndex)`â€‰â€”â€‰Transfers the selected item from the selected day\u0027s itemList to the itinerary\u0027s unscheduledItemList. Resets the startTime field of the item. Re-sort the items in `unscheduledItemList` by order of priority. Returns the item.","lastModifiedDate":"2022-10-26"},{"lineNumber":173,"author":{"gitId":"CFSY"},"content":"* `Day#additem(Item)`â€‰â€”â€‰Adds the provided item into the itemList if there are no time conflicts. Re-sort the items in itemList by order of startTime.","lastModifiedDate":"2022-10-26"},{"lineNumber":174,"author":{"gitId":"CFSY"},"content":"* `Day#removeitem(Index)`â€‰â€”â€‰Removes the item at the specified index from itemList. Returns the item.","lastModifiedDate":"2022-10-26"},{"lineNumber":175,"author":{"gitId":"CFSY"},"content":"* `Day#getConflictingItems(Item)`â€‰â€”â€‰Returns a list of items, in the day\u0027s itemList, that have time conflicts with the provided item.","lastModifiedDate":"2022-10-26"},{"lineNumber":176,"author":{"gitId":"CFSY"},"content":"* `Item#getStartTime()`â€‰â€”â€‰Returns the start time of the item.","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"CFSY"},"content":"* `Item#getEndTime()`â€‰â€”â€‰Returns the end time of the item.","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"CFSY"},"content":"Given below is an example usage scenario and how the Plan/Unplan mechanism behaves at each step.","lastModifiedDate":"2022-10-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":181,"author":{"gitId":"CFSY"},"content":"![PlanSequenceDiagram](images/PlanSequenceDiagram.png)","lastModifiedDate":"2022-10-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":183,"author":{"gitId":"CFSY"},"content":"Step 1. The user executes `plan 1 d/1 t/12:00` command to plan the first item in the unscheduledItemList to the first day at time 12:00. The `plan` command is then parsed into a `PlanCommand` object and executed by the LogicManger. This is similar to what was shown in the Architecture Sequence Diagram under the Design section.","lastModifiedDate":"2022-10-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":185,"author":{"gitId":"CFSY"},"content":"![PlanSequenceDiagram2](images/PlanSequenceDiagram2.png)","lastModifiedDate":"2022-10-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":187,"author":{"gitId":"CFSY"},"content":"Step 2. The `PlanCommand` object\u0027s `execute()` method is called. `PlanCommand` gets the singleton instance of StageManager through `StageManager#getInstance()` followed by the current selected `Itinerary` object through `StageManager#getSelectedItinerary()`.","lastModifiedDate":"2022-10-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":189,"author":{"gitId":"CFSY"},"content":"Step 3. `PlanCommand` calls `Itinerary#planItem(itemIndex, dayNumber, startTime)` with the parsed values from the `plan 1 d/1 t/12:00` command.","lastModifiedDate":"2022-10-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":191,"author":{"gitId":"CFSY"},"content":"Step 4. `Itinerary` gets the item from its unscheduledItemList at the specified `itemIndex`. It sets the startTime of the item and then calls `Day#addItem(item)` of the `Day` at index `dayNumber` with the item.","lastModifiedDate":"2022-10-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":193,"author":{"gitId":"CFSY"},"content":"Step 5. `Day`self invokes `Day#getConflictingItems(item)`. If there are no conflicting items, the incoming item is added into the day\u0027s `itemList`. If there are conflicting items, a CommandException is thrown with a time conflict message.","lastModifiedDate":"2022-10-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":195,"author":{"gitId":"CFSY"},"content":"Step 6. If the item is successfully added, a `CommandResult` object is created with the success message.","lastModifiedDate":"2022-10-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2022-10-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":199,"author":{"gitId":"CFSY"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The Unplan command works in a similar manner. Instead of `Itinerary#planItem(itemIndex, dayNumber, startTime)` and `Day#addItem(item)`, `Itinerary#unplanItem(MultiIndex)` and `Day#removeitem(Index)` are called instead.","lastModifiedDate":"2022-10-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":203,"author":{"gitId":"CFSY"},"content":"### Edit an item","lastModifiedDate":"2022-10-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":205,"author":{"gitId":"CFSY"},"content":"Refer above for the class structure of the `Itinerary` ,`Day` and  `item` classes.","lastModifiedDate":"2022-10-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":207,"author":{"gitId":"CFSY"},"content":"Items can be either scheduled or unscheduled. Unscheduled items are stored in an itinerary\u0027s unscheduledItemList while scheduled items are stored in the respective days\u0027 itemLists. as such, both are handled in slightly different manners.","lastModifiedDate":"2022-10-26"},{"lineNumber":208,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":209,"author":{"gitId":"CFSY"},"content":"Given below is a walk-through of the edit item mechanism. We will skip to where the `EditItemCommand#execute()` method is called since the preceding portion is similar to what we have laid out in previous sections.","lastModifiedDate":"2022-10-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":211,"author":{"gitId":"CFSY"},"content":"Step 1. The `EditItemCommand` object\u0027s `execute()` method is called.","lastModifiedDate":"2022-10-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":213,"author":{"gitId":"CFSY"},"content":"Step 2. The multiIndex in `EditItemCommand` is checked for a presence of a dayNumber. If dayNumber is absent, follow the steps under Unscheduled Items, else follow the steps under Scheduled Items.","lastModifiedDate":"2022-10-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":215,"author":{"gitId":"CFSY"},"content":"* **Unscheduled Items**","lastModifiedDate":"2022-10-18"},{"lineNumber":216,"author":{"gitId":"CFSY"},"content":"  * Step 3. The index is checked to be within bounds of the itinerary\u0027s unscheduledItemList. If it is not, a `CommandException` is thrown.","lastModifiedDate":"2022-10-26"},{"lineNumber":217,"author":{"gitId":"CFSY"},"content":"  * Step 4. A new `Item` object, `editedItem` is created with the edited inputs.","lastModifiedDate":"2022-10-26"},{"lineNumber":218,"author":{"gitId":"CFSY"},"content":"  * Step 5. A check for duplicates in the unscheduledItemList is done. If there is a duplicate, a `CommandException` is thrown.","lastModifiedDate":"2022-10-26"},{"lineNumber":219,"author":{"gitId":"CFSY"},"content":"  * Step 6. The original item is replaced with `editedItem`.","lastModifiedDate":"2022-10-26"},{"lineNumber":220,"author":{"gitId":"CFSY"},"content":"  * Step 7. The unscheduledItemList is re-sorted in order of priority.","lastModifiedDate":"2022-10-26"},{"lineNumber":221,"author":{"gitId":"CFSY"},"content":"* **Scheduled Items**","lastModifiedDate":"2022-10-18"},{"lineNumber":222,"author":{"gitId":"CFSY"},"content":"  * Step 3. The dayNumber and index are checked to be within bounds of the itinerary\u0027s duration and unscheduledItemList respectively. If any is not, a `CommandException` is thrown.","lastModifiedDate":"2022-10-26"},{"lineNumber":223,"author":{"gitId":"CFSY"},"content":"  * Step 4. A new `Item` object, `editedItem` is created with the edited inputs.","lastModifiedDate":"2022-10-26"},{"lineNumber":224,"author":{"gitId":"CFSY"},"content":"  * Step 5. A check for duplicates in the day\u0027s itemList is done. If there is a duplicate, a `CommandException` is thrown.","lastModifiedDate":"2022-10-26"},{"lineNumber":225,"author":{"gitId":"CFSY"},"content":"  * Step 6. The original item is removed from the day\u0027s itemList","lastModifiedDate":"2022-10-26"},{"lineNumber":226,"author":{"gitId":"CFSY"},"content":"  * Step 7. Attempt to add the `editedItem` into the itemList. If a time conflict is detected, the original item is added back into the itemList and a `CommandException` is thrown.","lastModifiedDate":"2022-10-26"},{"lineNumber":227,"author":{"gitId":"CFSY"},"content":"  * Step 8. If the `editedItem` is added successfully, the itemList is re-sorted in order of startTime.","lastModifiedDate":"2022-10-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":229,"author":{"gitId":"pewggls"},"content":"### \\[Proposed\\] Edit an itinerary","lastModifiedDate":"2022-10-18"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":231,"author":{"gitId":"pewggls"},"content":"An itinerary\u0027s details (description, start date, duration, and budget) can be edited by changing the fields of an Itinerary object.","lastModifiedDate":"2022-10-18"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":233,"author":{"gitId":"CFSY"},"content":"Given below are some example usage scenarios and how the editing mechanism is carried out. As per the examples above, we will skip to where the `EditCommand#execute()` method is called.","lastModifiedDate":"2022-10-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":235,"author":{"gitId":"CFSY"},"content":"Step 1. The `EditCommand` object\u0027s `execute()` method is called.","lastModifiedDate":"2022-10-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":237,"author":{"gitId":"CFSY"},"content":"* **Editing an itinerary\u0027s description, budget, and start date**","lastModifiedDate":"2022-10-26"},{"lineNumber":238,"author":{"gitId":"CFSY"},"content":"    * Step 2. A new `Itinerary` object, `editedItinerary` is created with the edited inputs.","lastModifiedDate":"2022-10-26"},{"lineNumber":239,"author":{"gitId":"CFSY"},"content":"    * Step 3. A check for duplicates in model is done. If there is a duplicate, a `CommandException` is thrown.","lastModifiedDate":"2022-10-26"},{"lineNumber":240,"author":{"gitId":"CFSY"},"content":"    * Step 4. The original itinerary is replaced with `editedItinerary`.","lastModifiedDate":"2022-10-26"},{"lineNumber":241,"author":{"gitId":"CFSY"},"content":"* **Editing an itinerary\u0027s duration**","lastModifiedDate":"2022-10-26"},{"lineNumber":242,"author":{"gitId":"CFSY"},"content":"  * The steps are similar but with the additional checks below.","lastModifiedDate":"2022-10-26"},{"lineNumber":243,"author":{"gitId":"CFSY"},"content":"  * If the duration is extended, add more Day objects to the Itinerary\u0027s list.","lastModifiedDate":"2022-10-26"},{"lineNumber":244,"author":{"gitId":"pewggls"},"content":"  * If the duration is reduced, remove the extra Day objects from the Itinerary\u0027s list starting from the back (i.e., the last Day is removed first).","lastModifiedDate":"2022-10-18"},{"lineNumber":245,"author":{"gitId":"CFSY"},"content":"    * The Items that were scheduled in the deleted Days would be unscheduled.","lastModifiedDate":"2022-10-26"},{"lineNumber":246,"author":{"gitId":"CFSY"},"content":"  * Update the duration field.","lastModifiedDate":"2022-10-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":248,"author":{"gitId":"CFSY"},"content":"### \\[Proposed\\] Export","lastModifiedDate":"2022-10-26"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":250,"author":{"gitId":"CFSY"},"content":"The Export feature is facilitated by the pdfbox library.","lastModifiedDate":"2022-10-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":252,"author":{"gitId":"CFSY"},"content":"The conversion from Objects to a text output can be done by calling the `getTextRepresentation()` method of the `Itinerary` ,`Day` and  `item` classes in a cascading manner.","lastModifiedDate":"2022-10-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":254,"author":{"gitId":"CFSY"},"content":"`Itinerary#getTextRepresentation()` will call and append `Day#getTextRepresentation()` of the `Day`s in its `days` list.  `Day#getTextRepresentation()` then calls and append `Item#getTextRepresentation()` of the `Item`s in its `itemList`.","lastModifiedDate":"2022-10-26"},{"lineNumber":255,"author":{"gitId":"CFSY"},"content":"The output will be the itinerary fully represented in text form and written to a newly created blank pdf.","lastModifiedDate":"2022-10-26"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":257,"author":{"gitId":"ciaoosuuu"},"content":"PDF is then exported.","lastModifiedDate":"2022-10-18"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":259,"author":{"gitId":"CFSY"},"content":"PDF will be stored as \"data/\u003citinerary name\u003e.pdf\".","lastModifiedDate":"2022-10-26"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":261,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"CFSY"},"content":"* has a need to plan itineraries for trips","lastModifiedDate":"2022-10-05"},{"lineNumber":280,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":283,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"CFSY"},"content":"**Value proposition**: Provides a distraction free and fast way to plan itineraries","lastModifiedDate":"2022-10-05"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"| Priority | As a â€¦â€‹                              | I want to â€¦â€‹                                    | So that I canâ€¦â€‹                                                      |","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"CFSY"},"content":"|----------|--------------------------------------|-------------------------------------------------|----------------------------------------------------------------------|","lastModifiedDate":"2022-10-05"},{"lineNumber":294,"author":{"gitId":"CFSY"},"content":"| `* * *`  | user                                 | see usage instructions                          | refer to instructions when I forget how to use the App               |","lastModifiedDate":"2022-10-05"},{"lineNumber":295,"author":{"gitId":"CFSY"},"content":"| `* * *`  | user                                 | add a new itinerary                             |                                                                      |","lastModifiedDate":"2022-10-05"},{"lineNumber":296,"author":{"gitId":"CFSY"},"content":"| `* * *`  | user                                 | delete an itinerary                             | remove itineraries that I no longer need                             |","lastModifiedDate":"2022-10-05"},{"lineNumber":297,"author":{"gitId":"CFSY"},"content":"| `* * *`  | user                                 | find an itinerary by keywords                   | access an itinerary without having to scroll through the entire list |","lastModifiedDate":"2022-10-05"},{"lineNumber":298,"author":{"gitId":"CFSY"},"content":"| `* * *`  | user                                 | edit the details of an itinerary                |                                                                      |","lastModifiedDate":"2022-10-05"},{"lineNumber":299,"author":{"gitId":"CFSY"},"content":"| `*`      | user with many itineraries in Waddle | sort itineraries by date                        | see which trips are coming first                                     |","lastModifiedDate":"2022-10-05"},{"lineNumber":300,"author":{"gitId":"CFSY"},"content":"| `* * *`  | user                                 | add activities to an itinerary                  |                                                                      |","lastModifiedDate":"2022-10-05"},{"lineNumber":301,"author":{"gitId":"CFSY"},"content":"| `* * *`  | user                                 | edit activities in an itinerary                 |                                                                      |","lastModifiedDate":"2022-10-05"},{"lineNumber":302,"author":{"gitId":"CFSY"},"content":"| `* * *`  | user                                 | schedule activities in an itinerary             |                                                                      |","lastModifiedDate":"2022-10-05"},{"lineNumber":303,"author":{"gitId":"CFSY"},"content":"| `* * *`  | user                                 | select an itinerary for planning                |                                                                      |","lastModifiedDate":"2022-10-05"},{"lineNumber":304,"author":{"gitId":"CFSY"},"content":"| `* * *`  | user                                 | see the activities i have added in an itinerary | schedule better                                                      |","lastModifiedDate":"2022-10-05"},{"lineNumber":305,"author":{"gitId":"CFSY"},"content":"| `*`      | resourceful user                     | import others\u0027 itineraries                      | to reference                                                         |","lastModifiedDate":"2022-10-05"},{"lineNumber":306,"author":{"gitId":"CFSY"},"content":"| `*`      | user who travels in groups           | create a split schedule                         | different groups can do different things simultaneously              |","lastModifiedDate":"2022-10-05"},{"lineNumber":307,"author":{"gitId":"CFSY"},"content":"| `*`      | user                                 | share the itinerary to non Waddle users         | travel buddies can all use it                                        |","lastModifiedDate":"2022-10-05"},{"lineNumber":308,"author":{"gitId":"CFSY"},"content":"| `*`      | user                                 | mark done activities                            |                                                                      |","lastModifiedDate":"2022-10-05"},{"lineNumber":309,"author":{"gitId":"CFSY"},"content":"| `*`      | meticulous                           | categorise each activity by activity type       |                                                                      |","lastModifiedDate":"2022-10-05"},{"lineNumber":310,"author":{"gitId":"CFSY"},"content":"| `*`      | unique user                          | create custom activity categories               |                                                                      |","lastModifiedDate":"2022-10-05"},{"lineNumber":311,"author":{"gitId":"CFSY"},"content":"| `*`      | fast user                            | use shortcuts                                   | be even faster                                                       |","lastModifiedDate":"2022-10-05"},{"lineNumber":312,"author":{"gitId":"CFSY"},"content":"| `*`      | fast user                            | add custom shortcuts for commands               |                                                                      |","lastModifiedDate":"2022-10-05"},{"lineNumber":313,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"CFSY"},"content":"(For all use cases below, the user begins at the starting page, the **System** is `Waddle` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-10-05"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"CFSY"},"content":"**Use case: Add an itinerary**","lastModifiedDate":"2022-10-05"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"CFSY"},"content":"1. User requests to add itinerary.","lastModifiedDate":"2022-10-05"},{"lineNumber":326,"author":{"gitId":"CFSY"},"content":"2. User enters the name of the itinerary.","lastModifiedDate":"2022-10-05"},{"lineNumber":327,"author":{"gitId":"CFSY"},"content":"3. Waddle creates the itinerary and provides a confirmation to the user.\u003cbr\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":328,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"pewggls"},"content":"* 2a. The itinerary name is not entered.","lastModifiedDate":"2022-10-06"},{"lineNumber":333,"author":{"gitId":"pewggls"},"content":"  * Waddle shows an error message.\u003cbr\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":334,"author":{"gitId":"CFSY"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2022-10-05"},{"lineNumber":335,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":336,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":337,"author":{"gitId":"CFSY"},"content":"**Use case: Edit a specific itineraryâ€™s details**","lastModifiedDate":"2022-10-05"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"CFSY"},"content":"**MSS**","lastModifiedDate":"2022-10-05"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":341,"author":{"gitId":"CFSY"},"content":"1. User selects a specific itinerary.","lastModifiedDate":"2022-10-05"},{"lineNumber":342,"author":{"gitId":"CFSY"},"content":"2. User enters new details of the itinerary.","lastModifiedDate":"2022-10-05"},{"lineNumber":343,"author":{"gitId":"seox123"},"content":"3. Waddle updates the itinerary details and provides a confirmation to the user.\u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":344,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-10-05"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"pewggls"},"content":"* 2a. The itinerary name is incomplete.","lastModifiedDate":"2022-10-06"},{"lineNumber":349,"author":{"gitId":"pewggls"},"content":"  * Waddle shows an error message.\u003cbr\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":350,"author":{"gitId":"pewggls"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2022-10-06"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":353,"author":{"gitId":"ningtan11"},"content":"**Use case: Delete an itinerary**","lastModifiedDate":"2022-10-05"},{"lineNumber":354,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":355,"author":{"gitId":"ningtan11"},"content":"**MSS**","lastModifiedDate":"2022-10-05"},{"lineNumber":356,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":357,"author":{"gitId":"ningtan11"},"content":"1. User selects a specific itinerary.","lastModifiedDate":"2022-10-05"},{"lineNumber":358,"author":{"gitId":"ningtan11"},"content":"2. User requests to delete the itinerary.","lastModifiedDate":"2022-10-05"},{"lineNumber":359,"author":{"gitId":"ningtan11"},"content":"3. Waddle requests for user confirmation.","lastModifiedDate":"2022-10-05"},{"lineNumber":360,"author":{"gitId":"ningtan11"},"content":"4. User confirms intention to delete itinerary.","lastModifiedDate":"2022-10-05"},{"lineNumber":361,"author":{"gitId":"seox123"},"content":"5. Waddle deletes the itinerary.\u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":362,"author":{"gitId":"ningtan11"},"content":"Use case ends.","lastModifiedDate":"2022-10-05"},{"lineNumber":363,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":364,"author":{"gitId":"ningtan11"},"content":"**Extensions**","lastModifiedDate":"2022-10-05"},{"lineNumber":365,"author":{"gitId":"seox123"},"content":"* 4a. User decides against deleting the itinerary.\u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":366,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-10-05"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":369,"author":{"gitId":"pewggls"},"content":"**Use case: Add an item to an itinerary**","lastModifiedDate":"2022-10-05"},{"lineNumber":370,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":371,"author":{"gitId":"pewggls"},"content":"**MSS**","lastModifiedDate":"2022-10-05"},{"lineNumber":372,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":373,"author":{"gitId":"pewggls"},"content":"1. User selects a specific itinerary.","lastModifiedDate":"2022-10-05"},{"lineNumber":374,"author":{"gitId":"pewggls"},"content":"2. User requests to add an item.","lastModifiedDate":"2022-10-06"},{"lineNumber":375,"author":{"gitId":"pewggls"},"content":"3. User enters details of the item.","lastModifiedDate":"2022-10-06"},{"lineNumber":376,"author":{"gitId":"seox123"},"content":"4. Waddle adds the item and provides confirmation to the user.\u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":377,"author":{"gitId":"seox123"},"content":"   Use case ends.","lastModifiedDate":"2022-10-12"},{"lineNumber":378,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":379,"author":{"gitId":"seox123"},"content":"**Extensions**","lastModifiedDate":"2022-10-12"},{"lineNumber":380,"author":{"gitId":"seox123"},"content":"* 3a. The item details are incomplete.","lastModifiedDate":"2022-10-12"},{"lineNumber":381,"author":{"gitId":"seox123"},"content":"  * Waddle shows an error message.\u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":382,"author":{"gitId":"seox123"},"content":"  Use case resumes at step 3.","lastModifiedDate":"2022-10-12"},{"lineNumber":383,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":384,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":385,"author":{"gitId":"seox123"},"content":"**Use case: Delete an item from an itinerary**","lastModifiedDate":"2022-10-12"},{"lineNumber":386,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":387,"author":{"gitId":"seox123"},"content":"**MSS**","lastModifiedDate":"2022-10-12"},{"lineNumber":388,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":389,"author":{"gitId":"seox123"},"content":"1. User selects a specific itinerary.","lastModifiedDate":"2022-10-12"},{"lineNumber":390,"author":{"gitId":"seox123"},"content":"2. User requests to delete a chosen item.","lastModifiedDate":"2022-10-12"},{"lineNumber":391,"author":{"gitId":"seox123"},"content":"3. Waddle requests for user confirmation.","lastModifiedDate":"2022-10-12"},{"lineNumber":392,"author":{"gitId":"seox123"},"content":"4. User confirms intention to delete chosen item.","lastModifiedDate":"2022-10-12"},{"lineNumber":393,"author":{"gitId":"seox123"},"content":"5. Waddle deletes the item from the itinerary.\u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":394,"author":{"gitId":"seox123"},"content":"Use case ends.","lastModifiedDate":"2022-10-12"},{"lineNumber":395,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":396,"author":{"gitId":"seox123"},"content":"**Extensions**","lastModifiedDate":"2022-10-12"},{"lineNumber":397,"author":{"gitId":"seox123"},"content":"* 2a. User does not provide index of item.","lastModifiedDate":"2022-10-12"},{"lineNumber":398,"author":{"gitId":"seox123"},"content":"    * Waddle shows an error message.\u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":399,"author":{"gitId":"seox123"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-10-12"},{"lineNumber":400,"author":{"gitId":"seox123"},"content":"* 4a. User decides against deleting the item.\u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":401,"author":{"gitId":"seox123"},"content":"  Use case ends.","lastModifiedDate":"2022-10-12"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":404,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"CFSY"},"content":"2. Should be able to hold up to 500 itineraries without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-10-05"},{"lineNumber":410,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"CFSY"},"content":"4. The GUI should be intuitive and easy to understand.","lastModifiedDate":"2022-10-05"},{"lineNumber":412,"author":{"gitId":"CFSY"},"content":"5. The system should respond in at most 1 second.","lastModifiedDate":"2022-10-05"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"CFSY"},"content":"### Deleting an itinerary","lastModifiedDate":"2022-10-26"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"CFSY"},"content":"1. Deleting an itinerary while all itineraries are being shown","lastModifiedDate":"2022-10-26"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"CFSY"},"content":"      Expected: First itinerary is deleted from the list. Details of the deleted itinerary shown in the status message.","lastModifiedDate":"2022-10-26"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"CFSY"},"content":"      Expected: No itinerary is deleted. Error details shown in the status message.","lastModifiedDate":"2022-10-26"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"CFSY":114,"ciaoosuuu":2,"ningtan11":28,"pewggls":15,"-":281,"seox123":29}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":"# Waddle User Guide ðŸ¦†","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"Waddle is a **simple, no-frills travel planning application catered to people who love doing everything on their keyboards**. Waddle allows users to plan their travels in **3 simple steps**.","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"pewggls"},"content":"1. Create a trip itinerary","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"pewggls"},"content":"2. Add activities to your itinerary","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"pewggls"},"content":"3. Make a schedule for your trip","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"pewggls"},"content":"**It\u0027s that simple**.","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"seox123"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"seox123"},"content":"## Table of Contents","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"seox123"},"content":"1. [**Quick start**](#quick-start)","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"seox123"},"content":"2. [**Features**](#features)","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"seox123"},"content":"   1. [**Commands on main page**](#commands-on-main-page)","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"seox123"},"content":"      1. [`help` Viewing help](#viewing-help--help)","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"seox123"},"content":"      2. [`add` Creating a new itinerary](#creating-a-new-itinerary--add)","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"seox123"},"content":"      3. [`list` Listing all itineraries](#listing-all-itineraries--list)","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"seox123"},"content":"      4. [`edit` Editing the details of an itinerary](#editing-the-details-of-an-itinerary--edit)","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"seox123"},"content":"      5. [`delete` Deleting an itinerary](#deleting-an-itinerary--delete)","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"seox123"},"content":"      6. [`clear` Clearing itineraries](#clearing-itineraries--clear)","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"seox123"},"content":"      7. [`find` Locating itineraries by name](#locating-itineraries-by-name--find)","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"seox123"},"content":"      8. [`select` Selecting an itinerary](#selecting-an-itinerary--select)","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"seox123"},"content":"   2. [**Commands on item planning page**](#commands-on-item-planning-page)","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"seox123"},"content":"      1. [`add` Adding an item](#adding-an-item--add)","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"seox123"},"content":"      2. [`edit` Editing the details of an item](#editing-the-details-of-an-item--edit)","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"seox123"},"content":"      3. [`delete` Deleting an item](#deleting-an-item--delete)","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"seox123"},"content":"      4. [`plan` Scheduling an item](#scheduling-an-item--plan)","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"seox123"},"content":"      5. [`unplan` Unscheduling an item](#unscheduling-an-item--unplan)","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"seox123"},"content":"      6. [`free` Viewing vacant timeslots](#viewing-vacant-timeslots--free)","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"seox123"},"content":"      7. [`home` Returning to main page](#returning-to-main-page--home)","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"ningtan11"},"content":"      8. [`copy` Copying to clipboard](#copying-to-clipboard--copy)","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"ningtan11"},"content":"      9. [`pdf` Exporting to PDF file](#exporting-to-pdf-file--pdf)","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"seox123"},"content":"   3. [`exit` Exiting Waddle](#exiting-waddle--exit)\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"ningtan11"},"content":"   4. [**Advanced**](#advanced)","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"ningtan11"},"content":"      1. [Saving the data](#saving-the-data)","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"ningtan11"},"content":"      2. [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"seox123"},"content":"3. [**FAQ**](#faq)","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"seox123"},"content":"4. [**Command summary**](#command-summary)","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"seox123"},"content":"   1. [**Home page commands**](#home-page-commands)","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"seox123"},"content":"   2. [**Item planning page commands**](#item-planning-page-commands)","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"seox123"},"content":"2. Download the latest `Waddle.jar` from [here](https://github.com/AY2223S1-CS2103T-W11-4/tp/releases/tag/v1.3.1).","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"seox123"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for Waddle.","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"seox123"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"seox123"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"CFSY"},"content":"   * **`list`** : Lists all itineraries.","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"pewggls"},"content":"   * **`add`**`d/My Japan Trip du/14 sd/2023-04-01` : Adds an itinerary named \"My Japan Trip\".","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"CFSY"},"content":"   * **`delete`**`1` : Deletes the 1st itinerary shown in the current list.","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"seox123"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"pewggls"},"content":"  - e.g. in `add d/DESCRIPTION ...`, `DESCRIPTION` is a parameter which can be used as `add d/My Japan Trip`.","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"ciaoosuuu"},"content":"  - e.g. `d/DESCRIPTION [c/COUNTRY] sd/START DATE du/DURATION` can be used as `d/My Japan Trip c/Japan sd/2023-04-01 du/14` or as `d/My Japan Trip sd/2023-04-01 du/14`.","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"ciaoosuuu"},"content":"  - e.g. if the command specifies `c/COUNTRY d/DESCRIPTION`, `d/DESCRIPTION c/COUNTRY` is also acceptable.","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"ciaoosuuu"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the **last occurrence** of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"seox123"},"content":"  - e.g. if you specify `d/Eat Ramen d/Aquarium`, only `d/Aquarium` will be taken.","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":93,"author":{"gitId":"seox123"},"content":"  - e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"ningtan11"},"content":"### Commands on main page","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"seox123"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"ningtan11"},"content":"### Creating a new itinerary : `add`","lastModifiedDate":"2022-10-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"CFSY"},"content":"Adds an itinerary to Waddle.","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"ciaoosuuu"},"content":"Format: `add d/DESCRIPTION sd/START DATE du/DURATION [c/COUNTRY] [p/NUMBER OF WADDLERS] [b/BUDGET]`","lastModifiedDate":"2022-11-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"seox123"},"content":"* Adds a new itinerary with `DESCRIPTION` to the itinerary list.","lastModifiedDate":"2022-10-27"},{"lineNumber":114,"author":{"gitId":"pewggls"},"content":"* `START DATE` should be given in the format `yyyy-mm-dd`, and `DURATION` is the number of days.","lastModifiedDate":"2022-10-27"},{"lineNumber":115,"author":{"gitId":"seox123"},"content":"  - e.g. `sd/2022-12-10 du/10` would mean that the trip is from 10 Dec 2022 to 20 Dec 2022.","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"seox123"},"content":"* `BUDGET` is in dollars ($) and can include cents.","lastModifiedDate":"2022-10-27"},{"lineNumber":117,"author":{"gitId":"seox123"},"content":"  - e.g. `b/1000.50` is $1000 and 50Â¢.","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"seox123"},"content":"* You cannot add an itinerary with the same description as an existing itinerary in the list.","lastModifiedDate":"2022-10-27"},{"lineNumber":119,"author":{"gitId":"ciaoosuuu"},"content":"  * Note that Waddle only accepts english alphabets and spaces for `DESCRIPTION` and `COUNTRY`, special characters","lastModifiedDate":"2022-11-01"},{"lineNumber":120,"author":{"gitId":"ciaoosuuu"},"content":"  like `\u0027`, `\u0026`, `!` are not allowed.","lastModifiedDate":"2022-11-01"},{"lineNumber":121,"author":{"gitId":"ciaoosuuu"},"content":"  * Example of invalid input: `d/My Trip!!` `c/CÃ´te d\u0027Ivoire`","lastModifiedDate":"2022-11-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"seox123"},"content":"* `add d/My Japan Trip sd/2022-12-12 du/6`","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"seox123"},"content":"* `add d/Germanyyyy c/Germany du/14 s/05/10/22 b/1000 p/4`","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"CFSY"},"content":"### Listing all itineraries : `list`","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"CFSY"},"content":"Shows a list of all itineraries in Waddle.","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"CFSY"},"content":"### Editing the details of an itinerary : `edit`","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"CFSY"},"content":"Edits an existing itinerary in Waddle.","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"pewggls"},"content":"Format: `edit INDEX [d/DESCRIPTION] [c/COUNTRY] [sd/START DATE] [du/DURATION] [p/NUMBER OF WADDLERS] [b/BUDGET]`","lastModifiedDate":"2022-10-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"CFSY"},"content":"* Edits the itinerary at the specified `INDEX`. The index refers to the index number shown in the displayed itinerary list. The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"seox123"},"content":"* `edit 1 du/15 sd/2022-10-04` Edits the duration and start date of the first itinerary to be `15` and `2022-10-04` respectively.","lastModifiedDate":"2022-10-27"},{"lineNumber":146,"author":{"gitId":"CFSY"},"content":"* `edit 2 c/India` Edits the country of the second itinerary to be `India`.","lastModifiedDate":"2022-10-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"CFSY"},"content":"### Deleting an itinerary : `delete`","lastModifiedDate":"2022-10-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"CFSY"},"content":"Deletes the specified itinerary from Waddle.","lastModifiedDate":"2022-10-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"seox123"},"content":"* Deletes the itinerary at the specified `INDEX`. The index refers to the index number shown in the displayed list of itineraries.","lastModifiedDate":"2022-10-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"CFSY"},"content":"* `list` followed by `delete 2` deletes the 2nd itinerary in Waddle.","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"CFSY"},"content":"* `find Japan` followed by `delete 1` deletes the 1st itinerary in the results of the `find` command.","lastModifiedDate":"2022-10-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"CFSY"},"content":"### Clearing itineraries : `clear`","lastModifiedDate":"2022-10-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"CFSY"},"content":"Deletes all itineraries in Waddle.","lastModifiedDate":"2022-10-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"seox123"},"content":"### Locating itineraries by name : `find`","lastModifiedDate":"2022-10-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":169,"author":{"gitId":"seox123"},"content":"Finds itineraries with names containing any of the given keywords.","lastModifiedDate":"2022-10-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2022-10-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":173,"author":{"gitId":"seox123"},"content":"* The search is case-insensitive. e.g. `india` will match `India`","lastModifiedDate":"2022-10-27"},{"lineNumber":174,"author":{"gitId":"seox123"},"content":"* The order of the keywords does not matter. e.g. `Trip Japan My` will match `My Japan Trip`","lastModifiedDate":"2022-10-27"},{"lineNumber":175,"author":{"gitId":"pewggls"},"content":"* The search is based on itinerary descriptions only.","lastModifiedDate":"2022-10-27"},{"lineNumber":176,"author":{"gitId":"seox123"},"content":"* Only full words will be matched e.g. `Jap` will not match `Japan`","lastModifiedDate":"2022-10-27"},{"lineNumber":177,"author":{"gitId":"seox123"},"content":"* Itineraries matching at least one of the provided keywords will be returned (i.e. `OR` search).","lastModifiedDate":"2022-10-27"},{"lineNumber":178,"author":{"gitId":"seox123"},"content":"  - e.g. `find Japan Trip` will return `My Germany Trip`, since there is a match for the keyword  `Trip`.","lastModifiedDate":"2022-10-27"},{"lineNumber":179,"author":{"gitId":"seox123"},"content":"* Use the [`list`](#listing-all-itineraries--list) command to see all itineraries again.","lastModifiedDate":"2022-10-27"},{"lineNumber":180,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":181,"author":{"gitId":"seox123"},"content":"Examples:","lastModifiedDate":"2022-10-27"},{"lineNumber":182,"author":{"gitId":"seox123"},"content":"* `find India` returns `My India Trip` and `India Expedition`","lastModifiedDate":"2022-10-27"},{"lineNumber":183,"author":{"gitId":"ciaoosuuu"},"content":"* `find India Trip` returns `My Japan Trip`, `My India Trip`, `India Expedition`","lastModifiedDate":"2022-10-27"},{"lineNumber":184,"author":{"gitId":"ciaoosuuu"},"content":"* `find trip` returns the following result: \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":185,"author":{"gitId":"seox123"},"content":"  ![result for \u0027find trip\u0027](images/findTripResult.png)","lastModifiedDate":"2022-10-27"},{"lineNumber":186,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":187,"author":{"gitId":"ningtan11"},"content":"### Selecting an itinerary : `select`","lastModifiedDate":"2022-10-25"},{"lineNumber":188,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":189,"author":{"gitId":"seox123"},"content":"Enters the [item planning page](#commands-on-item-planning-page) for the selected itinerary.","lastModifiedDate":"2022-10-27"},{"lineNumber":190,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":191,"author":{"gitId":"ningtan11"},"content":"Format: `select INDEX`","lastModifiedDate":"2022-10-25"},{"lineNumber":192,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":193,"author":{"gitId":"seox123"},"content":"* Selects the itinerary at the specified `INDEX`. The index refers to the index number shown in the displayed list of itineraries.","lastModifiedDate":"2022-10-27"},{"lineNumber":194,"author":{"gitId":"seox123"},"content":"* The index **must be a positive integer** 1, 2, 3, ...â€‹","lastModifiedDate":"2022-10-27"},{"lineNumber":195,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":196,"author":{"gitId":"ningtan11"},"content":"Examples:","lastModifiedDate":"2022-10-25"},{"lineNumber":197,"author":{"gitId":"ningtan11"},"content":"* `select 1`","lastModifiedDate":"2022-10-25"},{"lineNumber":198,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":199,"author":{"gitId":"seox123"},"content":"### Commands on item planning page","lastModifiedDate":"2022-10-27"},{"lineNumber":200,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":201,"author":{"gitId":"seox123"},"content":"Here\u0027s an example of how the item planning page looks like:","lastModifiedDate":"2022-10-27"},{"lineNumber":202,"author":{"gitId":"seox123"},"content":"![item planning page](images/itemPlanningUi.png)","lastModifiedDate":"2022-10-27"},{"lineNumber":203,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":204,"author":{"gitId":"ningtan11"},"content":"### Adding an item : `add`","lastModifiedDate":"2022-10-25"},{"lineNumber":205,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":206,"author":{"gitId":"ningtan11"},"content":"Adds an item to the list of items.","lastModifiedDate":"2022-10-25"},{"lineNumber":207,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":208,"author":{"gitId":"ningtan11"},"content":"Format: `add d/DESCRIPTION [p/PRIORITY] [c/COST] [du/DURATION]`","lastModifiedDate":"2022-10-25"},{"lineNumber":209,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":210,"author":{"gitId":"seox123"},"content":"* Adds a new item with `DESCRIPTION` to the unscheduled item list.","lastModifiedDate":"2022-10-27"},{"lineNumber":211,"author":{"gitId":"pewggls"},"content":"* The default `PRIORITY` is 1, while default `COST` and `DURATION` are both 0.","lastModifiedDate":"2022-10-27"},{"lineNumber":212,"author":{"gitId":"seox123"},"content":"* `COST` is in dollars ($) and can include cents.","lastModifiedDate":"2022-10-27"},{"lineNumber":213,"author":{"gitId":"seox123"},"content":"  - e.g. `b/100.20` is $100 and 20Â¢.","lastModifiedDate":"2022-10-27"},{"lineNumber":214,"author":{"gitId":"seox123"},"content":"* `DURATION` is in _minutes_.","lastModifiedDate":"2022-10-27"},{"lineNumber":215,"author":{"gitId":"seox123"},"content":"  - e.g. `du/100` is 100 minutes (or 1 hour and 40 minutes).","lastModifiedDate":"2022-10-27"},{"lineNumber":216,"author":{"gitId":"seox123"},"content":"* You cannot add items with the same description as an existing item in the item list.","lastModifiedDate":"2022-10-27"},{"lineNumber":217,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":218,"author":{"gitId":"seox123"},"content":"Examples:","lastModifiedDate":"2022-10-27"},{"lineNumber":219,"author":{"gitId":"pewggls"},"content":"* `add d/Go to the Louvre p/2 du/1`","lastModifiedDate":"2022-10-27"},{"lineNumber":220,"author":{"gitId":"pewggls"},"content":"* `add d/Skiing du/14 c/100`","lastModifiedDate":"2022-10-27"},{"lineNumber":221,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":222,"author":{"gitId":"ningtan11"},"content":"### Editing the details of an item : `edit`","lastModifiedDate":"2022-10-25"},{"lineNumber":223,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":224,"author":{"gitId":"ningtan11"},"content":"Edits an existing item in the item list.","lastModifiedDate":"2022-10-25"},{"lineNumber":225,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":226,"author":{"gitId":"ningtan11"},"content":"Format: `edit INDEX [d/DESCRIPTION] [p/PRIORITY] [c/COST] [du/DURATION]`","lastModifiedDate":"2022-10-25"},{"lineNumber":227,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":228,"author":{"gitId":"pewggls"},"content":"* Edits the item at the specified `INDEX`. The index refers to the index number displayed in either the unscheduled item list, or the scheduled items in the day lists.","lastModifiedDate":"2022-10-27"},{"lineNumber":229,"author":{"gitId":"ningtan11"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2022-10-25"},{"lineNumber":230,"author":{"gitId":"ningtan11"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2022-10-25"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-10-27"},{"lineNumber":233,"author":{"gitId":"seox123"},"content":"* `edit 1 d/Go skiing` would edit the description of the 1st item in the unscheduled item list to be `Go skiing`.","lastModifiedDate":"2022-10-27"},{"lineNumber":234,"author":{"gitId":"pewggls"},"content":"* `edit 2.2 p/3 c/100` would edit the priority and cost of the 2nd item in the Day 2 list to be `3` and `100` respectively.","lastModifiedDate":"2022-10-27"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":236,"author":{"gitId":"ningtan11"},"content":"### Deleting an item : `delete`","lastModifiedDate":"2022-10-25"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":238,"author":{"gitId":"ningtan11"},"content":"Deletes an existing item in the item list.","lastModifiedDate":"2022-10-25"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":240,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2022-10-25"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":242,"author":{"gitId":"pewggls"},"content":"* Deletes the item at the specified `INDEX`. The index refers to the index number displayed in either the unscheduled item list, or the scheduled items in the day lists.","lastModifiedDate":"2022-10-27"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":244,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-10-27"},{"lineNumber":245,"author":{"gitId":"seox123"},"content":"* `delete 1` would delete the 1st item in the unscheduled item list.","lastModifiedDate":"2022-10-27"},{"lineNumber":246,"author":{"gitId":"seox123"},"content":"* `delete 2.1` would delete the 1st item in the Day 2 item list.","lastModifiedDate":"2022-10-27"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":248,"author":{"gitId":"ningtan11"},"content":"### Scheduling an item : `plan`","lastModifiedDate":"2022-10-25"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":250,"author":{"gitId":"seox123"},"content":"Schedules an item in the unscheduled item list.","lastModifiedDate":"2022-10-27"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":252,"author":{"gitId":"seox123"},"content":"Format: `plan INDEX d/DAY NUMBER st/START TIME`","lastModifiedDate":"2022-10-27"},{"lineNumber":253,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":254,"author":{"gitId":"seox123"},"content":"* Schedules the item at the specified `INDEX`. The index refers to the index number displayed in the unscheduled item list.","lastModifiedDate":"2022-10-27"},{"lineNumber":255,"author":{"gitId":"seox123"},"content":"* The index **must be a positive integer** 1, 2, 3, ...â€‹","lastModifiedDate":"2022-10-27"},{"lineNumber":256,"author":{"gitId":"seox123"},"content":"* `DAY NUMBER` **must be a positive integer** 1, 2, 3, ...â€‹ referring to a day in the list of days displayed.","lastModifiedDate":"2022-10-27"},{"lineNumber":257,"author":{"gitId":"seox123"},"content":"* `START TIME` should be given in the format `hh:mm`, or `hh:mm:ss` where `hh` is the hour in 24-hour format, `mm` is the minute, and `ss` is the seconds.","lastModifiedDate":"2022-10-27"},{"lineNumber":258,"author":{"gitId":"seox123"},"content":"* The end time of the item is calculated by adding the `DURATION` of the item to the `START TIME`.","lastModifiedDate":"2022-10-27"},{"lineNumber":259,"author":{"gitId":"seox123"},"content":"* You can only add an item if there is no clash in timing between the start and end time of the new item, and the start and end time of any existing scheduled item.","lastModifiedDate":"2022-10-27"},{"lineNumber":260,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":261,"author":{"gitId":"seox123"},"content":"Examples:","lastModifiedDate":"2022-10-27"},{"lineNumber":262,"author":{"gitId":"seox123"},"content":"* `plan 2 d/3 st/12:00` would schedule the 2nd item in the unscheduled item list on Day 3, starting at 12pm.","lastModifiedDate":"2022-10-27"},{"lineNumber":263,"author":{"gitId":"seox123"},"content":"* `plan 1 d/1 st/14:50:10` would schedule the 1st item in the unscheduled item list on Day 1, starting at 14:50pm, 10 seconds in.","lastModifiedDate":"2022-10-27"},{"lineNumber":264,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":265,"author":{"gitId":"seox123"},"content":"### Unscheduling an item : `unplan`","lastModifiedDate":"2022-10-27"},{"lineNumber":266,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":267,"author":{"gitId":"pewggls"},"content":"Unschedules an item in a scheduled item list.","lastModifiedDate":"2022-10-27"},{"lineNumber":268,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":269,"author":{"gitId":"seox123"},"content":"Format: `unplan INDEX`","lastModifiedDate":"2022-10-27"},{"lineNumber":270,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":271,"author":{"gitId":"seox123"},"content":"* Unschedules the item at the specified `INDEX`. The index refers to the index number displayed in the list of scheduled items in the list of days.","lastModifiedDate":"2022-10-27"},{"lineNumber":272,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":273,"author":{"gitId":"seox123"},"content":"Examples:","lastModifiedDate":"2022-10-27"},{"lineNumber":274,"author":{"gitId":"seox123"},"content":"* `unplan 2.1` would unschedule the 1st item in the Day 2 item list.","lastModifiedDate":"2022-10-27"},{"lineNumber":275,"author":{"gitId":"seox123"},"content":"* `unplan 4.5` would unschedule the 5th item in the Day 4 item list.","lastModifiedDate":"2022-10-27"},{"lineNumber":276,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":277,"author":{"gitId":"seox123"},"content":"### Viewing vacant timeslots : `free`","lastModifiedDate":"2022-10-27"},{"lineNumber":278,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":279,"author":{"gitId":"seox123"},"content":"Displays the vacant timeslots available for scheduling items.","lastModifiedDate":"2022-10-27"},{"lineNumber":280,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":281,"author":{"gitId":"seox123"},"content":"Format: `free`","lastModifiedDate":"2022-10-27"},{"lineNumber":282,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":283,"author":{"gitId":"seox123"},"content":"### Returning to main page : `home`","lastModifiedDate":"2022-10-27"},{"lineNumber":284,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":285,"author":{"gitId":"seox123"},"content":"Returns you to the main itinerary list page.","lastModifiedDate":"2022-10-27"},{"lineNumber":286,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":287,"author":{"gitId":"seox123"},"content":"Format: `home`","lastModifiedDate":"2022-10-27"},{"lineNumber":288,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":289,"author":{"gitId":"ningtan11"},"content":"### Copying to clipboard : `copy`","lastModifiedDate":"2022-10-27"},{"lineNumber":290,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":291,"author":{"gitId":"ningtan11"},"content":"Copies the itinerary onto your device\u0027s clipboard so you can paste it anywhere.","lastModifiedDate":"2022-10-27"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":293,"author":{"gitId":"ningtan11"},"content":"Format: `copy`","lastModifiedDate":"2022-10-27"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":295,"author":{"gitId":"ningtan11"},"content":"### Exporting to PDF file : `pdf`","lastModifiedDate":"2022-10-27"},{"lineNumber":296,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":297,"author":{"gitId":"CFSY"},"content":"Exports the itinerary into a PDF file. The file can be found under the \"Waddle\" folder in your \"Documents\" folder.","lastModifiedDate":"2022-10-27"},{"lineNumber":298,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":299,"author":{"gitId":"ningtan11"},"content":"Format: `pdf`","lastModifiedDate":"2022-10-27"},{"lineNumber":300,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":301,"author":{"gitId":"seox123"},"content":"### Exiting Waddle : `exit`","lastModifiedDate":"2022-10-27"},{"lineNumber":302,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":303,"author":{"gitId":"seox123"},"content":"Exits the Waddle program.","lastModifiedDate":"2022-10-27"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2022-10-27"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":307,"author":{"gitId":"seox123"},"content":"* This command can be used both in the home page and the item planning page.","lastModifiedDate":"2022-10-27"},{"lineNumber":308,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":309,"author":{"gitId":"ningtan11"},"content":"### Advanced","lastModifiedDate":"2022-10-27"},{"lineNumber":310,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":311,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"pewggls"},"content":"Waddle data is saved in the hard disk automatically upon any change in the data. There is no need to save manually.","lastModifiedDate":"2022-10-27"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":317,"author":{"gitId":"seox123"},"content":"Waddle data is saved as a JSON file `[JAR file location]/data/waddle.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-10-27"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":319,"author":{"gitId":"seox123"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: \u003cb\u003eCaution:\u003c/b\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":320,"author":{"gitId":"CFSY"},"content":"If your changes to the data file makes its format invalid, Waddle will discard all data and start with an empty data file at the next run. Please perform a backup before manually editing data.","lastModifiedDate":"2022-10-05"},{"lineNumber":321,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":323,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"pewggls"},"content":"**Q**: How do I transfer my data to another computer?\u003cbr\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":328,"author":{"gitId":"CFSY"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Waddle home folder.","lastModifiedDate":"2022-10-05"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"ningtan11"},"content":"### Home page commands","lastModifiedDate":"2022-10-27"},{"lineNumber":335,"author":{"gitId":"seox123"},"content":"| Action                                                           | Format, Examples                                                                                                                                                  |","lastModifiedDate":"2022-10-27"},{"lineNumber":336,"author":{"gitId":"ciaoosuuu"},"content":"|------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-27"},{"lineNumber":337,"author":{"gitId":"seox123"},"content":"| [**Help**](#viewing-help--help)                                  | `help`                                                                                                                                                            |","lastModifiedDate":"2022-10-27"},{"lineNumber":338,"author":{"gitId":"ciaoosuuu"},"content":"| [**Add Itinerary**](#creating-a-new-itinerary--add)              | `add d/DESCRIPTION [c/COUNTRY] du/DURATION sd/START DATE [p/NUMBER OF WADDLERS] [b/BUDGET]`\u003cbr\u003e e.g., `add d/Germanyyyy c/Germany du/14 sd/2022-05-10 p/4 b/7500` |","lastModifiedDate":"2022-10-27"},{"lineNumber":339,"author":{"gitId":"seox123"},"content":"| [**List Itineraries**](#listing-all-itineraries--list)           | `list`                                                                                                                                                            |","lastModifiedDate":"2022-10-27"},{"lineNumber":340,"author":{"gitId":"ciaoosuuu"},"content":"| [**Edit Itinerary**](#editing-the-details-of-an-itinerary--edit) | `edit INDEX [n/NAME] [c/COUNTRY] [du/DURATION] [s/START DATE] [p/NUMBER OF WADDLERS] [b/BUDGET]`\u003cbr\u003e e.g.,`edit 1 du/15 sd/2022-04-10`                            |","lastModifiedDate":"2022-10-27"},{"lineNumber":341,"author":{"gitId":"seox123"},"content":"| [**Delete Itinerary**](#deleting-an-itinerary--delete)           | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                               |","lastModifiedDate":"2022-10-27"},{"lineNumber":342,"author":{"gitId":"seox123"},"content":"| [**Clear Itineraries**](#clearing-itineraries--clear)            | `clear`                                                                                                                                                           |","lastModifiedDate":"2022-10-27"},{"lineNumber":343,"author":{"gitId":"seox123"},"content":"| [**Find Itinerary**](#locating-itineraries-by-name--find)        | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find India Trip`                                                                                                        |","lastModifiedDate":"2022-10-27"},{"lineNumber":344,"author":{"gitId":"seox123"},"content":"| [**Select Itinerary**](#selecting-an-itinerary--select)          | `select INDEX`\u003cbr\u003e e.g., `select 3`                                                                                                                               |","lastModifiedDate":"2022-10-27"},{"lineNumber":345,"author":{"gitId":"seox123"},"content":"| [**Exit**](#exiting-waddle--exit)                                | `exit`                                                                                                                                                            |","lastModifiedDate":"2022-10-27"},{"lineNumber":346,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":347,"author":{"gitId":"seox123"},"content":"### Item planning page commands","lastModifiedDate":"2022-10-27"},{"lineNumber":348,"author":{"gitId":"seox123"},"content":"| Action                                                       | Format, Examples                                                                                         |","lastModifiedDate":"2022-10-27"},{"lineNumber":349,"author":{"gitId":"seox123"},"content":"|--------------------------------------------------------------|----------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-27"},{"lineNumber":350,"author":{"gitId":"seox123"},"content":"| [**Add Item**](#adding-an-item--add)                         | `add d/DESCRIPTION [p/PRIORITY] [c/COST] [du/DURATION]`\u003cbr\u003e e.g.,`add d/Visit Taj Mahal p/5 c/40 du/180` |","lastModifiedDate":"2022-10-27"},{"lineNumber":351,"author":{"gitId":"seox123"},"content":"| [**Edit Item**](#editing-the-details-of-an-item--edit)       | `edit INDEX [d/DESCRIPTION] [p/PRIORITY] [c/COST] [du/DURATION]`\u003cbr\u003e e.g., `edit 4.1 c/50`               |","lastModifiedDate":"2022-10-27"},{"lineNumber":352,"author":{"gitId":"seox123"},"content":"| [**Delete Item**](#deleting-an-item--delete)                 | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                      |","lastModifiedDate":"2022-10-27"},{"lineNumber":353,"author":{"gitId":"seox123"},"content":"| [**Schedule Item**](#scheduling-an-item--plan)               | `plan INDEX d/DAY NUMBER st/START TIME`\u003cbr\u003e e.g., `plan 1 d/4 st/12:00`                                  |","lastModifiedDate":"2022-10-27"},{"lineNumber":354,"author":{"gitId":"seox123"},"content":"| [**Unschedule Item**](#unscheduling-an-item--unplan)         | `unplan INDEX`\u003cbr\u003e e.g., `unplan 3.2`                                                                    |","lastModifiedDate":"2022-10-27"},{"lineNumber":355,"author":{"gitId":"seox123"},"content":"| [**View Vacant Timeslots**](#viewing-vacant-timeslots--free) | `free`                                                                                                   |","lastModifiedDate":"2022-10-27"},{"lineNumber":356,"author":{"gitId":"seox123"},"content":"| [**Return to Main Page**](#returning-to-main-page--home)     | `home`                                                                                                   |","lastModifiedDate":"2022-10-27"},{"lineNumber":357,"author":{"gitId":"ningtan11"},"content":"| [**Copy to clipboard**](#copying-to-clipboard--copy)         | `copy`|","lastModifiedDate":"2022-10-27"},{"lineNumber":358,"author":{"gitId":"ningtan11"},"content":"| [**Export to PDF**](#exporting-to-pdf-file--pdf)          | `pdf`|","lastModifiedDate":"2022-10-27"},{"lineNumber":359,"author":{"gitId":"seox123"},"content":"| [**Exit**](#exiting-waddle--exit)                            | `exit`                                                                                                   |","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"CFSY":20,"ciaoosuuu":12,"pewggls":18,"ningtan11":49,"-":120,"seox123":140}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"CFSY"},"content":"    content: \"Waddle\";","lastModifiedDate":"2022-10-05"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"CFSY":1,"-":294}},{"path":"docs/diagrams/ArchitectureDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include \u003coffice/Concepts/globe_internet\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"!include \u003coffice/Concepts/documents\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"!include \u003coffice/Users/user\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package \" \"\u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    Class UI UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    Class Logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    Class Storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    Class Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":"    Class StageManager STAGE_COLOR","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    Class Main #grey","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Class Commons LOGIC_COLOR_T2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class \"\u003c$user\u003e\" as User MODEL_COLOR_T2","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c$documents\u003e\" as File UI_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"UI -[#green]\u003e Logic","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"UI -right[#green]-\u003e Model","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Logic -[#blue]-\u003e Storage","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Logic -down[#blue]-\u003e Model","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Main -[#grey]-\u003e UI","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Main -[#grey]-\u003e Logic","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Main -[#grey]-\u003e Storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Main -up[#grey]-\u003e Model","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Main -down[hidden]-\u003e Commons","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Storage -up[STORAGE_COLOR].\u003e Model","lastModifiedDate":"2021-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Storage .right[STORAGE_COLOR].\u003eFile","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"User ..\u003e UI","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"CFSY":1,"-":33}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"Participant \":Stage\" as stage STAGE_COLOR","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"logic -[LOGIC_COLOR]\u003e stage : getInstance()","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"CFSY"},"content":"activate stage STAGE_COLOR","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"stage -[STAGE_COLOR]-\u003e logic","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"CFSY"},"content":"deactivate stage","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"logic -[LOGIC_COLOR]\u003e stage : instance.getCurrentStage()","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"CFSY"},"content":"activate stage STAGE_COLOR","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"stage -[STAGE_COLOR]-\u003e logic","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"deactivate stage","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"CFSY"},"content":"alt Stages.HOME","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"CFSY"},"content":"    logic -[LOGIC_COLOR]\u003e model : deleteItinerary(i)","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"    activate model MODEL_COLOR","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"CFSY"},"content":"    model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"CFSY"},"content":"    deactivate model","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"CFSY"},"content":"else Stages.PLAN","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"CFSY"},"content":"    logic -[LOGIC_COLOR]\u003e model : deleteItem(i)","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"CFSY"},"content":"end","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"CFSY"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveWaddle(waddle)","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"CFSY":21,"-":38}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"participant \":WaddleParser\" as WaddleParser LOGIC_COLOR","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"CFSY"},"content":"LogicManager -\u003e WaddleParser : parseCommand(\"delete 1\")","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"activate WaddleParser","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"WaddleParser -\u003e DeleteCommandParser","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"DeleteCommandParser --\u003e WaddleParser","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"CFSY"},"content":"WaddleParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"CFSY"},"content":"DeleteCommandParser --\u003e WaddleParser : d","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"CFSY"},"content":"DeleteCommandParser -[hidden]-\u003e WaddleParser","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"CFSY"},"content":"WaddleParser --\u003e LogicManager : d","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"CFSY"},"content":"deactivate WaddleParser","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"CFSY"},"content":"DeleteCommand -\u003e Model : deleteItinerary(1)","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"CFSY":11,"-":58}},{"path":"docs/diagrams/ItineraryClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CFSY"},"content":"@startuml","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"CFSY"},"content":"!include style.puml","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":"skinparam arrowColor black","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"skinparam classBackgroundColor white","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"skinparam Class {","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"    FontColor black","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":"    BorderThickness 1","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":"    BorderColor black","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"CFSY"},"content":"    StereotypeFontColor black","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":"    FontName Arial","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"CFSY"},"content":"}","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"CFSY"},"content":"show footbox","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"show members","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"CFSY"},"content":"Package Itinerary \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"CFSY"},"content":"Class Itinerary {","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"    -name: Name","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"CFSY"},"content":"    -country: Country","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"    -startDate: Date","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"    -duration: Duration","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"CFSY"},"content":"    -people: People","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"CFSY"},"content":"    -budget: Budget","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"    -priorityComparator: Comparator\u003cItem\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"CFSY"},"content":"    +planItem(Index, DayNumber, LocalTime): Item","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"CFSY"},"content":"    +unplanItem(MultiIndex): Item","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"CFSY"},"content":"}","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"Class Item {","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"CFSY"},"content":"    -description: String","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"CFSY"},"content":"    -priority: Priority","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"CFSY"},"content":"    -cost: Cost","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"CFSY"},"content":"    -duration: Duration","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"CFSY"},"content":"    -startTime: LocalTime","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"CFSY"},"content":"    -endTime: LocalTime","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"CFSY"},"content":"    +getStartTime(): LocalTime","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"CFSY"},"content":"    +getEndTime(): LocalTime","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"CFSY"},"content":"}","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"CFSY"},"content":"Class Day {","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"CFSY"},"content":"    -dayNumber: int","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"CFSY"},"content":"    -startTimeComparator: Comparator\u003cItem\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"CFSY"},"content":"    +addItem(Item)","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"CFSY"},"content":"    +removeItem(Index): Item","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"CFSY"},"content":"    -getConflictingItems(Item): ArrayList\u003cItem\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"CFSY"},"content":"}","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"CFSY"},"content":"Itinerary *-down-\u003e \"~* unscheduledItemList\"Item","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"CFSY"},"content":"Itinerary *-down-\u003e \"~* days\" Day","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"CFSY"},"content":"Day -left-\u003e \"~* \" Item :itemList","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"CFSY"},"content":"@enduml","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"CFSY":54}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyWaddle\" as ReadOnlyWaddle","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"Class Waddle","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"Class UniqueItineraryList","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"Class Itinerary","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"ciaoosuuu"},"content":"Class People","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"Class duration","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"ciaoosuuu"},"content":"Class Country","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"Waddle .up.|\u003e ReadOnlyWaddle","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"Model .left.\u003e ReadOnlyWaddle","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"ModelManager -left-\u003e \"1\" Waddle","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"ciaoosuuu"},"content":"Waddle *--\u003e \"1\" UniqueItineraryList","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"ciaoosuuu"},"content":"UniqueItineraryList --\u003e \"~* all\" Itinerary","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"Itinerary *--\u003e Name","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"ciaoosuuu"},"content":"Itinerary *--\u003e Country","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"ciaoosuuu"},"content":"Itinerary *--\u003e duration","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"ciaoosuuu"},"content":"Itinerary *--\u003e People","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"ciaoosuuu"},"content":"Name -[hidden]right-\u003e Country","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"ciaoosuuu"},"content":"Country -[hidden]right-\u003e People","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"ciaoosuuu"},"content":"People -[hidden]right-\u003e duration","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"ciaoosuuu"},"content":"ModelManager --\u003e\"~* filtered\" Itinerary","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ciaoosuuu":20,"-":29}},{"path":"docs/diagrams/PlanSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CFSY"},"content":"@startuml","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"CFSY"},"content":"!include style.puml","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"participant \":WaddleParser\" as WaddleParser LOGIC_COLOR","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"participant \":PlanCommandParser\" as PlanCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"participant \"d:PlanCommand\" as PlanCommand LOGIC_COLOR","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":"end box","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"CFSY"},"content":"[-\u003e LogicManager : execute(\"plan 1 d/1 t/12:00\")","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":"activate LogicManager","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"CFSY"},"content":"LogicManager -\u003e WaddleParser : parseCommand(\"plan 1 d/1 t/12:00\")","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"activate WaddleParser","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"create PlanCommandParser","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"CFSY"},"content":"WaddleParser -\u003e PlanCommandParser","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"CFSY"},"content":"activate PlanCommandParser","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"CFSY"},"content":"PlanCommandParser --\u003e WaddleParser","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"deactivate PlanCommandParser","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"CFSY"},"content":"WaddleParser -\u003e PlanCommandParser : parse(\"1 d/1 t/12:00\")","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"CFSY"},"content":"activate PlanCommandParser","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"create PlanCommand","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"CFSY"},"content":"PlanCommandParser -\u003e PlanCommand","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"CFSY"},"content":"activate PlanCommand","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"PlanCommand --\u003e PlanCommandParser : d","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"CFSY"},"content":"deactivate PlanCommand","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"CFSY"},"content":"PlanCommandParser --\u003e WaddleParser : d","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"CFSY"},"content":"deactivate PlanCommandParser","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"CFSY"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"CFSY"},"content":"PlanCommandParser -[hidden]-\u003e WaddleParser","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"CFSY"},"content":"destroy PlanCommandParser","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"CFSY"},"content":"WaddleParser --\u003e LogicManager : d","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"CFSY"},"content":"deactivate WaddleParser","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"CFSY"},"content":"LogicManager -\u003e PlanCommand : execute()","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"CFSY"},"content":"activate PlanCommand","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"CFSY"},"content":"PlanCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"CFSY"},"content":"deactivate PlanCommand","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"CFSY"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"CFSY"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"CFSY"},"content":"@enduml","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"CFSY":51}},{"path":"docs/diagrams/PlanSequenceDiagram2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CFSY"},"content":"@startuml","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"CFSY"},"content":"!include style.puml","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":"box LOGIC_COLOR_T1","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":"participant \"d:PlanCommand\" as PlanCommand LOGIC_COLOR","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"end box","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":"box StageManger STAGE_COLOR_T1","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":"participant \":StageManager\" as StageManager STAGE_COLOR","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"CFSY"},"content":"end box","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"CFSY"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"CFSY"},"content":"participant \":Itinerary\" as Itinerary MODEL_COLOR","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"participant \":Day\" as Day MODEL_COLOR","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"end box","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"CFSY"},"content":"activate PlanCommand","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"CFSY"},"content":"PlanCommand -\u003e StageManager : getInstance()","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"activate StageManager","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"CFSY"},"content":"StageManager --\u003e PlanCommand","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"CFSY"},"content":"deactivate StageManager","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"PlanCommand -\u003e StageManager : instance.getSelectedItinerary()","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"CFSY"},"content":"activate StageManager","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"CFSY"},"content":"StageManager --\u003e PlanCommand","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"deactivate StageManager","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"CFSY"},"content":"PlanCommand -\u003e Itinerary : planItem(itemIndex, dayNumber, startTime)","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"CFSY"},"content":"activate Itinerary","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"CFSY"},"content":"Itinerary -\u003e Day : addItem(item)","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"CFSY"},"content":"activate Day","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"CFSY"},"content":"Day -\u003e Day : getConflictingItems(item)","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"CFSY"},"content":"activate Day","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"CFSY"},"content":"Day --\u003e Day","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"CFSY"},"content":"deactivate Day","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"CFSY"},"content":"Day --\u003e Itinerary","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"CFSY"},"content":"deactivate Day","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"CFSY"},"content":"Itinerary --\u003e PlanCommand","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"CFSY"},"content":"deactivate Itinerary","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"CFSY"},"content":"create CommandResult","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"CFSY"},"content":"PlanCommand -\u003e CommandResult","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"CFSY"},"content":"activate CommandResult","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"CFSY"},"content":"CommandResult --\u003e PlanCommand","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"CFSY"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"CFSY"},"content":"@enduml","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"CFSY":57}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"CFSY"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nWaddleStorage\" as WaddleStorage","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"CFSY"},"content":"Class JsonWaddleStorage","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"Class JsonSerializableWaddle","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"CFSY"},"content":"Class JsonAdaptedItinerary","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"CFSY"},"content":"StorageManager -up-\u003e \"1\" WaddleStorage","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"CFSY"},"content":"Storage -right-|\u003e WaddleStorage","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"CFSY"},"content":"JsonWaddleStorage .up.|\u003e WaddleStorage","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"CFSY"},"content":"JsonWaddleStorage ..\u003e JsonSerializableWaddle","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"CFSY"},"content":"JsonSerializableWaddle --\u003e \"*\" JsonAdaptedItinerary","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"CFSY"},"content":"JsonAdaptedItinerary --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"CFSY":10,"-":33}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"CFSY"},"content":"Class ItineraryListPanel","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"Class ItemGroupListPanel","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"Class ItineraryCard","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"Class ItemGroupCard","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"CFSY"},"content":"MainWindow *-down-\u003e \"0..1\" ItineraryListPanel","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"CFSY"},"content":"MainWindow *-down-\u003e \"0..1\" ItemGroupListPanel","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"CFSY"},"content":"ItineraryListPanel -down-\u003e \"*\" ItineraryCard","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"CFSY"},"content":"ItemGroupListPanel -down-\u003e \"*\" ItemGroupCard","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"CFSY"},"content":"ItineraryListPanel --|\u003e UiPart","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"CFSY"},"content":"ItineraryCard --|\u003e UiPart","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"CFSY"},"content":"ItemGroupListPanel --|\u003e UiPart","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"CFSY"},"content":"ItemGroupCard --|\u003e UiPart","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"CFSY"},"content":"ItineraryCard ..\u003e Model","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"CFSY"},"content":"ItemGroupCard ..\u003e Model","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"CFSY"},"content":"ItineraryListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"CFSY":15,"-":52}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"CFSY"},"content":"!define STAGE_COLOR #ff9000","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"CFSY"},"content":"!define STAGE_COLOR_T1 #ffc37a","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"hide members","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"CFSY":3,"-":75}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"ecp -\u003e ec ++: index, editItineraryDescriptor","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"CFSY":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CFSY"},"content":"# Waddle ðŸ¦†","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W11-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103-W11-4/tp/actions)","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W11-4/tp/branch/master/graph/badge.svg?token\u003d45LHH4UIGB)](https://codecov.io/gh/AY2223S1-CS2103T-W11-4/tp)","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"###Introduction","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":"* **Waddle** is a simple, no-frills travel planning application catered to people who love doing everything on their keyboards.","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"CFSY"},"content":"* Features:","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":"    * You can plan your travels in 3 simple steps!","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"CFSY"},"content":"      * Create a trip","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"CFSY"},"content":"      * Add activities","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"      * Schedule","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"    * After you plan your trip, easily export your itinerary for easy reference during the trip itself.","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"CFSY"},"content":"* Visit our product website for a detailed documentation, **[Waddle Product Website](https://ay2223s1-cs2103-W11-4.github.io/tp/UserGuide.html)**.","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"###Acknowledgements","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"CFSY":18,"-":8}},{"path":"docs/team/cfsy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CFSY"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"CFSY"},"content":"layout: page","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"title: Foo Shi Yu\u0027s Project Portfolio Page","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"### Project: Waddle","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"Waddle is an app for easy-to-use travel itinerary creation and management.","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"CFSY"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dciaoosuuu\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"* **Project management**:","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"  * to be added soon","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":19,"author":{"gitId":"CFSY"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"  * to be added soon","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"  * User Guide:","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"CFSY"},"content":"    * to be added soon","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"CFSY"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"    * to be added soon","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"CFSY"},"content":"* **Community**:","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"CFSY"},"content":"  * to be added soon","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"* **Tools**:","lastModifiedDate":"2022-09-25"},{"lineNumber":32,"author":{"gitId":"CFSY"},"content":"  * to be added soon","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":34,"author":{"gitId":"CFSY"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"CFSY":34}},{"path":"docs/team/ciaoosuuu.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"layout: page","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"title: Chen Shun\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"### Project: Waddle","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"Waddle is an app for easy-to-use travel itinerary creation and management.","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dciaoosuuu\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"* **Project management**:","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"ciaoosuuu"},"content":"  * to be added soon","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"ciaoosuuu"},"content":"  * to be added soon","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"ciaoosuuu"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":"  * User Guide:","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"    * to be added soon","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-26"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"    * to be added soon","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"* **Community**:","lastModifiedDate":"2022-09-26"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"  * to be added soon","lastModifiedDate":"2022-09-26"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"* **Tools**:","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"  * to be added soon","lastModifiedDate":"2022-09-26"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"ciaoosuuu":34}},{"path":"docs/team/ningtan11.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ningtan11"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"ningtan11"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"ningtan11"},"content":"title: Shao Ning\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"ningtan11"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"ningtan11"},"content":"### Project: Waddle","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"ningtan11"},"content":"Waddle is...","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"ningtan11"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"ningtan11"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"ningtan11"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"ningtan11"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"ningtan11"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"ningtan11"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"ningtan11"},"content":"* **New Feature**: None yet","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"ningtan11"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"ningtan11"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"ningtan11"},"content":"  * Nothing","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"ningtan11"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"ningtan11"},"content":"  * Wait","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"ningtan11"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"ningtan11"},"content":"  * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"ningtan11"},"content":"    * I\u0027m sure I\u0027ll contribute something eventually","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"ningtan11"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"ningtan11"},"content":"    * TBC","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"ningtan11"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"ningtan11"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"ningtan11"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"ningtan11"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"ningtan11"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"ningtan11"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"},{"lineNumber":39,"author":{"gitId":"ningtan11"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-09-28"},{"lineNumber":40,"author":{"gitId":"ningtan11"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":42,"author":{"gitId":"ningtan11"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"ningtan11":42}},{"path":"docs/team/pewggls.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pewggls"},"content":"---","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"pewggls"},"content":"layout: page","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"pewggls"},"content":"title: Hui Yi\u0027s Project Portfolio Page","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"pewggls"},"content":"---","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"pewggls"},"content":"### Project: Waddle","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"pewggls"},"content":"Waddle is an app for easy-to-use travel itinerary creation and management.","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"pewggls"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"pewggls"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"pewggls"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dpewggls\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"pewggls"},"content":"* **Project management**:","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"pewggls"},"content":"    * to be added soon","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"pewggls"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"pewggls"},"content":"    * to be added soon","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"pewggls"},"content":"* **Documentation**:","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"pewggls"},"content":"    * User Guide:","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"pewggls"},"content":"        * to be added soon","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"pewggls"},"content":"    * Developer Guide:","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"pewggls"},"content":"        * to be added soon","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"pewggls"},"content":"* **Community**:","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"pewggls"},"content":"    * to be added soon","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"pewggls"},"content":"* **Tools**:","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"pewggls"},"content":"    * to be added soon","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"pewggls"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"pewggls":34}},{"path":"docs/team/seox123.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"seox123"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"title: Chen Shun\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"seox123"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"seox123"},"content":"### Project: Waddle","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"seox123"},"content":"Waddle is an app for easy-to-use travel itinerary creation and management.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"seox123"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"seox123"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"seox123"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dseox123\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"seox123"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"seox123"},"content":"  * to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"seox123"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"seox123"},"content":"  * to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"seox123"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"seox123"},"content":"  * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"seox123"},"content":"    * to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"seox123"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"seox123"},"content":"    * to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"seox123"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"seox123"},"content":"  * to be added soon","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"seox123"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"seox123"},"content":"  * to be added soon","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"seox123":32}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. â€¦â€‹\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e â€”  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEAâ€™s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what weâ€™re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what weâ€™re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now letâ€™s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]â€¦â€‹` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so letâ€™s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Letâ€™s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Letâ€™s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Letâ€™s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Letâ€™s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"CFSY"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editItineraryDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/ã‚¢ãƒªã‚¹ ãƒ¦ãƒ¼`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"CFSY":1,"-":300}},{"path":"src/main/java/seedu/waddle/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.util.FileUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"ciaoosuuu":3,"-":61}},{"path":"src/main/java/seedu/waddle/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"ciaoosuuu":1,"-":24}},{"path":"src/main/java/seedu/waddle/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.Config;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.Version;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.util.ConfigUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.util.StringUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.Logic;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.LogicManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.ModelManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.ReadOnlyWaddle;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.Waddle;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.storage.JsonWaddleStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.storage.Storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.storage.StorageManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.storage.UserPrefsStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.storage.WaddleStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.ui.Ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.ui.UiManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 2, true);","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"CFSY"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Waddle ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"CFSY"},"content":"        WaddleStorage waddleStorage \u003d new JsonWaddleStorage(userPrefs.getWaddleFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"CFSY"},"content":"        storage \u003d new StorageManager(waddleStorage, userPrefsStorage);","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"CFSY"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s waddle and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"CFSY"},"content":"     * The data from the sample waddle will be used instead if {@code storage}\u0027s waddle is not found,","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"CFSY"},"content":"     * or an empty waddle will be used instead if errors occur when reading {@code storage}\u0027s waddle.","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"CFSY"},"content":"        Optional\u003cReadOnlyWaddle\u003e waddleOptional;","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"CFSY"},"content":"        ReadOnlyWaddle initialData;","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"CFSY"},"content":"            waddleOptional \u003d storage.readWaddle();","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"CFSY"},"content":"            if (!waddleOptional.isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"CFSY"},"content":"                logger.info(\"Data file not found. Will be starting with a sample Waddle\");","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"CFSY"},"content":"            initialData \u003d waddleOptional.orElseGet(SampleDataUtil::getSampleWaddle);","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"CFSY"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty Waddle\");","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"CFSY"},"content":"            initialData \u003d new Waddle();","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"CFSY"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Waddle\");","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"CFSY"},"content":"            initialData \u003d new Waddle();","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"CFSY"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Waddle\");","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"CFSY"},"content":"        logger.info(\"Starting Waddle \" + MainApp.VERSION);","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"CFSY"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Waddle ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ciaoosuuu":21,"CFSY":23,"-":139}},{"path":"src/main/java/seedu/waddle/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.commons.core;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ciaoosuuu":1,"-":62}},{"path":"src/main/java/seedu/waddle/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.commons.core;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ciaoosuuu":1,"-":78}},{"path":"src/main/java/seedu/waddle/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.commons.core;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"ningtan11"},"content":"    private static final String LOG_FILE \u003d \"waddle.log\";","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ciaoosuuu":1,"ningtan11":1,"-":110}},{"path":"src/main/java/seedu/waddle/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.commons.core;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_COPY_ERROR \u003d \"Unable to copy to clipboard.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_UNAVAILABLE_COMMAND_HOME \u003d \"Command is unavailable in the home page.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_UNAVAILABLE_COMMAND_ITINERARY \u003d \"Command is unavailable in the itinerary page.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_INVALID_ITINERARY_DISPLAYED_INDEX \u003d \"The itinerary index provided is invalid.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_INVALID_ITEM_DISPLAYED_INDEX \u003d \"The item index provided is invalid.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_ITINERARIES_LISTED_OVERVIEW \u003d \"%1$d itineraries listed!\";","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_INVALID_STAGE \u003d \"The stage you provided is invalid! \\n%1$s\";","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_CONFLICTING_ITEMS \u003d \"Quack, there is a time clash!\"","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"CFSY"},"content":"            + \"\\nThe provided time clashes with:\\n%1$sPlease change the start time and/or the duration.\";","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_ITEM_PAST_MIDNIGHT \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"            \"%1$s extends past midnight which is not currently supported.\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"CFSY"},"content":"                    + \"Please split %1$s into 2 parts and plan the second part at the start of the next day.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"    // not meant for users to see","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_UNKNOWN_STAGE \u003d \"Unknown stage, something went wrong with the StateManager.\";","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"ciaoosuuu":1,"CFSY":16,"-":8}},{"path":"src/main/java/seedu/waddle/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.commons.core;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ciaoosuuu":1,"-":115}},{"path":"src/main/java/seedu/waddle/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.commons.core.index;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"ciaoosuuu":1,"-":53}},{"path":"src/main/java/seedu/waddle/commons/core/index/MultiIndex.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.commons.core.index;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"seox123"},"content":"import java.util.List;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"seox123"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"seox123"},"content":" * Represents a series of Index objects.","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"seox123"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"seox123"},"content":"public class MultiIndex {","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"seox123"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"seox123"},"content":"            \"Index should only contain positive integers separated by a decimal point\";","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\\\\.?\\\\d*\";","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"seox123"},"content":"    private List\u003cIndex\u003e indices;","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"seox123"},"content":"    public MultiIndex() {","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"seox123"},"content":"        indices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"seox123"},"content":"    public void appendZeroBasedIndex(int index) {","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"seox123"},"content":"        indices.add(Index.fromZeroBased(index));","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"seox123"},"content":"    public void appendOneBasedIndex(int index) {","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"seox123"},"content":"        indices.add(Index.fromOneBased(index));","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"    public void addIndex(Index index) {","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"        indices.add(index);","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"seox123"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"seox123"},"content":"     * Removes indices more than or equal to specified position.","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"seox123"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"seox123"},"content":"     * @param pos Specified position to remove from","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"seox123"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"seox123"},"content":"    public void removeIndex(int pos) {","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"seox123"},"content":"        if (!isValidPos(pos)) {","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"seox123"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"seox123"},"content":"        for (int i \u003d pos - 1; i \u003c indices.size(); i++) {","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"seox123"},"content":"            indices.remove(i);","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"ciaoosuuu"},"content":"    public Index getDayIndex() {","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"ciaoosuuu"},"content":"        if (this.indices.size() \u003d\u003d 1) {","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"ciaoosuuu"},"content":"            return null;","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"ciaoosuuu"},"content":"        return getIndex(1);","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"ciaoosuuu"},"content":"    public Index getTaskIndex() {","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"ciaoosuuu"},"content":"        if (this.indices.size() \u003d\u003d 1) {","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"ciaoosuuu"},"content":"            return getIndex(1);","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"ciaoosuuu"},"content":"        return getIndex(2);","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"seox123"},"content":"    private Index getIndex(int pos) {","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"seox123"},"content":"        if (!isValidPos(pos)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"seox123"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"seox123"},"content":"        return indices.get(pos - 1);","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"seox123"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"seox123"},"content":"     * Returns true if a given string is a valid multi index.","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"seox123"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"seox123"},"content":"    public static boolean isValidMultiIndex(String test) {","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"seox123"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"seox123"},"content":"    private boolean isValidPos(int pos) {","lastModifiedDate":"2022-10-22"},{"lineNumber":74,"author":{"gitId":"seox123"},"content":"        if (pos \u003c 1 || pos \u003e indices.size()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"seox123"},"content":"            return false;","lastModifiedDate":"2022-10-22"},{"lineNumber":76,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"seox123"},"content":"        return true;","lastModifiedDate":"2022-10-22"},{"lineNumber":78,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":79,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":80,"author":{"gitId":"seox123"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":81,"author":{"gitId":"seox123"},"content":"    public String toString() {","lastModifiedDate":"2022-10-22"},{"lineNumber":82,"author":{"gitId":"seox123"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-22"},{"lineNumber":83,"author":{"gitId":"seox123"},"content":"        for (int i \u003d 0; i \u003c indices.size(); i++) {","lastModifiedDate":"2022-10-22"},{"lineNumber":84,"author":{"gitId":"seox123"},"content":"            sb.append(indices.get(i).getOneBased());","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"seox123"},"content":"            if (i !\u003d indices.size() - 1) {","lastModifiedDate":"2022-10-22"},{"lineNumber":86,"author":{"gitId":"seox123"},"content":"                sb.append(\u0027.\u0027);","lastModifiedDate":"2022-10-22"},{"lineNumber":87,"author":{"gitId":"seox123"},"content":"            }","lastModifiedDate":"2022-10-22"},{"lineNumber":88,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":89,"author":{"gitId":"seox123"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-22"},{"lineNumber":90,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":91,"author":{"gitId":"seox123"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"ciaoosuuu":20,"seox123":71}},{"path":"src/main/java/seedu/waddle/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.commons.exceptions;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ciaoosuuu":1,"-":10}},{"path":"src/main/java/seedu/waddle/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.commons.exceptions;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ciaoosuuu":1,"-":20}},{"path":"src/main/java/seedu/waddle/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.MainApp;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ciaoosuuu":2,"-":40}},{"path":"src/main/java/seedu/waddle/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ciaoosuuu":1,"-":34}},{"path":"src/main/java/seedu/waddle/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.Config;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"ciaoosuuu":3,"-":20}},{"path":"src/main/java/seedu/waddle/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ciaoosuuu":1,"-":82}},{"path":"src/main/java/seedu/waddle/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ciaoosuuu":3,"-":140}},{"path":"src/main/java/seedu/waddle/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.commons.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ciaoosuuu":2,"-":66}},{"path":"src/main/java/seedu/waddle/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.commands.CommandResult;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.ReadOnlyWaddle;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"CFSY"},"content":"     * @see seedu.waddle.model.Model#getWaddle()","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"    ReadOnlyWaddle getWaddle();","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"CFSY"},"content":"    ObservableList\u003cItinerary\u003e getFilteredItineraryList();","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"CFSY"},"content":"    Path getWaddleFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ciaoosuuu":6,"CFSY":5,"-":39}},{"path":"src/main/java/seedu/waddle/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.commands.Command;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.commands.CommandResult;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.logic.parser.WaddleParser;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.ReadOnlyWaddle;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.storage.Storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"CFSY"},"content":"    private final WaddleParser waddleParser;","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"CFSY"},"content":"        waddleParser \u003d new WaddleParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"CFSY"},"content":"        Command command \u003d waddleParser.parseCommand(commandText);","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"CFSY"},"content":"            storage.saveWaddle(model.getWaddle());","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"CFSY"},"content":"    public ReadOnlyWaddle getWaddle() {","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"CFSY"},"content":"        return model.getWaddle();","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"CFSY"},"content":"    public ObservableList\u003cItinerary\u003e getFilteredItineraryList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"CFSY"},"content":"        return model.getFilteredItineraryList();","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"CFSY"},"content":"    public Path getWaddleFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"CFSY"},"content":"        return model.getWaddleFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ciaoosuuu":10,"CFSY":12,"-":59}},{"path":"src/main/java/seedu/waddle/logic/PdfFieldInfo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":" * A Class to store information about a Pdf field.","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"public class PdfFieldInfo {","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"    private String name;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"    private String value;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"     * Constructor for a PdfFieldInfo.","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"     * @param name Name of the field.","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"     * @param value Value to insert into the field.","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"    public PdfFieldInfo(String name, String value) {","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"ciaoosuuu"},"content":"        this.value \u003d value;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"ciaoosuuu"},"content":"    public String getName() {","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"ciaoosuuu"},"content":"        return this.name;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"    public String getValue() {","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"        return this.value;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"    public String toString() {","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"        return \"Field name: \" + this.name + \" Value: \" + this.value;","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"ciaoosuuu":32}},{"path":"src/main/java/seedu/waddle/logic/PdfFiller.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"import java.io.File;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":"import java.io.InputStream;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"import javax.swing.filechooser.FileSystemView;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":"import org.apache.commons.lang3.SystemUtils;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"import org.apache.pdfbox.pdmodel.PDDocument;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"import org.apache.pdfbox.pdmodel.PDPage;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"import org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"import org.apache.pdfbox.pdmodel.interactive.form.PDField;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.item.Day;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.item.Item;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.item.UniqueItemList;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.text.Text;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"ciaoosuuu"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":" * Class to fill pdf acroform with itinerary details.","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"public class PdfFiller {","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"    public static final int MAX_DISPLAY \u003d 15;","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"    private final Itinerary itinerary;","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"CFSY"},"content":"    private final String pdfTemplate;","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"CFSY"},"content":"    private final List\u003cPDDocument\u003e pdfList;","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"CFSY"},"content":"    private final PDDocument finalPdf;","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"     * Constructor for a PdfFiller","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"CFSY"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"ciaoosuuu"},"content":"     * @param itinerary   Itinerary to export.","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"ciaoosuuu"},"content":"     * @param pdfTemplate Default template for export.","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"ciaoosuuu"},"content":"     * @throws IOException When fail to export itinerary information.","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"ciaoosuuu"},"content":"    public PdfFiller(Itinerary itinerary, String pdfTemplate) throws IOException {","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"ciaoosuuu"},"content":"        this.itinerary \u003d itinerary;","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"ciaoosuuu"},"content":"        this.pdfTemplate \u003d pdfTemplate;","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"ciaoosuuu"},"content":"        this.pdfList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"ciaoosuuu"},"content":"        this.finalPdf \u003d new PDDocument();","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"ciaoosuuu"},"content":"    private void fillField(PdfFieldInfo info, PDAcroForm form, List\u003cPDField\u003e fieldList) throws IOException {","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"ciaoosuuu"},"content":"        PDField field \u003d form.getField(info.getName());","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"ciaoosuuu"},"content":"        field.setValue(info.getValue());","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"ciaoosuuu"},"content":"        fieldList.add(field);","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"ciaoosuuu"},"content":"    private void fillForm(Day day, List\u003cPdfFieldInfo\u003e infoList) throws IOException {","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"ciaoosuuu"},"content":"        InputStream exportTemplate \u003d getClass().getResourceAsStream(pdfTemplate);","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"ciaoosuuu"},"content":"        PDDocument pdf \u003d PDDocument.load(exportTemplate);","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"ciaoosuuu"},"content":"        PDAcroForm form \u003d pdf.getDocumentCatalog().getAcroForm();","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"ciaoosuuu"},"content":"        List\u003cPDField\u003e fieldList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"ciaoosuuu"},"content":"        ArrayList\u003cPdfFieldInfo\u003e infoToFill \u003d new ArrayList\u003c\u003e(infoList);","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"ciaoosuuu"},"content":"        form.setXFA(null);","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"CFSY"},"content":"        infoToFill.add(new PdfFieldInfo(\"itinerary_name\", this.itinerary.getDescriptionString(Text.INDENT_NONE)));","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"ciaoosuuu"},"content":"        infoToFill.add(new PdfFieldInfo(\"day\", \"Day \" + (day.getDayNumber() + 1)));","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"ciaoosuuu"},"content":"        for (PdfFieldInfo info : infoToFill) {","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"ciaoosuuu"},"content":"            fillField(info, form, fieldList);","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"ciaoosuuu"},"content":"        form.flatten(fieldList, true);","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"ciaoosuuu"},"content":"        pdf.getDocumentCatalog().setAcroForm(form);","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"ciaoosuuu"},"content":"        this.pdfList.add(pdf);","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"ciaoosuuu"},"content":"     * Export a day into PDF","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"CFSY"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"ciaoosuuu"},"content":"     * @param day The day containing items to export.","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"ciaoosuuu"},"content":"     * @throws IOException When export fails.","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"ciaoosuuu"},"content":"    public void fillDay(Day day) throws IOException {","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"ciaoosuuu"},"content":"        UniqueItemList itemList \u003d day.getItemList();","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"ciaoosuuu"},"content":"        int itemListSize \u003d itemList.getSize();","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"ciaoosuuu"},"content":"        int numOfPages \u003d (int) Math.ceil((double) itemListSize / MAX_DISPLAY);","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"ciaoosuuu"},"content":"        if (numOfPages \u003d\u003d 0) {","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"ciaoosuuu"},"content":"            List\u003cPdfFieldInfo\u003e fieldList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"ciaoosuuu"},"content":"            for (int i \u003d 0; i \u003c MAX_DISPLAY; i++) {","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"ciaoosuuu"},"content":"                PdfFieldInfo time \u003d new PdfFieldInfo(\"time\" + i, \"\");","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"ciaoosuuu"},"content":"                PdfFieldInfo activity \u003d new PdfFieldInfo(\"item\" + i, \"\");","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"ciaoosuuu"},"content":"                fieldList.add(time);","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"ciaoosuuu"},"content":"                fieldList.add(activity);","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"ciaoosuuu"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"ciaoosuuu"},"content":"            fillForm(day, fieldList);","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"ciaoosuuu"},"content":"        for (int i \u003d 0; i \u003c numOfPages; i++) {","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"ciaoosuuu"},"content":"            List\u003cPdfFieldInfo\u003e fieldList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"ciaoosuuu"},"content":"            for (int j \u003d 0; j \u003c MAX_DISPLAY; j++) {","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"ciaoosuuu"},"content":"                int targetIndex \u003d i * MAX_DISPLAY + j;","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"ciaoosuuu"},"content":"                if (targetIndex \u003c itemListSize) {","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"ciaoosuuu"},"content":"                    Item item \u003d itemList.get(targetIndex);","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"CFSY"},"content":"                    PdfFieldInfo time \u003d new PdfFieldInfo(\"time\" + j,","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"CFSY"},"content":"                            item.getTimeString(Text.INDENT_NONE).replace(\"Time: \", \"\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"ciaoosuuu"},"content":"                    PdfFieldInfo activity \u003d new PdfFieldInfo(\"item\" + j, item.getDescription().toString());","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"ciaoosuuu"},"content":"                    fieldList.add(time);","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"ciaoosuuu"},"content":"                    fieldList.add(activity);","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"ciaoosuuu"},"content":"                } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"ciaoosuuu"},"content":"                    PdfFieldInfo time \u003d new PdfFieldInfo(\"time\" + j, \"\");","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"ciaoosuuu"},"content":"                    PdfFieldInfo activity \u003d new PdfFieldInfo(\"item\" + j, \"\");","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"ciaoosuuu"},"content":"                    fieldList.add(time);","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"ciaoosuuu"},"content":"                    fieldList.add(activity);","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"ciaoosuuu"},"content":"                }","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"ciaoosuuu"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"ciaoosuuu"},"content":"            fillForm(day, fieldList);","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":114,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":115,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"ciaoosuuu"},"content":"     * Export an itinerary into PDF.","lastModifiedDate":"2022-10-27"},{"lineNumber":117,"author":{"gitId":"CFSY"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"ciaoosuuu"},"content":"     * @throws IOException When export fails.","lastModifiedDate":"2022-10-27"},{"lineNumber":119,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":120,"author":{"gitId":"ciaoosuuu"},"content":"    public void fillItinerary() throws IOException {","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"ciaoosuuu"},"content":"        for (Day day : this.itinerary.getDays()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"ciaoosuuu"},"content":"            fillDay(day);","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"ciaoosuuu"},"content":"        for (PDDocument pdf : this.pdfList) {","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"ciaoosuuu"},"content":"            PDPage page \u003d pdf.getPage(0);","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"ciaoosuuu"},"content":"            this.finalPdf.addPage(page);","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"CFSY"},"content":"        // create a waddle directory and get the path","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"CFSY"},"content":"        String defaultPath \u003d FileSystemView.getFileSystemView().getDefaultDirectory().getPath();","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"CFSY"},"content":"        File waddleFolder;","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"CFSY"},"content":"        if (SystemUtils.IS_OS_MAC) {","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"CFSY"},"content":"            waddleFolder \u003d new File(defaultPath + \"/Documents/Waddle\");","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"CFSY"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"CFSY"},"content":"            waddleFolder \u003d new File(defaultPath + \"/Waddle\");","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":138,"author":{"gitId":"CFSY"},"content":"        if (!waddleFolder.exists()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":139,"author":{"gitId":"CFSY"},"content":"            waddleFolder.mkdirs();","lastModifiedDate":"2022-10-27"},{"lineNumber":140,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":141,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":142,"author":{"gitId":"CFSY"},"content":"        finalPdf.save(waddleFolder + \"/\" + this.itinerary.getDescriptionString(Text.INDENT_NONE) + \".pdf\");","lastModifiedDate":"2022-10-27"},{"lineNumber":143,"author":{"gitId":"ciaoosuuu"},"content":"        finalPdf.close();","lastModifiedDate":"2022-10-27"},{"lineNumber":144,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":145,"author":{"gitId":"ciaoosuuu"},"content":"        // only can close when all operations are done","lastModifiedDate":"2022-10-27"},{"lineNumber":146,"author":{"gitId":"ciaoosuuu"},"content":"        for (PDDocument pdf : this.pdfList) {","lastModifiedDate":"2022-10-27"},{"lineNumber":147,"author":{"gitId":"ciaoosuuu"},"content":"            pdf.close();","lastModifiedDate":"2022-10-27"},{"lineNumber":148,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":149,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":150,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"ciaoosuuu":119,"CFSY":31}},{"path":"src/main/java/seedu/waddle/logic/StageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CFSY"},"content":"package seedu.waddle.logic;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":" * This class keeps track of the stage the user is in.","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":"public class StageManager {","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"CFSY"},"content":"    private static StageManager instance;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":"    // default stage is home","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"CFSY"},"content":"    private Stages currentStage \u003d Stages.HOME;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"CFSY"},"content":"    // stores the currently selected Itinerary","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"    private Itinerary selectedItinerary;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"    private StageManager() {","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"    public static StageManager getInstance() {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"CFSY"},"content":"        if (StageManager.instance \u003d\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"            StageManager.instance \u003d new StageManager();","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"            return StageManager.instance;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"CFSY"},"content":"        return StageManager.instance;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"CFSY"},"content":"    public Stages getCurrentStage() {","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"CFSY"},"content":"        return this.currentStage;","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"CFSY"},"content":"    public boolean isCurrentStage(Stages stage) {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"CFSY"},"content":"        return this.currentStage \u003d\u003d stage;","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"CFSY"},"content":"    public void setHomeStage() {","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"CFSY"},"content":"        this.currentStage \u003d Stages.HOME;","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"CFSY"},"content":"        this.selectedItinerary \u003d null;","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"CFSY"},"content":"    public void setWishStage(Itinerary selectedItinerary) throws NullPointerException {","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"CFSY"},"content":"        requireNonNull(selectedItinerary);","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"CFSY"},"content":"        this.currentStage \u003d Stages.WISH;","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"CFSY"},"content":"        this.selectedItinerary \u003d selectedItinerary;","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"CFSY"},"content":"    public void switchStage(Stages selectedStage) {","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"CFSY"},"content":"        this.currentStage \u003d selectedStage;","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"pewggls"},"content":"    public Itinerary getSelectedItinerary() {","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"pewggls"},"content":"        return this.selectedItinerary;","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"CFSY"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"CFSY":50,"pewggls":4}},{"path":"src/main/java/seedu/waddle/logic/Stages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CFSY"},"content":"package seedu.waddle.logic;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":" * Enum for stages.","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"public enum Stages {","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"    NONE, // used in CommandResult to indicate that no state change occurred","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"    HOME, //home page","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"    WISH //wishlist stage","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"CFSY":9,"ciaoosuuu":1}},{"path":"src/main/java/seedu/waddle/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_BUDGET;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_COUNTRY;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_ITINERARY_DURATION;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_PEOPLE;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_START_DATE;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":" * Adds an itinerary to waddle.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"ciaoosuuu"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an Itinerary to waddle. \"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"            + PREFIX_START_DATE + \"START DATE \"","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"            + PREFIX_ITINERARY_DURATION + \"DURATION \"","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"            + \"[\" + PREFIX_COUNTRY + \"COUNTRY] \"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"            + \"[\" + PREFIX_PEOPLE + \"NUMBER OF WADDLERS] \"","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"pewggls"},"content":"            + \"[\" + PREFIX_BUDGET + \"BUDGET]...\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"            + PREFIX_DESCRIPTION + \"Summer Trip \"","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"            + PREFIX_COUNTRY + \"India \"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"            + PREFIX_START_DATE + \"2022-10-28 \"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"pewggls"},"content":"            + PREFIX_ITINERARY_DURATION + \"15 \"","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"pewggls"},"content":"            + PREFIX_PEOPLE + \"4 \"","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"pewggls"},"content":"            + PREFIX_BUDGET + \"1000 \";","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New itinerary added:\\n%1$s\";","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_DUPLICATE_ITINERARY \u003d \"This itinerary already exists\";","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"ciaoosuuu"},"content":"    private final Itinerary toAdd;","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"CFSY"},"content":"     * Creates an AddCommand to add the specified {@code Itinerary}","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"ciaoosuuu"},"content":"    public AddCommand(Itinerary itinerary) {","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"ciaoosuuu"},"content":"        requireNonNull(itinerary);","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"ciaoosuuu"},"content":"        toAdd \u003d itinerary;","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"ciaoosuuu"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"ciaoosuuu"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"ciaoosuuu"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"CFSY"},"content":"        if (model.hasItinerary(toAdd)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"CFSY"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ITINERARY);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"CFSY"},"content":"        model.addItinerary(toAdd);","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"ciaoosuuu"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"ciaoosuuu"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"ciaoosuuu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"ciaoosuuu"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"ciaoosuuu"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"ciaoosuuu"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"ciaoosuuu":52,"CFSY":8,"pewggls":9}},{"path":"src/main/java/seedu/waddle/logic/commands/AddItemCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pewggls"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"pewggls"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_COST;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_ITEM_DURATION;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.logic.StageManager;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.item.Item;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"pewggls"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"pewggls"},"content":" * Adds an item to an itinerary.","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"pewggls"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"pewggls"},"content":"public class AddItemCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"pewggls"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"pewggls"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an item to an itinerary. \"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"pewggls"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"seox123"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION]\"","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"ningtan11"},"content":"            + \"[\" + PREFIX_PRIORITY + \"PRIORITY]\"","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"ningtan11"},"content":"            + \"[\" + PREFIX_COST + \"COST]\"","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"ningtan11"},"content":"            + \"[\" + PREFIX_ITEM_DURATION + \"DURATION]...\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"pewggls"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"seox123"},"content":"            + PREFIX_DESCRIPTION + \"Visit Taj Mahal \"","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"seox123"},"content":"            + PREFIX_PRIORITY + \"3\";","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New item added:\\n%1$s\";","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"pewggls"},"content":"    public static final String MESSAGE_DUPLICATE_ITEM \u003d \"This item already exists\";","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"pewggls"},"content":"    private final Item toAdd;","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"pewggls"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"pewggls"},"content":"     * Creates an AddItemCommand to add the specified {@code Item}","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"pewggls"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"pewggls"},"content":"    public AddItemCommand(Item item) {","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"pewggls"},"content":"        requireNonNull(item);","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"pewggls"},"content":"        toAdd \u003d item;","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"pewggls"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"pewggls"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"pewggls"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"pewggls"},"content":"        StageManager stageManager \u003d StageManager.getInstance();","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"pewggls"},"content":"        Itinerary itinerary \u003d stageManager.getSelectedItinerary();","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"pewggls"},"content":"        if (itinerary.hasItem(toAdd)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"pewggls"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ITEM);","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"pewggls"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"pewggls"},"content":"        itinerary.addItem(toAdd);","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"CFSY"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"pewggls"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"pewggls"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"pewggls"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"pewggls"},"content":"                || (other instanceof AddItemCommand // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"pewggls"},"content":"                \u0026\u0026 toAdd.equals(((AddItemCommand) other).toAdd));","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"pewggls"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"CFSY":2,"pewggls":57,"ningtan11":5,"seox123":4}},{"path":"src/main/java/seedu/waddle/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.Waddle;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"        model.setWaddle(new Waddle());","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ciaoosuuu":2,"CFSY":2,"-":19}},{"path":"src/main/java/seedu/waddle/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ciaoosuuu":3,"-":17}},{"path":"src/main/java/seedu/waddle/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.logic.Stages;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"     * Help information should be shown to the user.","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"     * The application should exit.","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"    private final Stages stage;","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, Stages stage) {","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"CFSY"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"CFSY"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"CFSY"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"CFSY"},"content":"        this(feedbackToUser, showHelp, exit, Stages.NONE);","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"CFSY"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"CFSY"},"content":"    public CommandResult(String feedbackToUser, Stages stage) {","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"CFSY"},"content":"        this(feedbackToUser, false, false, stage);","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"CFSY"},"content":"        this(feedbackToUser, false, false, Stages.NONE);","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"CFSY"},"content":"    public boolean hasStage() {","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"CFSY"},"content":"        return !(this.stage \u003d\u003d Stages.NONE);","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"CFSY"},"content":"    public Stages getStage() {","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"CFSY"},"content":"        return this.stage;","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ciaoosuuu":1,"CFSY":35,"-":66}},{"path":"src/main/java/seedu/waddle/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"seox123"},"content":"            + \": Deletes the itinerary identified by the index number used in the displayed itinerary list. \"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_DELETE_ITINERARY_SUCCESS \u003d \"Deleted itinerary: %1$s\";","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"CFSY"},"content":"        List\u003cItinerary\u003e lastShownList \u003d model.getFilteredItineraryList();","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"CFSY"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ITINERARY_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"ciaoosuuu"},"content":"        Itinerary itineraryToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"CFSY"},"content":"        model.deleteItinerary(itineraryToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"CFSY"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_ITINERARY_SUCCESS, itineraryToDelete));","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ciaoosuuu":7,"CFSY":5,"-":40,"seox123":1}},{"path":"src/main/java/seedu/waddle/logic/commands/DeleteItemCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.Messages;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.index.MultiIndex;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.StageManager;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.item.Day;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.item.Item;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":" * Adds an item to an itinerary.","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"ciaoosuuu"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"public class DeleteItemCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":"            + \": Deletes the item identified by the index number used in the displayed item list. \"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String MESSAGE_DELETE_ITINERARY_SUCCESS \u003d \"Deleted item: %1$s\";","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"    private final MultiIndex targetIndex;","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"     * Creates an AddItemCommand to add the specified {@code Item}","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"ciaoosuuu"},"content":"    public DeleteItemCommand(MultiIndex targetIndex) {","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"ciaoosuuu"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"ciaoosuuu"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"ciaoosuuu"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"ciaoosuuu"},"content":"        StageManager stageManager \u003d StageManager.getInstance();","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"ciaoosuuu"},"content":"        // if not at wish stage, throw exception and change to wish stage","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"ciaoosuuu"},"content":"        /*","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"ciaoosuuu"},"content":"        if (!stageManager.isCurrentStage(Stages.WISH)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"ciaoosuuu"},"content":"            return new CommandResult(MESSAGE_WRONG_STAGE);","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"ciaoosuuu"},"content":"        stageManager.setHomeStage();","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"ciaoosuuu"},"content":"         */","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"ciaoosuuu"},"content":"        Itinerary itinerary \u003d stageManager.getSelectedItinerary();","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"ciaoosuuu"},"content":"        if (targetIndex.getDayIndex() \u003d\u003d null) {","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"CFSY"},"content":"            if (targetIndex.getTaskIndex().getZeroBased() \u003e\u003d itinerary.getUnscheduledSize()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"ciaoosuuu"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"ciaoosuuu"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"ciaoosuuu"},"content":"        } else {","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"ciaoosuuu"},"content":"            if (targetIndex.getDayIndex().getZeroBased() \u003e\u003d itinerary.getDuration().getValue()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"ciaoosuuu"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"ciaoosuuu"},"content":"            }","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"ciaoosuuu"},"content":"            Day day \u003d itinerary.getDays().get(targetIndex.getDayIndex().getZeroBased());","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"ciaoosuuu"},"content":"            if (targetIndex.getTaskIndex().getZeroBased() \u003e\u003d day.getItemSize()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"ciaoosuuu"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"ciaoosuuu"},"content":"            }","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"ciaoosuuu"},"content":"        Item itemToDelete \u003d itinerary.removeItem(targetIndex);","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"ciaoosuuu"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_ITINERARY_SUCCESS, itemToDelete));","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"ciaoosuuu"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"ciaoosuuu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"ciaoosuuu"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"ciaoosuuu"},"content":"                || (other instanceof DeleteItemCommand // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"ciaoosuuu"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteItemCommand) other).targetIndex));","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"ciaoosuuu":77,"CFSY":1}},{"path":"src/main/java/seedu/waddle/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_BUDGET;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_COUNTRY;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_ITINERARY_DURATION;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_PEOPLE;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_START_DATE;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":"import static seedu.waddle.model.Model.PREDICATE_SHOW_ALL_ITINERARIES;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Budget;","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Country;","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Date;","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Description;","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.ItineraryDuration;","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.People;","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":" * Edits the details of an existing itinerary.","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the itinerary identified \"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"ciaoosuuu"},"content":"            + \"by the index number used in the displayed itinerary list. \"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"ciaoosuuu"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"ciaoosuuu"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"NAME] \"","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"ciaoosuuu"},"content":"            + \"[\" + PREFIX_COUNTRY + \"COUNTRY] \"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"ciaoosuuu"},"content":"            + \"[\" + PREFIX_START_DATE + \"START DATE] \"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"pewggls"},"content":"            + \"[\" + PREFIX_ITINERARY_DURATION + \"DURATION] \"","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"pewggls"},"content":"            + \"[\" + PREFIX_PEOPLE + \"PEOPLE] \"","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"pewggls"},"content":"            + \"[\" + PREFIX_BUDGET + \"BUDGET]...\\n\"","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"ciaoosuuu"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"ciaoosuuu"},"content":"            + PREFIX_COUNTRY + \"Australia \"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"ciaoosuuu"},"content":"            + PREFIX_START_DATE + \"2022-07-30 \";","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_EDIT_ITINERARY_SUCCESS \u003d \"Edited Itinerary: %1$s\";","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_DUPLICATE_ITINERARY \u003d \"This itinerary already exists.\";","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"ciaoosuuu"},"content":"    private final Index index;","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"CFSY"},"content":"    private final EditItineraryDescriptor editItineraryDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"ciaoosuuu"},"content":"     * @param index                   of the person in the filtered person list to edit","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"CFSY"},"content":"     * @param editItineraryDescriptor details to edit the person with","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"CFSY"},"content":"    public EditCommand(Index index, EditItineraryDescriptor editItineraryDescriptor) {","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"ciaoosuuu"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"CFSY"},"content":"        requireNonNull(editItineraryDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"ciaoosuuu"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"CFSY"},"content":"        this.editItineraryDescriptor \u003d new EditItineraryDescriptor(editItineraryDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"CFSY"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"CFSY"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"CFSY"},"content":"    private static Itinerary createEditedItinerary(Itinerary itineraryToEdit,","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"CFSY"},"content":"                                                   EditItineraryDescriptor editItineraryDescriptor) {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"CFSY"},"content":"        assert itineraryToEdit !\u003d null;","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"CFSY"},"content":"        Description updatedName \u003d editItineraryDescriptor.getName().orElse(itineraryToEdit.getDescription());","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"CFSY"},"content":"        Country updatedCountry \u003d editItineraryDescriptor.getCountry().orElse(itineraryToEdit.getCountry());","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"CFSY"},"content":"        Date updatedStartDate \u003d editItineraryDescriptor.getStartDate().orElse(itineraryToEdit.getStartDate());","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"pewggls"},"content":"        ItineraryDuration updatedDuration \u003d editItineraryDescriptor.getDuration()","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"pewggls"},"content":"                .orElse(itineraryToEdit.getDuration());","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"CFSY"},"content":"        People updatedPeople \u003d editItineraryDescriptor.getPeople().orElse(itineraryToEdit.getPeople());","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"pewggls"},"content":"        Budget updatedBudget \u003d editItineraryDescriptor.getBudget().orElse(itineraryToEdit.getBudget());","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"ciaoosuuu"},"content":"        Itinerary editedItinerary \u003d new Itinerary(updatedName, updatedCountry, updatedStartDate, updatedDuration,","lastModifiedDate":"2022-10-23"},{"lineNumber":85,"author":{"gitId":"pewggls"},"content":"                updatedPeople, updatedBudget);","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"ciaoosuuu"},"content":"        editedItinerary.setSpending(itineraryToEdit.getBudget());","lastModifiedDate":"2022-10-23"},{"lineNumber":87,"author":{"gitId":"ciaoosuuu"},"content":"        editedItinerary.setDays(itineraryToEdit.getDays());","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"ciaoosuuu"},"content":"        return editedItinerary;","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"ciaoosuuu"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"ciaoosuuu"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"ciaoosuuu"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"CFSY"},"content":"        List\u003cItinerary\u003e lastShownList \u003d model.getFilteredItineraryList();","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"ciaoosuuu"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"CFSY"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ITINERARY_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"ciaoosuuu"},"content":"        Itinerary itineraryToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"CFSY"},"content":"        Itinerary editedItinerary \u003d createEditedItinerary(itineraryToEdit, editItineraryDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"CFSY"},"content":"        if (!itineraryToEdit.isSameItinerary(editedItinerary) \u0026\u0026 model.hasItinerary(editedItinerary)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"CFSY"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ITINERARY);","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"CFSY"},"content":"        model.setItinerary(itineraryToEdit, editedItinerary);","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"CFSY"},"content":"        model.updateFilteredItineraryList(PREDICATE_SHOW_ALL_ITINERARIES);","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"CFSY"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_ITINERARY_SUCCESS, editedItinerary));","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"ciaoosuuu"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"ciaoosuuu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"ciaoosuuu"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"ciaoosuuu"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"ciaoosuuu"},"content":"            return true;","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"ciaoosuuu"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"ciaoosuuu"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"ciaoosuuu"},"content":"            return false;","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"ciaoosuuu"},"content":"        // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"ciaoosuuu"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"ciaoosuuu"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"CFSY"},"content":"                \u0026\u0026 editItineraryDescriptor.equals(e.editItineraryDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"ciaoosuuu"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"ciaoosuuu"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"CFSY"},"content":"    public static class EditItineraryDescriptor {","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"ciaoosuuu"},"content":"        private Description name;","lastModifiedDate":"2022-10-26"},{"lineNumber":136,"author":{"gitId":"ciaoosuuu"},"content":"        private Country country;","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"ciaoosuuu"},"content":"        private Date startDate;","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"pewggls"},"content":"        private ItineraryDuration duration;","lastModifiedDate":"2022-10-21"},{"lineNumber":139,"author":{"gitId":"ciaoosuuu"},"content":"        private People people;","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"pewggls"},"content":"        private Budget budget;","lastModifiedDate":"2022-10-21"},{"lineNumber":141,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"CFSY"},"content":"        public EditItineraryDescriptor() {","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"ciaoosuuu"},"content":"        /**","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"ciaoosuuu"},"content":"         * Copy constructor.","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"ciaoosuuu"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"ciaoosuuu"},"content":"         */","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"CFSY"},"content":"        public EditItineraryDescriptor(EditItineraryDescriptor toCopy) {","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"ciaoosuuu"},"content":"            setName(toCopy.name);","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"ciaoosuuu"},"content":"            setCountry(toCopy.country);","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"ciaoosuuu"},"content":"            setStartDate(toCopy.startDate);","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"pewggls"},"content":"            setDuration(toCopy.duration);","lastModifiedDate":"2022-10-21"},{"lineNumber":154,"author":{"gitId":"ciaoosuuu"},"content":"            setPeople(toCopy.people);","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"pewggls"},"content":"            setBudget(toCopy.budget);","lastModifiedDate":"2022-10-21"},{"lineNumber":156,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"ciaoosuuu"},"content":"        /**","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"ciaoosuuu"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"ciaoosuuu"},"content":"         */","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"ciaoosuuu"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"pewggls"},"content":"            return CollectionUtil.isAnyNonNull(name, country, startDate, duration, people, budget);","lastModifiedDate":"2022-10-21"},{"lineNumber":163,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"ciaoosuuu"},"content":"        public Optional\u003cDescription\u003e getName() {","lastModifiedDate":"2022-10-26"},{"lineNumber":166,"author":{"gitId":"ciaoosuuu"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"ciaoosuuu"},"content":"        public void setName(Description name) {","lastModifiedDate":"2022-10-26"},{"lineNumber":170,"author":{"gitId":"CFSY"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"ciaoosuuu"},"content":"        public Optional\u003cCountry\u003e getCountry() {","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"ciaoosuuu"},"content":"            return Optional.ofNullable(country);","lastModifiedDate":"2022-10-10"},{"lineNumber":175,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"CFSY"},"content":"        public void setCountry(Country country) {","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"CFSY"},"content":"            this.country \u003d country;","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"ciaoosuuu"},"content":"        public Optional\u003cDate\u003e getStartDate() {","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"ciaoosuuu"},"content":"            return Optional.ofNullable(startDate);","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":185,"author":{"gitId":"CFSY"},"content":"        public void setStartDate(Date startDate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":186,"author":{"gitId":"CFSY"},"content":"            this.startDate \u003d startDate;","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":189,"author":{"gitId":"pewggls"},"content":"        public Optional\u003cItineraryDuration\u003e getDuration() {","lastModifiedDate":"2022-10-21"},{"lineNumber":190,"author":{"gitId":"pewggls"},"content":"            return Optional.ofNullable(duration);","lastModifiedDate":"2022-10-21"},{"lineNumber":191,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":193,"author":{"gitId":"pewggls"},"content":"        public void setDuration(ItineraryDuration duration) {","lastModifiedDate":"2022-10-21"},{"lineNumber":194,"author":{"gitId":"pewggls"},"content":"            this.duration \u003d duration;","lastModifiedDate":"2022-10-21"},{"lineNumber":195,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":196,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":197,"author":{"gitId":"ciaoosuuu"},"content":"        public Optional\u003cPeople\u003e getPeople() {","lastModifiedDate":"2022-10-10"},{"lineNumber":198,"author":{"gitId":"ciaoosuuu"},"content":"            return Optional.ofNullable(people);","lastModifiedDate":"2022-10-10"},{"lineNumber":199,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":200,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":201,"author":{"gitId":"CFSY"},"content":"        public void setPeople(People people) {","lastModifiedDate":"2022-10-10"},{"lineNumber":202,"author":{"gitId":"CFSY"},"content":"            this.people \u003d people;","lastModifiedDate":"2022-10-10"},{"lineNumber":203,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":204,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":205,"author":{"gitId":"pewggls"},"content":"        public Optional\u003cBudget\u003e getBudget() {","lastModifiedDate":"2022-10-21"},{"lineNumber":206,"author":{"gitId":"pewggls"},"content":"            return Optional.ofNullable(budget);","lastModifiedDate":"2022-10-21"},{"lineNumber":207,"author":{"gitId":"pewggls"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":208,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":209,"author":{"gitId":"pewggls"},"content":"        public void setBudget(Budget budget) {","lastModifiedDate":"2022-10-21"},{"lineNumber":210,"author":{"gitId":"pewggls"},"content":"            this.budget \u003d budget;","lastModifiedDate":"2022-10-21"},{"lineNumber":211,"author":{"gitId":"pewggls"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":212,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":213,"author":{"gitId":"ciaoosuuu"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":214,"author":{"gitId":"ciaoosuuu"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":215,"author":{"gitId":"ciaoosuuu"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":216,"author":{"gitId":"ciaoosuuu"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-10"},{"lineNumber":217,"author":{"gitId":"ciaoosuuu"},"content":"                return true;","lastModifiedDate":"2022-10-10"},{"lineNumber":218,"author":{"gitId":"ciaoosuuu"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":219,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":220,"author":{"gitId":"ciaoosuuu"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":221,"author":{"gitId":"CFSY"},"content":"            if (!(other instanceof EditItineraryDescriptor)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":222,"author":{"gitId":"ciaoosuuu"},"content":"                return false;","lastModifiedDate":"2022-10-10"},{"lineNumber":223,"author":{"gitId":"ciaoosuuu"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":224,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":225,"author":{"gitId":"ciaoosuuu"},"content":"            // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":226,"author":{"gitId":"CFSY"},"content":"            EditItineraryDescriptor e \u003d (EditItineraryDescriptor) other;","lastModifiedDate":"2022-10-10"},{"lineNumber":227,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":228,"author":{"gitId":"ciaoosuuu"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2022-10-10"},{"lineNumber":229,"author":{"gitId":"ciaoosuuu"},"content":"                    \u0026\u0026 getCountry().equals(e.getCountry())","lastModifiedDate":"2022-10-10"},{"lineNumber":230,"author":{"gitId":"ciaoosuuu"},"content":"                    \u0026\u0026 getStartDate().equals(e.getStartDate())","lastModifiedDate":"2022-10-10"},{"lineNumber":231,"author":{"gitId":"pewggls"},"content":"                    \u0026\u0026 getDuration().equals(e.getDuration())","lastModifiedDate":"2022-10-21"},{"lineNumber":232,"author":{"gitId":"pewggls"},"content":"                    \u0026\u0026 getPeople().equals(e.getPeople())","lastModifiedDate":"2022-10-21"},{"lineNumber":233,"author":{"gitId":"pewggls"},"content":"                    \u0026\u0026 getBudget().equals(e.getBudget());","lastModifiedDate":"2022-10-21"},{"lineNumber":234,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":235,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":236,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"ciaoosuuu":152,"CFSY":46,"pewggls":38}},{"path":"src/main/java/seedu/waddle/logic/commands/EditItemCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_COST;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_ITEM_DURATION;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"seox123"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"seox123"},"content":"import seedu.waddle.commons.core.Messages;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.index.MultiIndex;","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"seox123"},"content":"import seedu.waddle.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.StageManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.item.Cost;","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.item.Day;","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.item.Duration;","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.item.Item;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.item.Priority;","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Description;","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"seox123"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"seox123"},"content":" * Edits the details of an existing item.","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"seox123"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"seox123"},"content":"public class EditItemCommand extends Command {","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"seox123"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"seox123"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the item identified \"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"seox123"},"content":"            + \"by the index number used in the displayed item list. \"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"seox123"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"seox123"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"ningtan11"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION]\"","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"ningtan11"},"content":"            + \"[\" + PREFIX_PRIORITY + \"PRIORITY]\"","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"ningtan11"},"content":"            + \"[\" + PREFIX_COST + \"COST]\"","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"ningtan11"},"content":"            + \"[\" + PREFIX_ITEM_DURATION + \"DURATION]\"","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"CFSY"},"content":"            + \"[\" + PREFIX_START_TIME + \"START TIME]...\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"seox123"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"seox123"},"content":"            + PREFIX_DESCRIPTION + \"Visit the Eiffel Tower \";","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"seox123"},"content":"    public static final String MESSAGE_EDIT_ITEM_SUCCESS \u003d \"Edited item: %1$s\";","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"seox123"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"seox123"},"content":"    public static final String MESSAGE_DUPLICATE_ITEM \u003d \"This item already exists.\";","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String MESSAGE_EDIT_START_TIME \u003d \"Editing start time of unscheduled item is not allowed\";","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"ciaoosuuu"},"content":"    private final MultiIndex multiIndex;","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"seox123"},"content":"    private final EditItemDescriptor editItemDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"seox123"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"ciaoosuuu"},"content":"     * @param multiIndex of the item in the unique item list to edit","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"seox123"},"content":"     * @param editItemDescriptor details to edit the item with","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"seox123"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"ciaoosuuu"},"content":"    public EditItemCommand(MultiIndex multiIndex, EditItemDescriptor editItemDescriptor) {","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"ciaoosuuu"},"content":"        requireNonNull(multiIndex);","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"seox123"},"content":"        requireNonNull(editItemDescriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"ciaoosuuu"},"content":"        this.multiIndex \u003d multiIndex;","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"seox123"},"content":"        this.editItemDescriptor \u003d new EditItemDescriptor(editItemDescriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"seox123"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"seox123"},"content":"     * Creates and returns an {@code Item} with the details of {@code itemToEdit}","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"seox123"},"content":"     * edited with {@code editItemDescriptor}.","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"seox123"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"seox123"},"content":"    private static Item createEditedItem(Item itemToEdit,","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"seox123"},"content":"        EditItemDescriptor editItemDescriptor) {","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"seox123"},"content":"        assert itemToEdit !\u003d null;","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"ciaoosuuu"},"content":"        Description updatedDescription \u003d editItemDescriptor.getDescription().orElse(itemToEdit.getDescription());","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"seox123"},"content":"        Priority updatedPriority \u003d editItemDescriptor.getPriority().orElse(itemToEdit.getPriority());","lastModifiedDate":"2022-10-18"},{"lineNumber":77,"author":{"gitId":"ciaoosuuu"},"content":"        Cost updatedCost \u003d editItemDescriptor.getCost().orElse(itemToEdit.getCost());","lastModifiedDate":"2022-10-23"},{"lineNumber":78,"author":{"gitId":"ciaoosuuu"},"content":"        Duration updatedDuration \u003d editItemDescriptor.getDuration().orElse(itemToEdit.getDuration());","lastModifiedDate":"2022-10-23"},{"lineNumber":79,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":80,"author":{"gitId":"ciaoosuuu"},"content":"        Item editedItem \u003d new Item(updatedDescription, updatedPriority, updatedCost, updatedDuration);","lastModifiedDate":"2022-10-23"},{"lineNumber":81,"author":{"gitId":"CFSY"},"content":"        editedItem.setStartTime(editItemDescriptor.getStartTime().orElse(itemToEdit.getStartTime()));","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"ciaoosuuu"},"content":"        return editedItem;","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"seox123"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"seox123"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"seox123"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"seox123"},"content":"        StageManager stageManager \u003d StageManager.getInstance();","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"seox123"},"content":"        Itinerary itinerary \u003d stageManager.getSelectedItinerary();","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"ciaoosuuu"},"content":"        if (multiIndex.getDayIndex() \u003d\u003d null) {","lastModifiedDate":"2022-10-23"},{"lineNumber":93,"author":{"gitId":"CFSY"},"content":"            if (multiIndex.getTaskIndex().getZeroBased() \u003e\u003d itinerary.getUnscheduledSize()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"seox123"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"seox123"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"ciaoosuuu"},"content":"            Item itemToEdit \u003d itinerary.getItem(multiIndex);","lastModifiedDate":"2022-10-23"},{"lineNumber":97,"author":{"gitId":"seox123"},"content":"            Item editedItem \u003d createEditedItem(itemToEdit, editItemDescriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"seox123"},"content":"            if (!itemToEdit.isSameItem(editedItem) \u0026\u0026 itinerary.hasItem(editedItem)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"seox123"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_ITEM);","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"seox123"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"ciaoosuuu"},"content":"            itinerary.setItem(itemToEdit, editedItem, multiIndex);","lastModifiedDate":"2022-10-23"},{"lineNumber":102,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":103,"author":{"gitId":"ciaoosuuu"},"content":"            return new CommandResult(String.format(MESSAGE_EDIT_ITEM_SUCCESS, editedItem));","lastModifiedDate":"2022-10-23"},{"lineNumber":104,"author":{"gitId":"ciaoosuuu"},"content":"        } else {","lastModifiedDate":"2022-10-23"},{"lineNumber":105,"author":{"gitId":"ciaoosuuu"},"content":"            if (multiIndex.getDayIndex().getZeroBased() \u003e\u003d itinerary.getDuration().getValue()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":106,"author":{"gitId":"ciaoosuuu"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-23"},{"lineNumber":107,"author":{"gitId":"ciaoosuuu"},"content":"            }","lastModifiedDate":"2022-10-23"},{"lineNumber":108,"author":{"gitId":"ciaoosuuu"},"content":"            Day day \u003d itinerary.getDays().get(multiIndex.getDayIndex().getZeroBased());","lastModifiedDate":"2022-10-23"},{"lineNumber":109,"author":{"gitId":"ciaoosuuu"},"content":"            if (multiIndex.getTaskIndex().getZeroBased() \u003e\u003d day.getItemSize()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":110,"author":{"gitId":"ciaoosuuu"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-23"},{"lineNumber":111,"author":{"gitId":"ciaoosuuu"},"content":"            }","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"ciaoosuuu"},"content":"            Item itemToEdit \u003d itinerary.getItem(multiIndex);","lastModifiedDate":"2022-10-23"},{"lineNumber":113,"author":{"gitId":"ciaoosuuu"},"content":"            Item editedItem \u003d createEditedItem(itemToEdit, editItemDescriptor);","lastModifiedDate":"2022-10-23"},{"lineNumber":114,"author":{"gitId":"ciaoosuuu"},"content":"            if (!itemToEdit.isSameItem(editedItem) \u0026\u0026 day.hasItem(editedItem)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":115,"author":{"gitId":"ciaoosuuu"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_ITEM);","lastModifiedDate":"2022-10-23"},{"lineNumber":116,"author":{"gitId":"ciaoosuuu"},"content":"            }","lastModifiedDate":"2022-10-23"},{"lineNumber":117,"author":{"gitId":"ciaoosuuu"},"content":"            itinerary.setItem(itemToEdit, editedItem, multiIndex);","lastModifiedDate":"2022-10-23"},{"lineNumber":118,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"seox123"},"content":"            return new CommandResult(String.format(MESSAGE_EDIT_ITEM_SUCCESS, editedItem));","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":122,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"seox123"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"seox123"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"seox123"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"seox123"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"seox123"},"content":"            return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"seox123"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"seox123"},"content":"        if (!(other instanceof EditItemCommand)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"seox123"},"content":"            return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"seox123"},"content":"        // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"seox123"},"content":"        EditItemCommand e \u003d (EditItemCommand) other;","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"ciaoosuuu"},"content":"        return multiIndex.equals(e.multiIndex)","lastModifiedDate":"2022-10-23"},{"lineNumber":138,"author":{"gitId":"seox123"},"content":"                \u0026\u0026 editItemDescriptor.equals(e.editItemDescriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"seox123"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"seox123"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"seox123"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"seox123"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"seox123"},"content":"    public static class EditItemDescriptor {","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"ciaoosuuu"},"content":"        private Description description;","lastModifiedDate":"2022-10-26"},{"lineNumber":147,"author":{"gitId":"seox123"},"content":"        private Priority priority;","lastModifiedDate":"2022-10-18"},{"lineNumber":148,"author":{"gitId":"ningtan11"},"content":"        private Cost cost;","lastModifiedDate":"2022-10-22"},{"lineNumber":149,"author":{"gitId":"ningtan11"},"content":"        private Duration duration;","lastModifiedDate":"2022-10-22"},{"lineNumber":150,"author":{"gitId":"ciaoosuuu"},"content":"        private LocalTime startTime;","lastModifiedDate":"2022-10-23"},{"lineNumber":151,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"seox123"},"content":"        public EditItemDescriptor() {","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"seox123"},"content":"        /**","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"seox123"},"content":"         * Copy constructor.","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"seox123"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"seox123"},"content":"         */","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"seox123"},"content":"        public EditItemDescriptor(EditItemDescriptor toCopy) {","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"seox123"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"seox123"},"content":"            setPriority(toCopy.priority);","lastModifiedDate":"2022-10-18"},{"lineNumber":162,"author":{"gitId":"ningtan11"},"content":"            setCost(toCopy.cost);","lastModifiedDate":"2022-10-22"},{"lineNumber":163,"author":{"gitId":"ningtan11"},"content":"            setDuration(toCopy.duration);","lastModifiedDate":"2022-10-22"},{"lineNumber":164,"author":{"gitId":"CFSY"},"content":"            setStartTime(toCopy.startTime);","lastModifiedDate":"2022-10-23"},{"lineNumber":165,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":166,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":167,"author":{"gitId":"seox123"},"content":"        /**","lastModifiedDate":"2022-10-12"},{"lineNumber":168,"author":{"gitId":"seox123"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-12"},{"lineNumber":169,"author":{"gitId":"seox123"},"content":"         */","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"seox123"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-12"},{"lineNumber":171,"author":{"gitId":"ciaoosuuu"},"content":"            return CollectionUtil.isAnyNonNull(description, priority, cost, duration, startTime);","lastModifiedDate":"2022-10-25"},{"lineNumber":172,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":173,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":174,"author":{"gitId":"ciaoosuuu"},"content":"        public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2022-10-26"},{"lineNumber":175,"author":{"gitId":"seox123"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2022-10-12"},{"lineNumber":176,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":177,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":178,"author":{"gitId":"ciaoosuuu"},"content":"        public void setDescription(Description description) {","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"seox123"},"content":"            this.description \u003d description;","lastModifiedDate":"2022-10-12"},{"lineNumber":180,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":181,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":182,"author":{"gitId":"seox123"},"content":"        public Optional\u003cPriority\u003e getPriority() {","lastModifiedDate":"2022-10-18"},{"lineNumber":183,"author":{"gitId":"seox123"},"content":"            return Optional.ofNullable(priority);","lastModifiedDate":"2022-10-18"},{"lineNumber":184,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":185,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":186,"author":{"gitId":"seox123"},"content":"        public void setPriority(Priority priority) {","lastModifiedDate":"2022-10-18"},{"lineNumber":187,"author":{"gitId":"seox123"},"content":"            this.priority \u003d priority;","lastModifiedDate":"2022-10-18"},{"lineNumber":188,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":189,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":190,"author":{"gitId":"ningtan11"},"content":"        public Optional\u003cCost\u003e getCost() {","lastModifiedDate":"2022-10-22"},{"lineNumber":191,"author":{"gitId":"ningtan11"},"content":"            return Optional.ofNullable(cost);","lastModifiedDate":"2022-10-22"},{"lineNumber":192,"author":{"gitId":"ningtan11"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":193,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":194,"author":{"gitId":"ningtan11"},"content":"        public void setCost(Cost cost) {","lastModifiedDate":"2022-10-22"},{"lineNumber":195,"author":{"gitId":"ningtan11"},"content":"            this.cost \u003d cost;","lastModifiedDate":"2022-10-22"},{"lineNumber":196,"author":{"gitId":"ningtan11"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":197,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":198,"author":{"gitId":"ningtan11"},"content":"        public Optional\u003cDuration\u003e getDuration() {","lastModifiedDate":"2022-10-22"},{"lineNumber":199,"author":{"gitId":"ningtan11"},"content":"            return Optional.ofNullable(duration);","lastModifiedDate":"2022-10-22"},{"lineNumber":200,"author":{"gitId":"ningtan11"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":201,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":202,"author":{"gitId":"ningtan11"},"content":"        public void setDuration(Duration duration) {","lastModifiedDate":"2022-10-22"},{"lineNumber":203,"author":{"gitId":"ningtan11"},"content":"            this.duration \u003d duration;","lastModifiedDate":"2022-10-22"},{"lineNumber":204,"author":{"gitId":"ningtan11"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":205,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":206,"author":{"gitId":"ciaoosuuu"},"content":"        public Optional\u003cLocalTime\u003e getStartTime() {","lastModifiedDate":"2022-10-23"},{"lineNumber":207,"author":{"gitId":"CFSY"},"content":"            return Optional.ofNullable(startTime);","lastModifiedDate":"2022-10-23"},{"lineNumber":208,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":209,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":210,"author":{"gitId":"ciaoosuuu"},"content":"        public void setStartTime(LocalTime startTime) {","lastModifiedDate":"2022-10-23"},{"lineNumber":211,"author":{"gitId":"CFSY"},"content":"            this.startTime \u003d startTime;","lastModifiedDate":"2022-10-23"},{"lineNumber":212,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":213,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":214,"author":{"gitId":"seox123"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":215,"author":{"gitId":"seox123"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":216,"author":{"gitId":"seox123"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":217,"author":{"gitId":"seox123"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-12"},{"lineNumber":218,"author":{"gitId":"seox123"},"content":"                return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":219,"author":{"gitId":"seox123"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":220,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":221,"author":{"gitId":"seox123"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":222,"author":{"gitId":"seox123"},"content":"            if (!(other instanceof EditItemDescriptor)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":223,"author":{"gitId":"seox123"},"content":"                return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":224,"author":{"gitId":"seox123"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":225,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":226,"author":{"gitId":"seox123"},"content":"            // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":227,"author":{"gitId":"seox123"},"content":"            EditItemDescriptor e \u003d (EditItemDescriptor) other;","lastModifiedDate":"2022-10-12"},{"lineNumber":228,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":229,"author":{"gitId":"seox123"},"content":"            return getDescription().equals(e.getDescription());","lastModifiedDate":"2022-10-12"},{"lineNumber":230,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":231,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":232,"author":{"gitId":"seox123"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"CFSY":11,"ciaoosuuu":45,"ningtan11":29,"seox123":147}},{"path":"src/main/java/seedu/waddle/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"ciaoosuuu":2,"-":17}},{"path":"src/main/java/seedu/waddle/logic/commands/ExportPdfCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.PdfFiller;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.StageManager;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.Stages;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":" * Export an itinerary into pdf format.","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"public class ExportPdfCommand extends Command {","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"    public static final String COMMAND_WORD \u003d \"pdf\";","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"ciaoosuuu"},"content":"            + \": export current itinerary to PDF\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"ciaoosuuu"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_EXPORT_SUCCESS \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"CFSY"},"content":"            \"Created a pdf for %1$s! Find it under Waddle in your Documents folder!\";","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String MESSAGE_EXPORT_FAILURE \u003d \"Failed to export!\";","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String MESSAGE_EXPORT_WRONG_STAGE \u003d \"Please select an itinerary before exporting.\";","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"        StageManager stageManager \u003d StageManager.getInstance();","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"        if (stageManager.isCurrentStage(Stages.HOME)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"            return new CommandResult(MESSAGE_EXPORT_WRONG_STAGE);","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"ciaoosuuu"},"content":"        Itinerary itinerary \u003d stageManager.getSelectedItinerary();","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"        try {","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"ciaoosuuu"},"content":"            String pdfTemplate \u003d \"/template/waddle_template.pdf\";","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"ciaoosuuu"},"content":"            PdfFiller pdfFiller \u003d new PdfFiller(itinerary, pdfTemplate);","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"ciaoosuuu"},"content":"            pdfFiller.fillItinerary();","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"ciaoosuuu"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"ciaoosuuu"},"content":"            return new CommandResult(MESSAGE_EXPORT_FAILURE);","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"CFSY"},"content":"        return new CommandResult(String.format(MESSAGE_EXPORT_SUCCESS, itinerary.getDescription()));","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"ciaoosuuu"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"ciaoosuuu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"ciaoosuuu"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"ciaoosuuu"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"ciaoosuuu"},"content":"            return true;","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"ciaoosuuu"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"CFSY"},"content":"        return other instanceof ExportPdfCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"ciaoosuuu":54,"CFSY":6}},{"path":"src/main/java/seedu/waddle/logic/commands/ExportTextCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CFSY"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":"import static seedu.waddle.commons.core.Messages.MESSAGE_COPY_ERROR;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"import java.awt.AWTError;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"import java.awt.HeadlessException;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"import java.awt.Toolkit;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":"import java.awt.datatransfer.Clipboard;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":"import java.awt.datatransfer.StringSelection;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.logic.StageManager;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"CFSY"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"CFSY"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"public class ExportTextCommand extends Command {","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"    public static final String COMMAND_WORD \u003d \"copy\";","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"%1$s copied to clipboard!\";","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"CFSY"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"CFSY"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"CFSY"},"content":"        Itinerary selectedItinerary \u003d StageManager.getInstance().getSelectedItinerary();","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"        String itineraryText \u003d selectedItinerary.getTextRepresentation();","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"CFSY"},"content":"        StringSelection stringSelection \u003d new StringSelection(itineraryText);","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"CFSY"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"CFSY"},"content":"            Clipboard clipboard \u003d Toolkit.getDefaultToolkit().getSystemClipboard();","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"CFSY"},"content":"            clipboard.setContents(stringSelection, null);","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"CFSY"},"content":"        } catch (IllegalStateException | AWTError | HeadlessException e) {","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"CFSY"},"content":"            throw new CommandException(MESSAGE_COPY_ERROR);","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"CFSY"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, selectedItinerary.getDescription()));","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"CFSY"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"CFSY":42}},{"path":"src/main/java/seedu/waddle/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all itineraries whose names contain any of \"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"ciaoosuuu"},"content":"            + \"Example: \" + COMMAND_WORD + \" summer\";","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"        model.updateFilteredItineraryList(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"CFSY"},"content":"                String.format(Messages.MESSAGE_ITINERARIES_LISTED_OVERVIEW, model.getFilteredItineraryList().size()));","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"ciaoosuuu":6,"CFSY":2,"-":34}},{"path":"src/main/java/seedu/waddle/logic/commands/FreeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CFSY"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.logic.StageManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"CFSY"},"content":"public class FreeCommand extends Command {","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"CFSY"},"content":"    public static final String COMMAND_WORD \u003d \"free\";","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"CFSY"},"content":"        return new CommandResult(StageManager.getInstance().getSelectedItinerary().getVacantSlots());","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"CFSY":20}},{"path":"src/main/java/seedu/waddle/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ciaoosuuu":2,"-":19}},{"path":"src/main/java/seedu/waddle/logic/commands/HomeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CFSY"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.logic.StageManager;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.logic.Stages;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"CFSY"},"content":"public class HomeCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"CFSY"},"content":"    public static final String COMMAND_WORD \u003d \"home\";","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"            + \": returns to the home page\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_HOME_SUCCESS \u003d \"Waddled back to the home page\";","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_ALREADY_HOME_SUCCESS \u003d \"Already waddling in the home page\";","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"CFSY"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"CFSY"},"content":"        StageManager stageManager \u003d StageManager.getInstance();","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"        // if already at home page, do nothing and tell user","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"CFSY"},"content":"        if (stageManager.isCurrentStage(Stages.HOME)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"CFSY"},"content":"            return new CommandResult(MESSAGE_ALREADY_HOME_SUCCESS);","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"CFSY"},"content":"        // change to home stage in stage manager","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"CFSY"},"content":"        stageManager.setHomeStage();","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"CFSY"},"content":"        // return command result with HOME stage change","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"CFSY"},"content":"        return new CommandResult(MESSAGE_HOME_SUCCESS, Stages.HOME);","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"CFSY"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"CFSY"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"CFSY"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"CFSY"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"CFSY"},"content":"            return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"CFSY"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"CFSY"},"content":"        return other instanceof HomeCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"CFSY"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"CFSY":50}},{"path":"src/main/java/seedu/waddle/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":"import static seedu.waddle.model.Model.PREDICATE_SHOW_ALL_ITINERARIES;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all itineraries\";","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"CFSY"},"content":"        model.updateFilteredItineraryList(PREDICATE_SHOW_ALL_ITINERARIES);","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ciaoosuuu":3,"CFSY":2,"-":19}},{"path":"src/main/java/seedu/waddle/logic/commands/PlanCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_DAY_NUMBER;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"seox123"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"seox123"},"content":"import seedu.waddle.commons.core.index.Index;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.StageManager;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.item.Item;","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.itinerary.DayNumber;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"seox123"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"seox123"},"content":" * Plans an item in the itinerary wish list.","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"seox123"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"seox123"},"content":"public class PlanCommand extends Command {","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"seox123"},"content":"    public static final String COMMAND_WORD \u003d \"plan\";","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"seox123"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Schedules an item identified \"","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"seox123"},"content":"            + \"by the index number used in the item list.\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"seox123"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"seox123"},"content":"            + \"[\" + PREFIX_DAY_NUMBER + \"DAY NUMBER] \"","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"seox123"},"content":"            + \"[\" + PREFIX_START_TIME + \"START TIME] \"","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"seox123"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"seox123"},"content":"            + PREFIX_DAY_NUMBER + \"1 \"","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"seox123"},"content":"            + PREFIX_START_TIME + \"12:00 \";","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"seox123"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Item scheduled: %1$s\";","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"seox123"},"content":"    public static final String MESSAGE_INVALID_DAY_NUMBER \u003d \"The day you have selected does not exist\";","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"seox123"},"content":"    private final Index itemIndex;","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"seox123"},"content":"    private final DayNumber dayNumber;","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"seox123"},"content":"    private final LocalTime startTime;","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"seox123"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"seox123"},"content":"     * Creates a PlanCommand to add the specified {@code Item}","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"seox123"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"seox123"},"content":"    public PlanCommand(Index itemIndex, DayNumber dayNumber, LocalTime startTime) {","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"seox123"},"content":"        requireNonNull(itemIndex);","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"seox123"},"content":"        requireNonNull(dayNumber);","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"seox123"},"content":"        requireNonNull(startTime);","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"seox123"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"seox123"},"content":"        this.dayNumber \u003d dayNumber;","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"seox123"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"seox123"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"seox123"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"seox123"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"seox123"},"content":"        StageManager stageManager \u003d StageManager.getInstance();","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"seox123"},"content":"        Itinerary itinerary \u003d stageManager.getSelectedItinerary();","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"seox123"},"content":"        Item plannedItem;","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"seox123"},"content":"        try {","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"seox123"},"content":"            plannedItem \u003d itinerary.planItem(itemIndex, dayNumber, startTime);","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"seox123"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"seox123"},"content":"            throw new CommandException(MESSAGE_INVALID_DAY_NUMBER);","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"seox123"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, plannedItem.getDescription()));","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"seox123"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"seox123"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"seox123"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"seox123"},"content":"                || (other instanceof PlanCommand // instanceof handles nulls","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"seox123"},"content":"                \u0026\u0026 itemIndex.equals(((PlanCommand) other).itemIndex)","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"seox123"},"content":"                \u0026\u0026 dayNumber \u003d\u003d ((PlanCommand) other).dayNumber","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"seox123"},"content":"                \u0026\u0026 startTime.equals(((PlanCommand) other).startTime));","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"seox123"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"seox123":79}},{"path":"src/main/java/seedu/waddle/logic/commands/SelectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CFSY"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"import static seedu.waddle.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.commons.core.Messages;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.logic.StageManager;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.logic.Stages;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"CFSY"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"CFSY"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"public class SelectCommand extends Command {","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"    public static final String COMMAND_WORD \u003d \"select\";","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"CFSY"},"content":"            + \": selects an itinerary for planning \"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"            + \"by the index number used in the last itineraries listing.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"CFSY"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \";","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d\";","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_SELECT_ITINERARY_SUCCESS \u003d \"Selected Itinerary: %1$s\";","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"CFSY"},"content":"    private final Index index;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"CFSY"},"content":"     * @param index of the itinerary to select","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"CFSY"},"content":"    public SelectCommand(Index index) {","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"CFSY"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"CFSY"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"CFSY"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"CFSY"},"content":"        StageManager stageManager \u003d StageManager.getInstance();","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"CFSY"},"content":"        Itinerary selectedItinerary;","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"CFSY"},"content":"        // get the selected itinerary from the last shown list of itineraries","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"CFSY"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"CFSY"},"content":"            selectedItinerary \u003d model.getFilteredItineraryList().get(this.index.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"CFSY"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"CFSY"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ITINERARY_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"CFSY"},"content":"        // change to wish stage in stage manager","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"CFSY"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"CFSY"},"content":"            stageManager.setWishStage(selectedItinerary);","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"CFSY"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"CFSY"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ITINERARY_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"CFSY"},"content":"        //TODO: allow users to directly select which planning stage","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"CFSY"},"content":"        // instead of going to wish stage by default","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"CFSY"},"content":"        // return command result with stage change to wish by default for now (refer above)","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"CFSY"},"content":"        return new CommandResult(String.format(MESSAGE_SELECT_ITINERARY_SUCCESS, selectedItinerary.getDescription()),","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"CFSY"},"content":"                Stages.WISH);","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"CFSY"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"CFSY"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"CFSY"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"CFSY"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"CFSY"},"content":"            return true;","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"CFSY"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"CFSY"},"content":"        if (!(other instanceof SelectCommand)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":71,"author":{"gitId":"CFSY"},"content":"            return false;","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"CFSY"},"content":"        // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"CFSY"},"content":"        SelectCommand e \u003d (SelectCommand) other;","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"CFSY"},"content":"        return index.equals(e.index);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"CFSY"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"CFSY":78}},{"path":"src/main/java/seedu/waddle/logic/commands/UnplanCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"seox123"},"content":"import seedu.waddle.commons.core.index.MultiIndex;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.StageManager;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.item.Item;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"seox123"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"seox123"},"content":" * Unplans an item in the itinerary day list.","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"seox123"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"seox123"},"content":"public class UnplanCommand extends Command {","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"seox123"},"content":"    public static final String COMMAND_WORD \u003d \"unplan\";","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"seox123"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Unschedules an item identified \"","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"seox123"},"content":"            + \"by the index number used in the day list.\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"seox123"},"content":"            + \"Parameters: DAY_INDEX.TASK_INDEX (must be an existing index) \"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"seox123"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1.2 \";","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"seox123"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Item unscheduled: %1$s\";","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"seox123"},"content":"    public static final String MESSAGE_INVALID_INDEX_NUMBER \u003d \"The index you have selected does not exist\";","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"seox123"},"content":"    private final MultiIndex multiIndex;","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"seox123"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"seox123"},"content":"     * Creates an UnplanCommand to add the specified {@code Item}","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"seox123"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"seox123"},"content":"    public UnplanCommand(MultiIndex multiIndex) {","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"seox123"},"content":"        requireNonNull(multiIndex);","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"seox123"},"content":"        this.multiIndex \u003d multiIndex;","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"seox123"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"seox123"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"seox123"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"seox123"},"content":"        StageManager stageManager \u003d StageManager.getInstance();","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"seox123"},"content":"        Itinerary itinerary \u003d stageManager.getSelectedItinerary();","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"seox123"},"content":"        Item unplannedItem;","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"seox123"},"content":"        try {","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"seox123"},"content":"            unplannedItem \u003d itinerary.unplanItem(multiIndex);","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"seox123"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"seox123"},"content":"            throw new CommandException(MESSAGE_INVALID_INDEX_NUMBER);","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"seox123"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, unplannedItem.getDescription()));","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"seox123"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"seox123"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"seox123"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"seox123"},"content":"                || (other instanceof UnplanCommand // instanceof handles nulls","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"seox123"},"content":"                \u0026\u0026 multiIndex.equals(((UnplanCommand) other).multiIndex));","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"seox123"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"seox123":62}},{"path":"src/main/java/seedu/waddle/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic.commands.exceptions;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"ciaoosuuu":1,"-":16}},{"path":"src/main/java/seedu/waddle/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_BUDGET;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_COUNTRY;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_ITINERARY_DURATION;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_PEOPLE;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_START_DATE;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.commands.AddCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Budget;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Country;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Date;","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Description;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.ItineraryDuration;","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.People;","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"ciaoosuuu"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_COUNTRY, PREFIX_START_DATE,","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"pewggls"},"content":"                        PREFIX_ITINERARY_DURATION, PREFIX_PEOPLE, PREFIX_BUDGET);","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"ciaoosuuu"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION, PREFIX_START_DATE, PREFIX_ITINERARY_DURATION)","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"ciaoosuuu"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"ciaoosuuu"},"content":"        Description name \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"ciaoosuuu"},"content":"        Date startDate \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_START_DATE).get());","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"pewggls"},"content":"        ItineraryDuration duration \u003d ParserUtil.parseItineraryDuration(","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"pewggls"},"content":"                argMultimap.getValue(PREFIX_ITINERARY_DURATION).get());","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"ciaoosuuu"},"content":"        Country country;","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"ciaoosuuu"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_COUNTRY)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"ciaoosuuu"},"content":"            country \u003d ParserUtil.parseCountry(argMultimap.getValue(PREFIX_COUNTRY).get());","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"ciaoosuuu"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"ciaoosuuu"},"content":"            country \u003d ParserUtil.parseCountry(\"default\");","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"ciaoosuuu"},"content":"        People people;","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"ciaoosuuu"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_PEOPLE)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"ciaoosuuu"},"content":"            people \u003d ParserUtil.parsePeople(argMultimap.getValue(PREFIX_PEOPLE).get());","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"ciaoosuuu"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"ciaoosuuu"},"content":"            people \u003d ParserUtil.parsePeople(\"0\");","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"ciaoosuuu"},"content":"        Budget budget;","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"ciaoosuuu"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_BUDGET)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"ciaoosuuu"},"content":"            budget \u003d ParserUtil.parseBudget(argMultimap.getValue(PREFIX_BUDGET).get());","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"ciaoosuuu"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"ciaoosuuu"},"content":"            budget \u003d ParserUtil.parseBudget(\"0\");","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"pewggls"},"content":"        Itinerary itinerary \u003d new Itinerary(name, country, startDate, duration, people, budget);","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"ciaoosuuu"},"content":"        return new AddCommand(itinerary);","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"ciaoosuuu"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"ciaoosuuu"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"ciaoosuuu"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"ciaoosuuu"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"ciaoosuuu":70,"pewggls":12}},{"path":"src/main/java/seedu/waddle/logic/parser/AddItemCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pewggls"},"content":"package seedu.waddle.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_COST;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_ITEM_DURATION;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"pewggls"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.logic.commands.AddItemCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.item.Cost;","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.item.Duration;","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.item.Item;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.item.Priority;","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Description;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"pewggls"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"pewggls"},"content":" * Parses input arguments and creates a new AddItemCommand object","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"pewggls"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"pewggls"},"content":"public class AddItemCommandParser implements Parser\u003cAddItemCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"pewggls"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"pewggls"},"content":"     * Parses the given {@code String} of arguments in the context of the AddItemCommand","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"pewggls"},"content":"     * and returns an AddItemCommand object for execution.","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"pewggls"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"pewggls"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"pewggls"},"content":"    public AddItemCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"pewggls"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"ningtan11"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_PRIORITY,","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"ningtan11"},"content":"                                           PREFIX_COST, PREFIX_ITEM_DURATION);","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"seox123"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION)","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"pewggls"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"ningtan11"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"ningtan11"},"content":"                                                   AddItemCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"pewggls"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"seox123"},"content":"        Priority priority;","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"seox123"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_PRIORITY)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"seox123"},"content":"            priority \u003d ParserUtil.parsePriority(argMultimap.getValue(PREFIX_PRIORITY).get());","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"seox123"},"content":"        } else {","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"seox123"},"content":"            priority \u003d ParserUtil.parsePriority(\"1\");","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"ningtan11"},"content":"        Cost cost;","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"ningtan11"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_COST)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"ningtan11"},"content":"            cost \u003d ParserUtil.parseCost(argMultimap.getValue(PREFIX_COST).get());","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"ningtan11"},"content":"        } else {","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"ningtan11"},"content":"            cost \u003d ParserUtil.parseCost(\"0\");","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"ningtan11"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"ningtan11"},"content":"        Duration duration;","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"ningtan11"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_ITEM_DURATION)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"ningtan11"},"content":"            duration \u003d ParserUtil.parseDuration(argMultimap.getValue(PREFIX_ITEM_DURATION).get());","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"ningtan11"},"content":"        } else {","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"ciaoosuuu"},"content":"            duration \u003d ParserUtil.parseDuration(\"0\");","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"ningtan11"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"ningtan11"},"content":"        Item item \u003d new Item(description, priority, cost, duration);","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"pewggls"},"content":"        return new AddItemCommand(item);","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"pewggls"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"pewggls"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"pewggls"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"pewggls"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"pewggls"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"pewggls"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"pewggls"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"ciaoosuuu":4,"pewggls":39,"ningtan11":22,"seox123":10}},{"path":"src/main/java/seedu/waddle/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"ciaoosuuu":1,"-":59}},{"path":"src/main/java/seedu/waddle/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"ciaoosuuu":1,"-":147}},{"path":"src/main/java/seedu/waddle/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"public class CliSyntax {","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"    /* Prefix definitions */","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"    public static final Prefix PREFIX_COUNTRY \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"    public static final Prefix PREFIX_START_DATE \u003d new Prefix(\"sd/\");","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"    public static final Prefix PREFIX_START_TIME \u003d new Prefix(\"st/\");","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"ningtan11"},"content":"    public static final Prefix PREFIX_ITINERARY_DURATION \u003d new Prefix(\"du/\");","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"    public static final Prefix PREFIX_PEOPLE \u003d new Prefix(\"p/\");","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"pewggls"},"content":"    public static final Prefix PREFIX_BUDGET \u003d new Prefix(\"b/\");","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"seox123"},"content":"    public static final Prefix PREFIX_PRIORITY \u003d new Prefix(\"p/\");","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"ningtan11"},"content":"    public static final Prefix PREFIX_COST \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"ningtan11"},"content":"    public static final Prefix PREFIX_ITEM_DURATION \u003d new Prefix(\"du/\");","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"seox123"},"content":"    public static final Prefix PREFIX_DAY_NUMBER \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"ciaoosuuu":15,"ningtan11":3,"pewggls":1,"seox123":2}},{"path":"src/main/java/seedu/waddle/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"ciaoosuuu":5,"-":24}},{"path":"src/main/java/seedu/waddle/logic/parser/DeleteItemCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic.parser;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.index.MultiIndex;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.commands.DeleteItemCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":" * Parses input arguments and creates a new AddItemCommand object","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"public class DeleteItemCommandParser implements Parser\u003cDeleteItemCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"     * Parses the given {@code String} of arguments in the context of the AddItemCommand","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"     * and returns an AddItemCommand object for execution.","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"ciaoosuuu"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"ciaoosuuu"},"content":"    public DeleteItemCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"ciaoosuuu"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"ciaoosuuu"},"content":"            MultiIndex index \u003d ParserUtil.parseMultiIndex(args);","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":"            return new DeleteItemCommand(index);","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteItemCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"ciaoosuuu":31}},{"path":"src/main/java/seedu/waddle/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_BUDGET;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_COUNTRY;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_ITINERARY_DURATION;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_PEOPLE;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_START_DATE;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.commands.EditCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"ciaoosuuu"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"ciaoosuuu"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_COUNTRY, PREFIX_START_DATE,","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"pewggls"},"content":"                        PREFIX_ITINERARY_DURATION, PREFIX_PEOPLE, PREFIX_BUDGET);","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"        Index index;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"ciaoosuuu"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"ciaoosuuu"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"ciaoosuuu"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"CFSY"},"content":"        EditCommand.EditItineraryDescriptor editItineraryDescriptor \u003d new EditCommand.EditItineraryDescriptor();","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"ciaoosuuu"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"ciaoosuuu"},"content":"            editItineraryDescriptor.setName(ParserUtil.parseDescription(","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"ciaoosuuu"},"content":"                    argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"ciaoosuuu"},"content":"        if (argMultimap.getValue(PREFIX_COUNTRY).isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"CFSY"},"content":"            editItineraryDescriptor.setCountry(ParserUtil.parseCountry(argMultimap.getValue(PREFIX_COUNTRY).get()));","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"ciaoosuuu"},"content":"        if (argMultimap.getValue(PREFIX_START_DATE).isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"CFSY"},"content":"            editItineraryDescriptor.setStartDate(ParserUtil.parseDate(argMultimap.getValue(PREFIX_START_DATE).get()));","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"pewggls"},"content":"        if (argMultimap.getValue(PREFIX_ITINERARY_DURATION).isPresent()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"pewggls"},"content":"            editItineraryDescriptor.setDuration(ParserUtil.parseItineraryDuration(","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"pewggls"},"content":"                    argMultimap.getValue(PREFIX_ITINERARY_DURATION).get()));","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"ciaoosuuu"},"content":"        if (argMultimap.getValue(PREFIX_PEOPLE).isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"CFSY"},"content":"            editItineraryDescriptor.setPeople(ParserUtil.parsePeople(argMultimap.getValue(PREFIX_PEOPLE).get()));","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"pewggls"},"content":"        if (argMultimap.getValue(PREFIX_BUDGET).isPresent()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"pewggls"},"content":"            editItineraryDescriptor.setBudget(ParserUtil.parseBudget(argMultimap.getValue(PREFIX_BUDGET).get()));","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"pewggls"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"CFSY"},"content":"        if (!editItineraryDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"ciaoosuuu"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"CFSY"},"content":"        return new EditCommand(index, editItineraryDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"ciaoosuuu":51,"CFSY":6,"pewggls":13}},{"path":"src/main/java/seedu/waddle/logic/parser/EditItemCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_COST;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_ITEM_DURATION;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.index.MultiIndex;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.commands.EditItemCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"seox123"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"seox123"},"content":" * Parses input arguments and creates a new EditItemCommand object","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"seox123"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"seox123"},"content":"public class EditItemCommandParser implements Parser\u003cEditItemCommand\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"seox123"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"seox123"},"content":"     * Parses the given {@code String} of arguments in the context of the EditItemCommand","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"seox123"},"content":"     * and returns an EditItemCommand object for execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"seox123"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"seox123"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"seox123"},"content":"    public EditItemCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"seox123"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"seox123"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"ningtan11"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_PRIORITY,","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"ningtan11"},"content":"                                           PREFIX_COST, PREFIX_ITEM_DURATION, PREFIX_START_TIME);","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"        MultiIndex multiIndex;","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"seox123"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"            multiIndex \u003d ParserUtil.parseMultiIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"seox123"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"ningtan11"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"ningtan11"},"content":"                                                   EditItemCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"seox123"},"content":"        EditItemCommand.EditItemDescriptor editItemDescriptor \u003d new EditItemCommand.EditItemDescriptor();","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"seox123"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"seox123"},"content":"            editItemDescriptor.setDescription(","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"seox123"},"content":"                    ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"ningtan11"},"content":"        if (argMultimap.getValue(PREFIX_PRIORITY).isPresent()) {","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"ningtan11"},"content":"            editItemDescriptor.setPriority(","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"ningtan11"},"content":"                    ParserUtil.parsePriority(argMultimap.getValue(PREFIX_PRIORITY).get()));","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"ningtan11"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"ningtan11"},"content":"        if (argMultimap.getValue(PREFIX_COST).isPresent()) {","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"ningtan11"},"content":"            editItemDescriptor.setCost(","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"ningtan11"},"content":"                    ParserUtil.parseCost(argMultimap.getValue(PREFIX_COST).get()));","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"ningtan11"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"ningtan11"},"content":"        if (argMultimap.getValue(PREFIX_ITEM_DURATION).isPresent()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"ningtan11"},"content":"            editItemDescriptor.setDuration(","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"ningtan11"},"content":"                    ParserUtil.parseDuration(argMultimap.getValue(PREFIX_ITEM_DURATION).get()));","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"ningtan11"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"CFSY"},"content":"        if (argMultimap.getValue(PREFIX_START_TIME).isPresent()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"ciaoosuuu"},"content":"            if (multiIndex.getDayIndex() \u003d\u003d null) {","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"ciaoosuuu"},"content":"                throw new ParseException(EditItemCommand.MESSAGE_EDIT_START_TIME);","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"ciaoosuuu"},"content":"            }","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"CFSY"},"content":"            editItemDescriptor.setStartTime(","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"CFSY"},"content":"                    ParserUtil.parseStartTime(argMultimap.getValue(PREFIX_START_TIME).get()));","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"seox123"},"content":"        if (!editItemDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"seox123"},"content":"            throw new ParseException(EditItemCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"ciaoosuuu"},"content":"        return new EditItemCommand(multiIndex, editItemDescriptor);","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"seox123"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"CFSY":6,"ciaoosuuu":7,"ningtan11":22,"seox123":41}},{"path":"src/main/java/seedu/waddle/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.commands.FindCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"ciaoosuuu":5,"-":28}},{"path":"src/main/java/seedu/waddle/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.commands.Command;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"ciaoosuuu":3,"-":13}},{"path":"src/main/java/seedu/waddle/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.index.MultiIndex;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.util.StringUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.item.Cost;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.item.Duration;","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.item.Priority;","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Budget;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Country;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Date;","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.itinerary.DayNumber;","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Description;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.ItineraryDuration;","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.People;","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"public class ParserUtil {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"     * trimmed.","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"ciaoosuuu"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"ciaoosuuu"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"ciaoosuuu"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"ciaoosuuu"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"ciaoosuuu"},"content":"     * Parses {@code oneBasedMultiIndex} into an {@code MultiIndex} and returns it. Leading and trailing whitespaces","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"ciaoosuuu"},"content":"     * will be trimmed.","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"ciaoosuuu"},"content":"     * @throws ParseException if the specified MultiIndex is invalid (not non-zero unsigned integer).","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"ciaoosuuu"},"content":"    public static MultiIndex parseMultiIndex(String oneBasedMultiIndex) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"ciaoosuuu"},"content":"        String trimmedMultiIndex \u003d oneBasedMultiIndex.trim();","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"seox123"},"content":"        if (!MultiIndex.isValidMultiIndex(trimmedMultiIndex)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"seox123"},"content":"            throw new ParseException(MultiIndex.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"seox123"},"content":"        String[] oneBasedIndexList \u003d trimmedMultiIndex.split(\"\\\\.\", 2);","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"ciaoosuuu"},"content":"        MultiIndex multiIndex \u003d new MultiIndex();","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"ciaoosuuu"},"content":"        for (String oneBasedIndex : oneBasedIndexList) {","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"ciaoosuuu"},"content":"            Index index \u003d parseIndex(oneBasedIndex);","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"ciaoosuuu"},"content":"            multiIndex.addIndex(index);","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"ciaoosuuu"},"content":"        return multiIndex;","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"ciaoosuuu"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"ciaoosuuu"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"ciaoosuuu"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"ciaoosuuu"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"ciaoosuuu"},"content":"    public static Description parseDescription(String name) throws ParseException {","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"ciaoosuuu"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"ciaoosuuu"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"ciaoosuuu"},"content":"        if (!Description.isValidDescription(trimmedName)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"ciaoosuuu"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"ciaoosuuu"},"content":"        return new Description(trimmedName);","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"ciaoosuuu"},"content":"     * Parses a {@code String country} into a {@code Country}.","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"ciaoosuuu"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"ciaoosuuu"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"ciaoosuuu"},"content":"     * @throws ParseException if the given {@code country} is invalid.","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"ciaoosuuu"},"content":"    public static Country parseCountry(String country) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"ciaoosuuu"},"content":"        requireNonNull(country);","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"ciaoosuuu"},"content":"        String trimmedCountry \u003d country.trim();","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"ciaoosuuu"},"content":"        if (!Country.isValidCountry(trimmedCountry)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"ciaoosuuu"},"content":"            throw new ParseException(Country.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"ciaoosuuu"},"content":"        return new Country(trimmedCountry);","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"ciaoosuuu"},"content":"     * Parses a {@code String date} into an {@code Date}.","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"ciaoosuuu"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"ciaoosuuu"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"ciaoosuuu"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"ciaoosuuu"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"ciaoosuuu"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"ciaoosuuu"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"ciaoosuuu"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"ciaoosuuu"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"ciaoosuuu"},"content":"        return new Date(trimmedDate);","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"pewggls"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"pewggls"},"content":"     * Parses a {@code String duration} into an {@code ItineraryDuration}.","lastModifiedDate":"2022-10-21"},{"lineNumber":111,"author":{"gitId":"pewggls"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-21"},{"lineNumber":112,"author":{"gitId":"pewggls"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":113,"author":{"gitId":"pewggls"},"content":"     * @throws ParseException if the given {@code duration} is invalid.","lastModifiedDate":"2022-10-21"},{"lineNumber":114,"author":{"gitId":"pewggls"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":115,"author":{"gitId":"pewggls"},"content":"    public static ItineraryDuration parseItineraryDuration(String duration) throws ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":116,"author":{"gitId":"pewggls"},"content":"        requireNonNull(duration);","lastModifiedDate":"2022-10-21"},{"lineNumber":117,"author":{"gitId":"pewggls"},"content":"        String trimmedDuration \u003d duration.trim();","lastModifiedDate":"2022-10-21"},{"lineNumber":118,"author":{"gitId":"pewggls"},"content":"        if (!ItineraryDuration.isValidDuration(trimmedDuration)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":119,"author":{"gitId":"pewggls"},"content":"            throw new ParseException(ItineraryDuration.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":120,"author":{"gitId":"pewggls"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":121,"author":{"gitId":"pewggls"},"content":"        return new ItineraryDuration(trimmedDuration);","lastModifiedDate":"2022-10-21"},{"lineNumber":122,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":123,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":124,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"ciaoosuuu"},"content":"     * Parses a {@code String people} into an {@code People}.","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"ciaoosuuu"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"ciaoosuuu"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"ciaoosuuu"},"content":"     * @throws ParseException if the given {@code people} is invalid.","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"ciaoosuuu"},"content":"    public static People parsePeople(String people) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"ciaoosuuu"},"content":"        requireNonNull(people);","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"ciaoosuuu"},"content":"        String trimmedPeople \u003d people.trim();","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"ciaoosuuu"},"content":"        if (!People.isValidPeople(trimmedPeople)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"ciaoosuuu"},"content":"            throw new ParseException(People.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"ciaoosuuu"},"content":"        return new People(trimmedPeople);","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"pewggls"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":140,"author":{"gitId":"pewggls"},"content":"     * Parses a {@code String budget} into an {@code Budget}.","lastModifiedDate":"2022-10-21"},{"lineNumber":141,"author":{"gitId":"pewggls"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-21"},{"lineNumber":142,"author":{"gitId":"pewggls"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":143,"author":{"gitId":"pewggls"},"content":"     * @throws ParseException if the given {@code budget} is invalid.","lastModifiedDate":"2022-10-21"},{"lineNumber":144,"author":{"gitId":"pewggls"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":145,"author":{"gitId":"pewggls"},"content":"    public static Budget parseBudget(String budget) throws ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":146,"author":{"gitId":"pewggls"},"content":"        requireNonNull(budget);","lastModifiedDate":"2022-10-21"},{"lineNumber":147,"author":{"gitId":"pewggls"},"content":"        String trimmedBudget \u003d budget.trim();","lastModifiedDate":"2022-10-21"},{"lineNumber":148,"author":{"gitId":"pewggls"},"content":"        if (!Budget.isValidBudget(trimmedBudget)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":149,"author":{"gitId":"pewggls"},"content":"            throw new ParseException(Budget.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":150,"author":{"gitId":"pewggls"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":151,"author":{"gitId":"pewggls"},"content":"        return new Budget(trimmedBudget);","lastModifiedDate":"2022-10-21"},{"lineNumber":152,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":153,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":154,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"seox123"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":156,"author":{"gitId":"seox123"},"content":"     * Parses a {@code String priority} into a {@code Priority}.","lastModifiedDate":"2022-10-18"},{"lineNumber":157,"author":{"gitId":"seox123"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-18"},{"lineNumber":158,"author":{"gitId":"seox123"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":159,"author":{"gitId":"seox123"},"content":"     * @throws ParseException if the given {@code priority} is invalid.","lastModifiedDate":"2022-10-18"},{"lineNumber":160,"author":{"gitId":"seox123"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":161,"author":{"gitId":"seox123"},"content":"    public static Priority parsePriority(String priority) throws ParseException {","lastModifiedDate":"2022-10-18"},{"lineNumber":162,"author":{"gitId":"seox123"},"content":"        requireNonNull(priority);","lastModifiedDate":"2022-10-18"},{"lineNumber":163,"author":{"gitId":"seox123"},"content":"        String trimmedPriority \u003d priority.trim();","lastModifiedDate":"2022-10-18"},{"lineNumber":164,"author":{"gitId":"CFSY"},"content":"        Integer stars \u003d Integer.parseInt(trimmedPriority);","lastModifiedDate":"2022-10-25"},{"lineNumber":165,"author":{"gitId":"CFSY"},"content":"        if (!Priority.isValidPriority(stars)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":166,"author":{"gitId":"seox123"},"content":"            throw new ParseException(Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-18"},{"lineNumber":167,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":168,"author":{"gitId":"CFSY"},"content":"        return new Priority(stars);","lastModifiedDate":"2022-10-25"},{"lineNumber":169,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":170,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":171,"author":{"gitId":"ningtan11"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":172,"author":{"gitId":"ningtan11"},"content":"     * Parses a {@code String cost} into a {@code Cost}.","lastModifiedDate":"2022-10-19"},{"lineNumber":173,"author":{"gitId":"ningtan11"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-19"},{"lineNumber":174,"author":{"gitId":"ningtan11"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":175,"author":{"gitId":"ningtan11"},"content":"     * @throws ParseException if the given {@code cost} is invalid.","lastModifiedDate":"2022-10-19"},{"lineNumber":176,"author":{"gitId":"ningtan11"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":177,"author":{"gitId":"ningtan11"},"content":"    public static Cost parseCost(String cost) throws ParseException {","lastModifiedDate":"2022-10-19"},{"lineNumber":178,"author":{"gitId":"ningtan11"},"content":"        requireNonNull(cost);","lastModifiedDate":"2022-10-19"},{"lineNumber":179,"author":{"gitId":"ningtan11"},"content":"        String trimmedCost \u003d cost.trim();","lastModifiedDate":"2022-10-19"},{"lineNumber":180,"author":{"gitId":"ningtan11"},"content":"        if (!Cost.isValidCost(trimmedCost)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":181,"author":{"gitId":"ningtan11"},"content":"            throw new ParseException(Cost.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":182,"author":{"gitId":"ningtan11"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":183,"author":{"gitId":"ningtan11"},"content":"        return new Cost(trimmedCost);","lastModifiedDate":"2022-10-19"},{"lineNumber":184,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":185,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":186,"author":{"gitId":"ningtan11"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":187,"author":{"gitId":"ningtan11"},"content":"     * Parses a {@code String duration} into a {@code Duration}.","lastModifiedDate":"2022-10-19"},{"lineNumber":188,"author":{"gitId":"ningtan11"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-19"},{"lineNumber":189,"author":{"gitId":"ningtan11"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":190,"author":{"gitId":"ningtan11"},"content":"     * @throws ParseException if the given {@code duration} is invalid.","lastModifiedDate":"2022-10-19"},{"lineNumber":191,"author":{"gitId":"ningtan11"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":192,"author":{"gitId":"ningtan11"},"content":"    public static Duration parseDuration(String duration) throws ParseException {","lastModifiedDate":"2022-10-19"},{"lineNumber":193,"author":{"gitId":"ningtan11"},"content":"        requireNonNull(duration);","lastModifiedDate":"2022-10-19"},{"lineNumber":194,"author":{"gitId":"ningtan11"},"content":"        String trimmedDuration \u003d duration.trim();","lastModifiedDate":"2022-10-19"},{"lineNumber":195,"author":{"gitId":"ningtan11"},"content":"        if (!Duration.isValidDuration(trimmedDuration)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":196,"author":{"gitId":"ningtan11"},"content":"            throw new ParseException(Duration.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":197,"author":{"gitId":"ningtan11"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":198,"author":{"gitId":"ningtan11"},"content":"        return new Duration(trimmedDuration);","lastModifiedDate":"2022-10-19"},{"lineNumber":199,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":200,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":201,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":202,"author":{"gitId":"ciaoosuuu"},"content":"     * Parses a {@code int Day Number}.","lastModifiedDate":"2022-10-25"},{"lineNumber":203,"author":{"gitId":"ciaoosuuu"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-25"},{"lineNumber":204,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":205,"author":{"gitId":"ciaoosuuu"},"content":"    public static DayNumber parseDayNumber(String dayNumber) throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":206,"author":{"gitId":"ciaoosuuu"},"content":"        requireNonNull(dayNumber);","lastModifiedDate":"2022-10-25"},{"lineNumber":207,"author":{"gitId":"ciaoosuuu"},"content":"        String trimmedDayNumber \u003d dayNumber.trim();","lastModifiedDate":"2022-10-25"},{"lineNumber":208,"author":{"gitId":"ciaoosuuu"},"content":"        if (!DayNumber.isValidDayNumber(trimmedDayNumber)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":209,"author":{"gitId":"ciaoosuuu"},"content":"            throw new ParseException(DayNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-25"},{"lineNumber":210,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":211,"author":{"gitId":"ciaoosuuu"},"content":"        return new DayNumber(trimmedDayNumber);","lastModifiedDate":"2022-10-25"},{"lineNumber":212,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":213,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":214,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":215,"author":{"gitId":"CFSY"},"content":"     * Parses a {@code String startTime} into a {@code StartTime}.","lastModifiedDate":"2022-10-23"},{"lineNumber":216,"author":{"gitId":"CFSY"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-23"},{"lineNumber":217,"author":{"gitId":"CFSY"},"content":"     *","lastModifiedDate":"2022-10-23"},{"lineNumber":218,"author":{"gitId":"CFSY"},"content":"     * @throws ParseException if the given {@code startTime} is invalid.","lastModifiedDate":"2022-10-23"},{"lineNumber":219,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":220,"author":{"gitId":"ciaoosuuu"},"content":"    public static LocalTime parseStartTime(String startTime) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":221,"author":{"gitId":"CFSY"},"content":"        requireNonNull(startTime);","lastModifiedDate":"2022-10-23"},{"lineNumber":222,"author":{"gitId":"CFSY"},"content":"        String trimmedStartTime \u003d startTime.trim();","lastModifiedDate":"2022-10-23"},{"lineNumber":223,"author":{"gitId":"ciaoosuuu"},"content":"        LocalTime time;","lastModifiedDate":"2022-10-23"},{"lineNumber":224,"author":{"gitId":"ciaoosuuu"},"content":"        try {","lastModifiedDate":"2022-10-23"},{"lineNumber":225,"author":{"gitId":"ciaoosuuu"},"content":"            time \u003d LocalTime.parse(startTime);","lastModifiedDate":"2022-10-23"},{"lineNumber":226,"author":{"gitId":"ciaoosuuu"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-23"},{"lineNumber":227,"author":{"gitId":"ciaoosuuu"},"content":"            throw new ParseException(\"Start time should be written in HH:MM:SS format. For example, 10:15 or 10:15:30\");","lastModifiedDate":"2022-10-23"},{"lineNumber":228,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":229,"author":{"gitId":"ciaoosuuu"},"content":"        return time;","lastModifiedDate":"2022-10-23"},{"lineNumber":230,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":231,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":232,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"ciaoosuuu":130,"CFSY":14,"ningtan11":32,"pewggls":37,"seox123":19}},{"path":"src/main/java/seedu/waddle/logic/parser/PlanCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.logic.parser;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_DAY_NUMBER;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"seox123"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"seox123"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"seox123"},"content":"import seedu.waddle.commons.core.index.Index;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.commands.PlanCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.itinerary.DayNumber;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"seox123"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"seox123"},"content":" * Parses input arguments and creates a new PlanCommand object","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"seox123"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"seox123"},"content":"public class PlanCommandParser {","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"seox123"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"seox123"},"content":"     * Parses the given {@code String} of arguments in the context of the PlanCommand","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"seox123"},"content":"     * and returns a PlanCommand object for execution.","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"seox123"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"seox123"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"seox123"},"content":"    public PlanCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"seox123"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"seox123"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"seox123"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DAY_NUMBER, PREFIX_START_TIME);","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"seox123"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DAY_NUMBER, PREFIX_START_TIME)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"seox123"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"seox123"},"content":"                                                   PlanCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"seox123"},"content":"        Index index;","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"seox123"},"content":"        try {","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"seox123"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"seox123"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"seox123"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, PlanCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"seox123"},"content":"        DayNumber dayNumber \u003d ParserUtil.parseDayNumber(argMultimap.getValue(PREFIX_DAY_NUMBER).get());","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"seox123"},"content":"        LocalTime startTime \u003d ParserUtil.parseStartTime(argMultimap.getValue(PREFIX_START_TIME).get());","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"seox123"},"content":"        return new PlanCommand(index, dayNumber, startTime);","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"seox123"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"seox123"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"seox123"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"seox123"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"seox123"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"seox123"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"seox123"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"seox123":56}},{"path":"src/main/java/seedu/waddle/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"ciaoosuuu":1,"-":38}},{"path":"src/main/java/seedu/waddle/logic/parser/SelectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CFSY"},"content":"package seedu.waddle.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":"import static seedu.waddle.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.logic.commands.SelectCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"CFSY"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"seox123"},"content":" * Parses input arguments and creates a new SelectCommand object","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"CFSY"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"seox123"},"content":"public class SelectCommandParser {","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"seox123"},"content":"     * Parses the given {@code String} of arguments in the context of the SelectCommand","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"seox123"},"content":"     * and returns a SelectCommand object for execution.","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"CFSY"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"seox123"},"content":"     * @param args Arguments","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"seox123"},"content":"     * @return SelectCommand","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"seox123"},"content":"     * @throws ParseException If the user input does not conform to the expected format","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"    public SelectCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"CFSY"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"CFSY"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"        Index index;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"CFSY"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"CFSY"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"CFSY"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"CFSY"},"content":"                    SelectCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"CFSY"},"content":"        return new SelectCommand(index);","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"CFSY"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"CFSY":31,"seox123":7}},{"path":"src/main/java/seedu/waddle/logic/parser/UnplanCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.logic.parser;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"seox123"},"content":"import seedu.waddle.commons.core.index.MultiIndex;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.commands.UnplanCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"seox123"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"seox123"},"content":" * Parses input arguments and creates a new UnplanCommand object","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"seox123"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"seox123"},"content":"public class UnplanCommandParser {","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"seox123"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"seox123"},"content":"     * Parses the given {@code String} of arguments in the context of the UnplanCommand","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"seox123"},"content":"     * and returns an UnplanCommand object for execution.","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"seox123"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"seox123"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"seox123"},"content":"    public UnplanCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"seox123"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"seox123"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"seox123"},"content":"        MultiIndex multiIndex \u003d ParserUtil.parseMultiIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"seox123"},"content":"        return new UnplanCommand(multiIndex);","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"seox123"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"seox123":27}},{"path":"src/main/java/seedu/waddle/logic/parser/WaddleParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"import static seedu.waddle.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":"import static seedu.waddle.commons.core.Messages.MESSAGE_UNAVAILABLE_COMMAND_HOME;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":"import static seedu.waddle.commons.core.Messages.MESSAGE_UNAVAILABLE_COMMAND_ITINERARY;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"import static seedu.waddle.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"import static seedu.waddle.commons.core.Messages.MESSAGE_UNKNOWN_STAGE;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.logic.StageManager;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.logic.Stages;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.logic.commands.AddCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.logic.commands.AddItemCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.logic.commands.Command;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.commands.DeleteItemCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.logic.commands.EditCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.commands.EditItemCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.logic.commands.ExportPdfCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.logic.commands.ExportTextCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.logic.commands.FindCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.logic.commands.FreeCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.logic.commands.HomeCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.logic.commands.ListCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.commands.PlanCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.logic.commands.SelectCommand;","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.commands.UnplanCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"CFSY"},"content":"public class WaddleParser {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"CFSY"},"content":"        Stages currStage \u003d StageManager.getInstance().getCurrentStage();","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"CFSY"},"content":"        switch (currStage) {","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"CFSY"},"content":"        case HOME:","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"CFSY"},"content":"            return parseHomeCommand(commandWord, arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"CFSY"},"content":"        case WISH:","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"CFSY"},"content":"            return parseWishCommand(commandWord, arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"CFSY"},"content":"        default:","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"CFSY"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_STAGE);","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"CFSY"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"CFSY"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"CFSY"},"content":"     * @param commandWord The command word.","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"CFSY"},"content":"     * @param arguments The arguments.","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"CFSY"},"content":"     * @return The command.","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"CFSY"},"content":"     * @throws ParseException ParseException.","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"CFSY"},"content":"    public Command parseHomeCommand(String commandWord, String arguments) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"CFSY"},"content":"        case SelectCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-23"},{"lineNumber":103,"author":{"gitId":"seox123"},"content":"            return new SelectCommandParser().parse(arguments);","lastModifiedDate":"2022-10-23"},{"lineNumber":104,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"CFSY"},"content":"        case HomeCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"CFSY"},"content":"            return new HomeCommand();","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"CFSY"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"CFSY"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"CFSY"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"CFSY"},"content":"            return new HelpCommand();","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"CFSY"},"content":"        case PlanCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":116,"author":{"gitId":"CFSY"},"content":"        case UnplanCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"CFSY"},"content":"        case FreeCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"CFSY"},"content":"        case ExportPdfCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"CFSY"},"content":"        case ExportTextCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"CFSY"},"content":"            throw new ParseException(MESSAGE_UNAVAILABLE_COMMAND_HOME);","lastModifiedDate":"2022-10-26"},{"lineNumber":124,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":125,"author":{"gitId":"CFSY"},"content":"        default:","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"CFSY"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"CFSY"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"CFSY"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"CFSY"},"content":"     * @param commandWord The command word.","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"CFSY"},"content":"     * @param arguments The arguments.","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"CFSY"},"content":"     * @return The command.","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"CFSY"},"content":"     * @throws ParseException ParseException.","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"CFSY"},"content":"    public Command parseWishCommand(String commandWord, String arguments) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"CFSY"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"CFSY"},"content":"        case HomeCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"CFSY"},"content":"            return new HomeCommand();","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"CFSY"},"content":"        case FreeCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-26"},{"lineNumber":148,"author":{"gitId":"CFSY"},"content":"            return new FreeCommand();","lastModifiedDate":"2022-10-26"},{"lineNumber":149,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":150,"author":{"gitId":"pewggls"},"content":"        case AddItemCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"pewggls"},"content":"            return new AddItemCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"seox123"},"content":"        case EditItemCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"seox123"},"content":"            return new EditItemCommandParser().parse(arguments);","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"ciaoosuuu"},"content":"        case DeleteItemCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"ciaoosuuu"},"content":"            return new DeleteItemCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"seox123"},"content":"        case PlanCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-24"},{"lineNumber":160,"author":{"gitId":"seox123"},"content":"            return new PlanCommandParser().parse(arguments);","lastModifiedDate":"2022-10-24"},{"lineNumber":161,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":162,"author":{"gitId":"seox123"},"content":"        case UnplanCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-24"},{"lineNumber":163,"author":{"gitId":"seox123"},"content":"            return new UnplanCommandParser().parse(arguments);","lastModifiedDate":"2022-10-24"},{"lineNumber":164,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":165,"author":{"gitId":"CFSY"},"content":"        //TODO: help commands must change here","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":169,"author":{"gitId":"CFSY"},"content":"        case ExportPdfCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":170,"author":{"gitId":"CFSY"},"content":"            return new ExportPdfCommand();","lastModifiedDate":"2022-10-27"},{"lineNumber":171,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":172,"author":{"gitId":"CFSY"},"content":"        case ExportTextCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":173,"author":{"gitId":"CFSY"},"content":"            return new ExportTextCommand();","lastModifiedDate":"2022-10-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":175,"author":{"gitId":"CFSY"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-26"},{"lineNumber":176,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"CFSY"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"CFSY"},"content":"        case SelectCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-26"},{"lineNumber":180,"author":{"gitId":"CFSY"},"content":"            throw new ParseException(MESSAGE_UNAVAILABLE_COMMAND_ITINERARY);","lastModifiedDate":"2022-10-26"},{"lineNumber":181,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ciaoosuuu":8,"CFSY":91,"pewggls":14,"-":60,"seox123":13}},{"path":"src/main/java/seedu/waddle/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.logic.parser.exceptions;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"ciaoosuuu":2,"-":15}},{"path":"src/main/java/seedu/waddle/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"    Predicate\u003cItinerary\u003e PREDICATE_SHOW_ALL_ITINERARIES \u003d unused -\u003e true;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"CFSY"},"content":"    Path getWaddleFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"CFSY"},"content":"    void setWaddleFilePath(Path addressBookFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"CFSY"},"content":"    void setWaddle(ReadOnlyWaddle waddle);","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"CFSY"},"content":"    ReadOnlyWaddle getWaddle();","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"CFSY"},"content":"    boolean hasItinerary(Itinerary itinerary);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"CFSY"},"content":"    void deleteItinerary(Itinerary target);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"CFSY"},"content":"    void addItinerary(Itinerary itinerary);","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"CFSY"},"content":"    void setItinerary(Itinerary target, Itinerary editedItinerary);","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":80,"author":{"gitId":"CFSY"},"content":"    ObservableList\u003cItinerary\u003e getFilteredItineraryList();","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"CFSY"},"content":"    void updateFilteredItineraryList(Predicate\u003cItinerary\u003e predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ciaoosuuu":3,"CFSY":11,"-":73}},{"path":"src/main/java/seedu/waddle/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"    private final Waddle waddle;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"    private final FilteredList\u003cItinerary\u003e filteredItineraries;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"CFSY"},"content":"    public ModelManager(ReadOnlyWaddle waddle, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"CFSY"},"content":"        requireAllNonNull(waddle, userPrefs);","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"CFSY"},"content":"        logger.fine(\"Initializing with address book: \" + waddle + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"CFSY"},"content":"        this.waddle \u003d new Waddle(waddle);","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"CFSY"},"content":"        filteredItineraries \u003d new FilteredList\u003c\u003e(this.waddle.getItineraryList());","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"CFSY"},"content":"        this(new Waddle(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"CFSY"},"content":"    public Path getWaddleFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"CFSY"},"content":"        return userPrefs.getWaddleFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"CFSY"},"content":"    public void setWaddleFilePath(Path waddleFilePath) {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"CFSY"},"content":"        requireNonNull(waddleFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"CFSY"},"content":"        userPrefs.setWaddleFilePath(waddleFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"CFSY"},"content":"    public void setWaddle(ReadOnlyWaddle waddle) {","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"CFSY"},"content":"        this.waddle.resetData(waddle);","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"CFSY"},"content":"    public ReadOnlyWaddle getWaddle() {","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"CFSY"},"content":"        return waddle;","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"CFSY"},"content":"    public boolean hasItinerary(Itinerary itinerary) {","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"ciaoosuuu"},"content":"        requireNonNull(itinerary);","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"CFSY"},"content":"        return waddle.hasItinerary(itinerary);","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"CFSY"},"content":"    public void deleteItinerary(Itinerary target) {","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"CFSY"},"content":"        waddle.removeItinerary(target);","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"CFSY"},"content":"    public void addItinerary(Itinerary itinerary) {","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"CFSY"},"content":"        waddle.addItinerary(itinerary);","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"CFSY"},"content":"        updateFilteredItineraryList(PREDICATE_SHOW_ALL_ITINERARIES);","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"CFSY"},"content":"    public void setItinerary(Itinerary target, Itinerary editedItinerary) {","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"ciaoosuuu"},"content":"        requireAllNonNull(target, editedItinerary);","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"CFSY"},"content":"        waddle.setItinerary(target, editedItinerary);","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"CFSY"},"content":"    public ObservableList\u003cItinerary\u003e getFilteredItineraryList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"ciaoosuuu"},"content":"        return filteredItineraries;","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"CFSY"},"content":"    public void updateFilteredItineraryList(Predicate\u003cItinerary\u003e predicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"ciaoosuuu"},"content":"        filteredItineraries.setPredicate(predicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"CFSY"},"content":"        return waddle.equals(other.waddle)","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"ciaoosuuu"},"content":"                \u0026\u0026 filteredItineraries.equals(other.filteredItineraries);","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ciaoosuuu":11,"CFSY":28,"-":111}},{"path":"src/main/java/seedu/waddle/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"CFSY"},"content":"    Path getWaddleFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"ciaoosuuu":2,"CFSY":1,"-":13}},{"path":"src/main/java/seedu/waddle/model/ReadOnlyWaddle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":"public interface ReadOnlyWaddle {","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"    ObservableList\u003cItinerary\u003e getItineraryList();","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ciaoosuuu":2,"CFSY":2,"-":13}},{"path":"src/main/java/seedu/waddle/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"    private Path waddleFilePath \u003d Paths.get(\"data\" , \"waddle.json\");","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"CFSY"},"content":"        setWaddleFilePath(newUserPrefs.getWaddleFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"CFSY"},"content":"    public Path getWaddleFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"CFSY"},"content":"        return waddleFilePath;","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"CFSY"},"content":"    public void setWaddleFilePath(Path waddleFilePath) {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"CFSY"},"content":"        requireNonNull(waddleFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"CFSY"},"content":"        this.waddleFilePath \u003d waddleFilePath;","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"CFSY"},"content":"                \u0026\u0026 waddleFilePath.equals(o.waddleFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"CFSY"},"content":"        return Objects.hash(guiSettings, waddleFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"CFSY"},"content":"        sb.append(\"\\nLocal data file location : \" + waddleFilePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ciaoosuuu":2,"CFSY":10,"-":75}},{"path":"src/main/java/seedu/waddle/model/Waddle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.model;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.itinerary.UniqueItineraryList;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"public class Waddle implements ReadOnlyWaddle {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"    private final UniqueItineraryList itineraries;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"        itineraries \u003d new UniqueItineraryList();","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"CFSY"},"content":"    public Waddle() {}","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"CFSY"},"content":"    public Waddle(ReadOnlyWaddle toBeCopied) {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"CFSY"},"content":"    public void setItineraries(List\u003cItinerary\u003e itineraries) {","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"CFSY"},"content":"        this.itineraries.setItineraries(itineraries);","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"CFSY"},"content":"    public void resetData(ReadOnlyWaddle newData) {","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"CFSY"},"content":"        setItineraries(newData.getItineraryList());","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"CFSY"},"content":"    public boolean hasItinerary(Itinerary itinerary) {","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"ciaoosuuu"},"content":"        requireNonNull(itinerary);","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"CFSY"},"content":"        return itineraries.contains(itinerary);","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"CFSY"},"content":"    public void addItinerary(Itinerary p) {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"CFSY"},"content":"        itineraries.add(p);","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"CFSY"},"content":"    public void setItinerary(Itinerary target, Itinerary editedItinerary) {","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"ciaoosuuu"},"content":"        requireNonNull(editedItinerary);","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"CFSY"},"content":"        itineraries.setItinerary(target, editedItinerary);","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"CFSY"},"content":"    public void removeItinerary(Itinerary key) {","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"CFSY"},"content":"        itineraries.remove(key);","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"CFSY"},"content":"        return itineraries.asUnmodifiableObservableList().size() + \" itineraries\";","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"CFSY"},"content":"    public ObservableList\u003cItinerary\u003e getItineraryList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"CFSY"},"content":"        return itineraries.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"CFSY"},"content":"                || (other instanceof Waddle // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"CFSY"},"content":"                \u0026\u0026 itineraries.equals(((Waddle) other).itineraries));","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"CFSY"},"content":"        return itineraries.hashCode();","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ciaoosuuu":4,"CFSY":24,"-":92}},{"path":"src/main/java/seedu/waddle/model/item/Cost.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ningtan11"},"content":"package seedu.waddle.model.item;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"ningtan11"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"ningtan11"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"ningtan11"},"content":" * Represents the estimated cost of an Item in the Itinerary.","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"ningtan11"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"ningtan11"},"content":"public class Cost {","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"ningtan11"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"ningtan11"},"content":"            \"Cost should only contain a positive number.\";","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"ningtan11"},"content":"    private final float cost;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"ningtan11"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"ningtan11"},"content":"     * Constructs a {@code Cost}.","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"ningtan11"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"ningtan11"},"content":"     * @param cost A valid cost.","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"ningtan11"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"ningtan11"},"content":"    public Cost(String cost) {","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"ningtan11"},"content":"        requireNonNull(cost);","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"ningtan11"},"content":"        checkArgument(isValidCost(cost), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"seox123"},"content":"        this.cost \u003d Float.parseFloat(cost);","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"ningtan11"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"ningtan11"},"content":"     * Returns true if a given string is a valid Cost","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"ningtan11"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"ningtan11"},"content":"    public static boolean isValidCost(String test) {","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"ningtan11"},"content":"        float value;","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"ningtan11"},"content":"        try {","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"seox123"},"content":"            value \u003d Float.parseFloat(test);","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"ningtan11"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"ningtan11"},"content":"            return false;","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"ningtan11"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"ningtan11"},"content":"        return value \u003e\u003d 0;","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"ciaoosuuu"},"content":"    public float getValue() {","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"        return this.cost;","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"ningtan11"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"ningtan11"},"content":"    public String toString() {","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"ningtan11"},"content":"        return String.valueOf(cost);","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"ningtan11"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"ciaoosuuu":4,"ningtan11":40,"seox123":2}},{"path":"src/main/java/seedu/waddle/model/item/Day.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CFSY"},"content":"package seedu.waddle.model.item;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"import static seedu.waddle.commons.core.Messages.MESSAGE_CONFLICTING_ITEMS;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":"import static seedu.waddle.commons.core.Messages.MESSAGE_ITEM_PAST_MIDNIGHT;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.commons.core.index.Index;","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.PdfFieldInfo;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.PdfFiller;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.item.exceptions.Period;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.text.Text;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"CFSY"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":" * Encapsulates a day in an itinerary.","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"CFSY"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"public class Day {","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"    private final Comparator\u003cItem\u003e startTimeComparator \u003d new Comparator\u003cItem\u003e() {","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"CFSY"},"content":"        @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"CFSY"},"content":"        public int compare(Item item1, Item item2) {","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"            return item1.getStartTime().compareTo(item2.getStartTime());","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"CFSY"},"content":"    };","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"CFSY"},"content":"    private final int dayNumber;","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"CFSY"},"content":"    private final UniqueItemList itemList;","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"CFSY"},"content":"     * Constructor.","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"CFSY"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"CFSY"},"content":"     * @param dayNumber The day number.","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"CFSY"},"content":"    public Day(int dayNumber) {","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"CFSY"},"content":"        this.dayNumber \u003d dayNumber;","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"CFSY"},"content":"        this.itemList \u003d new UniqueItemList();","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"CFSY"},"content":"     * Adds an item to this day if there are no time conflicts.","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"CFSY"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"CFSY"},"content":"     * @param item The item to be added.","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"CFSY"},"content":"     * @throws CommandException Conflicting items message thrown if there are time conflicts.","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"CFSY"},"content":"    public void addItem(Item item) throws CommandException {","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"CFSY"},"content":"        Optional\u003cArrayList\u003cItem\u003e\u003e conflictingItems \u003d getConflictingItems(item);","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"CFSY"},"content":"        if (conflictingItems.isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"CFSY"},"content":"            throw new CommandException(String.format(MESSAGE_ITEM_PAST_MIDNIGHT, item.getDescription()));","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"CFSY"},"content":"        StringBuilder conflicts \u003d new StringBuilder();","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"CFSY"},"content":"        if (!conflictingItems.get().isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"CFSY"},"content":"            for (Item cItem : conflictingItems.get()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"CFSY"},"content":"                conflicts.append(\"    \").append(cItem.getDescription()).append(\": \").append(cItem.getStartTime())","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"CFSY"},"content":"                        .append(\" - \").append(cItem.getEndTime()).append(\"\\n\");","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"CFSY"},"content":"            }","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"CFSY"},"content":"            throw new CommandException(String.format(MESSAGE_CONFLICTING_ITEMS, conflicts));","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"CFSY"},"content":"        this.itemList.add(item);","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"CFSY"},"content":"        this.itemList.sort(startTimeComparator);","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"CFSY"},"content":"     * Removes an item from this day. Resets the item\u0027s startTime field.","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"CFSY"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"CFSY"},"content":"     * @param index The index of the item to be removed.","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"CFSY"},"content":"     * @return The removed item.","lastModifiedDate":"2022-10-22"},{"lineNumber":70,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":71,"author":{"gitId":"CFSY"},"content":"    public Item removeItem(Index index) {","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"CFSY"},"content":"        Item removedItem \u003d this.itemList.remove(index.getZeroBased());","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"ciaoosuuu"},"content":"        //removedItem.resetStartTime();","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"CFSY"},"content":"        return removedItem;","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":76,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"ciaoosuuu"},"content":"    public Item getItem(Index index) {","lastModifiedDate":"2022-10-23"},{"lineNumber":78,"author":{"gitId":"ciaoosuuu"},"content":"        return this.itemList.get(index.getZeroBased());","lastModifiedDate":"2022-10-23"},{"lineNumber":79,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":80,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":81,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":82,"author":{"gitId":"CFSY"},"content":"     * Deletes the day. Resets the startTime field of all items in this day.","lastModifiedDate":"2022-10-22"},{"lineNumber":83,"author":{"gitId":"CFSY"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":84,"author":{"gitId":"CFSY"},"content":"     * @return The list of items stored in this day.","lastModifiedDate":"2022-10-22"},{"lineNumber":85,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":86,"author":{"gitId":"CFSY"},"content":"    public UniqueItemList deleteDay() {","lastModifiedDate":"2022-10-22"},{"lineNumber":87,"author":{"gitId":"CFSY"},"content":"        for (Item item : this.itemList) {","lastModifiedDate":"2022-10-22"},{"lineNumber":88,"author":{"gitId":"CFSY"},"content":"            item.resetStartTime();","lastModifiedDate":"2022-10-22"},{"lineNumber":89,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":90,"author":{"gitId":"CFSY"},"content":"        return this.itemList;","lastModifiedDate":"2022-10-22"},{"lineNumber":91,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":92,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":93,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":94,"author":{"gitId":"CFSY"},"content":"     * For a given item, return an Optional list of items that conflict in time.","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"CFSY"},"content":"     * An Optional with an empty list is returned if there are no conflicts.","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"CFSY"},"content":"     * If the item goes past midnight (not allowed), an empty Optional is returned.","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"CFSY"},"content":"     * If there are conflicting items, an Optional with the list of conflicting items are returned.","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"CFSY"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":99,"author":{"gitId":"CFSY"},"content":"     * @param newItem The item to check for.","lastModifiedDate":"2022-10-22"},{"lineNumber":100,"author":{"gitId":"CFSY"},"content":"     * @return A list of conflicting items, possibly an empty list.","lastModifiedDate":"2022-10-22"},{"lineNumber":101,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":102,"author":{"gitId":"CFSY"},"content":"    private Optional\u003cArrayList\u003cItem\u003e\u003e getConflictingItems(Item newItem) {","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"CFSY"},"content":"        ArrayList\u003cItem\u003e conflictingItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-22"},{"lineNumber":104,"author":{"gitId":"CFSY"},"content":"        // item goes past midnight and overflows","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"CFSY"},"content":"        if (newItem.getEndTime().isBefore(newItem.getStartTime())) {","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"CFSY"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"CFSY"},"content":"        // check for conflicting items","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"CFSY"},"content":"        for (Item item : this.itemList) {","lastModifiedDate":"2022-10-22"},{"lineNumber":110,"author":{"gitId":"CFSY"},"content":"            // same start time","lastModifiedDate":"2022-10-22"},{"lineNumber":111,"author":{"gitId":"CFSY"},"content":"            boolean sameStartTime \u003d item.getStartTime().equals(newItem.getStartTime());","lastModifiedDate":"2022-10-22"},{"lineNumber":112,"author":{"gitId":"CFSY"},"content":"            // if new start time is before item start time","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"CFSY"},"content":"            // conflict if new end time is after item start time","lastModifiedDate":"2022-10-27"},{"lineNumber":114,"author":{"gitId":"CFSY"},"content":"            boolean startTimeConflict \u003d newItem.getStartTime().isBefore(item.getStartTime())","lastModifiedDate":"2022-10-27"},{"lineNumber":115,"author":{"gitId":"CFSY"},"content":"                    \u0026\u0026 newItem.getEndTime().isAfter(item.getStartTime());","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"CFSY"},"content":"            // if new start time is after item start time","lastModifiedDate":"2022-10-27"},{"lineNumber":117,"author":{"gitId":"CFSY"},"content":"            // conflict if new start time is before item end time","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"CFSY"},"content":"            boolean endTimeConflict \u003d newItem.getStartTime().isAfter(item.getStartTime())","lastModifiedDate":"2022-10-27"},{"lineNumber":119,"author":{"gitId":"CFSY"},"content":"                    \u0026\u0026 newItem.getStartTime().isBefore(item.getEndTime());","lastModifiedDate":"2022-10-25"},{"lineNumber":120,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":121,"author":{"gitId":"CFSY"},"content":"            if (sameStartTime || startTimeConflict || endTimeConflict) {","lastModifiedDate":"2022-10-22"},{"lineNumber":122,"author":{"gitId":"CFSY"},"content":"                conflictingItems.add(item);","lastModifiedDate":"2022-10-22"},{"lineNumber":123,"author":{"gitId":"CFSY"},"content":"            }","lastModifiedDate":"2022-10-22"},{"lineNumber":124,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":125,"author":{"gitId":"CFSY"},"content":"        return Optional.of(conflictingItems);","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":127,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":128,"author":{"gitId":"ciaoosuuu"},"content":"    public int getItemSize() {","lastModifiedDate":"2022-10-23"},{"lineNumber":129,"author":{"gitId":"ciaoosuuu"},"content":"        return itemList.getSize();","lastModifiedDate":"2022-10-23"},{"lineNumber":130,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":131,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":132,"author":{"gitId":"ciaoosuuu"},"content":"    public boolean hasItem(Item item) {","lastModifiedDate":"2022-10-23"},{"lineNumber":133,"author":{"gitId":"ciaoosuuu"},"content":"        return this.itemList.contains(item);","lastModifiedDate":"2022-10-23"},{"lineNumber":134,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":135,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":136,"author":{"gitId":"CFSY"},"content":"    public UniqueItemList getItemList() {","lastModifiedDate":"2022-10-23"},{"lineNumber":137,"author":{"gitId":"CFSY"},"content":"        return this.itemList;","lastModifiedDate":"2022-10-23"},{"lineNumber":138,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":139,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":140,"author":{"gitId":"seox123"},"content":"    public int getDayNumber() {","lastModifiedDate":"2022-10-25"},{"lineNumber":141,"author":{"gitId":"seox123"},"content":"        return this.dayNumber;","lastModifiedDate":"2022-10-25"},{"lineNumber":142,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":143,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":144,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":145,"author":{"gitId":"CFSY"},"content":"     * Compiles the vacant time slots in this day and formats it as a string.","lastModifiedDate":"2022-10-26"},{"lineNumber":146,"author":{"gitId":"CFSY"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":147,"author":{"gitId":"CFSY"},"content":"     * @return The vacant slots as a string.","lastModifiedDate":"2022-10-26"},{"lineNumber":148,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":149,"author":{"gitId":"CFSY"},"content":"    public String getVacantSlots() {","lastModifiedDate":"2022-10-26"},{"lineNumber":150,"author":{"gitId":"CFSY"},"content":"        if (this.itemList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2022-10-26"},{"lineNumber":151,"author":{"gitId":"CFSY"},"content":"            return \"Day \" + (this.dayNumber + 1) + \":\\n    Free!\\n\";","lastModifiedDate":"2022-10-26"},{"lineNumber":152,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":153,"author":{"gitId":"CFSY"},"content":"        StringBuilder vacantSlots \u003d new StringBuilder(\"Day \");","lastModifiedDate":"2022-10-26"},{"lineNumber":154,"author":{"gitId":"CFSY"},"content":"        vacantSlots.append((this.dayNumber + 1)).append(\":\").append(System.getProperty(\"line.separator\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":155,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":156,"author":{"gitId":"CFSY"},"content":"        ArrayList\u003cPeriod\u003e vacantPeriods \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":157,"author":{"gitId":"CFSY"},"content":"        Period toBeSplit \u003d new Period(LocalTime.MIN, LocalTime.MAX);","lastModifiedDate":"2022-10-27"},{"lineNumber":158,"author":{"gitId":"CFSY"},"content":"        for (Item item : this.itemList) {","lastModifiedDate":"2022-10-26"},{"lineNumber":159,"author":{"gitId":"CFSY"},"content":"            vacantPeriods.addAll(splitTimeSlot(toBeSplit, new Period(item.getStartTime(), item.getEndTime())));","lastModifiedDate":"2022-10-26"},{"lineNumber":160,"author":{"gitId":"CFSY"},"content":"            if (vacantPeriods.size() \u003e 0) {","lastModifiedDate":"2022-10-26"},{"lineNumber":161,"author":{"gitId":"CFSY"},"content":"                // remove the last period to continue splitting","lastModifiedDate":"2022-10-26"},{"lineNumber":162,"author":{"gitId":"CFSY"},"content":"                toBeSplit \u003d vacantPeriods.remove(vacantPeriods.size() - 1);","lastModifiedDate":"2022-10-26"},{"lineNumber":163,"author":{"gitId":"CFSY"},"content":"            } else {","lastModifiedDate":"2022-10-26"},{"lineNumber":164,"author":{"gitId":"CFSY"},"content":"                toBeSplit \u003d null;","lastModifiedDate":"2022-10-26"},{"lineNumber":165,"author":{"gitId":"CFSY"},"content":"                break;","lastModifiedDate":"2022-10-26"},{"lineNumber":166,"author":{"gitId":"CFSY"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":167,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":168,"author":{"gitId":"CFSY"},"content":"        // add the last period back if there is any","lastModifiedDate":"2022-10-26"},{"lineNumber":169,"author":{"gitId":"CFSY"},"content":"        if (toBeSplit !\u003d null) {","lastModifiedDate":"2022-10-26"},{"lineNumber":170,"author":{"gitId":"CFSY"},"content":"            vacantPeriods.add(toBeSplit);","lastModifiedDate":"2022-10-26"},{"lineNumber":171,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":172,"author":{"gitId":"CFSY"},"content":"        for (Period period : vacantPeriods) {","lastModifiedDate":"2022-10-26"},{"lineNumber":173,"author":{"gitId":"CFSY"},"content":"            vacantSlots.append(\"    \").append(period.getStartString()).append(\" - \")","lastModifiedDate":"2022-10-27"},{"lineNumber":174,"author":{"gitId":"CFSY"},"content":"                    .append(period.getEndString()).append(System.getProperty(\"line.separator\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":175,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":176,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"CFSY"},"content":"        return vacantSlots.toString();","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":180,"author":{"gitId":"CFSY"},"content":"    private ArrayList\u003cPeriod\u003e splitTimeSlot(Period big, Period small) {","lastModifiedDate":"2022-10-26"},{"lineNumber":181,"author":{"gitId":"CFSY"},"content":"        ArrayList\u003cPeriod\u003e splitPeriods \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":182,"author":{"gitId":"CFSY"},"content":"        if (big.getStart().equals(small.getStart()) \u0026\u0026 big.getEnd().equals(small.getEnd())) {","lastModifiedDate":"2022-10-26"},{"lineNumber":183,"author":{"gitId":"CFSY"},"content":"            return splitPeriods;","lastModifiedDate":"2022-10-26"},{"lineNumber":184,"author":{"gitId":"CFSY"},"content":"        } else if (big.getStart().equals(small.getStart())) {","lastModifiedDate":"2022-10-26"},{"lineNumber":185,"author":{"gitId":"CFSY"},"content":"            splitPeriods.add(new Period(small.getEnd(), big.getEnd()));","lastModifiedDate":"2022-10-26"},{"lineNumber":186,"author":{"gitId":"CFSY"},"content":"        } else if (big.getEnd().equals(small.getEnd())) {","lastModifiedDate":"2022-10-26"},{"lineNumber":187,"author":{"gitId":"CFSY"},"content":"            splitPeriods.add(new Period(big.getStart(), small.getStart()));","lastModifiedDate":"2022-10-26"},{"lineNumber":188,"author":{"gitId":"CFSY"},"content":"        } else if (small.getStart().isAfter(big.getStart()) \u0026\u0026 big.getEnd().isAfter(small.getEnd())) {","lastModifiedDate":"2022-10-26"},{"lineNumber":189,"author":{"gitId":"CFSY"},"content":"            splitPeriods.add(new Period(big.getStart(), small.getStart()));","lastModifiedDate":"2022-10-26"},{"lineNumber":190,"author":{"gitId":"CFSY"},"content":"            splitPeriods.add(new Period(small.getEnd(), big.getEnd()));","lastModifiedDate":"2022-10-26"},{"lineNumber":191,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":192,"author":{"gitId":"CFSY"},"content":"        return splitPeriods;","lastModifiedDate":"2022-10-26"},{"lineNumber":193,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":194,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":195,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":196,"author":{"gitId":"CFSY"},"content":"     * Generates a text representation of the day.","lastModifiedDate":"2022-10-27"},{"lineNumber":197,"author":{"gitId":"CFSY"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":198,"author":{"gitId":"CFSY"},"content":"     * @return The text representation.","lastModifiedDate":"2022-10-27"},{"lineNumber":199,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":200,"author":{"gitId":"CFSY"},"content":"    public String getTextRepresentation() {","lastModifiedDate":"2022-10-27"},{"lineNumber":201,"author":{"gitId":"CFSY"},"content":"        StringBuilder dayText \u003d new StringBuilder();","lastModifiedDate":"2022-10-27"},{"lineNumber":202,"author":{"gitId":"CFSY"},"content":"        dayText.append(\"Day \").append((this.dayNumber + 1)).append(System.lineSeparator());","lastModifiedDate":"2022-10-27"},{"lineNumber":203,"author":{"gitId":"CFSY"},"content":"        StringBuilder itemsText \u003d new StringBuilder();","lastModifiedDate":"2022-10-27"},{"lineNumber":204,"author":{"gitId":"CFSY"},"content":"        int itemCount \u003d 1;","lastModifiedDate":"2022-10-27"},{"lineNumber":205,"author":{"gitId":"CFSY"},"content":"        for (Item item : this.itemList) {","lastModifiedDate":"2022-10-27"},{"lineNumber":206,"author":{"gitId":"CFSY"},"content":"            itemsText.append(itemCount).append(\". \").append(item.toString())","lastModifiedDate":"2022-10-27"},{"lineNumber":207,"author":{"gitId":"CFSY"},"content":"                    .append(System.lineSeparator());","lastModifiedDate":"2022-10-27"},{"lineNumber":208,"author":{"gitId":"CFSY"},"content":"            if (itemCount \u003c this.itemList.getSize()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":209,"author":{"gitId":"CFSY"},"content":"                itemsText.append(System.lineSeparator());","lastModifiedDate":"2022-10-27"},{"lineNumber":210,"author":{"gitId":"CFSY"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":211,"author":{"gitId":"CFSY"},"content":"            itemCount++;","lastModifiedDate":"2022-10-27"},{"lineNumber":212,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":213,"author":{"gitId":"CFSY"},"content":"        dayText.append(Text.indent(itemsText.toString(), Text.INDENT_FOUR))","lastModifiedDate":"2022-10-27"},{"lineNumber":214,"author":{"gitId":"CFSY"},"content":"                .append(System.lineSeparator());","lastModifiedDate":"2022-10-27"},{"lineNumber":215,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":216,"author":{"gitId":"CFSY"},"content":"        return dayText.toString();","lastModifiedDate":"2022-10-27"},{"lineNumber":217,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":218,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":219,"author":{"gitId":"ciaoosuuu"},"content":"    public List\u003cPdfFieldInfo\u003e getPdfFieldInfoList() {","lastModifiedDate":"2022-10-27"},{"lineNumber":220,"author":{"gitId":"ciaoosuuu"},"content":"        List\u003cPdfFieldInfo\u003e fieldList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":221,"author":{"gitId":"ciaoosuuu"},"content":"        for (int i \u003d 0; i \u003c this.itemList.getSize(); i++) {","lastModifiedDate":"2022-10-27"},{"lineNumber":222,"author":{"gitId":"ciaoosuuu"},"content":"            Item item \u003d this.itemList.get(i);","lastModifiedDate":"2022-10-27"},{"lineNumber":223,"author":{"gitId":"CFSY"},"content":"            PdfFieldInfo time \u003d new PdfFieldInfo(\"time\" + i, item.getTimeString(Text.INDENT_NONE));","lastModifiedDate":"2022-10-27"},{"lineNumber":224,"author":{"gitId":"ciaoosuuu"},"content":"            PdfFieldInfo activity \u003d new PdfFieldInfo(\"item\" + i, item.getDescription().toString());","lastModifiedDate":"2022-10-27"},{"lineNumber":225,"author":{"gitId":"ciaoosuuu"},"content":"            fieldList.add(time);","lastModifiedDate":"2022-10-27"},{"lineNumber":226,"author":{"gitId":"ciaoosuuu"},"content":"            fieldList.add(activity);","lastModifiedDate":"2022-10-27"},{"lineNumber":227,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":228,"author":{"gitId":"ciaoosuuu"},"content":"        int remainder \u003d (fieldList.size() / 2) % PdfFiller.MAX_DISPLAY;","lastModifiedDate":"2022-10-27"},{"lineNumber":229,"author":{"gitId":"ciaoosuuu"},"content":"        if (remainder !\u003d 0) {","lastModifiedDate":"2022-10-27"},{"lineNumber":230,"author":{"gitId":"ciaoosuuu"},"content":"            for (int i \u003d 0; i \u003c PdfFiller.MAX_DISPLAY - remainder; i++) {","lastModifiedDate":"2022-10-27"},{"lineNumber":231,"author":{"gitId":"ciaoosuuu"},"content":"                int nextPos \u003d remainder + i;","lastModifiedDate":"2022-10-27"},{"lineNumber":232,"author":{"gitId":"ciaoosuuu"},"content":"                PdfFieldInfo time \u003d new PdfFieldInfo(\"time\" + nextPos, \"\");","lastModifiedDate":"2022-10-27"},{"lineNumber":233,"author":{"gitId":"ciaoosuuu"},"content":"                PdfFieldInfo activity \u003d new PdfFieldInfo(\"item\" + nextPos, \"\");","lastModifiedDate":"2022-10-27"},{"lineNumber":234,"author":{"gitId":"ciaoosuuu"},"content":"                fieldList.add(time);","lastModifiedDate":"2022-10-27"},{"lineNumber":235,"author":{"gitId":"ciaoosuuu"},"content":"                fieldList.add(activity);","lastModifiedDate":"2022-10-27"},{"lineNumber":236,"author":{"gitId":"ciaoosuuu"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":237,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":238,"author":{"gitId":"ciaoosuuu"},"content":"        if (fieldList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-27"},{"lineNumber":239,"author":{"gitId":"ciaoosuuu"},"content":"            for (int i \u003d 0; i \u003c PdfFiller.MAX_DISPLAY; i++) {","lastModifiedDate":"2022-10-27"},{"lineNumber":240,"author":{"gitId":"ciaoosuuu"},"content":"                PdfFieldInfo time \u003d new PdfFieldInfo(\"time\" + i, \"\");","lastModifiedDate":"2022-10-27"},{"lineNumber":241,"author":{"gitId":"ciaoosuuu"},"content":"                PdfFieldInfo activity \u003d new PdfFieldInfo(\"item\" + i, \"\");","lastModifiedDate":"2022-10-27"},{"lineNumber":242,"author":{"gitId":"ciaoosuuu"},"content":"                fieldList.add(time);","lastModifiedDate":"2022-10-27"},{"lineNumber":243,"author":{"gitId":"ciaoosuuu"},"content":"                fieldList.add(activity);","lastModifiedDate":"2022-10-27"},{"lineNumber":244,"author":{"gitId":"ciaoosuuu"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":245,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":246,"author":{"gitId":"ciaoosuuu"},"content":"        return fieldList;","lastModifiedDate":"2022-10-27"},{"lineNumber":247,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":248,"author":{"gitId":"CFSY"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"CFSY":198,"ciaoosuuu":46,"seox123":4}},{"path":"src/main/java/seedu/waddle/model/item/Duration.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ningtan11"},"content":"package seedu.waddle.model.item;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"ningtan11"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"ningtan11"},"content":" * Represents an Item\u0027s duration in minutes.","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"ningtan11"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"ningtan11"},"content":"public class Duration {","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Duration should be more than or equals to 0.\";","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"ningtan11"},"content":"    private final int duration;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"ningtan11"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"ningtan11"},"content":"     * Constructs a {@code Duration}.","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"ningtan11"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"ningtan11"},"content":"     * @param duration A valid duration.","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"ningtan11"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"ningtan11"},"content":"    public Duration(String duration) {","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"ningtan11"},"content":"        checkArgument(isValidDuration(duration), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"ningtan11"},"content":"        this.duration \u003d Integer.valueOf(duration);","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"    public int getDuration() {","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"        return this.duration;","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"ningtan11"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"ningtan11"},"content":"     * Returns true if the given string is a positive integer or null.","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"ningtan11"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"ningtan11"},"content":"    public static boolean isValidDuration(String test) {","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"ningtan11"},"content":"        if (test \u003d\u003d null) {","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"ningtan11"},"content":"            return true;","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"ningtan11"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"ningtan11"},"content":"        int value;","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"ningtan11"},"content":"        try {","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"ningtan11"},"content":"            value \u003d Integer.valueOf(test);","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"ningtan11"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"ningtan11"},"content":"            return false;","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"ningtan11"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"ningtan11"},"content":"        return value \u003e\u003d 0;","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"ningtan11"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"ningtan11"},"content":"    public String toString() {","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"ningtan11"},"content":"        return String.valueOf(duration);","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"ningtan11"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"ciaoosuuu":1,"CFSY":4,"ningtan11":40}},{"path":"src/main/java/seedu/waddle/model/item/Item.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ningtan11"},"content":"package seedu.waddle.model.item;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Description;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.text.Text;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"pewggls"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"pewggls"},"content":" * Represents an item in the itinerary.","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"pewggls"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"pewggls"},"content":"public class Item {","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"    private final Description description;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"    private final Priority priority;","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"    private final Cost cost;","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"    private final Duration duration;","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"CFSY"},"content":"    private LocalTime startTime;","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"CFSY"},"content":"    private LocalTime endTime;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"pewggls"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"pewggls"},"content":"     * Constructor for an item.","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"pewggls"},"content":"     * @param description description of the item","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"pewggls"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"    public Item(Description description, Priority priority, Cost cost, Duration duration) {","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"seox123"},"content":"        requireAllNonNull(description, priority);","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"pewggls"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"seox123"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"ningtan11"},"content":"        this.cost \u003d cost;","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"ningtan11"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"    public Description getDescription() {","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"ningtan11"},"content":"        return description;","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"CFSY"},"content":"    public String getDescriptionString(int indents) {","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"CFSY"},"content":"        return Text.indent(this.description.toString(), indents);","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"seox123"},"content":"    public Priority getPriority() {","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"ningtan11"},"content":"        return priority;","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"CFSY"},"content":"    public String getPriorityString(int indents) {","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"CFSY"},"content":"        return Text.indent(\"â˜…\".repeat(this.priority.getValue()), indents);","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"ningtan11"},"content":"    public Cost getCost() {","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"CFSY"},"content":"        return this.cost;","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"CFSY"},"content":"    public String getCostString(int indents) {","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"CFSY"},"content":"        return Text.indent(\"Cost $\" + this.cost.getValue(), indents);","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"ningtan11"},"content":"    public Duration getDuration() {","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"ningtan11"},"content":"        return duration;","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"CFSY"},"content":"    public String getDurationString(int indents) {","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"CFSY"},"content":"        return Text.indent(\"Duration \" + this.duration + \" mins\", indents);","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"CFSY"},"content":"    public LocalTime getStartTime() {","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"CFSY"},"content":"        return this.startTime;","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":70,"author":{"gitId":"CFSY"},"content":"    public void setStartTime(LocalTime startTime) {","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"CFSY"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"CFSY"},"content":"    public LocalTime getEndTime() {","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"CFSY"},"content":"        LocalTime endTime \u003d this.startTime.plusMinutes(this.duration.getDuration());","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"CFSY"},"content":"        if (this.startTime.isBefore(LocalTime.MAX) \u0026\u0026 endTime.equals(LocalTime.MIDNIGHT)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"CFSY"},"content":"            return LocalTime.MAX;","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"CFSY"},"content":"        return endTime;","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"CFSY"},"content":"    public String getTimeString(int indents) {","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"CFSY"},"content":"        if (this.startTime !\u003d null) {","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"CFSY"},"content":"            String endTime \u003d getEndTime().toString();","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"CFSY"},"content":"            if (getEndTime().equals(LocalTime.MAX)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"CFSY"},"content":"                endTime \u003d LocalTime.MIDNIGHT.toString();","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"CFSY"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"CFSY"},"content":"            if (this.duration !\u003d null) {","lastModifiedDate":"2022-10-25"},{"lineNumber":89,"author":{"gitId":"CFSY"},"content":"                return Text.indent(\"Time: \" + this.startTime + \" - \" + endTime, indents);","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"CFSY"},"content":"            } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"CFSY"},"content":"                return Text.indent(\"Time: \" + this.startTime, indents);","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"CFSY"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":93,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"CFSY"},"content":"        return Text.indent(\"Time: (Not planned)\", indents);","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":96,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":97,"author":{"gitId":"CFSY"},"content":"    public void resetStartTime() {","lastModifiedDate":"2022-10-22"},{"lineNumber":98,"author":{"gitId":"CFSY"},"content":"        this.startTime \u003d null;","lastModifiedDate":"2022-10-22"},{"lineNumber":99,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":100,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":101,"author":{"gitId":"ningtan11"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"ningtan11"},"content":"     * Returns true if both items have the same description.","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"ningtan11"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"ningtan11"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"ningtan11"},"content":"    public boolean isSameItem(Item otherItem) {","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"ningtan11"},"content":"        if (otherItem \u003d\u003d this) {","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"ningtan11"},"content":"            return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"ningtan11"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"ningtan11"},"content":"        return otherItem !\u003d null","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"ningtan11"},"content":"                \u0026\u0026 otherItem.getDescription().equals(getDescription());","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"ningtan11"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"ningtan11"},"content":"    public String toString() {","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"ningtan11"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"CFSY"},"content":"        builder.append(getDescriptionString(Text.INDENT_NONE))","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"CFSY"},"content":"                .append(System.getProperty(\"line.separator\"))","lastModifiedDate":"2022-10-27"},{"lineNumber":119,"author":{"gitId":"CFSY"},"content":"                .append(getPriorityString(Text.INDENT_FOUR))","lastModifiedDate":"2022-10-27"},{"lineNumber":120,"author":{"gitId":"CFSY"},"content":"                .append(System.getProperty(\"line.separator\"))","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"CFSY"},"content":"                .append(getCostString(Text.INDENT_FOUR))","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"CFSY"},"content":"                .append(System.getProperty(\"line.separator\"))","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"CFSY"},"content":"                .append(getDurationString(Text.INDENT_FOUR))","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"CFSY"},"content":"                .append(System.getProperty(\"line.separator\"))","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"CFSY"},"content":"                .append(getTimeString(Text.INDENT_FOUR));","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"ningtan11"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"pewggls"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"CFSY":70,"ciaoosuuu":5,"ningtan11":35,"pewggls":14,"seox123":4}},{"path":"src/main/java/seedu/waddle/model/item/Priority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.model.item;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"seox123"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"seox123"},"content":" * Represents an Item\u0027s priority in the Itinerary.","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":" * Guarantees: number between 1 and 5, default is 1; is valid as declared in {@link #isValidPriority(Integer)}","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"seox123"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"seox123"},"content":"public class Priority {","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"seox123"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"seox123"},"content":"            \"Priority should only contain a number between 1 and 5\";","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"    private final Integer stars;","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"seox123"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"ningtan11"},"content":"     * Constructs a {@code Priority}.","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"seox123"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"     * @param stars A valid priority.","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"seox123"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"    public Priority(Integer stars) {","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"        requireNonNull(stars);","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"CFSY"},"content":"        checkArgument(isValidPriority(stars), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"CFSY"},"content":"        this.stars \u003d stars;","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"seox123"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"seox123"},"content":"     * Returns true if a given string is a valid priority.","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"seox123"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"    public static boolean isValidPriority(Integer test) {","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"CFSY"},"content":"        return test \u003e 0 \u0026\u0026 test \u003c\u003d 5;","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"CFSY"},"content":"    public int getValue() {","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"CFSY"},"content":"        return this.stars;","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"seox123"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"seox123"},"content":"    public String toString() {","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"CFSY"},"content":"        return this.stars.toString();","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"seox123"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"seox123"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"seox123"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"seox123"},"content":"                || (other instanceof Priority // instanceof handles nulls","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"CFSY"},"content":"                \u0026\u0026 this.stars.equals(((Priority) other).getValue())); // state check","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"seox123"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"seox123"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"CFSY"},"content":"        return this.stars.hashCode();","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"ciaoosuuu"},"content":"    public int compareTo(Priority p) {","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"CFSY"},"content":"        return this.stars.compareTo(p.getValue());","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"seox123"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"ciaoosuuu":4,"CFSY":15,"ningtan11":1,"seox123":39}},{"path":"src/main/java/seedu/waddle/model/item/StartTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CFSY"},"content":"package seedu.waddle.model.item;","lastModifiedDate":"2022-10-22"},{"lineNumber":2,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":"import static seedu.waddle.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":"/**","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"CFSY"},"content":" * Represents the start time of the item.","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"CFSY"},"content":"public class StartTime {","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"            \"Cost should be written as HHmm in 24H format. For example, 3:25pm is 1525.\";","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"    private static final String timePattern \u003d \"HHmm\";","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"    private static final DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(timePattern);","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"CFSY"},"content":"    private final LocalTime startTime;","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"CFSY"},"content":"     * Constructs a {@code StartTime}.","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"     *","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"     * @param startTime A valid start time.","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"CFSY"},"content":"    public StartTime(String startTime) {","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"        requireNonNull(startTime);","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"        checkArgument(isValidStartTime(startTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"CFSY"},"content":"        this.startTime \u003d LocalTime.parse(startTime, timeFormatter);","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"CFSY"},"content":"     * Returns true if a given string is a valid Cost","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"CFSY"},"content":"    public static boolean isValidStartTime(String test) {","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"CFSY"},"content":"        LocalTime time;","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"CFSY"},"content":"        try {","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"CFSY"},"content":"            time \u003d LocalTime.parse(test, timeFormatter);","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"CFSY"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"CFSY"},"content":"            return false;","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"CFSY"},"content":"        return true;","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"CFSY"},"content":"    public LocalTime getStartTime() {","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"CFSY"},"content":"        return this.startTime;","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"CFSY"},"content":"    @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"CFSY"},"content":"    public String toString() {","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"CFSY"},"content":"        return this.startTime.toString();","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"CFSY"},"content":"}","lastModifiedDate":"2022-10-22"}],"authorContributionMap":{"CFSY":52}},{"path":"src/main/java/seedu/waddle/model/item/UniqueItemList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ningtan11"},"content":"package seedu.waddle.model.item;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"pewggls"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"pewggls"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"pewggls"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"pewggls"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"pewggls"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.item.exceptions.DuplicateItemException;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.item.exceptions.ItemNotFoundException;","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"pewggls"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"pewggls"},"content":" * Represents the list of items in an itinerary.","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"pewggls"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"CFSY"},"content":"public class UniqueItemList implements Iterable\u003cItem\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"pewggls"},"content":"    private final ObservableList\u003cItem\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"pewggls"},"content":"    private final ObservableList\u003cItem\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"pewggls"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"     * Get an item in the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"    public Item get(int index) {","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"        return internalList.get(index);","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"     * Returns number of items in the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"    public int getSize() {","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"        return internalList.size();","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"pewggls"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"pewggls"},"content":"     * Returns true if the list contains an equivalent item as the given argument.","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"pewggls"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"pewggls"},"content":"    public boolean contains(Item toCheck) {","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"pewggls"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"pewggls"},"content":"        return internalList.stream().anyMatch(toCheck::isSameItem);","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"pewggls"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"pewggls"},"content":"     * Adds an item to the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"pewggls"},"content":"     * The item must not already exist in the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"pewggls"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"pewggls"},"content":"    public void add(Item toAdd) {","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"pewggls"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"pewggls"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"pewggls"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"pewggls"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"pewggls"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"pewggls"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"pewggls"},"content":"     * Replaces the item {@code target} in the list with {@code editedItem}.","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"pewggls"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"pewggls"},"content":"     * The item identity of {@code editedItem} must not be the same as another existing item in the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"pewggls"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"pewggls"},"content":"    public void setItem(Item target, Item editedItem) {","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"pewggls"},"content":"        requireAllNonNull(target, editedItem);","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"pewggls"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"pewggls"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"pewggls"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"pewggls"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"pewggls"},"content":"        if (!target.isSameItem(editedItem) \u0026\u0026 contains(editedItem)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"pewggls"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"pewggls"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"pewggls"},"content":"        internalList.set(index, editedItem);","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"pewggls"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"pewggls"},"content":"     * Removes the equivalent item from the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"pewggls"},"content":"     * The item must exist in the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"pewggls"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"ciaoosuuu"},"content":"    public Item remove(int index) {","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"ciaoosuuu"},"content":"        Item toRemove \u003d get(index);","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"pewggls"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"pewggls"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"pewggls"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"pewggls"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"ciaoosuuu"},"content":"        return toRemove;","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"CFSY"},"content":"    public void setItemList(UniqueItemList replacement) {","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"pewggls"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"pewggls"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"pewggls"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"pewggls"},"content":"     * Replaces the contents of this list with {@code items}.","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"pewggls"},"content":"     * {@code items} must not contain duplicate items.","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"pewggls"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"pewggls"},"content":"    public void setItems(List\u003cItem\u003e items) {","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"pewggls"},"content":"        requireAllNonNull(items);","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"pewggls"},"content":"        if (!itemsAreUnique(items)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"pewggls"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"pewggls"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"pewggls"},"content":"        internalList.setAll(items);","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"pewggls"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"pewggls"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"pewggls"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"pewggls"},"content":"    public ObservableList\u003cItem\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"pewggls"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"pewggls"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"pewggls"},"content":"    public Iterator\u003cItem\u003e iterator() {","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"pewggls"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"pewggls"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"pewggls"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"pewggls"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"CFSY"},"content":"                || (other instanceof UniqueItemList // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"CFSY"},"content":"                \u0026\u0026 internalList.equals(((UniqueItemList) other).internalList));","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"pewggls"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"pewggls"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"pewggls"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"pewggls"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"pewggls"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"pewggls"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"pewggls"},"content":"    private boolean itemsAreUnique(List\u003cItem\u003e items) {","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"pewggls"},"content":"        for (int i \u003d 0; i \u003c items.size() - 1; i++) {","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"pewggls"},"content":"            for (int j \u003d i + 1; j \u003c items.size(); j++) {","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"pewggls"},"content":"                if (items.get(i).isSameItem(items.get(j))) {","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"pewggls"},"content":"                    return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"pewggls"},"content":"                }","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"pewggls"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"pewggls"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"pewggls"},"content":"        return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"ciaoosuuu"},"content":"    public void sort(Comparator\u003cItem\u003e comparator) {","lastModifiedDate":"2022-10-21"},{"lineNumber":147,"author":{"gitId":"ciaoosuuu"},"content":"        this.internalList.sort(comparator);","lastModifiedDate":"2022-10-21"},{"lineNumber":148,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":149,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":150,"author":{"gitId":"pewggls"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"ciaoosuuu":22,"CFSY":4,"ningtan11":3,"pewggls":121}},{"path":"src/main/java/seedu/waddle/model/item/exceptions/DuplicateItemException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ningtan11"},"content":"package seedu.waddle.model.item.exceptions;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"pewggls"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"pewggls"},"content":" * Signals that the operation will result in duplicate Items.","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"pewggls"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"pewggls"},"content":"public class DuplicateItemException extends RuntimeException {","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"pewggls"},"content":"    public DuplicateItemException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"pewggls"},"content":"        super(\"Operation would result in duplicate items\");","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"pewggls"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"ningtan11":1,"pewggls":9}},{"path":"src/main/java/seedu/waddle/model/item/exceptions/ItemNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ningtan11"},"content":"package seedu.waddle.model.item.exceptions;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"pewggls"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"pewggls"},"content":" * Signals that the operation is unable to find the specified item.","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"pewggls"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"pewggls"},"content":"public class ItemNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"ningtan11"},"content":"    public ItemNotFoundException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"ningtan11"},"content":"        super(\"The item could not be found.\");","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"pewggls"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"ningtan11":4,"pewggls":6}},{"path":"src/main/java/seedu/waddle/model/item/exceptions/Period.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CFSY"},"content":"package seedu.waddle.model.item.exceptions;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":" * This class encapsulates a time period.","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"public class Period {","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":"    private final LocalTime start;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":"    private final LocalTime end;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"CFSY"},"content":"     * Constructor.","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"CFSY"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"     * @param start Start time.","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"     * @param end   End time.","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"CFSY"},"content":"    public Period(LocalTime start, LocalTime end) {","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"CFSY"},"content":"        //assert(end.isAfter(start) || start.equals(end)) : \"start and end time must be valid\";","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"        this.start \u003d start;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"CFSY"},"content":"        this.end \u003d end;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"CFSY"},"content":"    public LocalTime getStart() {","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"CFSY"},"content":"        return this.start;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"CFSY"},"content":"    public LocalTime getEnd() {","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"CFSY"},"content":"        return this.end;","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"CFSY"},"content":"    public String getStartString() {","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"CFSY"},"content":"        return this.start.toString();","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"CFSY"},"content":"    public String getEndString() {","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"CFSY"},"content":"        if (this.end.equals(LocalTime.MAX)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"CFSY"},"content":"            return LocalTime.MIDNIGHT.toString() + \" (next day)\";","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"CFSY"},"content":"        return this.end.toString();","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"CFSY"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"CFSY":42}},{"path":"src/main/java/seedu/waddle/model/itinerary/Budget.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pewggls"},"content":"package seedu.waddle.model.itinerary;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"pewggls"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"pewggls"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"pewggls"},"content":" * Represents an Itinerary\u0027s budget.","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"pewggls"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"pewggls"},"content":"public class Budget {","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"pewggls"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"pewggls"},"content":"            \"Budget should only contain numbers.\";","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"pewggls"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+([.][0-9]+)?$\";","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"    private float initialBudget;","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"    private float spending;","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"pewggls"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"pewggls"},"content":"     * Constructs a {@code Budget}.","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"pewggls"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"pewggls"},"content":"     * @param budgetStr A valid value.","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"pewggls"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"pewggls"},"content":"    public Budget(String budgetStr) {","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"pewggls"},"content":"        requireNonNull(budgetStr);","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"pewggls"},"content":"        checkArgument(isValidBudget(budgetStr), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"        this.initialBudget \u003d Float.parseFloat(budgetStr);","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"        this.spending \u003d 0;","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"pewggls"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"pewggls"},"content":"     * Returns true if a given string is a valid budget.","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"pewggls"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"pewggls"},"content":"    public static boolean isValidBudget(String test) {","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"pewggls"},"content":"        if (!test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"pewggls"},"content":"            return false;","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"pewggls"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"pewggls"},"content":"        float budget;","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"pewggls"},"content":"        try {","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"pewggls"},"content":"            budget \u003d Float.valueOf(test);","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"pewggls"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"pewggls"},"content":"            return false;","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"pewggls"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"pewggls"},"content":"        return budget \u003e\u003d 0;","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"pewggls"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"pewggls"},"content":"    public String toString() {","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"ciaoosuuu"},"content":"        return String.valueOf(this.initialBudget);","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"CFSY"},"content":"    public float getValue() {","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"ciaoosuuu"},"content":"        return this.initialBudget;","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"ciaoosuuu"},"content":"    public void updateSpending(float amount) {","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"ciaoosuuu"},"content":"        this.spending +\u003d amount;","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"ciaoosuuu"},"content":"    public float calculateLeftOverBudget() {","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"ciaoosuuu"},"content":"        return this.initialBudget - this.spending;","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"ciaoosuuu"},"content":"    public float getSpending() {","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"ciaoosuuu"},"content":"        return this.spending;","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":66,"author":{"gitId":"ciaoosuuu"},"content":"    public void setSpending(float amt) {","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"ciaoosuuu"},"content":"        this.spending \u003d amt;","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"pewggls"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"pewggls"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"pewggls"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"pewggls"},"content":"                || (other instanceof Budget // instanceof handles nulls","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"CFSY"},"content":"                \u0026\u0026 this.initialBudget \u003d\u003d (((Budget) other).getValue())); // state check","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"pewggls"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"pewggls"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"pewggls"},"content":"        return this.toString().hashCode();","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"pewggls"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"ciaoosuuu":22,"CFSY":2,"pewggls":58}},{"path":"src/main/java/seedu/waddle/model/itinerary/Country.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.model.itinerary;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":" * Represents an Itinerary\u0027s country in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCountry(String)}","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"public class Country {","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"            \"Country should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"    /*","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"     * The first character of the country must not be a whitespace,","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"ciaoosuuu"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"ciaoosuuu"},"content":"    public final String country;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"     * @param country A valid country.","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"    public Country(String country) {","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"        requireNonNull(country);","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"        checkArgument(isValidCountry(country), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"        this.country \u003d country;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"ciaoosuuu"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"ciaoosuuu"},"content":"    public static boolean isValidCountry(String test) {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"ciaoosuuu"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"ciaoosuuu"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"ciaoosuuu"},"content":"    public String toString() {","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"ciaoosuuu"},"content":"        if (country.equals(\"default\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"ciaoosuuu"},"content":"            return \"(Not planned)\";","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"ciaoosuuu"},"content":"        return country;","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"ciaoosuuu"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"ciaoosuuu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"ciaoosuuu"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"ciaoosuuu"},"content":"                || (other instanceof Country // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"ciaoosuuu"},"content":"                \u0026\u0026 country.equals(((Country) other).country)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"ciaoosuuu"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"ciaoosuuu"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"ciaoosuuu"},"content":"        return country.hashCode();","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"ciaoosuuu":62}},{"path":"src/main/java/seedu/waddle/model/itinerary/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.model.itinerary;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":" * Represents an Itinerary\u0027s Date.","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"public class Date {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"            \"Date should be valid\";","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"ciaoosuuu"},"content":"    /*","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"     * The current regex aims to express YYYY-MM-DD, this can be broken with","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"     * expressions like 9999-00-00.","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"ciaoosuuu"},"content":"     * TODO: use another way to validate (can consider using java Datetime class or smth)","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{4}-\\\\d{2}-\\\\d{2}\";","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"CFSY"},"content":"    public final LocalDate date;","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"     * @param date A valid date.","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"    public Date(String date) {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"CFSY"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"ciaoosuuu"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"ciaoosuuu"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"ciaoosuuu"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"CFSY"},"content":"    public LocalDate getValue() {","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"CFSY"},"content":"        return this.date;","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"ciaoosuuu"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"ciaoosuuu"},"content":"    public String toString() {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"CFSY"},"content":"        return date.toString();","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"ciaoosuuu"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"ciaoosuuu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"ciaoosuuu"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"ciaoosuuu"},"content":"                || (other instanceof Date // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"ciaoosuuu"},"content":"                \u0026\u0026 date.equals(((Date) other).date)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"ciaoosuuu"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"ciaoosuuu"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"ciaoosuuu"},"content":"        return date.hashCode();","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"ciaoosuuu":57,"CFSY":8}},{"path":"src/main/java/seedu/waddle/model/itinerary/DayNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.model.itinerary;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"seox123"},"content":"import seedu.waddle.commons.core.index.Index;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"seox123"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"seox123"},"content":" * Represents an Itinerary\u0027s day number element.","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"seox123"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDayNumber(String)}","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"seox123"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"seox123"},"content":"public class DayNumber {","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"seox123"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"seox123"},"content":"            \"Day number should only contain positive numbers\";","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"seox123"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\";","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"seox123"},"content":"    public final Index dayNumber;","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"seox123"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"seox123"},"content":"     * Constructs a {@code DayNumber}.","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"seox123"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"seox123"},"content":"     * @param dayNumber A valid value.","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"seox123"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"seox123"},"content":"    public DayNumber(String dayNumber) {","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"seox123"},"content":"        requireNonNull(dayNumber);","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"seox123"},"content":"        checkArgument(isValidDayNumber(dayNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"seox123"},"content":"        this.dayNumber \u003d Index.fromOneBased(Integer.parseInt(dayNumber));","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"seox123"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"seox123"},"content":"     * Returns true if a given string is a valid day number.","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"seox123"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"seox123"},"content":"    public static boolean isValidDayNumber(String test) {","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"seox123"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"seox123"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"seox123"},"content":"    public String toString() {","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"seox123"},"content":"        return String.valueOf(dayNumber);","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"seox123"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"seox123"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"seox123"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"seox123"},"content":"                || (other instanceof seedu.waddle.model.itinerary.DayNumber // instanceof handles nulls","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"seox123"},"content":"                \u0026\u0026 dayNumber \u003d\u003d ((seedu.waddle.model.itinerary.DayNumber) other).dayNumber); // state check","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"seox123"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"seox123":49}},{"path":"src/main/java/seedu/waddle/model/itinerary/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.model.itinerary;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":" * Represents an itinerary\u0027s description.","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"public class Description {","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"            \"Description should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"    /*","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"ciaoosuuu"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"ciaoosuuu"},"content":"    public final String description;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"     * @param description A valid description.","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"    public Description(String description) {","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"ciaoosuuu"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"ciaoosuuu"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"ciaoosuuu"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"ciaoosuuu"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"ciaoosuuu"},"content":"    public String toString() {","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"ciaoosuuu"},"content":"        return description;","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"ciaoosuuu"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"ciaoosuuu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"ciaoosuuu"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"ciaoosuuu"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"ciaoosuuu"},"content":"                \u0026\u0026 description.equals(((Description) other).description)); // state check","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"ciaoosuuu"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"ciaoosuuu"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"ciaoosuuu"},"content":"        return description.hashCode();","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"ciaoosuuu":59}},{"path":"src/main/java/seedu/waddle/model/itinerary/Itinerary.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.model.itinerary;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"seox123"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"import java.util.List;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"CFSY"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"seox123"},"content":"import seedu.waddle.commons.core.index.Index;","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.index.MultiIndex;","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.item.Day;","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.item.Item;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.item.UniqueItemList;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.text.Text;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"ciaoosuuu"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"ciaoosuuu"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"public class Itinerary {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"    // Details field","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"CFSY"},"content":"    private final Description description;","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"    private final Country country;","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"    private final Date startDate;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"pewggls"},"content":"    private final ItineraryDuration duration;","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"    private final People people;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"pewggls"},"content":"    private final Budget budget;","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"CFSY"},"content":"    private final UniqueItemList unscheduledItemList;","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"CFSY"},"content":"    private final List\u003cDay\u003e days;","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"CFSY"},"content":"    private final Comparator\u003cItem\u003e priorityComparator \u003d new Comparator\u003cItem\u003e() {","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"CFSY"},"content":"        @Override","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"CFSY"},"content":"        public int compare(Item item1, Item item2) {","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"            return item2.getPriority().compareTo(item1.getPriority());","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"CFSY"},"content":"    };","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"ciaoosuuu"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"CFSY"},"content":"    public Itinerary(Description description, Country country, Date startDate, ItineraryDuration duration,","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"pewggls"},"content":"                     People people, Budget budget) {","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"CFSY"},"content":"        requireAllNonNull(description, startDate, duration);","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"CFSY"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"ciaoosuuu"},"content":"        this.country \u003d country;","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"ciaoosuuu"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"pewggls"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"ciaoosuuu"},"content":"        this.people \u003d people;","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"pewggls"},"content":"        this.budget \u003d budget;","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"CFSY"},"content":"        this.unscheduledItemList \u003d new UniqueItemList();","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"CFSY"},"content":"        this.days \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"CFSY"},"content":"        for (int i \u003d 0; i \u003c duration.getValue(); i++) {","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"seox123"},"content":"            // TODO day number should start with 1 instead of 0?","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"CFSY"},"content":"            this.days.add(new Day(i));","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"CFSY"},"content":"    public Description getDescription() {","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"CFSY"},"content":"        return description;","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"ciaoosuuu"},"content":"    public Country getCountry() {","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"ciaoosuuu"},"content":"        return country;","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"ciaoosuuu"},"content":"    public Date getStartDate() {","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"ciaoosuuu"},"content":"        return startDate;","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"pewggls"},"content":"    public ItineraryDuration getDuration() {","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"pewggls"},"content":"        return this.duration;","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"CFSY"},"content":"    public People getPeople() {","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"CFSY"},"content":"        return people;","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"pewggls"},"content":"    public Budget getBudget() {","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"pewggls"},"content":"        return this.budget;","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"CFSY"},"content":"    public UniqueItemList getItemList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"CFSY"},"content":"        return unscheduledItemList;","lastModifiedDate":"2022-10-22"},{"lineNumber":89,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"ciaoosuuu"},"content":"    public List\u003cDay\u003e getDays() {","lastModifiedDate":"2022-10-23"},{"lineNumber":92,"author":{"gitId":"ciaoosuuu"},"content":"        return this.days;","lastModifiedDate":"2022-10-23"},{"lineNumber":93,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":94,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":95,"author":{"gitId":"CFSY"},"content":"    public void setDays(List\u003cDay\u003e dayList) {","lastModifiedDate":"2022-10-25"},{"lineNumber":96,"author":{"gitId":"CFSY"},"content":"        for (int i \u003d 0; i \u003c dayList.size(); i++) {","lastModifiedDate":"2022-10-25"},{"lineNumber":97,"author":{"gitId":"CFSY"},"content":"            if (i \u003c getDuration().getValue()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"CFSY"},"content":"                this.days.set(i, dayList.get(i));","lastModifiedDate":"2022-10-25"},{"lineNumber":99,"author":{"gitId":"CFSY"},"content":"            } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":100,"author":{"gitId":"CFSY"},"content":"                for (Item item : dayList.get(i).deleteDay()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":101,"author":{"gitId":"CFSY"},"content":"                    addItem(item);","lastModifiedDate":"2022-10-25"},{"lineNumber":102,"author":{"gitId":"CFSY"},"content":"                }","lastModifiedDate":"2022-10-25"},{"lineNumber":103,"author":{"gitId":"CFSY"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":104,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":105,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":106,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":107,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"pewggls"},"content":"     * Returns true if both itineraries have the same name.","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"pewggls"},"content":"     * This defines a weaker notion of equality between two itineraries.","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"CFSY"},"content":"    public boolean isSameItinerary(Itinerary otherItinerary) {","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"ciaoosuuu"},"content":"        if (otherItinerary \u003d\u003d this) {","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"ciaoosuuu"},"content":"            return true;","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"ciaoosuuu"},"content":"        return otherItinerary !\u003d null","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"CFSY"},"content":"                \u0026\u0026 otherItinerary.getDescription().equals(getDescription());","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"pewggls"},"content":"    public boolean hasItem(Item item) {","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"CFSY"},"content":"        return this.unscheduledItemList.contains(item);","lastModifiedDate":"2022-10-22"},{"lineNumber":122,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":125,"author":{"gitId":"ciaoosuuu"},"content":"     * Add item into itinerary.","lastModifiedDate":"2022-10-25"},{"lineNumber":126,"author":{"gitId":"CFSY"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":127,"author":{"gitId":"ciaoosuuu"},"content":"     * @param item Item to be added.","lastModifiedDate":"2022-10-25"},{"lineNumber":128,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":129,"author":{"gitId":"pewggls"},"content":"    public void addItem(Item item) {","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"CFSY"},"content":"        this.unscheduledItemList.add(item);","lastModifiedDate":"2022-10-22"},{"lineNumber":131,"author":{"gitId":"ciaoosuuu"},"content":"        sortUnscheduledItemList();","lastModifiedDate":"2022-10-25"},{"lineNumber":132,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":135,"author":{"gitId":"ciaoosuuu"},"content":"     * Remove item from itinerary.","lastModifiedDate":"2022-10-23"},{"lineNumber":136,"author":{"gitId":"CFSY"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":137,"author":{"gitId":"ciaoosuuu"},"content":"     * @param index A MultiIndex specifying position of task.","lastModifiedDate":"2022-10-23"},{"lineNumber":138,"author":{"gitId":"ciaoosuuu"},"content":"     * @return The item to be removed.","lastModifiedDate":"2022-10-23"},{"lineNumber":139,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":140,"author":{"gitId":"ciaoosuuu"},"content":"    public Item removeItem(MultiIndex index) {","lastModifiedDate":"2022-10-23"},{"lineNumber":141,"author":{"gitId":"ciaoosuuu"},"content":"        if (index.getDayIndex() \u003d\u003d null) {","lastModifiedDate":"2022-10-23"},{"lineNumber":142,"author":{"gitId":"ciaoosuuu"},"content":"            return this.unscheduledItemList.remove(index.getTaskIndex().getZeroBased());","lastModifiedDate":"2022-10-23"},{"lineNumber":143,"author":{"gitId":"ciaoosuuu"},"content":"        } else {","lastModifiedDate":"2022-10-23"},{"lineNumber":144,"author":{"gitId":"ciaoosuuu"},"content":"            Day day \u003d this.days.get(index.getDayIndex().getZeroBased());","lastModifiedDate":"2022-10-23"},{"lineNumber":145,"author":{"gitId":"ciaoosuuu"},"content":"            return day.removeItem(index.getTaskIndex());","lastModifiedDate":"2022-10-23"},{"lineNumber":146,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"ciaoosuuu"},"content":"    public void setItem(Item target, Item editedItem, MultiIndex index) throws CommandException {","lastModifiedDate":"2022-10-23"},{"lineNumber":150,"author":{"gitId":"ciaoosuuu"},"content":"        if (index.getDayIndex() \u003d\u003d null) {","lastModifiedDate":"2022-10-23"},{"lineNumber":151,"author":{"gitId":"ciaoosuuu"},"content":"            this.unscheduledItemList.setItem(target, editedItem);","lastModifiedDate":"2022-10-23"},{"lineNumber":152,"author":{"gitId":"ciaoosuuu"},"content":"            sortUnscheduledItemList();","lastModifiedDate":"2022-10-23"},{"lineNumber":153,"author":{"gitId":"ciaoosuuu"},"content":"        } else {","lastModifiedDate":"2022-10-23"},{"lineNumber":154,"author":{"gitId":"ciaoosuuu"},"content":"            Day day \u003d this.days.get(index.getDayIndex().getZeroBased());","lastModifiedDate":"2022-10-23"},{"lineNumber":155,"author":{"gitId":"ciaoosuuu"},"content":"            day.removeItem(index.getTaskIndex());","lastModifiedDate":"2022-10-23"},{"lineNumber":156,"author":{"gitId":"ciaoosuuu"},"content":"            try {","lastModifiedDate":"2022-10-23"},{"lineNumber":157,"author":{"gitId":"ciaoosuuu"},"content":"                day.addItem(editedItem);","lastModifiedDate":"2022-10-23"},{"lineNumber":158,"author":{"gitId":"ciaoosuuu"},"content":"            } catch (CommandException e) {","lastModifiedDate":"2022-10-23"},{"lineNumber":159,"author":{"gitId":"ciaoosuuu"},"content":"                day.addItem(target);","lastModifiedDate":"2022-10-23"},{"lineNumber":160,"author":{"gitId":"ciaoosuuu"},"content":"                throw e;","lastModifiedDate":"2022-10-23"},{"lineNumber":161,"author":{"gitId":"ciaoosuuu"},"content":"            }","lastModifiedDate":"2022-10-23"},{"lineNumber":162,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":163,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":164,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":165,"author":{"gitId":"CFSY"},"content":"    public int getUnscheduledSize() {","lastModifiedDate":"2022-10-27"},{"lineNumber":166,"author":{"gitId":"CFSY"},"content":"        return this.unscheduledItemList.getSize();","lastModifiedDate":"2022-10-22"},{"lineNumber":167,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":168,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":169,"author":{"gitId":"CFSY"},"content":"    public UniqueItemList getUnscheduledItemList() {","lastModifiedDate":"2022-10-22"},{"lineNumber":170,"author":{"gitId":"CFSY"},"content":"        return this.unscheduledItemList;","lastModifiedDate":"2022-10-22"},{"lineNumber":171,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":172,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":173,"author":{"gitId":"CFSY"},"content":"    private void sortUnscheduledItemList() {","lastModifiedDate":"2022-10-22"},{"lineNumber":174,"author":{"gitId":"CFSY"},"content":"        this.unscheduledItemList.sort(priorityComparator);","lastModifiedDate":"2022-10-22"},{"lineNumber":175,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":176,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":177,"author":{"gitId":"CFSY"},"content":"    public Item getItem(MultiIndex index) {","lastModifiedDate":"2022-10-27"},{"lineNumber":178,"author":{"gitId":"CFSY"},"content":"        if (index.getDayIndex() \u003d\u003d null) {","lastModifiedDate":"2022-10-27"},{"lineNumber":179,"author":{"gitId":"CFSY"},"content":"            return this.unscheduledItemList.get(index.getTaskIndex().getZeroBased());","lastModifiedDate":"2022-10-27"},{"lineNumber":180,"author":{"gitId":"CFSY"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":181,"author":{"gitId":"ciaoosuuu"},"content":"            Day day \u003d this.days.get(index.getDayIndex().getZeroBased());","lastModifiedDate":"2022-10-23"},{"lineNumber":182,"author":{"gitId":"CFSY"},"content":"            return day.getItem(index.getTaskIndex());","lastModifiedDate":"2022-10-27"},{"lineNumber":183,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":184,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":185,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":186,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":187,"author":{"gitId":"ciaoosuuu"},"content":"     * Plan an item.","lastModifiedDate":"2022-10-23"},{"lineNumber":188,"author":{"gitId":"CFSY"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":189,"author":{"gitId":"ciaoosuuu"},"content":"     * @param itemIndex Index of item in unscheduled list.","lastModifiedDate":"2022-10-23"},{"lineNumber":190,"author":{"gitId":"seox123"},"content":"     * @param dayNumber Day to include this item.","lastModifiedDate":"2022-10-24"},{"lineNumber":191,"author":{"gitId":"ciaoosuuu"},"content":"     * @param startTime startTime of the item.","lastModifiedDate":"2022-10-23"},{"lineNumber":192,"author":{"gitId":"seox123"},"content":"     * @return The planned item.","lastModifiedDate":"2022-10-24"},{"lineNumber":193,"author":{"gitId":"ciaoosuuu"},"content":"     * @throws CommandException When adding item to specific day leads to conflict in time.","lastModifiedDate":"2022-10-23"},{"lineNumber":194,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":195,"author":{"gitId":"seox123"},"content":"    public Item planItem(Index itemIndex, DayNumber dayNumber, LocalTime startTime) throws CommandException {","lastModifiedDate":"2022-10-24"},{"lineNumber":196,"author":{"gitId":"seox123"},"content":"        Item item \u003d this.unscheduledItemList.get(itemIndex.getZeroBased());","lastModifiedDate":"2022-10-24"},{"lineNumber":197,"author":{"gitId":"seox123"},"content":"        item.setStartTime(startTime);","lastModifiedDate":"2022-10-24"},{"lineNumber":198,"author":{"gitId":"seox123"},"content":"        Day day \u003d this.days.get(dayNumber.dayNumber.getZeroBased());","lastModifiedDate":"2022-10-24"},{"lineNumber":199,"author":{"gitId":"CFSY"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":200,"author":{"gitId":"ciaoosuuu"},"content":"            day.addItem(item);","lastModifiedDate":"2022-10-22"},{"lineNumber":201,"author":{"gitId":"CFSY"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-27"},{"lineNumber":202,"author":{"gitId":"CFSY"},"content":"            // if time conflict detected, reset the time of the item","lastModifiedDate":"2022-10-27"},{"lineNumber":203,"author":{"gitId":"CFSY"},"content":"            item.resetStartTime();","lastModifiedDate":"2022-10-27"},{"lineNumber":204,"author":{"gitId":"CFSY"},"content":"            throw e;","lastModifiedDate":"2022-10-27"},{"lineNumber":205,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":206,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":207,"author":{"gitId":"seox123"},"content":"        this.unscheduledItemList.remove(itemIndex.getZeroBased());","lastModifiedDate":"2022-10-24"},{"lineNumber":208,"author":{"gitId":"ciaoosuuu"},"content":"        this.budget.updateSpending(item.getCost().getValue());","lastModifiedDate":"2022-10-22"},{"lineNumber":209,"author":{"gitId":"seox123"},"content":"        return item;","lastModifiedDate":"2022-10-24"},{"lineNumber":210,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":211,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":212,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":213,"author":{"gitId":"CFSY"},"content":"     * Unplan an item.","lastModifiedDate":"2022-10-27"},{"lineNumber":214,"author":{"gitId":"CFSY"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":215,"author":{"gitId":"CFSY"},"content":"     * @param index A multiIndex to locate the day and index of task within the day","lastModifiedDate":"2022-10-27"},{"lineNumber":216,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":217,"author":{"gitId":"CFSY"},"content":"    public Item unplanItem(MultiIndex index) {","lastModifiedDate":"2022-10-27"},{"lineNumber":218,"author":{"gitId":"ciaoosuuu"},"content":"        Day day \u003d this.days.get(index.getDayIndex().getZeroBased());","lastModifiedDate":"2022-10-23"},{"lineNumber":219,"author":{"gitId":"CFSY"},"content":"        Item unplannedItem \u003d day.removeItem(index.getTaskIndex());","lastModifiedDate":"2022-10-27"},{"lineNumber":220,"author":{"gitId":"CFSY"},"content":"        unplannedItem.resetStartTime();","lastModifiedDate":"2022-10-27"},{"lineNumber":221,"author":{"gitId":"CFSY"},"content":"        addItem(unplannedItem);","lastModifiedDate":"2022-10-27"},{"lineNumber":222,"author":{"gitId":"CFSY"},"content":"        sortUnscheduledItemList();","lastModifiedDate":"2022-10-27"},{"lineNumber":223,"author":{"gitId":"CFSY"},"content":"        this.budget.updateSpending(-unplannedItem.getCost().getValue());","lastModifiedDate":"2022-10-27"},{"lineNumber":224,"author":{"gitId":"CFSY"},"content":"        return unplannedItem;","lastModifiedDate":"2022-10-27"},{"lineNumber":225,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":226,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":227,"author":{"gitId":"CFSY"},"content":"    public String getVacantSlots() {","lastModifiedDate":"2022-10-27"},{"lineNumber":228,"author":{"gitId":"CFSY"},"content":"        StringBuilder vacantSlots \u003d new StringBuilder();","lastModifiedDate":"2022-10-27"},{"lineNumber":229,"author":{"gitId":"CFSY"},"content":"        for (Day day : this.days) {","lastModifiedDate":"2022-10-27"},{"lineNumber":230,"author":{"gitId":"CFSY"},"content":"            vacantSlots.append(day.getVacantSlots()).append(System.getProperty(\"line.separator\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":231,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":232,"author":{"gitId":"CFSY"},"content":"        return vacantSlots.toString();","lastModifiedDate":"2022-10-27"},{"lineNumber":233,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":234,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":235,"author":{"gitId":"CFSY"},"content":"    public ObservableList\u003cObservableList\u003cItem\u003e\u003e getUnmodifiableItemGroups() {","lastModifiedDate":"2022-10-23"},{"lineNumber":236,"author":{"gitId":"CFSY"},"content":"        ObservableList\u003cObservableList\u003cItem\u003e\u003e itemGroups \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-23"},{"lineNumber":237,"author":{"gitId":"CFSY"},"content":"        itemGroups.add(this.unscheduledItemList.asUnmodifiableObservableList());","lastModifiedDate":"2022-10-23"},{"lineNumber":238,"author":{"gitId":"CFSY"},"content":"        for (Day day : this.days) {","lastModifiedDate":"2022-10-23"},{"lineNumber":239,"author":{"gitId":"CFSY"},"content":"            ObservableList\u003cItem\u003e itemList \u003d day.getItemList().asUnmodifiableObservableList();","lastModifiedDate":"2022-10-23"},{"lineNumber":240,"author":{"gitId":"CFSY"},"content":"            itemGroups.add(itemList);","lastModifiedDate":"2022-10-23"},{"lineNumber":241,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":242,"author":{"gitId":"CFSY"},"content":"        return FXCollections.unmodifiableObservableList(itemGroups);","lastModifiedDate":"2022-10-23"},{"lineNumber":243,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":244,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":245,"author":{"gitId":"CFSY"},"content":"    public String getDescriptionString(int indents) {","lastModifiedDate":"2022-10-27"},{"lineNumber":246,"author":{"gitId":"CFSY"},"content":"        return Text.indent(this.description.toString(), indents);","lastModifiedDate":"2022-10-27"},{"lineNumber":247,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":248,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":249,"author":{"gitId":"CFSY"},"content":"    public String getCountryString(int indents) {","lastModifiedDate":"2022-10-27"},{"lineNumber":250,"author":{"gitId":"CFSY"},"content":"        return Text.indent(\"Country: \" + this.country, indents);","lastModifiedDate":"2022-10-27"},{"lineNumber":251,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":252,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":253,"author":{"gitId":"CFSY"},"content":"    public String getDurationString(int indents) {","lastModifiedDate":"2022-10-27"},{"lineNumber":254,"author":{"gitId":"CFSY"},"content":"        return Text.indent(\"Duration: \" + this.duration.getValue() + \" Days\", indents);","lastModifiedDate":"2022-10-27"},{"lineNumber":255,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":256,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":257,"author":{"gitId":"CFSY"},"content":"    public String getTimeString(int indents) {","lastModifiedDate":"2022-10-27"},{"lineNumber":258,"author":{"gitId":"CFSY"},"content":"        if (this.startDate !\u003d null) {","lastModifiedDate":"2022-10-27"},{"lineNumber":259,"author":{"gitId":"CFSY"},"content":"            if (this.duration !\u003d null) {","lastModifiedDate":"2022-10-27"},{"lineNumber":260,"author":{"gitId":"CFSY"},"content":"                return Text.indent(\"Dates: \" + this.startDate + \" - \"","lastModifiedDate":"2022-10-27"},{"lineNumber":261,"author":{"gitId":"CFSY"},"content":"                        + this.startDate.getValue().plusDays(this.duration.getValue()), indents);","lastModifiedDate":"2022-10-27"},{"lineNumber":262,"author":{"gitId":"CFSY"},"content":"            } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":263,"author":{"gitId":"CFSY"},"content":"                return Text.indent(\"Dates: \" + this.startDate, indents);","lastModifiedDate":"2022-10-27"},{"lineNumber":264,"author":{"gitId":"CFSY"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":265,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":266,"author":{"gitId":"CFSY"},"content":"        return Text.indent(\"Dates: (Not planned)\", indents);","lastModifiedDate":"2022-10-27"},{"lineNumber":267,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":268,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":269,"author":{"gitId":"CFSY"},"content":"    public String getPeopleString(int indents) {","lastModifiedDate":"2022-10-27"},{"lineNumber":270,"author":{"gitId":"CFSY"},"content":"        return Text.indent(\"Waddlers: \" + this.people, indents);","lastModifiedDate":"2022-10-27"},{"lineNumber":271,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":272,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":273,"author":{"gitId":"CFSY"},"content":"    public String getBudgetString(int indents) {","lastModifiedDate":"2022-10-27"},{"lineNumber":274,"author":{"gitId":"CFSY"},"content":"        if (this.budget.getSpending() \u003d\u003d 0) {","lastModifiedDate":"2022-10-27"},{"lineNumber":275,"author":{"gitId":"CFSY"},"content":"            return Text.indent(\"Budget: $\" + this.budget.getValue(), indents);","lastModifiedDate":"2022-10-27"},{"lineNumber":276,"author":{"gitId":"CFSY"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":277,"author":{"gitId":"CFSY"},"content":"            return Text.indent(\"Budget: $\" + this.budget.getValue() + \", $\"","lastModifiedDate":"2022-10-27"},{"lineNumber":278,"author":{"gitId":"CFSY"},"content":"                    + this.budget.calculateLeftOverBudget() + \" remaining\", indents);","lastModifiedDate":"2022-10-27"},{"lineNumber":279,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":280,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":281,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":282,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":283,"author":{"gitId":"CFSY"},"content":"     * Generates a text representation of the day.","lastModifiedDate":"2022-10-27"},{"lineNumber":284,"author":{"gitId":"CFSY"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":285,"author":{"gitId":"CFSY"},"content":"     * @return The text representation.","lastModifiedDate":"2022-10-27"},{"lineNumber":286,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":287,"author":{"gitId":"CFSY"},"content":"    public String getTextRepresentation() {","lastModifiedDate":"2022-10-27"},{"lineNumber":288,"author":{"gitId":"CFSY"},"content":"        StringBuilder itineraryText \u003d new StringBuilder();","lastModifiedDate":"2022-10-27"},{"lineNumber":289,"author":{"gitId":"CFSY"},"content":"        itineraryText.append(this)","lastModifiedDate":"2022-10-27"},{"lineNumber":290,"author":{"gitId":"CFSY"},"content":"                .append(System.lineSeparator()).append(System.lineSeparator());","lastModifiedDate":"2022-10-27"},{"lineNumber":291,"author":{"gitId":"CFSY"},"content":"        StringBuilder daysText \u003d new StringBuilder();","lastModifiedDate":"2022-10-27"},{"lineNumber":292,"author":{"gitId":"CFSY"},"content":"        for (Day day : this.days) {","lastModifiedDate":"2022-10-27"},{"lineNumber":293,"author":{"gitId":"CFSY"},"content":"            daysText.append(day.getTextRepresentation());","lastModifiedDate":"2022-10-27"},{"lineNumber":294,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":295,"author":{"gitId":"CFSY"},"content":"        itineraryText.append(daysText);","lastModifiedDate":"2022-10-27"},{"lineNumber":296,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":297,"author":{"gitId":"CFSY"},"content":"        return itineraryText.toString();","lastModifiedDate":"2022-10-27"},{"lineNumber":298,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":299,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":300,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":301,"author":{"gitId":"pewggls"},"content":"     * Returns true if both itineraries have the same identity and data fields.","lastModifiedDate":"2022-10-21"},{"lineNumber":302,"author":{"gitId":"pewggls"},"content":"     * This defines a stronger notion of equality between two itineraries.","lastModifiedDate":"2022-10-21"},{"lineNumber":303,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":304,"author":{"gitId":"ciaoosuuu"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":305,"author":{"gitId":"ciaoosuuu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":306,"author":{"gitId":"ciaoosuuu"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-10"},{"lineNumber":307,"author":{"gitId":"ciaoosuuu"},"content":"            return true;","lastModifiedDate":"2022-10-10"},{"lineNumber":308,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":309,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":310,"author":{"gitId":"ciaoosuuu"},"content":"        if (!(other instanceof Itinerary)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":311,"author":{"gitId":"ciaoosuuu"},"content":"            return false;","lastModifiedDate":"2022-10-10"},{"lineNumber":312,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":313,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":314,"author":{"gitId":"ciaoosuuu"},"content":"        Itinerary otherItinerary \u003d (Itinerary) other;","lastModifiedDate":"2022-10-10"},{"lineNumber":315,"author":{"gitId":"CFSY"},"content":"        return otherItinerary.getDescription().equals(getDescription())","lastModifiedDate":"2022-10-27"},{"lineNumber":316,"author":{"gitId":"ciaoosuuu"},"content":"                \u0026\u0026 otherItinerary.getCountry().equals(getCountry())","lastModifiedDate":"2022-10-10"},{"lineNumber":317,"author":{"gitId":"ciaoosuuu"},"content":"                \u0026\u0026 otherItinerary.getStartDate().equals(getStartDate())","lastModifiedDate":"2022-10-10"},{"lineNumber":318,"author":{"gitId":"pewggls"},"content":"                \u0026\u0026 otherItinerary.getDuration().equals(getDuration())","lastModifiedDate":"2022-10-21"},{"lineNumber":319,"author":{"gitId":"pewggls"},"content":"                \u0026\u0026 otherItinerary.getPeople().equals(getPeople())","lastModifiedDate":"2022-10-21"},{"lineNumber":320,"author":{"gitId":"pewggls"},"content":"                \u0026\u0026 otherItinerary.getBudget().equals(getBudget());","lastModifiedDate":"2022-10-21"},{"lineNumber":321,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":322,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":323,"author":{"gitId":"ciaoosuuu"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":324,"author":{"gitId":"ciaoosuuu"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":325,"author":{"gitId":"ciaoosuuu"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-10-10"},{"lineNumber":326,"author":{"gitId":"CFSY"},"content":"        return Objects.hash(description, country, startDate, duration, people, budget);","lastModifiedDate":"2022-10-27"},{"lineNumber":327,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":328,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":329,"author":{"gitId":"ciaoosuuu"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":330,"author":{"gitId":"ciaoosuuu"},"content":"    public String toString() {","lastModifiedDate":"2022-10-10"},{"lineNumber":331,"author":{"gitId":"ciaoosuuu"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-10"},{"lineNumber":332,"author":{"gitId":"CFSY"},"content":"        builder.append(getDescriptionString(Text.INDENT_NONE))","lastModifiedDate":"2022-10-27"},{"lineNumber":333,"author":{"gitId":"CFSY"},"content":"                .append(System.getProperty(\"line.separator\"))","lastModifiedDate":"2022-10-27"},{"lineNumber":334,"author":{"gitId":"CFSY"},"content":"                .append(getCountryString(Text.INDENT_FOUR))","lastModifiedDate":"2022-10-27"},{"lineNumber":335,"author":{"gitId":"CFSY"},"content":"                .append(System.getProperty(\"line.separator\"))","lastModifiedDate":"2022-10-27"},{"lineNumber":336,"author":{"gitId":"CFSY"},"content":"                .append(getDurationString(Text.INDENT_FOUR))","lastModifiedDate":"2022-10-27"},{"lineNumber":337,"author":{"gitId":"CFSY"},"content":"                .append(System.getProperty(\"line.separator\"))","lastModifiedDate":"2022-10-27"},{"lineNumber":338,"author":{"gitId":"CFSY"},"content":"                .append(getTimeString(Text.INDENT_FOUR))","lastModifiedDate":"2022-10-27"},{"lineNumber":339,"author":{"gitId":"CFSY"},"content":"                .append(System.getProperty(\"line.separator\"))","lastModifiedDate":"2022-10-27"},{"lineNumber":340,"author":{"gitId":"CFSY"},"content":"                .append(getPeopleString(Text.INDENT_FOUR))","lastModifiedDate":"2022-10-27"},{"lineNumber":341,"author":{"gitId":"CFSY"},"content":"                .append(System.getProperty(\"line.separator\"))","lastModifiedDate":"2022-10-27"},{"lineNumber":342,"author":{"gitId":"CFSY"},"content":"                .append(getBudgetString(Text.INDENT_FOUR));","lastModifiedDate":"2022-10-27"},{"lineNumber":343,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":344,"author":{"gitId":"ciaoosuuu"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":345,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":346,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":347,"author":{"gitId":"ciaoosuuu"},"content":"    public void setSpending(Budget budget) {","lastModifiedDate":"2022-10-23"},{"lineNumber":348,"author":{"gitId":"ciaoosuuu"},"content":"        this.budget.setSpending(budget.getSpending());","lastModifiedDate":"2022-10-23"},{"lineNumber":349,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":350,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"ciaoosuuu":134,"CFSY":172,"pewggls":30,"ningtan11":1,"seox123":13}},{"path":"src/main/java/seedu/waddle/model/itinerary/ItineraryDuration.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pewggls"},"content":"package seedu.waddle.model.itinerary;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"pewggls"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"pewggls"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"pewggls"},"content":" * Represents an Itinerary\u0027s duration in days.","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"pewggls"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"pewggls"},"content":"public class ItineraryDuration {","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"pewggls"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"pewggls"},"content":"            \"Duration should only contain a positive number.\";","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"pewggls"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\";","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"pewggls"},"content":"    private final int duration;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"pewggls"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"pewggls"},"content":"     * Constructs a {@code ItineraryDuration}.","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"pewggls"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"pewggls"},"content":"     * @param duration A valid duration.","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"pewggls"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"pewggls"},"content":"    public ItineraryDuration(String duration) {","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"pewggls"},"content":"        requireNonNull(duration);","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"pewggls"},"content":"        checkArgument(isValidDuration(duration), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"pewggls"},"content":"        this.duration \u003d Integer.parseInt(duration);","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"pewggls"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"pewggls"},"content":"     * Returns true if a given string is a valid duration.","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"pewggls"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"pewggls"},"content":"    public static boolean isValidDuration(String test) {","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"pewggls"},"content":"        if (!test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"pewggls"},"content":"            return false;","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"pewggls"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"pewggls"},"content":"        return Integer.parseInt(test) \u003e\u003d 0;","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"CFSY"},"content":"    public int getValue() {","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"CFSY"},"content":"        return this.duration;","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"pewggls"},"content":"    // TODO: implement with Date","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"pewggls"},"content":"    public Date getEndFromStart(Date date) {","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"pewggls"},"content":"        return date;","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"pewggls"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"pewggls"},"content":"    public String toString() {","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"pewggls"},"content":"        return String.valueOf(duration);","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"pewggls"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"pewggls"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"pewggls"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"pewggls"},"content":"                || (other instanceof ItineraryDuration // instanceof handles nulls","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"pewggls"},"content":"                \u0026\u0026 duration \u003d\u003d (((ItineraryDuration) other).duration)); // state check","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"pewggls"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"pewggls"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"pewggls"},"content":"        return toString().hashCode();","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"pewggls"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"CFSY":4,"pewggls":60}},{"path":"src/main/java/seedu/waddle/model/itinerary/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.model.itinerary;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.util.StringUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cItinerary\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"    public boolean test(Itinerary itinerary) {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"CFSY"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(itinerary.getDescription()","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"                        .description, keyword));","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"ciaoosuuu":4,"CFSY":2,"-":26}},{"path":"src/main/java/seedu/waddle/model/itinerary/People.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.model.itinerary;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":" * Represents an Itinerary\u0027s people element.","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":" * For now, it only records the number of people, can extend to contain names or person object.","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPeople(String)}","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"public class People {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"seox123"},"content":"            \"Number of people should only contain positive numbers\";","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"seox123"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\";","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"ciaoosuuu"},"content":"    public final String numOfPeople;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"seox123"},"content":"     * Constructs a {@code People}.","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"ciaoosuuu"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"ciaoosuuu"},"content":"     * @param numOfPeople A valid value.","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"    public People(String numOfPeople) {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"        requireNonNull(numOfPeople);","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"        checkArgument(isValidPeople(numOfPeople), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"        this.numOfPeople \u003d numOfPeople;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"seox123"},"content":"     * Returns true if a given string is a valid number of people.","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"    public static boolean isValidPeople(String test) {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"ciaoosuuu"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"    public String toString() {","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"ciaoosuuu"},"content":"        return numOfPeople;","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"ciaoosuuu"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"ciaoosuuu"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"ciaoosuuu"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"ciaoosuuu"},"content":"                || (other instanceof People // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"ciaoosuuu"},"content":"                \u0026\u0026 numOfPeople.equals(((People) other).numOfPeople)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"ciaoosuuu"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"ciaoosuuu"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"ciaoosuuu"},"content":"        return numOfPeople.hashCode();","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"ciaoosuuu":51,"seox123":4}},{"path":"src/main/java/seedu/waddle/model/itinerary/UniqueItineraryList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.model.itinerary;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.itinerary.exceptions.DuplicateItineraryException;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.itinerary.exceptions.ItineraryNotFoundException;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":" * @see Itinerary#isSameItinerary(Itinerary)","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"CFSY"},"content":"public class UniqueItineraryList implements Iterable\u003cItinerary\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"    private final ObservableList\u003cItinerary\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"    private final ObservableList\u003cItinerary\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"    public boolean contains(Itinerary toCheck) {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"CFSY"},"content":"        return internalList.stream().anyMatch(toCheck::isSameItinerary);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"ciaoosuuu"},"content":"    public void add(Itinerary toAdd) {","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"CFSY"},"content":"            throw new DuplicateItineraryException();","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"CFSY"},"content":"    public void setItinerary(Itinerary target, Itinerary editedItinerary) {","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"ciaoosuuu"},"content":"        requireAllNonNull(target, editedItinerary);","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"CFSY"},"content":"            throw new ItineraryNotFoundException();","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"CFSY"},"content":"        if (!target.isSameItinerary(editedItinerary) \u0026\u0026 contains(editedItinerary)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"CFSY"},"content":"            throw new DuplicateItineraryException();","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"ciaoosuuu"},"content":"        internalList.set(index, editedItinerary);","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"ciaoosuuu"},"content":"    public void remove(Itinerary toRemove) {","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"CFSY"},"content":"            throw new ItineraryNotFoundException();","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"CFSY"},"content":"    public void setItineraries(UniqueItineraryList replacement) {","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"CFSY"},"content":"    public void setItineraries(List\u003cItinerary\u003e itineraries) {","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"ciaoosuuu"},"content":"        requireAllNonNull(itineraries);","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"CFSY"},"content":"        if (!itinerariesAreUnique(itineraries)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"CFSY"},"content":"            throw new DuplicateItineraryException();","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"ciaoosuuu"},"content":"        internalList.setAll(itineraries);","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"ciaoosuuu"},"content":"    public ObservableList\u003cItinerary\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"ciaoosuuu"},"content":"    public Iterator\u003cItinerary\u003e iterator() {","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"CFSY"},"content":"                || (other instanceof UniqueItineraryList // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"CFSY"},"content":"                        \u0026\u0026 internalList.equals(((UniqueItineraryList) other).internalList));","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"CFSY"},"content":"    private boolean itinerariesAreUnique(List\u003cItinerary\u003e itineraries) {","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"ciaoosuuu"},"content":"        for (int i \u003d 0; i \u003c itineraries.size() - 1; i++) {","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"ciaoosuuu"},"content":"            for (int j \u003d i + 1; j \u003c itineraries.size(); j++) {","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"CFSY"},"content":"                if (itineraries.get(i).isSameItinerary(itineraries.get(j))) {","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ciaoosuuu":15,"CFSY":19,"-":103}},{"path":"src/main/java/seedu/waddle/model/itinerary/exceptions/DuplicateItineraryException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.model.itinerary.exceptions;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"public class DuplicateItineraryException extends RuntimeException {","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"    public DuplicateItineraryException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":"        super(\"Operation would result in duplicate itineraries\");","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"ciaoosuuu":1,"CFSY":3,"-":7}},{"path":"src/main/java/seedu/waddle/model/itinerary/exceptions/ItineraryNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.model.itinerary.exceptions;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"public class ItineraryNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"ciaoosuuu":1,"CFSY":1,"-":4}},{"path":"src/main/java/seedu/waddle/model/text/Text.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CFSY"},"content":"package seedu.waddle.model.text;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":" * This class contains methods for text related operations.","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"public class Text {","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"    public static final int INDENT_NONE \u003d 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"    public static final int INDENT_TWO \u003d 2;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":"    public static final int INDENT_FOUR \u003d 4;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":"     * Indents the input text by specified amount of spaces.","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"CFSY"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"CFSY"},"content":"     * @param text    Text to indent.","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"     * @param indents Number of spaces to indent.","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"     * @return The indented text.","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"CFSY"},"content":"    public static String indent(String text, int indents) {","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"CFSY"},"content":"        String indentText \u003d \" \".repeat(indents);","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"        if (indents \u003d\u003d 0 || text.equals(\"\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"CFSY"},"content":"            return text;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"        return indentText + text.replaceAll(System.lineSeparator(), System.lineSeparator() + indentText);","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"CFSY"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"CFSY":25}},{"path":"src/main/java/seedu/waddle/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.model.util;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.ReadOnlyWaddle;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.Waddle;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Budget;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Country;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Date;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Description;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.ItineraryDuration;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.People;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"public class SampleDataUtil {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"    public static Itinerary[] getSampleItineraries() {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"        return new Itinerary[]{","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"            new Itinerary(new Description(\"Graduation Trip\"), new Country(\"Singapore\"), new Date(\"2025-07-30\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"pewggls"},"content":"                    new ItineraryDuration(\"30\"), new People(\"5\"), new Budget(\"1000\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"ciaoosuuu"},"content":"            new Itinerary(new Description(\"Winter Trip\"), new Country(\"Sweden\"), new Date(\"2022-11-15\"),","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"pewggls"},"content":"                    new ItineraryDuration(\"7\"), new People(\"3\"), new Budget(\"5000\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":"        };","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"    public static ReadOnlyWaddle getSampleWaddle() {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"        Waddle sampleWaddle \u003d new Waddle();","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"CFSY"},"content":"        for (Itinerary sampleItinerary : getSampleItineraries()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"CFSY"},"content":"            sampleWaddle.addItinerary(sampleItinerary);","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"        return sampleWaddle;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"ciaoosuuu":18,"CFSY":8,"pewggls":8}},{"path":"src/main/java/seedu/waddle/storage/JsonAdaptedDay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.storage;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"seox123"},"content":"import java.util.List;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"seox123"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"seox123"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"seox123"},"content":"import seedu.waddle.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.item.Day;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.item.Item;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"seox123"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"seox123"},"content":" * Jackson-friendly version of {@link Day}.","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"seox123"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"seox123"},"content":"public class JsonAdaptedDay {","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"seox123"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Item\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"seox123"},"content":"    public static final String MESSAGE_CLASHING_ITEMS \u003d \"Day %d contains Items with clashing timings!\";","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"seox123"},"content":"    private final Integer dayNumber;","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"seox123"},"content":"    private final List\u003cJsonAdaptedItem\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"seox123"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"seox123"},"content":"     * Constructs a {@code JsonAdaptedDay} with the given day details.","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"seox123"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"seox123"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"seox123"},"content":"    public JsonAdaptedDay(@JsonProperty(\"dayNumber\") Integer dayNumber,","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"seox123"},"content":"                          @JsonProperty(\"items\") List\u003cJsonAdaptedItem\u003e items) {","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"seox123"},"content":"        this.dayNumber \u003d dayNumber;","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"seox123"},"content":"        this.items.addAll(items);","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"seox123"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"seox123"},"content":"     * Converts a given {@code Day} into this class for Jackson use.","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"seox123"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"seox123"},"content":"    public JsonAdaptedDay(Day source) {","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"seox123"},"content":"        dayNumber \u003d source.getDayNumber();","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"seox123"},"content":"        for (Item item : source.getItemList()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"seox123"},"content":"            items.add(new JsonAdaptedItem(item));","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"seox123"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"seox123"},"content":"     * Converts this Jackson-friendly adapted item object into the model\u0027s {@code Item} object.","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"seox123"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"seox123"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted item.","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"seox123"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"seox123"},"content":"    public Day toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"seox123"},"content":"        if (dayNumber \u003d\u003d null) {","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"seox123"},"content":"            // TODO change to getSimpleName?","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"seox123"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Day Number\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"seox123"},"content":"        final int modelDayNumber \u003d dayNumber;","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"seox123"},"content":"        Day day \u003d new Day(modelDayNumber);","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"seox123"},"content":"        for (JsonAdaptedItem jsonAdaptedItem : items) {","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"seox123"},"content":"            Item item \u003d jsonAdaptedItem.toModelType();","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"seox123"},"content":"            try {","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"seox123"},"content":"                day.addItem(item);","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"seox123"},"content":"            } catch (CommandException e) {","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"seox123"},"content":"                throw new IllegalValueException(String.format(MESSAGE_CLASHING_ITEMS, modelDayNumber));","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"seox123"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"seox123"},"content":"        return day;","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"seox123"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"seox123":70}},{"path":"src/main/java/seedu/waddle/storage/JsonAdaptedItem.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pewggls"},"content":"package seedu.waddle.storage;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"pewggls"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"pewggls"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.item.Cost;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.item.Duration;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.item.Item;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.item.Priority;","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Description;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"pewggls"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"pewggls"},"content":" * Jackson-friendly version of {@link Item}.","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"pewggls"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"pewggls"},"content":"public class JsonAdaptedItem {","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"pewggls"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Item\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"pewggls"},"content":"    private final String description;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"    private final Integer stars;","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"ningtan11"},"content":"    private final String cost;","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"seox123"},"content":"    private final String duration;","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"seox123"},"content":"    private final String startTime;","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"pewggls"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"pewggls"},"content":"     * Constructs a {@code JsonAdaptedItem} with the given item details.","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"pewggls"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"pewggls"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"seox123"},"content":"    public JsonAdaptedItem(@JsonProperty(\"description\") String description,","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"CFSY"},"content":"                           @JsonProperty(\"priority\") Integer stars,","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"ningtan11"},"content":"                           @JsonProperty(\"cost\") String cost,","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"seox123"},"content":"                           @JsonProperty(\"duration\") String duration,","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"seox123"},"content":"                           @JsonProperty(\"startTime\") String startTime) {","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"pewggls"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"CFSY"},"content":"        this.stars \u003d stars;","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"ningtan11"},"content":"        this.cost \u003d cost;","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"seox123"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"seox123"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"pewggls"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"pewggls"},"content":"     * Converts a given {@code Item} into this class for Jackson use.","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"pewggls"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"pewggls"},"content":"    public JsonAdaptedItem(Item source) {","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"ciaoosuuu"},"content":"        description \u003d source.getDescription().description;","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"CFSY"},"content":"        stars \u003d source.getPriority().getValue();","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"ningtan11"},"content":"        cost \u003d source.getCost().toString();","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"CFSY"},"content":"        //TODO duration and startTime null error","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"seox123"},"content":"        duration \u003d source.getDuration().toString();","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"seox123"},"content":"        if (source.getStartTime() \u003d\u003d null) {","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"seox123"},"content":"            startTime \u003d null;","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"seox123"},"content":"        } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"seox123"},"content":"            startTime \u003d source.getStartTime().toString();","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"pewggls"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"pewggls"},"content":"     * Converts this Jackson-friendly adapted item object into the model\u0027s {@code Item} object.","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"pewggls"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"pewggls"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted item.","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"pewggls"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"pewggls"},"content":"    public Item toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"pewggls"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"pewggls"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Item.class.getSimpleName()));","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"pewggls"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"pewggls"},"content":"        /*","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"pewggls"},"content":"        TODO: check if description is valid","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"pewggls"},"content":"        if (!Item.isValidDescription(description)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"pewggls"},"content":"            throw new IllegalValueException(Item.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"pewggls"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"pewggls"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"pewggls"},"content":"        */","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"ciaoosuuu"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"CFSY"},"content":"        if (stars \u003d\u003d null) {","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"seox123"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-18"},{"lineNumber":81,"author":{"gitId":"seox123"},"content":"                String.format(MISSING_FIELD_MESSAGE_FORMAT, Priority.class.getSimpleName()));","lastModifiedDate":"2022-10-18"},{"lineNumber":82,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":83,"author":{"gitId":"CFSY"},"content":"        if (!Priority.isValidPriority(stars)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"seox123"},"content":"            throw new IllegalValueException(Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-18"},{"lineNumber":85,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":86,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":87,"author":{"gitId":"CFSY"},"content":"        final Priority modelPriority \u003d new Priority(stars);","lastModifiedDate":"2022-10-25"},{"lineNumber":88,"author":{"gitId":"ningtan11"},"content":"        final Cost modelCost \u003d new Cost(cost);","lastModifiedDate":"2022-10-19"},{"lineNumber":89,"author":{"gitId":"seox123"},"content":"        final Duration modelDuration \u003d new Duration(duration);","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"seox123"},"content":"        Item item \u003d new Item(modelDescription, modelPriority, modelCost, modelDuration);","lastModifiedDate":"2022-10-25"},{"lineNumber":92,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":93,"author":{"gitId":"seox123"},"content":"        if (startTime !\u003d null) {","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"seox123"},"content":"            final LocalTime modelStartTime \u003d LocalTime.parse(startTime);","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"seox123"},"content":"            item.setStartTime(modelStartTime);","lastModifiedDate":"2022-10-25"},{"lineNumber":96,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":97,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":98,"author":{"gitId":"seox123"},"content":"        return item;","lastModifiedDate":"2022-10-25"},{"lineNumber":99,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"pewggls"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"ciaoosuuu":3,"CFSY":8,"pewggls":51,"ningtan11":6,"seox123":33}},{"path":"src/main/java/seedu/waddle/storage/JsonAdaptedItinerary.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"pewggls"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"pewggls"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.item.Day;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.item.Item;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Budget;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Country;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Date;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Description;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.ItineraryDuration;","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.People;","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"ciaoosuuu"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"ciaoosuuu"},"content":" * Jackson-friendly version of {@link Itinerary}.","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"ciaoosuuu"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"class JsonAdaptedItinerary {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Itinerary\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"pewggls"},"content":"    public static final String MESSAGE_DUPLICATE_ITEM \u003d \"Item list contains duplicate items.\";","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"    private final String name;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"    private final String country;","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"    private final String startDate;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"pewggls"},"content":"    private final String duration;","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"    private final String people;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"pewggls"},"content":"    private final String budget;","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"pewggls"},"content":"    private final List\u003cJsonAdaptedItem\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"seox123"},"content":"    private final List\u003cJsonAdaptedDay\u003e days \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"ciaoosuuu"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given itinerary details.","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"ciaoosuuu"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"CFSY"},"content":"    public JsonAdaptedItinerary(@JsonProperty(\"name\") String name, @JsonProperty(\"country\") String country,","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"pewggls"},"content":"                                @JsonProperty(\"startDate\") String startDate, @JsonProperty(\"duration\") String duration,","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"pewggls"},"content":"                                @JsonProperty(\"people\") String people,","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"pewggls"},"content":"                                @JsonProperty(\"budget\") String budget,","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"seox123"},"content":"                                @JsonProperty(\"items\") List\u003cJsonAdaptedItem\u003e items,","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"seox123"},"content":"                                @JsonProperty(\"days\") List\u003cJsonAdaptedDay\u003e days) {","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"ciaoosuuu"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"ciaoosuuu"},"content":"        this.country \u003d country;","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"ciaoosuuu"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"pewggls"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"ciaoosuuu"},"content":"        this.people \u003d people;","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"pewggls"},"content":"        this.budget \u003d budget;","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"pewggls"},"content":"        this.items.addAll(items);","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"seox123"},"content":"        this.days.addAll(days);","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"pewggls"},"content":"     * Converts a given {@code Itinerary} into this class for Jackson use.","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"CFSY"},"content":"    public JsonAdaptedItinerary(Itinerary source) {","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"CFSY"},"content":"        name \u003d source.getDescription().description;","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"ciaoosuuu"},"content":"        country \u003d source.getCountry().country;","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"CFSY"},"content":"        startDate \u003d source.getStartDate().date.toString();","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"pewggls"},"content":"        duration \u003d source.getDuration().toString();","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"ciaoosuuu"},"content":"        people \u003d source.getPeople().numOfPeople;","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"pewggls"},"content":"        budget \u003d source.getBudget().toString();","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"pewggls"},"content":"        for (Item item : source.getItemList()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"pewggls"},"content":"            items.add(new JsonAdaptedItem(item));","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"pewggls"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"seox123"},"content":"        for (Day day : source.getDays()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"seox123"},"content":"            days.add(new JsonAdaptedDay(day));","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"ciaoosuuu"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"ciaoosuuu"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"ciaoosuuu"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"ciaoosuuu"},"content":"    public Itinerary toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"ciaoosuuu"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"ciaoosuuu"},"content":"            throw new IllegalValueException(String.format(","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"ciaoosuuu"},"content":"                    MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName()));","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"ciaoosuuu"},"content":"        if (!Description.isValidDescription(name)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"ciaoosuuu"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"ciaoosuuu"},"content":"        final Description modelName \u003d new Description(name);","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"ciaoosuuu"},"content":"        if (country \u003d\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"ciaoosuuu"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Country.class.getSimpleName()));","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"ciaoosuuu"},"content":"        if (!Country.isValidCountry(country)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"ciaoosuuu"},"content":"            throw new IllegalValueException(Country.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"ciaoosuuu"},"content":"        final Country modelCountry \u003d new Country(country);","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"ciaoosuuu"},"content":"        if (startDate \u003d\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"ciaoosuuu"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"ciaoosuuu"},"content":"        if (!Date.isValidDate(startDate)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"ciaoosuuu"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"ciaoosuuu"},"content":"        final Date modelStartDate \u003d new Date(startDate);","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"pewggls"},"content":"        if (duration \u003d\u003d null) {","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"pewggls"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-21"},{"lineNumber":111,"author":{"gitId":"pewggls"},"content":"                    ItineraryDuration.class.getSimpleName()));","lastModifiedDate":"2022-10-21"},{"lineNumber":112,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"pewggls"},"content":"        if (!ItineraryDuration.isValidDuration(duration)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":114,"author":{"gitId":"ciaoosuuu"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"pewggls"},"content":"        final ItineraryDuration modelDuration \u003d new ItineraryDuration(duration);","lastModifiedDate":"2022-10-21"},{"lineNumber":117,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"ciaoosuuu"},"content":"        if (people \u003d\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"pewggls"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-21"},{"lineNumber":120,"author":{"gitId":"pewggls"},"content":"                    People.class.getSimpleName()));","lastModifiedDate":"2022-10-21"},{"lineNumber":121,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"ciaoosuuu"},"content":"        if (!People.isValidPeople(people)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"ciaoosuuu"},"content":"            throw new IllegalValueException(People.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"ciaoosuuu"},"content":"        final People modelPeople \u003d new People(people);","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"pewggls"},"content":"        if (budget \u003d\u003d null) {","lastModifiedDate":"2022-10-21"},{"lineNumber":128,"author":{"gitId":"pewggls"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Budget.class.getSimpleName()));","lastModifiedDate":"2022-10-21"},{"lineNumber":129,"author":{"gitId":"pewggls"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":130,"author":{"gitId":"pewggls"},"content":"        if (!Budget.isValidBudget(budget)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":131,"author":{"gitId":"pewggls"},"content":"            throw new IllegalValueException(Budget.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":132,"author":{"gitId":"pewggls"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":133,"author":{"gitId":"pewggls"},"content":"        final Budget modelBudget \u003d new Budget(budget);","lastModifiedDate":"2022-10-21"},{"lineNumber":134,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":135,"author":{"gitId":"pewggls"},"content":"        Itinerary itinerary \u003d new Itinerary(modelName, modelCountry, modelStartDate, modelDuration,","lastModifiedDate":"2022-10-21"},{"lineNumber":136,"author":{"gitId":"pewggls"},"content":"                modelPeople, modelBudget);","lastModifiedDate":"2022-10-21"},{"lineNumber":137,"author":{"gitId":"pewggls"},"content":"        for (JsonAdaptedItem jsonAdaptedItem : items) {","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"pewggls"},"content":"            Item item \u003d jsonAdaptedItem.toModelType();","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"pewggls"},"content":"            if (itinerary.hasItem(item)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"pewggls"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_ITEM);","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"pewggls"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"pewggls"},"content":"            itinerary.addItem(item);","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"pewggls"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":145,"author":{"gitId":"seox123"},"content":"        final List\u003cDay\u003e modelDays \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-25"},{"lineNumber":146,"author":{"gitId":"seox123"},"content":"        for (JsonAdaptedDay jsonAdaptedDay : days) {","lastModifiedDate":"2022-10-25"},{"lineNumber":147,"author":{"gitId":"seox123"},"content":"            Day day \u003d jsonAdaptedDay.toModelType();","lastModifiedDate":"2022-10-25"},{"lineNumber":148,"author":{"gitId":"seox123"},"content":"            modelDays.add(day);","lastModifiedDate":"2022-10-25"},{"lineNumber":149,"author":{"gitId":"seox123"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":150,"author":{"gitId":"seox123"},"content":"        itinerary.setDays(modelDays);","lastModifiedDate":"2022-10-25"},{"lineNumber":151,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":152,"author":{"gitId":"pewggls"},"content":"        return itinerary;","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"ciaoosuuu":81,"CFSY":5,"pewggls":53,"seox123":16}},{"path":"src/main/java/seedu/waddle/storage/JsonSerializableWaddle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.ReadOnlyWaddle;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.Waddle;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"CFSY"},"content":"@JsonRootName(value \u003d \"waddle\")","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"class JsonSerializableWaddle {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"    public static final String MESSAGE_DUPLICATE_ITINERARY \u003d \"Itinerary list contains duplicate itinerary(ies).\";","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"CFSY"},"content":"    private final List\u003cJsonAdaptedItinerary\u003e itineraries \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given itineraries.","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"CFSY"},"content":"    public JsonSerializableWaddle(@JsonProperty(\"itineraries\") List\u003cJsonAdaptedItinerary\u003e itineraries) {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"        this.itineraries.addAll(itineraries);","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"CFSY"},"content":"    public JsonSerializableWaddle(ReadOnlyWaddle source) {","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"CFSY"},"content":"        itineraries.addAll(source.getItineraryList().stream().map(JsonAdaptedItinerary::new)","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"CFSY"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"CFSY"},"content":"    public Waddle toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"CFSY"},"content":"        Waddle addressBook \u003d new Waddle();","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"CFSY"},"content":"        for (JsonAdaptedItinerary jsonAdaptedItinerary : itineraries) {","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"CFSY"},"content":"            Itinerary itinerary \u003d jsonAdaptedItinerary.toModelType();","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"CFSY"},"content":"            if (addressBook.hasItinerary(itinerary)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"CFSY"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_ITINERARY);","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"CFSY"},"content":"            addressBook.addItinerary(itinerary);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ciaoosuuu":3,"CFSY":19,"-":39}},{"path":"src/main/java/seedu/waddle/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.util.JsonUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"ciaoosuuu":5,"-":42}},{"path":"src/main/java/seedu/waddle/storage/JsonWaddleStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.util.FileUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.util.JsonUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.ReadOnlyWaddle;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"public class JsonWaddleStorage implements WaddleStorage {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonWaddleStorage.class);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"    public JsonWaddleStorage(Path filePath) {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"CFSY"},"content":"    public Path getWaddleFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"CFSY"},"content":"    public Optional\u003cReadOnlyWaddle\u003e readWaddle() throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"CFSY"},"content":"        return readWaddle(filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"CFSY"},"content":"     * Similar to {@link #readWaddle()}.","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"CFSY"},"content":"    public Optional\u003cReadOnlyWaddle\u003e readWaddle(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"CFSY"},"content":"        Optional\u003cJsonSerializableWaddle\u003e jsonWaddle \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"CFSY"},"content":"                filePath, JsonSerializableWaddle.class);","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"CFSY"},"content":"        if (!jsonWaddle.isPresent()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"CFSY"},"content":"            return Optional.of(jsonWaddle.get().toModelType());","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"CFSY"},"content":"    public void saveWaddle(ReadOnlyWaddle addressBook) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"CFSY"},"content":"        saveWaddle(addressBook, filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"CFSY"},"content":"     * Similar to {@link #saveWaddle(ReadOnlyWaddle)}.","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"seox123"},"content":"    public void saveWaddle(ReadOnlyWaddle waddle, Path filePath) throws IOException {","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"seox123"},"content":"        requireNonNull(waddle);","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"seox123"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableWaddle(waddle), filePath);","lastModifiedDate":"2022-10-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ciaoosuuu":6,"CFSY":16,"-":55,"seox123":3}},{"path":"src/main/java/seedu/waddle/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.ReadOnlyWaddle;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"public interface Storage extends WaddleStorage, UserPrefsStorage {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"CFSY"},"content":"    Path getWaddleFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"    Optional\u003cReadOnlyWaddle\u003e readWaddle() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"CFSY"},"content":"    void saveWaddle(ReadOnlyWaddle addressBook) throws IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ciaoosuuu":4,"CFSY":5,"-":23}},{"path":"src/main/java/seedu/waddle/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.ReadOnlyWaddle;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"    private final WaddleStorage waddleStorage;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"CFSY"},"content":"    private final UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"    public StorageManager(WaddleStorage waddleStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"        this.waddleStorage \u003d waddleStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"CFSY"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Waddle methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"CFSY"},"content":"    public Path getWaddleFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"CFSY"},"content":"        return waddleStorage.getWaddleFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"CFSY"},"content":"    public Optional\u003cReadOnlyWaddle\u003e readWaddle() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"CFSY"},"content":"        return readWaddle(waddleStorage.getWaddleFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"CFSY"},"content":"    public Optional\u003cReadOnlyWaddle\u003e readWaddle(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"CFSY"},"content":"        return waddleStorage.readWaddle(filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"CFSY"},"content":"    public void saveWaddle(ReadOnlyWaddle addressBook) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"CFSY"},"content":"        saveWaddle(addressBook, waddleStorage.getWaddleFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"CFSY"},"content":"    public void saveWaddle(ReadOnlyWaddle addressBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"CFSY"},"content":"        waddleStorage.saveWaddle(addressBook, filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ciaoosuuu":5,"CFSY":16,"-":57}},{"path":"src/main/java/seedu/waddle/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.UserPrefs;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":" * Represents a storage for {@link seedu.waddle.model.UserPrefs}.","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"     * Saves the given {@link seedu.waddle.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"ciaoosuuu":6,"-":30}},{"path":"src/main/java/seedu/waddle/storage/WaddleStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CFSY"},"content":"package seedu.waddle.storage;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.ReadOnlyWaddle;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.Waddle;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"CFSY"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":" * Represents a storage for {@link Waddle}.","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"CFSY"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"CFSY"},"content":"public interface WaddleStorage {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"CFSY"},"content":"    Path getWaddleFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"     * Returns AddressBook data as a {@link ReadOnlyWaddle}.","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"CFSY"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"CFSY"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"    Optional\u003cReadOnlyWaddle\u003e readWaddle() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"CFSY"},"content":"     * @see #getWaddleFilePath()","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"CFSY"},"content":"    Optional\u003cReadOnlyWaddle\u003e readWaddle(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"CFSY"},"content":"     * Saves the given {@link ReadOnlyWaddle} to the storage.","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"CFSY"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"CFSY"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"CFSY"},"content":"    void saveWaddle(ReadOnlyWaddle addressBook) throws IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"CFSY"},"content":"     * @see #saveWaddle(ReadOnlyWaddle)","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"CFSY"},"content":"    void saveWaddle(ReadOnlyWaddle addressBook, Path filePath) throws IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"CFSY"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"CFSY":46}},{"path":"src/main/java/seedu/waddle/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.commands.CommandResult;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"ciaoosuuu"},"content":"         * @see seedu.waddle.logic.Logic#execute(String)","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"ciaoosuuu":5,"-":80}},{"path":"src/main/java/seedu/waddle/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"ningtan11"},"content":"    public static final String USERGUIDE_URL \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"ningtan11"},"content":"            \"https://github.com/AY2223S1-CS2103T-W11-4/tp/blob/master/docs/UserGuide.md\";","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ciaoosuuu":2,"ningtan11":2,"-":99}},{"path":"src/main/java/seedu/waddle/ui/ItemCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ningtan11"},"content":"package seedu.waddle.ui;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"ningtan11"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"ningtan11"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"ningtan11"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"ningtan11"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.item.Item;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.text.Text;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"ningtan11"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"ningtan11"},"content":" * An UI component that displays information of a {@code Item}.","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"ningtan11"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"ningtan11"},"content":"public class ItemCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"ningtan11"},"content":"    private static final String FXML \u003d \"ItemListCard.fxml\";","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"ningtan11"},"content":"    public final Item item;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"ningtan11"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"ningtan11"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"ningtan11"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"ningtan11"},"content":"    private Label description;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"ningtan11"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"ningtan11"},"content":"    private Label id;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"ningtan11"},"content":"    // Priority and Category have not yet been implemented","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"CFSY"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"CFSY"},"content":"    private Label priority;","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"    private Label duration;","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"CFSY"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"CFSY"},"content":"    private Label time;","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"CFSY"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"    private Label cost;","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"ningtan11"},"content":"    // @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"ningtan11"},"content":"    // private Label category;","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"ningtan11"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"ningtan11"},"content":"     * Creates a {@code ItemCode} with the given {@code Item} and index to display.","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"ningtan11"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"CFSY"},"content":"    public ItemCard(Item item, int dayNumber, int displayedIndex) {","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"ningtan11"},"content":"        super(FXML);","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"ningtan11"},"content":"        this.item \u003d item;","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"CFSY"},"content":"        if (dayNumber \u003e 0) {","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"CFSY"},"content":"            this.id.setText(dayNumber + \".\" + displayedIndex + \" \");","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"CFSY"},"content":"        } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"CFSY"},"content":"            this.id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"CFSY"},"content":"        this.description.setText(item.getDescriptionString(Text.INDENT_NONE));","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"CFSY"},"content":"        this.priority.setText(item.getPriorityString(Text.INDENT_NONE));","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"CFSY"},"content":"        this.duration.setText(item.getDurationString(Text.INDENT_NONE));","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"CFSY"},"content":"        this.time.setText(item.getTimeString(Text.INDENT_NONE));","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"CFSY"},"content":"        this.cost.setText(item.getCostString(Text.INDENT_NONE));","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"ningtan11"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"ningtan11"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"ningtan11"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"ningtan11"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"ningtan11"},"content":"            return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"ningtan11"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"ningtan11"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"ningtan11"},"content":"        if (!(other instanceof ItemCard)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"ningtan11"},"content":"            return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"ningtan11"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"ningtan11"},"content":"        // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"ningtan11"},"content":"        ItemCard card \u003d (ItemCard) other;","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"ningtan11"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"ningtan11"},"content":"                \u0026\u0026 item.equals(card.item);","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"ningtan11"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"CFSY":20,"ningtan11":51}},{"path":"src/main/java/seedu/waddle/ui/ItemGroupCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CFSY"},"content":"package seedu.waddle.ui;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.item.Item;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"CFSY"},"content":" * An UI component that displays information of a {@code Itinerary}.","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"CFSY"},"content":"public class ItemGroupCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"    private static final String FXML \u003d \"ItemGroupListCard.fxml\";","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"CFSY"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"CFSY"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"CFSY"},"content":"     *","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"CFSY"},"content":"    public final ObservableList\u003cItem\u003e itemGroup;","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"    @FXML","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"CFSY"},"content":"    private Label dayNumber;","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"CFSY"},"content":"    @FXML","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"CFSY"},"content":"    private StackPane itemListPanelPlaceholder;","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"CFSY"},"content":"     * Creates a {@code ItineraryCode} with the given {@code Itinerary} and index to display.","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"CFSY"},"content":"    public ItemGroupCard(ObservableList\u003cItem\u003e itemGroup, int dayNumber) {","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"CFSY"},"content":"        super(FXML);","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"CFSY"},"content":"        this.itemGroup \u003d itemGroup;","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"CFSY"},"content":"        if (dayNumber \u003d\u003d 0) {","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"CFSY"},"content":"            this.dayNumber.setText(\"Wishlist\");","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"CFSY"},"content":"        } else {","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"CFSY"},"content":"            this.dayNumber.setText(\"Day \" + dayNumber);","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"CFSY"},"content":"        this.itemListPanelPlaceholder.getChildren().add(new ItemListPanel(itemGroup, dayNumber).getRoot());","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"CFSY"},"content":"        this.itemListPanelPlaceholder.setMinHeight(UiSizes.ITEM_LIST_MIN_HEIGHT);","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"CFSY"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"CFSY"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"CFSY"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"CFSY"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"CFSY"},"content":"            return true;","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"CFSY"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"CFSY"},"content":"        if (!(other instanceof ItemGroupCard)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"CFSY"},"content":"            return false;","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"CFSY"},"content":"        // state check","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"CFSY"},"content":"        ItemGroupCard card \u003d (ItemGroupCard) other;","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"CFSY"},"content":"        return dayNumber.getText().equals(card.dayNumber.getText())","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"CFSY"},"content":"                \u0026\u0026 itemGroup.equals(card.itemGroup);","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"CFSY"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"CFSY":64}},{"path":"src/main/java/seedu/waddle/ui/ItemGroupListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CFSY"},"content":"package seedu.waddle.ui;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.commons.core.LogsCenter;","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.item.Item;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":13,"author":{"gitId":"CFSY"},"content":" * Panel containing the list of Items.","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"CFSY"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"public class ItemGroupListPanel extends ListPanel {","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"    private static final String FXML \u003d \"ItemGroupListPanel.fxml\";","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ItemGroupListPanel.class);","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"CFSY"},"content":"    @FXML","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"    private ListView\u003cObservableList\u003cItem\u003e\u003e itemGroupListView;","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"     * Creates a {@code ItemListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"CFSY"},"content":"    public ItemGroupListPanel(ObservableList\u003cObservableList\u003cItem\u003e\u003e itemGroups) {","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"        super(FXML);","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"        itemGroupListView.setItems(itemGroups);","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"CFSY"},"content":"        itemGroupListView.setCellFactory(listView -\u003e new ItemGroupListPanel.ItemGroupListViewCell());","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"CFSY"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Item} using a {@code ItemCard}.","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"CFSY"},"content":"    class ItemGroupListViewCell extends ListCell\u003cObservableList\u003cItem\u003e\u003e {","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"CFSY"},"content":"        @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"CFSY"},"content":"        protected void updateItem(ObservableList\u003cItem\u003e itemGroup, boolean empty) {","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"CFSY"},"content":"            super.updateItem(itemGroup, empty);","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"CFSY"},"content":"            if (empty || itemGroup \u003d\u003d null) {","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"CFSY"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"CFSY"},"content":"                setText(null);","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"CFSY"},"content":"            } else {","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"CFSY"},"content":"                setGraphic(new ItemGroupCard(itemGroup, getIndex()).getRoot());","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"CFSY"},"content":"            }","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"CFSY"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"CFSY"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"CFSY":48}},{"path":"src/main/java/seedu/waddle/ui/ItemListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ningtan11"},"content":"package seedu.waddle.ui;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"ningtan11"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":"import javafx.beans.binding.Bindings;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"ningtan11"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"ningtan11"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"ningtan11"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"ningtan11"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.commons.core.LogsCenter;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.item.Item;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"ningtan11"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"ningtan11"},"content":" * Panel containing the list of Items.","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"ningtan11"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"public class ItemListPanel extends ListPanel {","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"ningtan11"},"content":"    private static final String FXML \u003d \"ItemListPanel.fxml\";","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"ningtan11"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ItemListPanel.class);","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"CFSY"},"content":"    private final int dayNumber;","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"ningtan11"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"ningtan11"},"content":"    private ListView\u003cItem\u003e itemListView;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"ningtan11"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"ningtan11"},"content":"     * Creates a {@code ItemListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"ningtan11"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"    public ItemListPanel(ObservableList\u003cItem\u003e itemList, int dayNumber) {","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"ningtan11"},"content":"        super(FXML);","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"CFSY"},"content":"        this.dayNumber \u003d dayNumber;","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"ningtan11"},"content":"        itemListView.setItems(itemList);","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"ningtan11"},"content":"        itemListView.setCellFactory(listView -\u003e new ItemListPanel.ItemListViewCell());","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"CFSY"},"content":"        itemListView.prefHeightProperty().bind(Bindings.size(itemList).multiply(UiSizes.ITEM_CARD_HEIGHT));","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"ningtan11"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"ningtan11"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Item} using a {@code ItemCard}.","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"ningtan11"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"ningtan11"},"content":"    class ItemListViewCell extends ListCell\u003cItem\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"ningtan11"},"content":"        @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"ningtan11"},"content":"        protected void updateItem(Item item, boolean empty) {","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"ningtan11"},"content":"            super.updateItem(item, empty);","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"ningtan11"},"content":"            if (empty || item \u003d\u003d null) {","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"ningtan11"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"ningtan11"},"content":"                setText(null);","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"ningtan11"},"content":"            } else {","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"CFSY"},"content":"                setGraphic(new ItemCard(item, dayNumber, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"ningtan11"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"ningtan11"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"ningtan11"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"CFSY":7,"ningtan11":45}},{"path":"src/main/java/seedu/waddle/ui/ItineraryCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.text.Text;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":11,"author":{"gitId":"ningtan11"},"content":" * An UI component that displays information of a {@code Itinerary}.","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"CFSY"},"content":"public class ItineraryCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"    private static final String FXML \u003d \"ItineraryListCard.fxml\";","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"    public final Itinerary itinerary;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"    private Label country;","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"pewggls"},"content":"    private Label duration;","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"CFSY"},"content":"    private Label time;","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"CFSY"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"ciaoosuuu"},"content":"    private Label people;","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"CFSY"},"content":"    @FXML","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"CFSY"},"content":"    private Label budget;","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"ningtan11"},"content":"     * Creates a {@code ItineraryCode} with the given {@code Itinerary} and index to display.","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"CFSY"},"content":"    public ItineraryCard(Itinerary itinerary, int displayedIndex) {","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"ciaoosuuu"},"content":"        this.itinerary \u003d itinerary;","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"CFSY"},"content":"        name.setText(itinerary.getDescriptionString(Text.INDENT_NONE));","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"CFSY"},"content":"        country.setText(itinerary.getCountryString(Text.INDENT_NONE));","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"CFSY"},"content":"        time.setText(itinerary.getTimeString(Text.INDENT_NONE));","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"CFSY"},"content":"        duration.setText(itinerary.getDurationString(Text.INDENT_NONE));","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"CFSY"},"content":"        people.setText(itinerary.getPeopleString(Text.INDENT_NONE));","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"CFSY"},"content":"        budget.setText(itinerary.getBudgetString(Text.INDENT_NONE));","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"CFSY"},"content":"        if (!(other instanceof ItineraryCard)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"CFSY"},"content":"        ItineraryCard card \u003d (ItineraryCard) other;","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"ciaoosuuu"},"content":"                \u0026\u0026 itinerary.equals(card.itinerary);","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ciaoosuuu":8,"CFSY":16,"ningtan11":2,"pewggls":1,"-":50}},{"path":"src/main/java/seedu/waddle/ui/ItineraryListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"ningtan11"},"content":" * Panel containing the list of Iineraries.","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"public class ItineraryListPanel extends ListPanel {","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"    private static final String FXML \u003d \"ItineraryListPanel.fxml\";","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ItineraryListPanel.class);","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"    private ListView\u003cItinerary\u003e itineraryListView;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"ningtan11"},"content":"     * Creates a {@code ItineraryListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"CFSY"},"content":"    public ItineraryListPanel(ObservableList\u003cItinerary\u003e itineraryList) {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"        itineraryListView.setItems(itineraryList);","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"CFSY"},"content":"        itineraryListView.setCellFactory(listView -\u003e new ItineraryListViewCell());","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":32,"author":{"gitId":"ningtan11"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Itinerary} using a {@code ItineraryCard}.","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":34,"author":{"gitId":"CFSY"},"content":"    class ItineraryListViewCell extends ListCell\u003cItinerary\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"ciaoosuuu"},"content":"        protected void updateItem(Itinerary itinerary, boolean empty) {","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"ciaoosuuu"},"content":"            super.updateItem(itinerary, empty);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"            if (empty || itinerary \u003d\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"CFSY"},"content":"                setGraphic(new ItineraryCard(itinerary, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ciaoosuuu":6,"CFSY":9,"ningtan11":3,"-":30}},{"path":"src/main/java/seedu/waddle/ui/ListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CFSY"},"content":"package seedu.waddle.ui;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":" * List panel ui","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"public abstract class ListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":"     * Creates a {@code ListPanel} with the given {@code FXML}.","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":"    public ListPanel(String fxml) {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"CFSY"},"content":"        super(fxml);","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"CFSY":15}},{"path":"src/main/java/seedu/waddle/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.GuiSettings;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.Logic;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.logic.StageManager;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.commands.CommandResult;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.item.Item;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"CFSY"},"content":"    private final Stage primaryStage;","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"CFSY"},"content":"    private final Logic logic;","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"CFSY"},"content":"    private final HelpWindow helpWindow;","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"CFSY"},"content":"    private ListPanel listPanel;","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"CFSY"},"content":"    private StackPane listPanelPlaceholder;","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"CFSY"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"CFSY"},"content":"        listPanel \u003d new ItineraryListPanel(logic.getFilteredItineraryList());","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"CFSY"},"content":"        listPanelPlaceholder.getChildren().add(listPanel.getRoot());","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"CFSY"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getWaddleFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"CFSY"},"content":"    public ListPanel getListPanel() {","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"CFSY"},"content":"        return listPanel;","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"CFSY"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":174,"author":{"gitId":"CFSY"},"content":"     * Changes the list panel.","lastModifiedDate":"2022-10-11"},{"lineNumber":175,"author":{"gitId":"CFSY"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":176,"author":{"gitId":"CFSY"},"content":"    @FXML","lastModifiedDate":"2022-10-11"},{"lineNumber":177,"author":{"gitId":"CFSY"},"content":"    public void setListPanel(ListPanel listPanel) {","lastModifiedDate":"2022-10-11"},{"lineNumber":178,"author":{"gitId":"CFSY"},"content":"        this.listPanel \u003d listPanel;","lastModifiedDate":"2022-10-11"},{"lineNumber":179,"author":{"gitId":"CFSY"},"content":"        listPanelPlaceholder.getChildren().removeAll();","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"CFSY"},"content":"        listPanelPlaceholder.getChildren().add(this.listPanel.getRoot());","lastModifiedDate":"2022-10-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"ciaoosuuu"},"content":"     * @see seedu.waddle.logic.Logic#execute(String)","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"CFSY"},"content":"            // if the command results in a stage change, update the listPanel","lastModifiedDate":"2022-10-11"},{"lineNumber":203,"author":{"gitId":"CFSY"},"content":"            if (commandResult.hasStage()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":204,"author":{"gitId":"CFSY"},"content":"                switch (commandResult.getStage()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":205,"author":{"gitId":"CFSY"},"content":"                case HOME:","lastModifiedDate":"2022-10-11"},{"lineNumber":206,"author":{"gitId":"CFSY"},"content":"                    ObservableList\u003cItinerary\u003e itineraryList \u003d logic.getFilteredItineraryList();","lastModifiedDate":"2022-10-11"},{"lineNumber":207,"author":{"gitId":"CFSY"},"content":"                    setListPanel(new ItineraryListPanel(itineraryList));","lastModifiedDate":"2022-10-11"},{"lineNumber":208,"author":{"gitId":"CFSY"},"content":"                    break;","lastModifiedDate":"2022-10-11"},{"lineNumber":209,"author":{"gitId":"CFSY"},"content":"                case WISH:","lastModifiedDate":"2022-10-11"},{"lineNumber":210,"author":{"gitId":"CFSY"},"content":"                    ObservableList\u003cObservableList\u003cItem\u003e\u003e itemGroups \u003d StageManager.getInstance()","lastModifiedDate":"2022-10-23"},{"lineNumber":211,"author":{"gitId":"CFSY"},"content":"                            .getSelectedItinerary().getUnmodifiableItemGroups();","lastModifiedDate":"2022-10-23"},{"lineNumber":212,"author":{"gitId":"CFSY"},"content":"                    setListPanel(new ItemGroupListPanel(itemGroups));","lastModifiedDate":"2022-10-23"},{"lineNumber":213,"author":{"gitId":"CFSY"},"content":"                    break;","lastModifiedDate":"2022-10-11"},{"lineNumber":214,"author":{"gitId":"CFSY"},"content":"                default:","lastModifiedDate":"2022-10-11"},{"lineNumber":215,"author":{"gitId":"CFSY"},"content":"                    break;","lastModifiedDate":"2022-10-11"},{"lineNumber":216,"author":{"gitId":"CFSY"},"content":"                }","lastModifiedDate":"2022-10-11"},{"lineNumber":217,"author":{"gitId":"CFSY"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":218,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ciaoosuuu":8,"CFSY":42,"-":176}},{"path":"src/main/java/seedu/waddle/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"        resultDisplay.setWrapText(true);","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ciaoosuuu":1,"CFSY":1,"-":27}},{"path":"src/main/java/seedu/waddle/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ciaoosuuu":1,"-":27}},{"path":"src/main/java/seedu/waddle/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ciaoosuuu":1,"-":12}},{"path":"src/main/java/seedu/waddle/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.MainApp;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.core.LogsCenter;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.commons.util.StringUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.logic.Logic;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/duck.png\";","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ciaoosuuu":5,"CFSY":1,"-":82}},{"path":"src/main/java/seedu/waddle/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.MainApp;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ciaoosuuu":2,"-":86}},{"path":"src/main/java/seedu/waddle/ui/UiSizes.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CFSY"},"content":"package seedu.waddle.ui;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":" * Standard sizes for UI elements.","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"public class UiSizes {","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"    public static final double ITEM_CARD_HEIGHT \u003d 140;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"    public static final double ITEM_LIST_MIN_HEIGHT \u003d 20;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"CFSY":9}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: #fffae5, 20%;","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"    background-color: #fffae5; /* Used in the default.html file */","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"CFSY"},"content":".tab-pane .tab-h#resultDisplay {","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"CFSY"},"content":"    -fx-base: #fffae5;","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"CFSY"},"content":"    -fx-control-inner-background: #fffae5;","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: #fffae5;","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: derive(#fffae5, 20%);","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: derive(#fffae5, 20%);","lastModifiedDate":"2022-10-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"CFSY"},"content":".itinerary-list-view {","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: derive(#fffae5, 20%);","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"CFSY"},"content":"    -fx-border-color: black;","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"CFSY"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-10-25"},{"lineNumber":96,"author":{"gitId":"CFSY"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2022-10-25"},{"lineNumber":97,"author":{"gitId":"CFSY"},"content":"    -fx-padding: 0 0 0 5;","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"CFSY"},"content":".item-group-list-view {","lastModifiedDate":"2022-10-25"},{"lineNumber":101,"author":{"gitId":"CFSY"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-10-25"},{"lineNumber":102,"author":{"gitId":"CFSY"},"content":"    -fx-padding: 0;","lastModifiedDate":"2022-10-25"},{"lineNumber":103,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: derive(#fffae5, 20%);","lastModifiedDate":"2022-10-25"},{"lineNumber":104,"author":{"gitId":"CFSY"},"content":"    -fx-border-color: black;","lastModifiedDate":"2022-10-25"},{"lineNumber":105,"author":{"gitId":"CFSY"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-10-25"},{"lineNumber":106,"author":{"gitId":"CFSY"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2022-10-25"},{"lineNumber":107,"author":{"gitId":"CFSY"},"content":"    -fx-padding: 0 0 0 5;","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"CFSY"},"content":".item-list-view {","lastModifiedDate":"2022-10-25"},{"lineNumber":111,"author":{"gitId":"CFSY"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-10-25"},{"lineNumber":112,"author":{"gitId":"CFSY"},"content":"    -fx-padding: 0;","lastModifiedDate":"2022-10-25"},{"lineNumber":113,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"CFSY"},"content":".item-card {","lastModifiedDate":"2022-10-25"},{"lineNumber":117,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: #fffae5;","lastModifiedDate":"2022-10-25"},{"lineNumber":118,"author":{"gitId":"CFSY"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-25"},{"lineNumber":119,"author":{"gitId":"CFSY"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2022-10-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"CFSY"},"content":".list-cell:filled {","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: #ffb238;","lastModifiedDate":"2022-10-25"},{"lineNumber":124,"author":{"gitId":"CFSY"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2022-10-25"},{"lineNumber":125,"author":{"gitId":"CFSY"},"content":"    -fx-background-insets: 5;","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"CFSY"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2022-10-25"},{"lineNumber":130,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: #ff9d5b;","lastModifiedDate":"2022-10-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-10-25"},{"lineNumber":132,"author":{"gitId":"CFSY"},"content":"    -fx-border-color: black;","lastModifiedDate":"2022-10-25"},{"lineNumber":133,"author":{"gitId":"CFSY"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"CFSY"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"CFSY"},"content":"    -fx-font-family: \"Segoe UI Bold\";","lastModifiedDate":"2022-10-25"},{"lineNumber":139,"author":{"gitId":"CFSY"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2022-10-25"},{"lineNumber":140,"author":{"gitId":"CFSY"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-25"},{"lineNumber":141,"author":{"gitId":"CFSY"},"content":"    -fx-padding: 0 0 5 0","lastModifiedDate":"2022-10-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":146,"author":{"gitId":"CFSY"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2022-10-25"},{"lineNumber":147,"author":{"gitId":"CFSY"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-25"},{"lineNumber":148,"author":{"gitId":"CFSY"},"content":"    -fx-padding: 0 0 0 0","lastModifiedDate":"2022-10-25"},{"lineNumber":149,"author":{"gitId":"CFSY"},"content":"}","lastModifiedDate":"2022-10-25"},{"lineNumber":150,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":151,"author":{"gitId":"CFSY"},"content":".day-number {","lastModifiedDate":"2022-10-25"},{"lineNumber":152,"author":{"gitId":"CFSY"},"content":"    -fx-font-family: \"Segoe UI Bold\";","lastModifiedDate":"2022-10-25"},{"lineNumber":153,"author":{"gitId":"CFSY"},"content":"    -fx-font-size: 30px;","lastModifiedDate":"2022-10-25"},{"lineNumber":154,"author":{"gitId":"CFSY"},"content":"    -fx-text-fill: White;","lastModifiedDate":"2022-10-25"},{"lineNumber":155,"author":{"gitId":"CFSY"},"content":"    -fx-padding: 0 0 0 10","lastModifiedDate":"2022-10-25"},{"lineNumber":156,"author":{"gitId":"CFSY"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":157,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":158,"author":{"gitId":"CFSY"},"content":".item_cell_big_label {","lastModifiedDate":"2022-10-25"},{"lineNumber":159,"author":{"gitId":"CFSY"},"content":"    -fx-font-family: \"Segoe UI Bold\";","lastModifiedDate":"2022-10-25"},{"lineNumber":160,"author":{"gitId":"CFSY"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2022-10-25"},{"lineNumber":161,"author":{"gitId":"CFSY"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-25"},{"lineNumber":162,"author":{"gitId":"CFSY"},"content":"    -fx-padding: 0 0 5 0","lastModifiedDate":"2022-10-25"},{"lineNumber":163,"author":{"gitId":"CFSY"},"content":"}","lastModifiedDate":"2022-10-25"},{"lineNumber":164,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":165,"author":{"gitId":"CFSY"},"content":".item_cell_small_label {","lastModifiedDate":"2022-10-25"},{"lineNumber":166,"author":{"gitId":"CFSY"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-10-25"},{"lineNumber":167,"author":{"gitId":"CFSY"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2022-10-25"},{"lineNumber":168,"author":{"gitId":"CFSY"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-25"},{"lineNumber":169,"author":{"gitId":"CFSY"},"content":"    -fx-padding: 0 0 0 0","lastModifiedDate":"2022-10-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":173,"author":{"gitId":"CFSY"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-25"},{"lineNumber":174,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: derive(#fffae5, 20%);","lastModifiedDate":"2022-10-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":178,"author":{"gitId":"CFSY"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2022-10-27"},{"lineNumber":179,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: #fffae5;","lastModifiedDate":"2022-10-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: derive(#d1cdc0, 30%);","lastModifiedDate":"2022-10-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":189,"author":{"gitId":"CFSY"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-25"},{"lineNumber":190,"author":{"gitId":"CFSY"},"content":"    -fx-border-width: 0px;","lastModifiedDate":"2022-10-27"},{"lineNumber":191,"author":{"gitId":"CFSY"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2022-10-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":196,"author":{"gitId":"CFSY"},"content":"    -fx-border-width: 0px;","lastModifiedDate":"2022-10-27"},{"lineNumber":197,"author":{"gitId":"CFSY"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2022-10-27"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"CFSY"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: #d1cdc0;","lastModifiedDate":"2022-10-25"},{"lineNumber":209,"author":{"gitId":"CFSY"},"content":"    -fx-border-color: black;","lastModifiedDate":"2022-10-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"CFSY"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: #fffae5;","lastModifiedDate":"2022-10-25"},{"lineNumber":219,"author":{"gitId":"CFSY"},"content":"    -fx-border-color: black;","lastModifiedDate":"2022-10-25"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":224,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: #fffae5;","lastModifiedDate":"2022-10-25"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: #fffae5;","lastModifiedDate":"2022-10-25"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: #d1cdc0;","lastModifiedDate":"2022-10-25"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":242,"author":{"gitId":"CFSY"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-25"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":247,"author":{"gitId":"CFSY"},"content":".menu:showing {","lastModifiedDate":"2022-10-27"},{"lineNumber":248,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: #ffc37a;","lastModifiedDate":"2022-10-27"},{"lineNumber":249,"author":{"gitId":"CFSY"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":250,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":251,"author":{"gitId":"CFSY"},"content":".menu:hover {","lastModifiedDate":"2022-10-27"},{"lineNumber":252,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: #ffc37a;","lastModifiedDate":"2022-10-27"},{"lineNumber":253,"author":{"gitId":"CFSY"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":254,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":255,"author":{"gitId":"CFSY"},"content":".menu-item:hover {","lastModifiedDate":"2022-10-27"},{"lineNumber":256,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: #ffc37a;","lastModifiedDate":"2022-10-27"},{"lineNumber":257,"author":{"gitId":"CFSY"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":258,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":259,"author":{"gitId":"CFSY"},"content":".menu-item {","lastModifiedDate":"2022-10-27"},{"lineNumber":260,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: #fffae5;","lastModifiedDate":"2022-10-27"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: red;","lastModifiedDate":"2022-10-26"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: #fffae5;","lastModifiedDate":"2022-10-26"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"CFSY"},"content":"  -fx-text-fill: #fffae5;","lastModifiedDate":"2022-10-25"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: #fffae5;","lastModifiedDate":"2022-10-25"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: #fffae5;","lastModifiedDate":"2022-10-25"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: #fffae5;","lastModifiedDate":"2022-10-25"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: derive(#fffae5, 25%);","lastModifiedDate":"2022-10-25"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-25"},{"lineNumber":339,"author":{"gitId":"CFSY"},"content":"    -fx-border-radius: 20;","lastModifiedDate":"2022-10-25"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"CFSY"},"content":"    -fx-border-radius: 20;","lastModifiedDate":"2022-10-25"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":348,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":353,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":355,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":359,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":361,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":368,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":370,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":371,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-27"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":373,"author":{"gitId":"CFSY"},"content":"    -fx-border-color: black;","lastModifiedDate":"2022-10-25"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":376,"author":{"gitId":"CFSY"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2022-10-25"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":379,"author":{"gitId":"CFSY"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-25"},{"lineNumber":380,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":382,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":384,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":386,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":387,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: derive(#fffae5, 25%);","lastModifiedDate":"2022-10-27"},{"lineNumber":388,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":390,"author":{"gitId":"CFSY"},"content":"#resultDisplay {","lastModifiedDate":"2022-10-27"},{"lineNumber":391,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: derive(#fffae5, 25%);","lastModifiedDate":"2022-10-27"},{"lineNumber":392,"author":{"gitId":"CFSY"},"content":"    -fx-border-color: black;","lastModifiedDate":"2022-10-27"},{"lineNumber":393,"author":{"gitId":"CFSY"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2022-10-27"},{"lineNumber":394,"author":{"gitId":"CFSY"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2022-10-27"},{"lineNumber":395,"author":{"gitId":"CFSY"},"content":"    -fx-padding: 2px;","lastModifiedDate":"2022-10-27"},{"lineNumber":396,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":398,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":399,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":400,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":401,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":402,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":403,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":404,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":405,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":406,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":407,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":410,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":412,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":417,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":419,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"CFSY":132,"-":287}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"    -fx-background: transparent;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"CFSY":1,"-":19}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"CFSY"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"CFSY"},"content":"    -fx-background-color: fffae5;","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"CFSY":2,"-":17}},{"path":"src/main/resources/view/ItemGroupListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CFSY"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"\u003cVBox VBox.vgrow\u003d\"ALWAYS\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":"      \u003cLabel fx:id\u003d\"dayNumber\" prefHeight\u003d\"60.0\" text\u003d\"Label\" styleClass\u003d\"day-number\"/\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":"      \u003cStackPane fx:id\u003d\"itemListPanelPlaceholder\"/\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"CFSY"},"content":"   \u003c/children\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"CFSY":12}},{"path":"src/main/resources/view/ItemGroupListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CFSY"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"    \u003cListView fx:id\u003d\"itemGroupListView\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"item-group-list-view\"/\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"CFSY":8}},{"path":"src/main/resources/view/ItemListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CFSY"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"CFSY"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"CFSY"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"CFSY"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"CFSY"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"item-card\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"CFSY"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"CFSY"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"CFSY"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"120\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"CFSY"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"CFSY"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"CFSY"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"CFSY"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"item_cell_big_label\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"CFSY"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"CFSY"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"CFSY"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"CFSY"},"content":"                \u003cLabel fx:id\u003d\"description\" text\u003d\"\\$first\" styleClass\u003d\"item_cell_big_label\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"CFSY"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"CFSY"},"content":"            \u003cLabel fx:id\u003d\"priority\" styleClass\u003d\"item_cell_small_label\" text\u003d\"\\$priority\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"            \u003cLabel fx:id\u003d\"duration\" styleClass\u003d\"item_cell_small_label\" text\u003d\"\\$duration\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"CFSY"},"content":"            \u003cLabel fx:id\u003d\"time\" styleClass\u003d\"item_cell_small_label\" text\u003d\"\\$time\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"CFSY"},"content":"            \u003cLabel fx:id\u003d\"cost\" styleClass\u003d\"item_cell_small_label\" text\u003d\"\\$cost\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"CFSY"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"CFSY"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"CFSY"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"CFSY":36}},{"path":"src/main/resources/view/ItemListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"    \u003cListView fx:id\u003d\"itemListView\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"item-list-view\"/\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"CFSY":1,"-":7}},{"path":"src/main/resources/view/ItineraryListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"CFSY"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"itinerary-card\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"      \u003cLabel fx:id\u003d\"country\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$country\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"      \u003cLabel fx:id\u003d\"duration\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$duration\" /\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"CFSY"},"content":"      \u003cLabel fx:id\u003d\"time\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$time\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"      \u003cLabel fx:id\u003d\"people\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$people\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"CFSY"},"content":"      \u003cLabel fx:id\u003d\"budget\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$budget\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"CFSY":4,"ciaoosuuu":2,"-":31}},{"path":"src/main/resources/view/ItineraryListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"  \u003cListView fx:id\u003d\"itineraryListView\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"itinerary-list-view\"/\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"CFSY":1,"-":7}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"CFSY"},"content":"         title\u003d\"Waddle\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"CFSY"},"content":"    \u003cImage url\u003d\"@/images/duck.png\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"CFSY"},"content":"        \u003cStackPane VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"CFSY"},"content":"                   minHeight\u003d\"140\" prefHeight\u003d\"140\" maxHeight\u003d\"200\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"CFSY"},"content":"          \u003cStackPane fx:id\u003d\"listPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"CFSY":5,"-":55}},{"path":"src/test/java/seedu/waddle/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"-":57,"seox123":1}},{"path":"src/test/java/seedu/waddle/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.commons.core;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"-":26,"seox123":1}},{"path":"src/test/java/seedu/waddle/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.commons.core;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"-":133,"seox123":2}},{"path":"src/test/java/seedu/waddle/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.commons.core.index;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"-":58,"seox123":2}},{"path":"src/test/java/seedu/waddle/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"-":34,"seox123":2}},{"path":"src/test/java/seedu/waddle/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"-":105,"seox123":3}},{"path":"src/test/java/seedu/waddle/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"seox123"},"content":"import seedu.waddle.commons.core.Config;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"seox123"},"content":"import seedu.waddle.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"-":112,"seox123":4}},{"path":"src/test/java/seedu/waddle/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"-":21,"seox123":2}},{"path":"src/test/java/seedu/waddle/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"seox123"},"content":"import seedu.waddle.testutil.SerializableTestClass;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"seox123"},"content":"import seedu.waddle.testutil.TestUtil;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"-":42,"seox123":3}},{"path":"src/test/java/seedu/waddle/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.commons.util;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"-":141,"seox123":2}},{"path":"src/test/java/seedu/waddle/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.logic;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":"import static seedu.waddle.commons.core.Messages.MESSAGE_INVALID_ITINERARY_DISPLAYED_INDEX;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.BUDGET_DESC_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"CFSY"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.COUNTRY_DESC_SUMMER;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.DURATION_DESC_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.NAME_DESC_SUMMER;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.PEOPLE_DESC_SUMMER;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.START_DATE_DESC_SUMMER;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"CFSY"},"content":"import static seedu.waddle.testutil.TypicalItineraries.SUMMER;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.commands.AddCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.commands.CommandResult;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.commands.ListCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.ReadOnlyWaddle;","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"seox123"},"content":"import seedu.waddle.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"seox123"},"content":"import seedu.waddle.storage.JsonWaddleStorage;","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"seox123"},"content":"import seedu.waddle.storage.StorageManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.testutil.ItineraryBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"CFSY"},"content":"        JsonWaddleStorage waddleStorage \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"CFSY"},"content":"                new JsonWaddleStorage(temporaryFolder.resolve(\"waddle.json\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"CFSY"},"content":"        StorageManager storage \u003d new StorageManager(waddleStorage, userPrefsStorage);","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"CFSY"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_ITINERARY_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"CFSY"},"content":"        // Setup LogicManager with JsonWaddleIoExceptionThrowingStub","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"CFSY"},"content":"        JsonWaddleStorage waddleStorage \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"CFSY"},"content":"                new JsonWaddleIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionWaddle.json\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"CFSY"},"content":"        StorageManager storage \u003d new StorageManager(waddleStorage, userPrefsStorage);","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"CFSY"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_SUMMER + COUNTRY_DESC_SUMMER + START_DATE_DESC_SUMMER","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"pewggls"},"content":"                + DURATION_DESC_SUMMER + PEOPLE_DESC_SUMMER + BUDGET_DESC_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"CFSY"},"content":"        Itinerary expectedItinerary \u003d new ItineraryBuilder(SUMMER).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"CFSY"},"content":"        expectedModel.addItinerary(expectedItinerary);","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"CFSY"},"content":"    public void getFilteredItineraryList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"CFSY"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredItineraryList().remove(0));","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"CFSY"},"content":"        Model expectedModel \u003d new ModelManager(model.getWaddle(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"CFSY"},"content":"    private static class JsonWaddleIoExceptionThrowingStub extends JsonWaddleStorage {","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"CFSY"},"content":"        private JsonWaddleIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":160,"author":{"gitId":"CFSY"},"content":"        public void saveWaddle(ReadOnlyWaddle waddle, Path filePath) throws IOException {","lastModifiedDate":"2022-10-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-10-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"CFSY":24,"pewggls":3,"-":121,"seox123":16}},{"path":"src/test/java/seedu/waddle/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.testutil.TypicalItineraries.getTypicalWaddle;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.testutil.ItineraryBuilder;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"ciaoosuuu"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"ciaoosuuu"},"content":"    private Model model;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"ningtan11"},"content":"        model \u003d new ModelManager(getTypicalWaddle(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"ningtan11"},"content":"    public void execute_newItinerary_success() {","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"ningtan11"},"content":"        Itinerary validItinerary \u003d new ItineraryBuilder().build();","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"ningtan11"},"content":"        Model expectedModel \u003d new ModelManager(model.getWaddle(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"ningtan11"},"content":"        expectedModel.addItinerary(validItinerary);","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"ningtan11"},"content":"        assertCommandSuccess(new AddCommand(validItinerary), model,","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"ningtan11"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validItinerary), expectedModel);","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"CFSY"},"content":"    public void execute_duplicateItinerary_throwsCommandException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"ningtan11"},"content":"        Itinerary itineraryInList \u003d model.getWaddle().getItineraryList().get(0);","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"ningtan11"},"content":"        assertCommandFailure(new AddCommand(itineraryInList), model, AddCommand.MESSAGE_DUPLICATE_ITINERARY);","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"ciaoosuuu":26,"CFSY":1,"ningtan11":12,"seox123":6}},{"path":"src/test/java/seedu/waddle/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"seox123"},"content":"import seedu.waddle.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.ReadOnlyWaddle;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.Waddle;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.testutil.ItineraryBuilder;","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"public class AddCommandTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"ningtan11"},"content":"        ModelStubAcceptingItineraryAdded modelStub \u003d new ModelStubAcceptingItineraryAdded();","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"ningtan11"},"content":"        Itinerary validItinerary \u003d new ItineraryBuilder().build();","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"ningtan11"},"content":"        CommandResult commandResult \u003d new AddCommand(validItinerary).execute(modelStub);","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"ningtan11"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validItinerary), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"ningtan11"},"content":"        assertEquals(Arrays.asList(validItinerary), modelStub.itinerariesAdded);","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"ningtan11"},"content":"    public void execute_duplicateItinerary_throwsCommandException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"ningtan11"},"content":"        Itinerary validItinerary \u003d new ItineraryBuilder().build();","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"ningtan11"},"content":"        AddCommand addCommand \u003d new AddCommand(validItinerary);","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"ningtan11"},"content":"        ModelStub modelStub \u003d new ModelStubWithItinerary(validItinerary);","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"seox123"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"seox123"},"content":"                AddCommand.MESSAGE_DUPLICATE_ITINERARY, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"ciaoosuuu"},"content":"    public void equals() {","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"ningtan11"},"content":"        Itinerary summer \u003d new ItineraryBuilder().withName(\"Summer\").build();","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"ningtan11"},"content":"        Itinerary winter \u003d new ItineraryBuilder().withName(\"Winter\").build();","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"ningtan11"},"content":"        AddCommand addSummerCommand \u003d new AddCommand(summer);","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"ningtan11"},"content":"        AddCommand addWinterCommand \u003d new AddCommand(winter);","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"ciaoosuuu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"ningtan11"},"content":"        assertTrue(addSummerCommand.equals(addSummerCommand));","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"ciaoosuuu"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"ningtan11"},"content":"        AddCommand addSummerCommandCopy \u003d new AddCommand(summer);","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"ningtan11"},"content":"        assertTrue(addSummerCommand.equals(addSummerCommandCopy));","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"ciaoosuuu"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"ningtan11"},"content":"        assertFalse(addSummerCommand.equals(1));","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"ciaoosuuu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"ningtan11"},"content":"        assertFalse(addSummerCommand.equals(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"ningtan11"},"content":"        // different itinerary -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"ningtan11"},"content":"        assertFalse(addSummerCommand.equals(addWinterCommand));","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"ciaoosuuu"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"ciaoosuuu"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"ciaoosuuu"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"ciaoosuuu"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"ciaoosuuu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"ciaoosuuu"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"ciaoosuuu"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"ciaoosuuu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"ciaoosuuu"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"ciaoosuuu"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"ciaoosuuu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"ciaoosuuu"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"ciaoosuuu"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"ciaoosuuu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"ciaoosuuu"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"ningtan11"},"content":"        public Path getWaddleFilePath() {","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"ciaoosuuu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"ciaoosuuu"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"ningtan11"},"content":"        public void setWaddleFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"ciaoosuuu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"ciaoosuuu"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"ningtan11"},"content":"        public void addItinerary(Itinerary itinerary) {","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"ciaoosuuu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"ciaoosuuu"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"ningtan11"},"content":"        public void setWaddle(ReadOnlyWaddle newData) {","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"ciaoosuuu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"ciaoosuuu"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"ningtan11"},"content":"        public ReadOnlyWaddle getWaddle() {","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"ciaoosuuu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"ciaoosuuu"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"ningtan11"},"content":"        public boolean hasItinerary(Itinerary itinerary) {","lastModifiedDate":"2022-10-14"},{"lineNumber":129,"author":{"gitId":"ciaoosuuu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"ciaoosuuu"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"ningtan11"},"content":"        public void deleteItinerary(Itinerary target) {","lastModifiedDate":"2022-10-14"},{"lineNumber":134,"author":{"gitId":"ciaoosuuu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"ciaoosuuu"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"ningtan11"},"content":"        public void setItinerary(Itinerary target, Itinerary editedItinerary) {","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"ciaoosuuu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"ciaoosuuu"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"ningtan11"},"content":"        public ObservableList\u003cItinerary\u003e getFilteredItineraryList() {","lastModifiedDate":"2022-10-14"},{"lineNumber":144,"author":{"gitId":"ciaoosuuu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"ciaoosuuu"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"ningtan11"},"content":"        public void updateFilteredItineraryList(Predicate\u003cItinerary\u003e predicate) {","lastModifiedDate":"2022-10-14"},{"lineNumber":149,"author":{"gitId":"ciaoosuuu"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"ningtan11"},"content":"     * A Model stub that contains a single itinerary.","lastModifiedDate":"2022-10-14"},{"lineNumber":155,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"ningtan11"},"content":"    private class ModelStubWithItinerary extends ModelStub {","lastModifiedDate":"2022-10-14"},{"lineNumber":157,"author":{"gitId":"ningtan11"},"content":"        private final Itinerary itinerary;","lastModifiedDate":"2022-10-14"},{"lineNumber":158,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":159,"author":{"gitId":"ningtan11"},"content":"        ModelStubWithItinerary(Itinerary itinerary) {","lastModifiedDate":"2022-10-14"},{"lineNumber":160,"author":{"gitId":"ningtan11"},"content":"            requireNonNull(itinerary);","lastModifiedDate":"2022-10-14"},{"lineNumber":161,"author":{"gitId":"ningtan11"},"content":"            this.itinerary \u003d itinerary;","lastModifiedDate":"2022-10-14"},{"lineNumber":162,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":163,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":164,"author":{"gitId":"ciaoosuuu"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":165,"author":{"gitId":"ningtan11"},"content":"        public boolean hasItinerary(Itinerary itinerary) {","lastModifiedDate":"2022-10-14"},{"lineNumber":166,"author":{"gitId":"ningtan11"},"content":"            requireNonNull(itinerary);","lastModifiedDate":"2022-10-14"},{"lineNumber":167,"author":{"gitId":"ningtan11"},"content":"            return this.itinerary.isSameItinerary(itinerary);","lastModifiedDate":"2022-10-14"},{"lineNumber":168,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":169,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":170,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":171,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":172,"author":{"gitId":"ningtan11"},"content":"     * A Model stub that always accept the itinerary being added.","lastModifiedDate":"2022-10-14"},{"lineNumber":173,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":174,"author":{"gitId":"ningtan11"},"content":"    private class ModelStubAcceptingItineraryAdded extends ModelStub {","lastModifiedDate":"2022-10-14"},{"lineNumber":175,"author":{"gitId":"ningtan11"},"content":"        final ArrayList\u003cItinerary\u003e itinerariesAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-14"},{"lineNumber":176,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":177,"author":{"gitId":"ciaoosuuu"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":178,"author":{"gitId":"ningtan11"},"content":"        public boolean hasItinerary(Itinerary itinerary) {","lastModifiedDate":"2022-10-14"},{"lineNumber":179,"author":{"gitId":"ningtan11"},"content":"            requireNonNull(itinerary);","lastModifiedDate":"2022-10-14"},{"lineNumber":180,"author":{"gitId":"ningtan11"},"content":"            return itinerariesAdded.stream().anyMatch(itinerary::isSameItinerary);","lastModifiedDate":"2022-10-14"},{"lineNumber":181,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":182,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":183,"author":{"gitId":"ciaoosuuu"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":184,"author":{"gitId":"ningtan11"},"content":"        public void addItinerary(Itinerary itinerary) {","lastModifiedDate":"2022-10-14"},{"lineNumber":185,"author":{"gitId":"ningtan11"},"content":"            requireNonNull(itinerary);","lastModifiedDate":"2022-10-14"},{"lineNumber":186,"author":{"gitId":"ningtan11"},"content":"            itinerariesAdded.add(itinerary);","lastModifiedDate":"2022-10-14"},{"lineNumber":187,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":188,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":189,"author":{"gitId":"ciaoosuuu"},"content":"        @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":190,"author":{"gitId":"ningtan11"},"content":"        public ReadOnlyWaddle getWaddle() {","lastModifiedDate":"2022-10-14"},{"lineNumber":191,"author":{"gitId":"ningtan11"},"content":"            return new Waddle();","lastModifiedDate":"2022-10-14"},{"lineNumber":192,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":193,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":194,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":195,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"ciaoosuuu":133,"ningtan11":54,"seox123":8}},{"path":"src/test/java/seedu/waddle/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.testutil.TypicalItineraries.getTypicalWaddle;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.Waddle;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"public class ClearCommandTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"ciaoosuuu"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"ciaoosuuu"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"ningtan11"},"content":"        Model model \u003d new ModelManager(getTypicalWaddle(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"ningtan11"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalWaddle(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"ningtan11"},"content":"        expectedModel.setWaddle(new Waddle());","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"ciaoosuuu":22,"ningtan11":5,"seox123":5}},{"path":"src/test/java/seedu/waddle/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"-":53,"seox123":1}},{"path":"src/test/java/seedu/waddle/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_BUDGET;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_COUNTRY;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_ITINERARY_DURATION;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_PEOPLE;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_START_DATE;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"seox123"},"content":"import seedu.waddle.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.Waddle;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.itinerary.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.testutil.EditItineraryDescriptorBuilder;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"public class CommandTestUtil {","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"seox123"},"content":"    public static final String VALID_NAME_SUMMER \u003d \"Summer Trip\";","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"seox123"},"content":"    public static final String VALID_NAME_WINTER \u003d \"Winter Trip\";","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"CFSY"},"content":"    public static final String VALID_NAME_TEST \u003d \"Test Name\";","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"seox123"},"content":"    public static final String VALID_COUNTRY_SUMMER \u003d \"Sweden\";","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"seox123"},"content":"    public static final String VALID_COUNTRY_WINTER \u003d \"Japan\";","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"CFSY"},"content":"    public static final String VALID_COUNTRY_TEST \u003d \"Test Country\";","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"seox123"},"content":"    public static final String VALID_START_DATE_SUMMER \u003d \"2022-08-01\";","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"seox123"},"content":"    public static final String VALID_START_DATE_WINTER \u003d \"2023-01-01\";","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"CFSY"},"content":"    public static final String VALID_START_DATE_TEST \u003d \"2011-11-11\";","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"pewggls"},"content":"    public static final String VALID_DURATION_SUMMER \u003d \"26\";","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"pewggls"},"content":"    public static final String VALID_DURATION_WINTER \u003d \"31\";","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"pewggls"},"content":"    public static final String VALID_DURATION_TEST \u003d \"3\";","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"seox123"},"content":"    public static final String VALID_PEOPLE_SUMMER \u003d \"5\";","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"seox123"},"content":"    public static final String VALID_PEOPLE_WINTER \u003d \"10\";","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"CFSY"},"content":"    public static final String VALID_PEOPLE_TEST \u003d \"69\";","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"pewggls"},"content":"    public static final String VALID_BUDGET_SUMMER \u003d \"5000\";","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"pewggls"},"content":"    public static final String VALID_BUDGET_WINTER \u003d \"200\";","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"pewggls"},"content":"    public static final String VALID_BUDGET_TEST \u003d \"970.00\";","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String NAME_DESC_SUMMER \u003d \" \" + PREFIX_DESCRIPTION + VALID_NAME_SUMMER;","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String NAME_DESC_WINTER \u003d \" \" + PREFIX_DESCRIPTION + VALID_NAME_WINTER;","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String NAME_DESC_TEST \u003d \" \" + PREFIX_DESCRIPTION + VALID_NAME_TEST;","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"ningtan11"},"content":"    public static final String COUNTRY_DESC_SUMMER \u003d \" \" + PREFIX_COUNTRY + VALID_COUNTRY_SUMMER;","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"ningtan11"},"content":"    public static final String COUNTRY_DESC_WINTER \u003d \" \" + PREFIX_COUNTRY + VALID_COUNTRY_WINTER;","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"CFSY"},"content":"    public static final String COUNTRY_DESC_TEST \u003d \" \" + PREFIX_COUNTRY + VALID_COUNTRY_TEST;","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"ningtan11"},"content":"    public static final String START_DATE_DESC_SUMMER \u003d \" \" + PREFIX_START_DATE + VALID_START_DATE_SUMMER;","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"ningtan11"},"content":"    public static final String START_DATE_DESC_WINTER \u003d \" \" + PREFIX_START_DATE + VALID_START_DATE_WINTER;","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"CFSY"},"content":"    public static final String START_DATE_DESC_TEST \u003d \" \" + PREFIX_START_DATE + VALID_START_DATE_TEST;","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"pewggls"},"content":"    public static final String DURATION_DESC_SUMMER \u003d \" \" + PREFIX_ITINERARY_DURATION + VALID_DURATION_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"pewggls"},"content":"    public static final String DURATION_DESC_WINTER \u003d \" \" + PREFIX_ITINERARY_DURATION + VALID_DURATION_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"pewggls"},"content":"    public static final String DURATION_DESC_TEST \u003d \" \" + PREFIX_ITINERARY_DURATION + VALID_DURATION_TEST;","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"ningtan11"},"content":"    public static final String PEOPLE_DESC_SUMMER \u003d \" \" + PREFIX_PEOPLE + VALID_PEOPLE_SUMMER;","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"ningtan11"},"content":"    public static final String PEOPLE_DESC_WINTER \u003d \" \" + PREFIX_PEOPLE + VALID_PEOPLE_WINTER;","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"CFSY"},"content":"    public static final String PEOPLE_DESC_TEST \u003d \" \" + PREFIX_PEOPLE + VALID_PEOPLE_TEST;","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"pewggls"},"content":"    public static final String BUDGET_DESC_SUMMER \u003d \" \" + PREFIX_BUDGET + VALID_BUDGET_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"pewggls"},"content":"    public static final String BUDGET_DESC_WINTER \u003d \" \" + PREFIX_BUDGET + VALID_BUDGET_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"pewggls"},"content":"    public static final String BUDGET_DESC_TEST \u003d \" \" + PREFIX_BUDGET + VALID_BUDGET_TEST;","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_DESCRIPTION + \"Family Trip\u0026\"; // \u0027\u0026\u0027 not allowed","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"CFSY"},"content":"    public static final String INVALID_COUNTRY_DESC \u003d \" \" + PREFIX_COUNTRY + \"Germany(\"; // \u0027(\u0027 not allowed in country","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"CFSY"},"content":"    public static final String INVALID_START_DATE_DESC \u003d \" \" + PREFIX_START_DATE + \"Jan 01\"; // wrong format","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"pewggls"},"content":"    // only numbers allowed for duration","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"pewggls"},"content":"    public static final String INVALID_DURATION_DESC \u003d \" \" + PREFIX_ITINERARY_DURATION + \"3 days\";","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"CFSY"},"content":"    public static final String INVALID_PEOPLE_DESC \u003d \" \" + PREFIX_PEOPLE + \"five\"; // only numbers allowed for people","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"pewggls"},"content":"    public static final String INVALID_BUDGET_DESC \u003d \" \" + PREFIX_BUDGET + \"$100\"; // only numbers allowed for budget","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"ciaoosuuu"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"ningtan11"},"content":"    public static final EditCommand.EditItineraryDescriptor DESC_SUMMER;","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"ningtan11"},"content":"    public static final EditCommand.EditItineraryDescriptor DESC_WINTER;","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"ciaoosuuu"},"content":"    static {","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"ningtan11"},"content":"        DESC_SUMMER \u003d new EditItineraryDescriptorBuilder().withName(VALID_NAME_SUMMER)","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"ningtan11"},"content":"                .withCountry(VALID_COUNTRY_SUMMER).withStartDate(VALID_START_DATE_SUMMER)","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"pewggls"},"content":"                .withDuration(VALID_DURATION_SUMMER)","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"pewggls"},"content":"                .withPeople(VALID_PEOPLE_SUMMER)","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"pewggls"},"content":"                .withBudget(VALID_BUDGET_SUMMER).build();","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"ningtan11"},"content":"        DESC_WINTER \u003d new EditItineraryDescriptorBuilder().withName(VALID_NAME_WINTER)","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"ningtan11"},"content":"                .withCountry(VALID_COUNTRY_WINTER).withStartDate(VALID_START_DATE_WINTER)","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"pewggls"},"content":"                .withDuration(VALID_DURATION_WINTER)","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"pewggls"},"content":"                .withPeople(VALID_PEOPLE_WINTER)","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"pewggls"},"content":"                .withBudget(VALID_BUDGET_WINTER).build();","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"ciaoosuuu"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"ciaoosuuu"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"ciaoosuuu"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"ciaoosuuu"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"ciaoosuuu"},"content":"            Model expectedModel) {","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"ciaoosuuu"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"ciaoosuuu"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"ciaoosuuu"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"ciaoosuuu"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"ciaoosuuu"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"ciaoosuuu"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"ciaoosuuu"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"ciaoosuuu"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"ciaoosuuu"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"ciaoosuuu"},"content":"            Model expectedModel) {","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"ciaoosuuu"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"ciaoosuuu"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"ciaoosuuu"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"ciaoosuuu"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"ciaoosuuu"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"ciaoosuuu"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"ciaoosuuu"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"ciaoosuuu"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"ciaoosuuu"},"content":"        // only do so by copying its components.","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"ningtan11"},"content":"        Waddle expectedAddressBook \u003d new Waddle(actualModel.getWaddle());","lastModifiedDate":"2022-10-14"},{"lineNumber":138,"author":{"gitId":"ningtan11"},"content":"        List\u003cItinerary\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredItineraryList());","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"ningtan11"},"content":"        assertEquals(expectedAddressBook, actualModel.getWaddle());","lastModifiedDate":"2022-10-14"},{"lineNumber":142,"author":{"gitId":"ningtan11"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredItineraryList());","lastModifiedDate":"2022-10-14"},{"lineNumber":143,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"ciaoosuuu"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"ciaoosuuu"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"ningtan11"},"content":"    public static void showItineraryAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-14"},{"lineNumber":149,"author":{"gitId":"ningtan11"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredItineraryList().size());","lastModifiedDate":"2022-10-14"},{"lineNumber":150,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"ningtan11"},"content":"        Itinerary itinerary \u003d model.getFilteredItineraryList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":152,"author":{"gitId":"CFSY"},"content":"        final String[] splitName \u003d itinerary.getDescription().description.split(\"\\\\s+\");","lastModifiedDate":"2022-10-27"},{"lineNumber":153,"author":{"gitId":"ningtan11"},"content":"        model.updateFilteredItineraryList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-10-14"},{"lineNumber":154,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"ningtan11"},"content":"        assertEquals(1, model.getFilteredItineraryList().size());","lastModifiedDate":"2022-10-14"},{"lineNumber":156,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":158,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"ciaoosuuu":74,"CFSY":11,"pewggls":35,"ningtan11":25,"seox123":13}},{"path":"src/test/java/seedu/waddle/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.showItineraryAtIndex;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.testutil.TypicalIndexes.INDEX_FIRST_ITINERARY;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.testutil.TypicalIndexes.INDEX_SECOND_ITINERARY;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.testutil.TypicalItineraries.getTypicalWaddle;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"seox123"},"content":"import seedu.waddle.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"seox123"},"content":"import seedu.waddle.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"ningtan11"},"content":"    private Model model \u003d new ModelManager(getTypicalWaddle(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"ningtan11"},"content":"        Itinerary itineraryToDelete \u003d model.getFilteredItineraryList().get(INDEX_FIRST_ITINERARY.getZeroBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"ningtan11"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_ITINERARY);","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"ningtan11"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_ITINERARY_SUCCESS, itineraryToDelete);","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"ningtan11"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getWaddle(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"ningtan11"},"content":"        expectedModel.deleteItinerary(itineraryToDelete);","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"ningtan11"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredItineraryList().size() + 1);","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"ningtan11"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_ITINERARY_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"ningtan11"},"content":"        showItineraryAtIndex(model, INDEX_FIRST_ITINERARY);","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"ningtan11"},"content":"        Itinerary itineraryToDelete \u003d model.getFilteredItineraryList().get(INDEX_FIRST_ITINERARY.getZeroBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"ningtan11"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_ITINERARY);","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"ningtan11"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_ITINERARY_SUCCESS, itineraryToDelete);","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"ningtan11"},"content":"        Model expectedModel \u003d new ModelManager(model.getWaddle(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"ningtan11"},"content":"        expectedModel.deleteItinerary(itineraryToDelete);","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"ningtan11"},"content":"        showItineraryAtIndex(model, INDEX_FIRST_ITINERARY);","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"ningtan11"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ITINERARY;","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"ningtan11"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getWaddle().getItineraryList().size());","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"ningtan11"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_ITINERARY_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"ningtan11"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_ITINERARY);","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"ningtan11"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_ITINERARY);","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"ningtan11"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_ITINERARY);","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"ningtan11"},"content":"        model.updateFilteredItineraryList(p -\u003e false);","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"ningtan11"},"content":"        assertTrue(model.getFilteredItineraryList().isEmpty());","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"ningtan11":28,"-":73,"seox123":8}},{"path":"src/test/java/seedu/waddle/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.DESC_SUMMER;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.DESC_WINTER;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_COUNTRY_WINTER;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_NAME_TEST;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_NAME_WINTER;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_PEOPLE_SUMMER;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.showItineraryAtIndex;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.testutil.TypicalIndexes.INDEX_FIRST_ITINERARY;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.testutil.TypicalIndexes.INDEX_SECOND_ITINERARY;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.testutil.TypicalItineraries.getTypicalWaddle;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"seox123"},"content":"import seedu.waddle.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"seox123"},"content":"import seedu.waddle.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.logic.commands.EditCommand.EditItineraryDescriptor;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.Waddle;","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.testutil.EditItineraryDescriptorBuilder;","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.testutil.ItineraryBuilder;","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"public class EditCommandTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"ningtan11"},"content":"    private Model model \u003d new ModelManager(getTypicalWaddle(), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"ningtan11"},"content":"        Itinerary editedItinerary \u003d new ItineraryBuilder().build();","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"ningtan11"},"content":"        EditItineraryDescriptor descriptor \u003d new EditItineraryDescriptorBuilder(editedItinerary).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"ningtan11"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ITINERARY, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"ningtan11"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_ITINERARY_SUCCESS, editedItinerary);","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"ningtan11"},"content":"        Model expectedModel \u003d new ModelManager(new Waddle(model.getWaddle()), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"ningtan11"},"content":"        expectedModel.setItinerary(model.getFilteredItineraryList().get(0), editedItinerary);","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"ciaoosuuu"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"ciaoosuuu"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"ningtan11"},"content":"        Index indexLastItinerary \u003d Index.fromOneBased(model.getFilteredItineraryList().size());","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"ningtan11"},"content":"        Itinerary lastItinerary \u003d model.getFilteredItineraryList().get(indexLastItinerary.getZeroBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"ningtan11"},"content":"        ItineraryBuilder itineraryInList \u003d new ItineraryBuilder(lastItinerary);","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"CFSY"},"content":"        Itinerary editedItinerary \u003d itineraryInList.withName(VALID_NAME_TEST).withCountry(VALID_COUNTRY_WINTER)","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"ningtan11"},"content":"                .withPeople(VALID_PEOPLE_SUMMER).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"CFSY"},"content":"        EditItineraryDescriptor descriptor \u003d new EditItineraryDescriptorBuilder().withName(VALID_NAME_TEST)","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"CFSY"},"content":"                .withCountry(VALID_COUNTRY_WINTER).withPeople(VALID_PEOPLE_SUMMER).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"ningtan11"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastItinerary, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"ningtan11"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_ITINERARY_SUCCESS, editedItinerary);","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"ningtan11"},"content":"        Model expectedModel \u003d new ModelManager(new Waddle(model.getWaddle()), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"ningtan11"},"content":"        expectedModel.setItinerary(lastItinerary, editedItinerary);","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"ciaoosuuu"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"ciaoosuuu"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"ningtan11"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ITINERARY, new EditItineraryDescriptor());","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"ningtan11"},"content":"        Itinerary editedItinerary \u003d model.getFilteredItineraryList().get(INDEX_FIRST_ITINERARY.getZeroBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"ningtan11"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_ITINERARY_SUCCESS, editedItinerary);","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"ningtan11"},"content":"        Model expectedModel \u003d new ModelManager(new Waddle(model.getWaddle()), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"ciaoosuuu"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"ciaoosuuu"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"ningtan11"},"content":"        showItineraryAtIndex(model, INDEX_FIRST_ITINERARY);","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"ningtan11"},"content":"        Itinerary itineraryInFilteredList \u003d model.getFilteredItineraryList().get(INDEX_FIRST_ITINERARY.getZeroBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"CFSY"},"content":"        Itinerary editedItinerary \u003d new ItineraryBuilder(itineraryInFilteredList).withName(VALID_NAME_TEST).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"ningtan11"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ITINERARY,","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"CFSY"},"content":"                new EditItineraryDescriptorBuilder().withName(VALID_NAME_TEST).build());","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"ningtan11"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_ITINERARY_SUCCESS, editedItinerary);","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"ningtan11"},"content":"        Model expectedModel \u003d new ModelManager(new Waddle(model.getWaddle()), new UserPrefs());","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"ningtan11"},"content":"        expectedModel.setItinerary(model.getFilteredItineraryList().get(0), editedItinerary);","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"ciaoosuuu"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"ningtan11"},"content":"    public void execute_duplicateItineraryUnfilteredList_failure() {","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"ningtan11"},"content":"        Itinerary firstItinerary \u003d model.getFilteredItineraryList().get(INDEX_FIRST_ITINERARY.getZeroBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"ningtan11"},"content":"        EditItineraryDescriptor descriptor \u003d new EditItineraryDescriptorBuilder(firstItinerary).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"ningtan11"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_ITINERARY, descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"ningtan11"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_ITINERARY);","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"ningtan11"},"content":"    public void execute_duplicateItineraryFilteredList_failure() {","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"ningtan11"},"content":"        showItineraryAtIndex(model, INDEX_FIRST_ITINERARY);","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"ningtan11"},"content":"        // edit itinerary in filtered list into a duplicate in Waddle","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"ningtan11"},"content":"        Itinerary itineraryInList \u003d model.getWaddle().getItineraryList().get(INDEX_SECOND_ITINERARY.getZeroBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"ningtan11"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_ITINERARY,","lastModifiedDate":"2022-10-14"},{"lineNumber":114,"author":{"gitId":"ningtan11"},"content":"                new EditItineraryDescriptorBuilder(itineraryInList).build());","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"ningtan11"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_ITINERARY);","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"ningtan11"},"content":"    public void execute_invalidItineraryIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"ningtan11"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredItineraryList().size() + 1);","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"ningtan11"},"content":"        EditItineraryDescriptor descriptor \u003d new EditItineraryDescriptorBuilder().withName(VALID_NAME_WINTER).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"ciaoosuuu"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"ningtan11"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_ITINERARY_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"ciaoosuuu"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"ningtan11"},"content":"     * but smaller than size of itinerary list","lastModifiedDate":"2022-10-14"},{"lineNumber":131,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"ningtan11"},"content":"    public void execute_invalidItineraryIndexFilteredList_failure() {","lastModifiedDate":"2022-10-14"},{"lineNumber":134,"author":{"gitId":"ningtan11"},"content":"        showItineraryAtIndex(model, INDEX_FIRST_ITINERARY);","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"ningtan11"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_ITINERARY;","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"ciaoosuuu"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"ningtan11"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getWaddle().getItineraryList().size());","lastModifiedDate":"2022-10-14"},{"lineNumber":138,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"ciaoosuuu"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"ningtan11"},"content":"                new EditItineraryDescriptorBuilder().withName(VALID_NAME_WINTER).build());","lastModifiedDate":"2022-10-14"},{"lineNumber":141,"author":{"gitId":"ningtan11"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_ITINERARY_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-14"},{"lineNumber":142,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"ciaoosuuu"},"content":"    public void equals() {","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"ningtan11"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_ITINERARY, DESC_SUMMER);","lastModifiedDate":"2022-10-14"},{"lineNumber":147,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"ciaoosuuu"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"ningtan11"},"content":"        EditItineraryDescriptor copyDescriptor \u003d new EditItineraryDescriptor(DESC_SUMMER);","lastModifiedDate":"2022-10-14"},{"lineNumber":150,"author":{"gitId":"ningtan11"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_ITINERARY, copyDescriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":151,"author":{"gitId":"ciaoosuuu"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"ciaoosuuu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"ciaoosuuu"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"ciaoosuuu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":158,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":159,"author":{"gitId":"ciaoosuuu"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":160,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-10-13"},{"lineNumber":161,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":162,"author":{"gitId":"ciaoosuuu"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":163,"author":{"gitId":"ningtan11"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_ITINERARY, DESC_SUMMER)));","lastModifiedDate":"2022-10-14"},{"lineNumber":164,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":165,"author":{"gitId":"ciaoosuuu"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":166,"author":{"gitId":"ningtan11"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_ITINERARY, DESC_WINTER)));","lastModifiedDate":"2022-10-14"},{"lineNumber":167,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":168,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":169,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"ciaoosuuu":88,"CFSY":5,"ningtan11":61,"seox123":15}},{"path":"src/test/java/seedu/waddle/logic/commands/EditItineraryDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ningtan11"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"ningtan11"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"ningtan11"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.DESC_SUMMER;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.DESC_WINTER;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_COUNTRY_WINTER;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_DURATION_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_NAME_WINTER;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_PEOPLE_WINTER;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_START_DATE_WINTER;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"ningtan11"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.logic.commands.EditCommand.EditItineraryDescriptor;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.testutil.EditItineraryDescriptorBuilder;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"ningtan11"},"content":"public class EditItineraryDescriptorTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"ningtan11"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"ningtan11"},"content":"    public void equals() {","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"ningtan11"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"ningtan11"},"content":"        EditItineraryDescriptor descriptorWithSameValues \u003d new EditItineraryDescriptor(DESC_SUMMER);","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"ningtan11"},"content":"        assertTrue(DESC_SUMMER.equals(descriptorWithSameValues));","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"ningtan11"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"ningtan11"},"content":"        assertTrue(DESC_SUMMER.equals(DESC_SUMMER));","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"ningtan11"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"ningtan11"},"content":"        assertFalse(DESC_SUMMER.equals(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"ningtan11"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"ningtan11"},"content":"        assertFalse(DESC_SUMMER.equals(5));","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"ningtan11"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"ningtan11"},"content":"        assertFalse(DESC_SUMMER.equals(DESC_WINTER));","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"ningtan11"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"seox123"},"content":"        EditItineraryDescriptor editedSummer \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"seox123"},"content":"                new EditItineraryDescriptorBuilder(DESC_SUMMER).withName(VALID_NAME_WINTER).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"ningtan11"},"content":"        assertFalse(DESC_SUMMER.equals(editedSummer));","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"ningtan11"},"content":"        // different country -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"ningtan11"},"content":"        editedSummer \u003d new EditItineraryDescriptorBuilder(DESC_SUMMER).withCountry(VALID_COUNTRY_WINTER).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"ningtan11"},"content":"        assertFalse(DESC_SUMMER.equals(editedSummer));","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"ningtan11"},"content":"        // different start date -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"ningtan11"},"content":"        editedSummer \u003d new EditItineraryDescriptorBuilder(DESC_SUMMER).withStartDate(VALID_START_DATE_WINTER).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"ningtan11"},"content":"        assertFalse(DESC_SUMMER.equals(editedSummer));","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"ningtan11"},"content":"        // different end date -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"pewggls"},"content":"        editedSummer \u003d new EditItineraryDescriptorBuilder(DESC_SUMMER).withDuration(VALID_DURATION_WINTER).build();","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"ningtan11"},"content":"        assertFalse(DESC_SUMMER.equals(editedSummer));","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"ningtan11"},"content":"        // different people -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"ningtan11"},"content":"        editedSummer \u003d new EditItineraryDescriptorBuilder(DESC_SUMMER).withPeople(VALID_PEOPLE_WINTER).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"ningtan11"},"content":"        assertFalse(DESC_SUMMER.equals(editedSummer));","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"ningtan11"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"ningtan11":49,"pewggls":2,"seox123":8}},{"path":"src/test/java/seedu/waddle/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"-":15,"seox123":5}},{"path":"src/test/java/seedu/waddle/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"import static seedu.waddle.commons.core.Messages.MESSAGE_ITINERARIES_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.testutil.TypicalItineraries.AUTUMN;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"CFSY"},"content":"import static seedu.waddle.testutil.TypicalItineraries.SPRING;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"CFSY"},"content":"import static seedu.waddle.testutil.TypicalItineraries.getTypicalWaddle;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"CFSY"},"content":"import seedu.waddle.model.itinerary.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"    private Model model \u003d new ModelManager(getTypicalWaddle(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"CFSY"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalWaddle(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"CFSY"},"content":"        // different itinerary -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"CFSY"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ITINERARIES_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"CFSY"},"content":"        expectedModel.updateFilteredItineraryList(predicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"CFSY"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredItineraryList());","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"CFSY"},"content":"    public void execute_multipleKeywords_multipleItinerariesFound() {","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"CFSY"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ITINERARIES_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"seox123"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Spring Autumn\");","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"CFSY"},"content":"        expectedModel.updateFilteredItineraryList(predicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"seox123"},"content":"        assertEquals(Arrays.asList(SPRING, AUTUMN), model.getFilteredItineraryList());","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"CFSY":13,"-":61,"seox123":8}},{"path":"src/test/java/seedu/waddle/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"-":15,"seox123":5}},{"path":"src/test/java/seedu/waddle/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"CFSY"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.showItineraryAtIndex;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.testutil.TypicalIndexes.INDEX_FIRST_ITINERARY;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"CFSY"},"content":"import static seedu.waddle.testutil.TypicalItineraries.getTypicalWaddle;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"CFSY"},"content":"        model \u003d new ModelManager(getTypicalWaddle(), new UserPrefs());","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"CFSY"},"content":"        expectedModel \u003d new ModelManager(model.getWaddle(), new UserPrefs());","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"CFSY"},"content":"        showItineraryAtIndex(model, INDEX_FIRST_ITINERARY);","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"CFSY":5,"ningtan11":1,"-":28,"seox123":5}},{"path":"src/test/java/seedu/waddle/logic/commands/exceptions/CommandException.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.logic.commands.exceptions;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"seox123"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"seox123"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"seox123"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"seox123"},"content":"    public CommandException(String message) {","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"seox123"},"content":"        super(message);","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"seox123"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"seox123"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"seox123"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"seox123"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"seox123"},"content":"        super(message, cause);","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"seox123"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"seox123":17}},{"path":"src/test/java/seedu/waddle/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.BUDGET_DESC_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.COUNTRY_DESC_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.COUNTRY_DESC_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.DURATION_DESC_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.DURATION_DESC_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.INVALID_COUNTRY_DESC;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.INVALID_DURATION_DESC;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.INVALID_PEOPLE_DESC;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.INVALID_START_DATE_DESC;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.NAME_DESC_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.NAME_DESC_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.PEOPLE_DESC_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.START_DATE_DESC_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_COUNTRY_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_DURATION_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_NAME_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_START_DATE_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.testutil.TypicalItineraries.WINTER;","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.commands.AddCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Country;","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Date;","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Description;","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.ItineraryDuration;","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.People;","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.testutil.ItineraryBuilder;","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"ciaoosuuu"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"ciaoosuuu"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"ningtan11"},"content":"        Itinerary expectedItinerary \u003d new ItineraryBuilder(WINTER).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"ciaoosuuu"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"ningtan11"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_WINTER + COUNTRY_DESC_WINTER","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"pewggls"},"content":"                        + START_DATE_DESC_WINTER + DURATION_DESC_WINTER + PEOPLE_DESC_WINTER + BUDGET_DESC_WINTER,","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"ningtan11"},"content":"                new AddCommand(expectedItinerary));","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"ciaoosuuu"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"ningtan11"},"content":"        assertParseSuccess(parser, NAME_DESC_SUMMER + NAME_DESC_WINTER + COUNTRY_DESC_WINTER","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"pewggls"},"content":"                        + START_DATE_DESC_WINTER + DURATION_DESC_WINTER + PEOPLE_DESC_WINTER + BUDGET_DESC_WINTER,","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"ningtan11"},"content":"                new AddCommand(expectedItinerary));","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"ningtan11"},"content":"        // multiple country - last country accepted","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"ningtan11"},"content":"        assertParseSuccess(parser, NAME_DESC_WINTER + COUNTRY_DESC_SUMMER + COUNTRY_DESC_WINTER","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"pewggls"},"content":"                        + START_DATE_DESC_WINTER + DURATION_DESC_WINTER + PEOPLE_DESC_WINTER + BUDGET_DESC_WINTER,","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"ningtan11"},"content":"                new AddCommand(expectedItinerary));","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"CFSY"},"content":"        // multiple people - last people accepted","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"ningtan11"},"content":"        assertParseSuccess(parser, NAME_DESC_WINTER + PEOPLE_DESC_WINTER + COUNTRY_DESC_WINTER","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"pewggls"},"content":"                        + START_DATE_DESC_WINTER + DURATION_DESC_WINTER + PEOPLE_DESC_WINTER + BUDGET_DESC_WINTER,","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"ningtan11"},"content":"                new AddCommand(expectedItinerary));","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"pewggls"},"content":"        // multiple duration - last duration accepted","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"ningtan11"},"content":"        assertParseSuccess(parser, NAME_DESC_WINTER + COUNTRY_DESC_WINTER + START_DATE_DESC_WINTER","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"pewggls"},"content":"                        + DURATION_DESC_SUMMER + DURATION_DESC_WINTER + PEOPLE_DESC_WINTER + BUDGET_DESC_WINTER,","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"ningtan11"},"content":"                new AddCommand(expectedItinerary));","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"pewggls"},"content":"        /* TODO: multiple budget","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"CFSY"},"content":"        Itinerary expectedItineraryMultipleTags \u003d new ItineraryBuilder(WINTER).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"ningtan11"},"content":"        assertParseSuccess(parser, NAME_DESC_WINTER + COUNTRY_DESC_WINTER + START_DATE_DESC_WINTER","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"pewggls"},"content":"                        + DURATION_DESC_WINTER + PEOPLE_DESC_SUMMER + PEOPLE_DESC_WINTER,","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"CFSY"},"content":"                new AddCommand(expectedItineraryMultipleTags));","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"pewggls"},"content":"         */","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"ciaoosuuu"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"ciaoosuuu"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"ciaoosuuu"},"content":"        // missing name prefix","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"ningtan11"},"content":"        assertParseFailure(parser, VALID_NAME_WINTER + COUNTRY_DESC_WINTER + START_DATE_DESC_WINTER","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"pewggls"},"content":"                + DURATION_DESC_WINTER, expectedMessage);","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"pewggls"},"content":"        // missing start date prefix","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"ningtan11"},"content":"        assertParseFailure(parser, NAME_DESC_WINTER + COUNTRY_DESC_WINTER + VALID_START_DATE_WINTER","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"pewggls"},"content":"                + DURATION_DESC_WINTER, expectedMessage);","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"pewggls"},"content":"        // missing duration prefix","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"ningtan11"},"content":"        assertParseFailure(parser, NAME_DESC_WINTER + COUNTRY_DESC_WINTER + START_DATE_DESC_WINTER","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"pewggls"},"content":"                + VALID_DURATION_WINTER, expectedMessage);","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"ciaoosuuu"},"content":"        // all prefixes missing","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"ningtan11"},"content":"        assertParseFailure(parser, VALID_NAME_WINTER + VALID_COUNTRY_WINTER + VALID_START_DATE_WINTER","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"pewggls"},"content":"                + VALID_DURATION_WINTER, expectedMessage);","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"ciaoosuuu"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"ciaoosuuu"},"content":"        // invalid name","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"ningtan11"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + COUNTRY_DESC_WINTER + START_DATE_DESC_WINTER","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"ciaoosuuu"},"content":"                + DURATION_DESC_WINTER + PEOPLE_DESC_WINTER, Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":106,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"ciaoosuuu"},"content":"        // invalid phone","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"ningtan11"},"content":"        assertParseFailure(parser, NAME_DESC_WINTER + INVALID_COUNTRY_DESC + START_DATE_DESC_WINTER","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"pewggls"},"content":"                + DURATION_DESC_WINTER + PEOPLE_DESC_WINTER, Country.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"ciaoosuuu"},"content":"        // invalid email","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"ningtan11"},"content":"        assertParseFailure(parser, NAME_DESC_WINTER + COUNTRY_DESC_WINTER + INVALID_START_DATE_DESC","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"pewggls"},"content":"                + DURATION_DESC_WINTER + PEOPLE_DESC_WINTER, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":114,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"pewggls"},"content":"        // invalid duration","lastModifiedDate":"2022-10-21"},{"lineNumber":116,"author":{"gitId":"ningtan11"},"content":"        assertParseFailure(parser, NAME_DESC_WINTER + COUNTRY_DESC_WINTER + START_DATE_DESC_WINTER","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"pewggls"},"content":"                + INVALID_DURATION_DESC + PEOPLE_DESC_WINTER, ItineraryDuration.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":118,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"ciaoosuuu"},"content":"        // invalid tag","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"ningtan11"},"content":"        assertParseFailure(parser, NAME_DESC_WINTER + COUNTRY_DESC_WINTER + START_DATE_DESC_WINTER","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"pewggls"},"content":"                + DURATION_DESC_WINTER + INVALID_PEOPLE_DESC, People.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":122,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"ciaoosuuu"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"ningtan11"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + COUNTRY_DESC_WINTER + START_DATE_DESC_WINTER","lastModifiedDate":"2022-10-14"},{"lineNumber":125,"author":{"gitId":"ciaoosuuu"},"content":"                + INVALID_DURATION_DESC + PEOPLE_DESC_WINTER, Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":126,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"ciaoosuuu"},"content":"        // non-empty preamble","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"ningtan11"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_WINTER + COUNTRY_DESC_WINTER","lastModifiedDate":"2022-10-14"},{"lineNumber":129,"author":{"gitId":"pewggls"},"content":"                + START_DATE_DESC_WINTER + DURATION_DESC_WINTER + PEOPLE_DESC_WINTER,","lastModifiedDate":"2022-10-21"},{"lineNumber":130,"author":{"gitId":"ciaoosuuu"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"ciaoosuuu":50,"CFSY":3,"pewggls":47,"ningtan11":26,"seox123":6}},{"path":"src/test/java/seedu/waddle/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"-":149,"seox123":1}},{"path":"src/test/java/seedu/waddle/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.commands.Command;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"-":36,"seox123":3}},{"path":"src/test/java/seedu/waddle/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.testutil.TypicalIndexes.INDEX_FIRST_ITINERARY;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"ningtan11"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_ITINERARY));","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"ningtan11":2,"-":25,"seox123":5}},{"path":"src/test/java/seedu/waddle/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.BUDGET_DESC_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.COUNTRY_DESC_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.COUNTRY_DESC_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.DURATION_DESC_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.DURATION_DESC_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.INVALID_BUDGET_DESC;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.INVALID_COUNTRY_DESC;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.INVALID_DURATION_DESC;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.INVALID_PEOPLE_DESC;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.INVALID_START_DATE_DESC;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.NAME_DESC_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.PEOPLE_DESC_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.PEOPLE_DESC_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.START_DATE_DESC_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.START_DATE_DESC_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_BUDGET_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_COUNTRY_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_COUNTRY_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_DURATION_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_DURATION_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_NAME_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_PEOPLE_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_PEOPLE_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_START_DATE_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_START_DATE_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_PEOPLE;","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.testutil.TypicalIndexes.INDEX_FIRST_ITINERARY;","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.testutil.TypicalIndexes.INDEX_SECOND_ITINERARY;","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.testutil.TypicalIndexes.INDEX_THIRD_ITINERARY;","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"ciaoosuuu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"seox123"},"content":"import seedu.waddle.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.commands.EditCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.commands.EditCommand.EditItineraryDescriptor;","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Budget;","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Country;","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Date;","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Description;","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.ItineraryDuration;","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.People;","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.testutil.EditItineraryDescriptorBuilder;","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"ciaoosuuu"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"seox123"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_PEOPLE;","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"ciaoosuuu"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"ciaoosuuu"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"ciaoosuuu"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"ciaoosuuu"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"ciaoosuuu"},"content":"        // no index specified","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"seox123"},"content":"        assertParseFailure(parser, VALID_NAME_SUMMER, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"ciaoosuuu"},"content":"        // no field specified","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"ciaoosuuu"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"ciaoosuuu"},"content":"        // no index and no field specified","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"ciaoosuuu"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"ciaoosuuu"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"ciaoosuuu"},"content":"        // negative index","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"seox123"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_SUMMER, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"ciaoosuuu"},"content":"        // zero index","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"seox123"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_SUMMER, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"ciaoosuuu"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"ciaoosuuu"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"ciaoosuuu"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"ciaoosuuu"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"ciaoosuuu"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"ciaoosuuu"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Description.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"seox123"},"content":"        assertParseFailure(parser, \"1\" + INVALID_COUNTRY_DESC, Country.MESSAGE_CONSTRAINTS); // invalid country","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"seox123"},"content":"        assertParseFailure(parser, \"1\" + INVALID_START_DATE_DESC, Date.MESSAGE_CONSTRAINTS); // invalid start date","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"pewggls"},"content":"        //invalid duration","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"pewggls"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DURATION_DESC, ItineraryDuration.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"seox123"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PEOPLE_DESC, People.MESSAGE_CONSTRAINTS); // invalid people","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"pewggls"},"content":"        assertParseFailure(parser, \"1\" + INVALID_BUDGET_DESC, Budget.MESSAGE_CONSTRAINTS); // invalid budget","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"seox123"},"content":"        // invalid country followed by valid start date","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"seox123"},"content":"        assertParseFailure(parser, \"1\" + INVALID_COUNTRY_DESC + INVALID_START_DATE_DESC,","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"seox123"},"content":"                Country.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"seox123"},"content":"        // valid country followed by invalid country. The test case for invalid country followed by valid country","lastModifiedDate":"2022-10-14"},{"lineNumber":101,"author":{"gitId":"ciaoosuuu"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"seox123"},"content":"        assertParseFailure(parser, \"1\" + COUNTRY_DESC_WINTER + INVALID_COUNTRY_DESC,","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"seox123"},"content":"                Country.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"seox123"},"content":"        // TODO","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"seox123"},"content":"        /*","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"ciaoosuuu"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"ciaoosuuu"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"ciaoosuuu"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"ciaoosuuu"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"ciaoosuuu"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"seox123"},"content":"         */","lastModifiedDate":"2022-10-14"},{"lineNumber":113,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"ciaoosuuu"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"seox123"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_START_DATE_DESC","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"ciaoosuuu"},"content":"                + VALID_DURATION_SUMMER + VALID_COUNTRY_SUMMER + VALID_BUDGET_SUMMER, Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"ciaoosuuu"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"ningtan11"},"content":"        Index targetIndex \u003d INDEX_SECOND_ITINERARY;","lastModifiedDate":"2022-10-14"},{"lineNumber":122,"author":{"gitId":"pewggls"},"content":"        String userInput \u003d targetIndex.getOneBased() + COUNTRY_DESC_SUMMER + PEOPLE_DESC_SUMMER","lastModifiedDate":"2022-10-21"},{"lineNumber":123,"author":{"gitId":"pewggls"},"content":"                + START_DATE_DESC_SUMMER + DURATION_DESC_SUMMER + NAME_DESC_SUMMER + BUDGET_DESC_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":124,"author":{"gitId":"seox123"},"content":"        EditItineraryDescriptor descriptor \u003d new EditItineraryDescriptorBuilder().withName(VALID_NAME_SUMMER)","lastModifiedDate":"2022-10-14"},{"lineNumber":125,"author":{"gitId":"pewggls"},"content":"                .withCountry(VALID_COUNTRY_SUMMER).withStartDate(VALID_START_DATE_SUMMER)","lastModifiedDate":"2022-10-21"},{"lineNumber":126,"author":{"gitId":"pewggls"},"content":"                .withDuration(VALID_DURATION_SUMMER).withPeople(VALID_PEOPLE_SUMMER)","lastModifiedDate":"2022-10-21"},{"lineNumber":127,"author":{"gitId":"pewggls"},"content":"                .withBudget(VALID_BUDGET_SUMMER).build();","lastModifiedDate":"2022-10-21"},{"lineNumber":128,"author":{"gitId":"ciaoosuuu"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"ciaoosuuu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"ciaoosuuu"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"ningtan11"},"content":"        Index targetIndex \u003d INDEX_FIRST_ITINERARY;","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"seox123"},"content":"        String userInput \u003d targetIndex.getOneBased() + COUNTRY_DESC_WINTER + START_DATE_DESC_SUMMER;","lastModifiedDate":"2022-10-14"},{"lineNumber":137,"author":{"gitId":"seox123"},"content":"        EditItineraryDescriptor descriptor \u003d new EditItineraryDescriptorBuilder().withCountry(VALID_COUNTRY_WINTER)","lastModifiedDate":"2022-10-14"},{"lineNumber":138,"author":{"gitId":"CFSY"},"content":"                .withStartDate(VALID_START_DATE_SUMMER).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":139,"author":{"gitId":"ciaoosuuu"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"ciaoosuuu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"ciaoosuuu"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"ciaoosuuu"},"content":"        // name","lastModifiedDate":"2022-10-13"},{"lineNumber":147,"author":{"gitId":"ningtan11"},"content":"        Index targetIndex \u003d INDEX_THIRD_ITINERARY;","lastModifiedDate":"2022-10-14"},{"lineNumber":148,"author":{"gitId":"seox123"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_SUMMER;","lastModifiedDate":"2022-10-14"},{"lineNumber":149,"author":{"gitId":"seox123"},"content":"        EditItineraryDescriptor descriptor \u003d new EditItineraryDescriptorBuilder().withName(VALID_NAME_SUMMER).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":150,"author":{"gitId":"ciaoosuuu"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"ciaoosuuu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":153,"author":{"gitId":"ciaoosuuu"},"content":"        // phone","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"seox123"},"content":"        userInput \u003d targetIndex.getOneBased() + COUNTRY_DESC_SUMMER;","lastModifiedDate":"2022-10-14"},{"lineNumber":155,"author":{"gitId":"seox123"},"content":"        descriptor \u003d new EditItineraryDescriptorBuilder().withCountry(VALID_COUNTRY_SUMMER).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":156,"author":{"gitId":"ciaoosuuu"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":157,"author":{"gitId":"ciaoosuuu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":158,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":159,"author":{"gitId":"ciaoosuuu"},"content":"        // email","lastModifiedDate":"2022-10-13"},{"lineNumber":160,"author":{"gitId":"seox123"},"content":"        userInput \u003d targetIndex.getOneBased() + START_DATE_DESC_SUMMER;","lastModifiedDate":"2022-10-14"},{"lineNumber":161,"author":{"gitId":"seox123"},"content":"        descriptor \u003d new EditItineraryDescriptorBuilder().withStartDate(VALID_START_DATE_SUMMER).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":162,"author":{"gitId":"ciaoosuuu"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":163,"author":{"gitId":"ciaoosuuu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":164,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":165,"author":{"gitId":"ciaoosuuu"},"content":"        // address","lastModifiedDate":"2022-10-13"},{"lineNumber":166,"author":{"gitId":"pewggls"},"content":"        userInput \u003d targetIndex.getOneBased() + DURATION_DESC_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":167,"author":{"gitId":"pewggls"},"content":"        descriptor \u003d new EditItineraryDescriptorBuilder().withDuration(VALID_DURATION_SUMMER).build();","lastModifiedDate":"2022-10-21"},{"lineNumber":168,"author":{"gitId":"ciaoosuuu"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":169,"author":{"gitId":"ciaoosuuu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":170,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":171,"author":{"gitId":"ciaoosuuu"},"content":"        // tags","lastModifiedDate":"2022-10-13"},{"lineNumber":172,"author":{"gitId":"seox123"},"content":"        userInput \u003d targetIndex.getOneBased() + PEOPLE_DESC_SUMMER;","lastModifiedDate":"2022-10-14"},{"lineNumber":173,"author":{"gitId":"seox123"},"content":"        descriptor \u003d new EditItineraryDescriptorBuilder().withPeople(VALID_PEOPLE_SUMMER).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":174,"author":{"gitId":"ciaoosuuu"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":175,"author":{"gitId":"ciaoosuuu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":176,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":177,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":178,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":179,"author":{"gitId":"ciaoosuuu"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-10-13"},{"lineNumber":180,"author":{"gitId":"ningtan11"},"content":"        Index targetIndex \u003d INDEX_FIRST_ITINERARY;","lastModifiedDate":"2022-10-14"},{"lineNumber":181,"author":{"gitId":"pewggls"},"content":"        String userInput \u003d targetIndex.getOneBased() + COUNTRY_DESC_SUMMER + DURATION_DESC_SUMMER","lastModifiedDate":"2022-10-21"},{"lineNumber":182,"author":{"gitId":"pewggls"},"content":"                + START_DATE_DESC_SUMMER + PEOPLE_DESC_SUMMER + COUNTRY_DESC_SUMMER + DURATION_DESC_SUMMER","lastModifiedDate":"2022-10-21"},{"lineNumber":183,"author":{"gitId":"pewggls"},"content":"                + START_DATE_DESC_SUMMER + PEOPLE_DESC_SUMMER + COUNTRY_DESC_WINTER + DURATION_DESC_WINTER","lastModifiedDate":"2022-10-21"},{"lineNumber":184,"author":{"gitId":"CFSY"},"content":"                + START_DATE_DESC_WINTER + PEOPLE_DESC_WINTER;","lastModifiedDate":"2022-10-17"},{"lineNumber":185,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":186,"author":{"gitId":"seox123"},"content":"        EditItineraryDescriptor descriptor \u003d new EditItineraryDescriptorBuilder().withCountry(VALID_COUNTRY_WINTER)","lastModifiedDate":"2022-10-14"},{"lineNumber":187,"author":{"gitId":"pewggls"},"content":"                .withStartDate(VALID_START_DATE_WINTER).withDuration(VALID_DURATION_WINTER)","lastModifiedDate":"2022-10-21"},{"lineNumber":188,"author":{"gitId":"seox123"},"content":"                .withPeople(VALID_PEOPLE_WINTER).build();","lastModifiedDate":"2022-10-14"},{"lineNumber":189,"author":{"gitId":"ciaoosuuu"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":190,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":191,"author":{"gitId":"ciaoosuuu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":192,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":193,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":194,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":195,"author":{"gitId":"ciaoosuuu"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":196,"author":{"gitId":"ciaoosuuu"},"content":"        // no other valid values specified","lastModifiedDate":"2022-10-13"},{"lineNumber":197,"author":{"gitId":"ningtan11"},"content":"        Index targetIndex \u003d INDEX_FIRST_ITINERARY;","lastModifiedDate":"2022-10-14"},{"lineNumber":198,"author":{"gitId":"seox123"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_COUNTRY_DESC + COUNTRY_DESC_WINTER;","lastModifiedDate":"2022-10-14"},{"lineNumber":199,"author":{"gitId":"seox123"},"content":"        EditItineraryDescriptor descriptor \u003d new EditItineraryDescriptorBuilder()","lastModifiedDate":"2022-10-17"},{"lineNumber":200,"author":{"gitId":"seox123"},"content":"                .withCountry(VALID_COUNTRY_WINTER).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":201,"author":{"gitId":"ciaoosuuu"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":202,"author":{"gitId":"ciaoosuuu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":203,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":204,"author":{"gitId":"ciaoosuuu"},"content":"        // other valid values specified","lastModifiedDate":"2022-10-13"},{"lineNumber":205,"author":{"gitId":"pewggls"},"content":"        userInput \u003d targetIndex.getOneBased() + START_DATE_DESC_WINTER + INVALID_COUNTRY_DESC + DURATION_DESC_WINTER","lastModifiedDate":"2022-10-21"},{"lineNumber":206,"author":{"gitId":"seox123"},"content":"                + COUNTRY_DESC_WINTER;","lastModifiedDate":"2022-10-14"},{"lineNumber":207,"author":{"gitId":"seox123"},"content":"        descriptor \u003d new EditItineraryDescriptorBuilder().withCountry(VALID_COUNTRY_WINTER)","lastModifiedDate":"2022-10-14"},{"lineNumber":208,"author":{"gitId":"pewggls"},"content":"                .withStartDate(VALID_START_DATE_WINTER).withDuration(VALID_DURATION_WINTER).build();","lastModifiedDate":"2022-10-21"},{"lineNumber":209,"author":{"gitId":"ciaoosuuu"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-13"},{"lineNumber":210,"author":{"gitId":"ciaoosuuu"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":211,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":212,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"ciaoosuuu":110,"CFSY":2,"pewggls":47,"ningtan11":6,"seox123":47}},{"path":"src/test/java/seedu/waddle/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.commands.FindCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.itinerary.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"ningtan11":1,"-":28,"seox123":5}},{"path":"src/test/java/seedu/waddle/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.testutil.TypicalIndexes.INDEX_FIRST_ITINERARY;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.itinerary.Country;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.itinerary.Date;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Description;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.itinerary.People;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"public class ParserUtilTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"ningtan11"},"content":"    private static final String INVALID_NAME \u003d \"W!nter\";","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"ningtan11"},"content":"    private static final String INVALID_COUNTRY \u003d \"+651234\";","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"ningtan11"},"content":"    private static final String INVALID_START_DATE \u003d \"2022/03/15\";","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"ningtan11"},"content":"    private static final String INVALID_END_DATE \u003d \"202-04-15\";","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"ningtan11"},"content":"    private static final String INVALID_PEOPLE \u003d \"five\";","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"ningtan11"},"content":"    private static final String VALID_NAME \u003d \"Winter Trip\";","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"ningtan11"},"content":"    private static final String VALID_COUNTRY \u003d \"Finland\";","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"ningtan11"},"content":"    private static final String VALID_START_DATE \u003d \"2023-03-15\";","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"ningtan11"},"content":"    private static final String VALID_END_DATE \u003d \"2023-04-15\";","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"ningtan11"},"content":"    private static final String VALID_PEOPLE \u003d \"5\";","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"ciaoosuuu"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"ciaoosuuu"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"ciaoosuuu"},"content":"        // No whitespaces","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"ningtan11"},"content":"        assertEquals(INDEX_FIRST_ITINERARY, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"ciaoosuuu"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"ningtan11"},"content":"        assertEquals(INDEX_FIRST_ITINERARY, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"ciaoosuuu"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDescription((String) null));","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"ciaoosuuu"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDescription(INVALID_NAME));","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"ciaoosuuu"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"ciaoosuuu"},"content":"        Description expectedName \u003d new Description(VALID_NAME);","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"ciaoosuuu"},"content":"        assertEquals(expectedName, ParserUtil.parseDescription(VALID_NAME));","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"ciaoosuuu"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"ciaoosuuu"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"ciaoosuuu"},"content":"        Description expectedName \u003d new Description(VALID_NAME);","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"ciaoosuuu"},"content":"        assertEquals(expectedName, ParserUtil.parseDescription(nameWithWhitespace));","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"ningtan11"},"content":"    public void parseCountry_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"ningtan11"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseCountry((String) null));","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"ningtan11"},"content":"    public void parseCountry_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"ningtan11"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCountry(INVALID_COUNTRY));","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"ningtan11"},"content":"    public void parseCountry_validValueWithoutWhitespace_returnsCountry() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"ningtan11"},"content":"        Country expectedCountry \u003d new Country(VALID_COUNTRY);","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"ningtan11"},"content":"        assertEquals(expectedCountry, ParserUtil.parseCountry(VALID_COUNTRY));","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"ningtan11"},"content":"    public void parseCountry_validValueWithWhitespace_returnsTrimmedCountry() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"ningtan11"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_COUNTRY + WHITESPACE;","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"ningtan11"},"content":"        Country expectedCountry \u003d new Country(VALID_COUNTRY);","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"ningtan11"},"content":"        assertEquals(expectedCountry, ParserUtil.parseCountry(phoneWithWhitespace));","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"ciaoosuuu"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"ningtan11"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDate((String) null));","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"ciaoosuuu"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"ningtan11"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_START_DATE));","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"ciaoosuuu"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"ningtan11"},"content":"        Date expectedAddress \u003d new Date(VALID_START_DATE);","lastModifiedDate":"2022-10-14"},{"lineNumber":110,"author":{"gitId":"ningtan11"},"content":"        assertEquals(expectedAddress, ParserUtil.parseDate(VALID_START_DATE));","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"ciaoosuuu"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"ningtan11"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_START_DATE + WHITESPACE;","lastModifiedDate":"2022-10-14"},{"lineNumber":116,"author":{"gitId":"ningtan11"},"content":"        Date expectedAddress \u003d new Date(VALID_START_DATE);","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"ningtan11"},"content":"        assertEquals(expectedAddress, ParserUtil.parseDate(addressWithWhitespace));","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"ningtan11"},"content":"    /* Same as Start date //TODO","lastModifiedDate":"2022-10-14"},{"lineNumber":121,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"ciaoosuuu"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"ningtan11"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parse((String) null));","lastModifiedDate":"2022-10-14"},{"lineNumber":124,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"ciaoosuuu"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"ciaoosuuu"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"ciaoosuuu"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"ciaoosuuu"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"ciaoosuuu"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"ciaoosuuu"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"ciaoosuuu"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"ciaoosuuu"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"ningtan11"},"content":"    */","lastModifiedDate":"2022-10-14"},{"lineNumber":144,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"ningtan11"},"content":"    public void parsePeople_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":147,"author":{"gitId":"ningtan11"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePeople(null));","lastModifiedDate":"2022-10-14"},{"lineNumber":148,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":149,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":151,"author":{"gitId":"ningtan11"},"content":"    public void parsePeople_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":152,"author":{"gitId":"ningtan11"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePeople(INVALID_PEOPLE));","lastModifiedDate":"2022-10-14"},{"lineNumber":153,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":154,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"ningtan11"},"content":"    public void parsePeople_validValueWithoutWhitespace_returnsPeople() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":157,"author":{"gitId":"ningtan11"},"content":"        People expectedPeople \u003d new People(VALID_PEOPLE);","lastModifiedDate":"2022-10-14"},{"lineNumber":158,"author":{"gitId":"ningtan11"},"content":"        assertEquals(expectedPeople, ParserUtil.parsePeople(VALID_PEOPLE));","lastModifiedDate":"2022-10-14"},{"lineNumber":159,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":160,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":161,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":162,"author":{"gitId":"ningtan11"},"content":"    public void parsePeople_validValueWithWhitespace_returnsTrimmedPeople() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":163,"author":{"gitId":"ningtan11"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_PEOPLE + WHITESPACE;","lastModifiedDate":"2022-10-14"},{"lineNumber":164,"author":{"gitId":"ningtan11"},"content":"        People expectedPeople \u003d new People(VALID_PEOPLE);","lastModifiedDate":"2022-10-14"},{"lineNumber":165,"author":{"gitId":"ningtan11"},"content":"        assertEquals(expectedPeople, ParserUtil.parsePeople(tagWithWhitespace));","lastModifiedDate":"2022-10-14"},{"lineNumber":166,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":167,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"ciaoosuuu":114,"ningtan11":49,"seox123":4}},{"path":"src/test/java/seedu/waddle/logic/parser/WaddleParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ningtan11"},"content":"package seedu.waddle.logic.parser;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"ningtan11"},"content":"import static seedu.waddle.testutil.TypicalIndexes.INDEX_FIRST_ITINERARY;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.logic.commands.AddCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.logic.commands.EditCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.logic.commands.EditCommand.EditItineraryDescriptor;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.logic.commands.FindCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.logic.commands.ListCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.itinerary.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.testutil.EditItineraryDescriptorBuilder;","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.testutil.ItineraryBuilder;","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.testutil.ItineraryUtil;","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"ningtan11"},"content":"public class WaddleParserTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"ningtan11"},"content":"    private final WaddleParser parser \u003d new WaddleParser();","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"ningtan11"},"content":"        Itinerary itinerary \u003d new ItineraryBuilder().build();","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"ningtan11"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(ItineraryUtil.getAddCommand(itinerary));","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"ningtan11"},"content":"        assertEquals(new AddCommand(itinerary), command);","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"ningtan11"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_ITINERARY.getOneBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"ningtan11"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_ITINERARY), command);","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"ciaoosuuu"},"content":"        Itinerary itinerary \u003d new ItineraryBuilder().build();","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"ciaoosuuu"},"content":"        EditItineraryDescriptor descriptor \u003d new EditItineraryDescriptorBuilder(itinerary).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"seox123"},"content":"                + INDEX_FIRST_ITINERARY.getOneBased() + \" \"","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"seox123"},"content":"                + ItineraryUtil.getEditItineraryDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"ningtan11"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_ITINERARY, descriptor), command);","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2022-10-14"},{"lineNumber":100,"author":{"gitId":"seox123"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, ()","lastModifiedDate":"2022-10-17"},{"lineNumber":101,"author":{"gitId":"seox123"},"content":"            -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"ciaoosuuu":2,"ningtan11":30,"-":67,"seox123":4}},{"path":"src/test/java/seedu/waddle/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.model.Model.PREDICATE_SHOW_ALL_ITINERARIES;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.testutil.TypicalItineraries.AUTUMN;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.testutil.TypicalItineraries.SPRING;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"seox123"},"content":"import seedu.waddle.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.testutil.WaddleBuilder;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"        assertEquals(new Waddle(), new Waddle(modelManager.getWaddle()));","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"ciaoosuuu"},"content":"        userPrefs.setWaddleFilePath(Paths.get(\"waddle/file/path\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"ciaoosuuu"},"content":"        userPrefs.setWaddleFilePath(Paths.get(\"new/waddle/file/path\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"ciaoosuuu"},"content":"    public void setWaddleFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setWaddleFilePath(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"ciaoosuuu"},"content":"    public void setWaddleFilePath_validPath_setsWaddleFilePath() {","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"ciaoosuuu"},"content":"        Path path \u003d Paths.get(\"waddle/file/path\");","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"ciaoosuuu"},"content":"        modelManager.setWaddleFilePath(path);","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"ciaoosuuu"},"content":"        assertEquals(path, modelManager.getWaddleFilePath());","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"ciaoosuuu"},"content":"    public void hasItinerary_nullItinerary_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasItinerary(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"ciaoosuuu"},"content":"    public void hasItinerary_itineraryNotInWaddle_returnsFalse() {","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"seox123"},"content":"        assertFalse(modelManager.hasItinerary(SPRING));","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"ciaoosuuu"},"content":"    public void hasItinerary_itineraryInWaddle_returnsTrue() {","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"seox123"},"content":"        modelManager.addItinerary(SPRING);","lastModifiedDate":"2022-10-17"},{"lineNumber":88,"author":{"gitId":"seox123"},"content":"        assertTrue(modelManager.hasItinerary(SPRING));","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"ciaoosuuu"},"content":"    public void getFilteredItineraryList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredItineraryList().remove(0));","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"seox123"},"content":"        Waddle waddle \u003d new WaddleBuilder().withItinerary(SPRING).withItinerary(AUTUMN).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":99,"author":{"gitId":"ciaoosuuu"},"content":"        Waddle differentWaddle \u003d new Waddle();","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"ciaoosuuu"},"content":"        modelManager \u003d new ModelManager(waddle, userPrefs);","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"ciaoosuuu"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(waddle, userPrefs);","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"ciaoosuuu"},"content":"        // different waddle -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentWaddle, userPrefs)));","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"CFSY"},"content":"        String[] keywords \u003d SPRING.getDescription().description.split(\"\\\\s+\");","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"ciaoosuuu"},"content":"        modelManager.updateFilteredItineraryList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(modelManager.equals(new ModelManager(waddle, userPrefs)));","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"seox123"},"content":"        modelManager.updateFilteredItineraryList(PREDICATE_SHOW_ALL_ITINERARIES);","lastModifiedDate":"2022-10-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"ciaoosuuu"},"content":"        differentUserPrefs.setWaddleFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(modelManager.equals(new ModelManager(waddle, differentUserPrefs)));","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"ciaoosuuu":25,"CFSY":1,"ningtan11":1,"-":94,"seox123":11}},{"path":"src/test/java/seedu/waddle/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.model;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"    public void setWaddleFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setWaddleFilePath(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"ciaoosuuu":2,"-":17,"seox123":2}},{"path":"src/test/java/seedu/waddle/model/WaddleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.model;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_COUNTRY_WINTER;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_PEOPLE_WINTER;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.testutil.TypicalItineraries.SUMMER;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.testutil.TypicalItineraries.getTypicalWaddle;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"import java.util.List;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"ciaoosuuu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"ciaoosuuu"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.exceptions.DuplicateItineraryException;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.testutil.ItineraryBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"public class WaddleTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"    private final Waddle waddle \u003d new Waddle();","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"    public void constructor() {","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"seox123"},"content":"        assertEquals(Collections.emptyList(), waddle.getItineraryList());","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"ciaoosuuu"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(NullPointerException.class, () -\u003e waddle.resetData(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"ciaoosuuu"},"content":"    public void resetData_withValidReadOnlyWaddle_replacesData() {","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"ciaoosuuu"},"content":"        Waddle newData \u003d getTypicalWaddle();","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"ciaoosuuu"},"content":"        waddle.resetData(newData);","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"ciaoosuuu"},"content":"        assertEquals(newData, waddle);","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"ciaoosuuu"},"content":"    public void resetData_withDuplicateItineraries_throwsDuplicateItineraryException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"ciaoosuuu"},"content":"        Itinerary editedSummer \u003d new ItineraryBuilder(SUMMER).withCountry(VALID_COUNTRY_WINTER)","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"ciaoosuuu"},"content":"                .withPeople(VALID_PEOPLE_WINTER).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"ciaoosuuu"},"content":"        List\u003cItinerary\u003e newItineraries \u003d Arrays.asList(SUMMER, editedSummer);","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"ciaoosuuu"},"content":"        WaddleStub newData \u003d new WaddleStub(newItineraries);","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(DuplicateItineraryException.class, () -\u003e waddle.resetData(newData));","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"ciaoosuuu"},"content":"    public void hasItinerary_nullItinerary_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(NullPointerException.class, () -\u003e waddle.hasItinerary(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"ciaoosuuu"},"content":"    public void hasItinerary_itineraryNotInWaddle_returnsFalse() {","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(waddle.hasItinerary(SUMMER));","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"ciaoosuuu"},"content":"    public void hasItinerary_itineraryInWaddle_returnsTrue() {","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"ciaoosuuu"},"content":"        waddle.addItinerary(SUMMER);","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"ciaoosuuu"},"content":"        assertTrue(waddle.hasItinerary(SUMMER));","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"ciaoosuuu"},"content":"    public void hasItinerary_itineraryWithSameIdentityFieldsInWaddle_returnsTrue() {","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"ciaoosuuu"},"content":"        waddle.addItinerary(SUMMER);","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"ciaoosuuu"},"content":"        Itinerary editedSummer \u003d new ItineraryBuilder(SUMMER).withCountry(VALID_COUNTRY_WINTER)","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"ciaoosuuu"},"content":"                .withPeople(VALID_PEOPLE_WINTER).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"ciaoosuuu"},"content":"        assertTrue(waddle.hasItinerary(editedSummer));","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"ciaoosuuu"},"content":"    public void getItineraryList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e waddle.getItineraryList().remove(0));","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"ciaoosuuu"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"ciaoosuuu"},"content":"     * A stub ReadOnlyWaddle whose itinerary list can violate interface constraints.","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"ciaoosuuu"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"ciaoosuuu"},"content":"    private static class WaddleStub implements ReadOnlyWaddle {","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"ciaoosuuu"},"content":"        private final ObservableList\u003cItinerary\u003e itineraries \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"ciaoosuuu"},"content":"        WaddleStub(Collection\u003cItinerary\u003e itineraries) {","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"ciaoosuuu"},"content":"            this.itineraries.setAll(itineraries);","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"ciaoosuuu"},"content":"        @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"ciaoosuuu"},"content":"        public ObservableList\u003cItinerary\u003e getItineraryList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"ciaoosuuu"},"content":"            return itineraries;","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"ciaoosuuu"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"ciaoosuuu":100,"seox123":2}},{"path":"src/test/java/seedu/waddle/model/itinerary/CountryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.model.itinerary;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"public class CountryTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Country(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"ciaoosuuu"},"content":"    public void constructor_invalidCountry_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"        String invalidCountry \u003d \"\";","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Country(invalidCountry));","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":"    public void isValidCountry() {","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"        // null country","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(NullPointerException.class, () -\u003e Country.isValidCountry(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"        // invalid country","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(Country.isValidCountry(\"\")); // empty string","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(Country.isValidCountry(\" \")); // spaces only","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(Country.isValidCountry(\"Singa*pore\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"        // valid country","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"        assertTrue(Country.isValidCountry(\"Singapore\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"        assertTrue(Country.isValidCountry(\"Peru\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"ciaoosuuu"},"content":"        assertTrue(Country.isValidCountry(\"United States\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"ciaoosuuu":37}},{"path":"src/test/java/seedu/waddle/model/itinerary/DateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.model.itinerary;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"public class DateTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Date(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"ciaoosuuu"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(invalidDate));","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":"    public void isValidDate() {","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"        // null date","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(NullPointerException.class, () -\u003e Date.isValidDate(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"        // invalid date","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(Date.isValidDate(\"\")); // empty string","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(Date.isValidDate(\"06-08-2000\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(Date.isValidDate(\"06-08\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(Date.isValidDate(\"6 Aug\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(Date.isValidDate(\"6 Aug 2020\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"        // valid date","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"ciaoosuuu"},"content":"        assertTrue(Date.isValidDate(\"2020-08-20\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"ciaoosuuu"},"content":"        assertTrue(Date.isValidDate(\"2020-09-30\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"ciaoosuuu":39}},{"path":"src/test/java/seedu/waddle/model/itinerary/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.model.itinerary;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"public class DescriptionTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"ciaoosuuu"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Description(invalidName));","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":"    public void isValidName() {","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"        // null name","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(NullPointerException.class, () -\u003e Description.isValidDescription(null));","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"        // invalid name","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(Description.isValidDescription(\"\")); // empty string","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(Description.isValidDescription(\" \")); // spaces only","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(Description.isValidDescription(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(Description.isValidDescription(\"summer*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"        // valid name","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"        assertTrue(Description.isValidDescription(\"summer trip\")); // alphabets only","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"ciaoosuuu"},"content":"        assertTrue(Description.isValidDescription(\"12345\")); // numbers only","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"ciaoosuuu"},"content":"        assertTrue(Description.isValidDescription(\"2nd grad trip\")); // alphanumeric characters","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"ciaoosuuu"},"content":"        assertTrue(Description.isValidDescription(\"Capital City Trip\")); // with capital letters","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"ciaoosuuu"},"content":"        assertTrue(Description.isValidDescription(\"a wonderful trip with my beloved friends\")); // long names","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"ciaoosuuu":40}},{"path":"src/test/java/seedu/waddle/model/itinerary/ItineraryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.model.itinerary;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_COUNTRY_WINTER;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_DURATION_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_NAME_WINTER;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_PEOPLE_WINTER;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_START_DATE_WINTER;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.testutil.TypicalItineraries.SUMMER;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.testutil.TypicalItineraries.WINTER;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.testutil.ItineraryBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"ciaoosuuu"},"content":"public class ItineraryTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"ciaoosuuu"},"content":"    public void isSameItinerary() {","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"ciaoosuuu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"ciaoosuuu"},"content":"        assertTrue(SUMMER.isSameItinerary(SUMMER));","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(SUMMER.isSameItinerary(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"seox123"},"content":"        Itinerary editedSummer \u003d new ItineraryBuilder(SUMMER)","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"seox123"},"content":"                .withCountry(VALID_COUNTRY_WINTER).withStartDate(VALID_START_DATE_WINTER)","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"pewggls"},"content":"                .withDuration(VALID_DURATION_WINTER).withPeople(VALID_PEOPLE_WINTER).build();","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"        assertTrue(SUMMER.isSameItinerary(editedSummer));","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"        editedSummer \u003d new ItineraryBuilder(SUMMER).withName(VALID_NAME_WINTER).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(SUMMER.isSameItinerary(editedSummer));","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"ciaoosuuu"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"ciaoosuuu"},"content":"        Itinerary editedWinter \u003d new ItineraryBuilder(WINTER).withName(VALID_NAME_WINTER.toLowerCase()).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(WINTER.isSameItinerary(editedWinter));","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"ciaoosuuu"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"ciaoosuuu"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_WINTER + \" \";","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"ciaoosuuu"},"content":"        editedWinter \u003d new ItineraryBuilder(WINTER).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(WINTER.isSameItinerary(editedWinter));","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"ciaoosuuu"},"content":"    public void equals() {","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"ciaoosuuu"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"ciaoosuuu"},"content":"        Itinerary summerCopy \u003d new ItineraryBuilder(SUMMER).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"ciaoosuuu"},"content":"        assertTrue(SUMMER.equals(summerCopy));","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"ciaoosuuu"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"ciaoosuuu"},"content":"        assertTrue(SUMMER.equals(SUMMER));","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"ciaoosuuu"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(SUMMER.equals(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"ciaoosuuu"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(SUMMER.equals(5));","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"ciaoosuuu"},"content":"        // different itinerary -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(SUMMER.equals(WINTER));","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"ciaoosuuu"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"ciaoosuuu"},"content":"        Itinerary editedSummer \u003d new ItineraryBuilder(SUMMER).withName(VALID_NAME_WINTER).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(SUMMER.equals(editedSummer));","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"ciaoosuuu"},"content":"        // different country -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"ciaoosuuu"},"content":"        editedSummer \u003d new ItineraryBuilder(SUMMER).withCountry(VALID_COUNTRY_WINTER).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(SUMMER.equals(editedSummer));","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"ciaoosuuu"},"content":"        // different start date -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"ciaoosuuu"},"content":"        editedSummer \u003d new ItineraryBuilder(SUMMER).withStartDate(VALID_START_DATE_WINTER).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(SUMMER.equals(editedSummer));","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"ciaoosuuu"},"content":"        // different end date -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"pewggls"},"content":"        editedSummer \u003d new ItineraryBuilder(SUMMER).withDuration(VALID_DURATION_WINTER).build();","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(SUMMER.equals(editedSummer));","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"ciaoosuuu"},"content":"        // different people -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"ciaoosuuu"},"content":"        editedSummer \u003d new ItineraryBuilder(SUMMER).withPeople(VALID_PEOPLE_WINTER).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(SUMMER.equals(editedSummer));","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"ciaoosuuu":78,"pewggls":3,"seox123":4}},{"path":"src/test/java/seedu/waddle/model/itinerary/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.model.itinerary;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.testutil.ItineraryBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"ciaoosuuu"},"content":"        // different itinerary -\u003e returns false","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"seox123"},"content":"        NameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"seox123"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"Summer\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"ciaoosuuu"},"content":"        assertTrue(predicate.test(new ItineraryBuilder().withName(\"Summer Winter\").build()));","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"ciaoosuuu"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Summer\", \"Winter\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"ciaoosuuu"},"content":"        assertTrue(predicate.test(new ItineraryBuilder().withName(\"Summer Winter\").build()));","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"ciaoosuuu"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Winter\", \"Carol\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"ciaoosuuu"},"content":"        assertTrue(predicate.test(new ItineraryBuilder().withName(\"Summer Carol\").build()));","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"ciaoosuuu"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"sUMmer\", \"winTEr\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"ciaoosuuu"},"content":"        assertTrue(predicate.test(new ItineraryBuilder().withName(\"Summer Winter\").build()));","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(predicate.test(new ItineraryBuilder().withName(\"Summer\").build()));","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(predicate.test(new ItineraryBuilder().withName(\"Summer Winter\").build()));","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"seox123"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Singapore\", \"2022-06-30\", \"2022-07-30\", \"5\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(predicate.test(new ItineraryBuilder().withName(\"Summer\").withCountry(\"Singapore\")","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"pewggls"},"content":"                .withStartDate(\"2022-06-30\").withDuration(\"20\").withPeople(\"5\").build()));","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"ciaoosuuu":13,"pewggls":1,"-":59,"seox123":3}},{"path":"src/test/java/seedu/waddle/model/itinerary/PeopleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.model.itinerary;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"public class PeopleTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(NullPointerException.class, () -\u003e new People(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"ciaoosuuu"},"content":"    public void constructor_invalidPeople_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"        String invalidPeople \u003d \"\";","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new People(invalidPeople));","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":"    public void isValidPeople() {","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"        // null people","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(NullPointerException.class, () -\u003e People.isValidPeople(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"        // invalid people","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(People.isValidPeople(\"\")); // empty string","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(People.isValidPeople(\" \")); // spaces only","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(People.isValidPeople(\"one\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(People.isValidPeople(\"seven\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"        // valid people","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"        assertTrue(People.isValidPeople(\"2\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"ciaoosuuu"},"content":"        assertTrue(People.isValidPeople(\"19\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"ciaoosuuu":37}},{"path":"src/test/java/seedu/waddle/model/itinerary/UniqueItineraryListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ciaoosuuu"},"content":"package seedu.waddle.model.itinerary;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"ciaoosuuu"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_COUNTRY_WINTER;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_PEOPLE_WINTER;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.testutil.TypicalItineraries.SUMMER;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.testutil.TypicalItineraries.WINTER;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"ciaoosuuu"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"ciaoosuuu"},"content":"import java.util.List;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.exceptions.DuplicateItineraryException;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.exceptions.ItineraryNotFoundException;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.testutil.ItineraryBuilder;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"ciaoosuuu"},"content":"public class UniqueItineraryListTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"ciaoosuuu"},"content":"    private final UniqueItineraryList uniqueItineraryList \u003d new UniqueItineraryList();","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"ciaoosuuu"},"content":"    public void contains_nullItinerary_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItineraryList.contains(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"ciaoosuuu"},"content":"    public void contains_itineraryNotInList_returnsFalse() {","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"        assertFalse(uniqueItineraryList.contains(SUMMER));","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"ciaoosuuu"},"content":"    public void contains_itineraryInList_returnsTrue() {","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"ciaoosuuu"},"content":"        uniqueItineraryList.add(SUMMER);","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"ciaoosuuu"},"content":"        assertTrue(uniqueItineraryList.contains(SUMMER));","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"ciaoosuuu"},"content":"    public void contains_itineraryWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"ciaoosuuu"},"content":"        uniqueItineraryList.add(SUMMER);","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"ciaoosuuu"},"content":"        Itinerary editedSummer \u003d new ItineraryBuilder(SUMMER).withCountry(VALID_COUNTRY_WINTER)","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"ciaoosuuu"},"content":"                .withPeople(VALID_PEOPLE_WINTER).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"ciaoosuuu"},"content":"        assertTrue(uniqueItineraryList.contains(editedSummer));","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"ciaoosuuu"},"content":"    public void add_nullItinerary_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItineraryList.add(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"ciaoosuuu"},"content":"    public void add_duplicateItinerary_throwsDuplicateItineraryException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"ciaoosuuu"},"content":"        uniqueItineraryList.add(SUMMER);","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(DuplicateItineraryException.class, () -\u003e uniqueItineraryList.add(SUMMER));","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"ciaoosuuu"},"content":"    public void setItinerary_nullTargetItinerary_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItineraryList.setItinerary(null, SUMMER));","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"ciaoosuuu"},"content":"    public void setItinerary_nullEditedItinerary_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItineraryList.setItinerary(SUMMER, null));","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"ciaoosuuu"},"content":"    public void setItinerary_targetItineraryNotInList_throwsItineraryNotFoundException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(ItineraryNotFoundException.class, () -\u003e uniqueItineraryList.setItinerary(SUMMER, SUMMER));","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"ciaoosuuu"},"content":"    public void setItinerary_editedItineraryIsSameItinerary_success() {","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"ciaoosuuu"},"content":"        uniqueItineraryList.add(SUMMER);","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"ciaoosuuu"},"content":"        uniqueItineraryList.setItinerary(SUMMER, SUMMER);","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"ciaoosuuu"},"content":"        UniqueItineraryList expectedUniqueItineraryList \u003d new UniqueItineraryList();","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"ciaoosuuu"},"content":"        expectedUniqueItineraryList.add(SUMMER);","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"ciaoosuuu"},"content":"        assertEquals(expectedUniqueItineraryList, uniqueItineraryList);","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"ciaoosuuu"},"content":"    public void setItinerary_editedItineraryHasSameIdentity_success() {","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"ciaoosuuu"},"content":"        uniqueItineraryList.add(SUMMER);","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"ciaoosuuu"},"content":"        Itinerary editedSummer \u003d new ItineraryBuilder(SUMMER).withCountry(VALID_COUNTRY_WINTER)","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"ciaoosuuu"},"content":"                .withPeople(VALID_PEOPLE_WINTER).build();","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"ciaoosuuu"},"content":"        uniqueItineraryList.setItinerary(SUMMER, editedSummer);","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"ciaoosuuu"},"content":"        UniqueItineraryList expectedUniqueItineraryList \u003d new UniqueItineraryList();","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"ciaoosuuu"},"content":"        expectedUniqueItineraryList.add(editedSummer);","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"ciaoosuuu"},"content":"        assertEquals(expectedUniqueItineraryList, uniqueItineraryList);","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"ciaoosuuu"},"content":"    public void setItinerary_editedItineraryHasDifferentIdentity_success() {","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"ciaoosuuu"},"content":"        uniqueItineraryList.add(SUMMER);","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"ciaoosuuu"},"content":"        uniqueItineraryList.setItinerary(SUMMER, WINTER);","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"ciaoosuuu"},"content":"        UniqueItineraryList expectedUniqueItineraryList \u003d new UniqueItineraryList();","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"ciaoosuuu"},"content":"        expectedUniqueItineraryList.add(WINTER);","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"ciaoosuuu"},"content":"        assertEquals(expectedUniqueItineraryList, uniqueItineraryList);","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"ciaoosuuu"},"content":"    public void setItinerary_editedItineraryHasNonUniqueIdentity_throwsDuplicateItineraryException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"ciaoosuuu"},"content":"        uniqueItineraryList.add(SUMMER);","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"ciaoosuuu"},"content":"        uniqueItineraryList.add(WINTER);","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(DuplicateItineraryException.class, () -\u003e uniqueItineraryList.setItinerary(SUMMER, WINTER));","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"ciaoosuuu"},"content":"    public void remove_nullItinerary_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItineraryList.remove(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"ciaoosuuu"},"content":"    public void remove_itineraryDoesNotExist_throwsItineraryNotFoundException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(ItineraryNotFoundException.class, () -\u003e uniqueItineraryList.remove(SUMMER));","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"ciaoosuuu"},"content":"    public void remove_existingItinerary_removesItinerary() {","lastModifiedDate":"2022-10-16"},{"lineNumber":124,"author":{"gitId":"ciaoosuuu"},"content":"        uniqueItineraryList.add(SUMMER);","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"ciaoosuuu"},"content":"        uniqueItineraryList.remove(SUMMER);","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"ciaoosuuu"},"content":"        UniqueItineraryList expectedUniqueItineraryList \u003d new UniqueItineraryList();","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"ciaoosuuu"},"content":"        assertEquals(expectedUniqueItineraryList, uniqueItineraryList);","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"ciaoosuuu"},"content":"    public void setItinerary_nullUniqueItineraryList_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItineraryList.setItineraries((UniqueItineraryList) null));","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":136,"author":{"gitId":"ciaoosuuu"},"content":"    public void setItinerary_uniqueItineraryList_replacesOwnListWithProvidedUniqueItineraryList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":137,"author":{"gitId":"ciaoosuuu"},"content":"        uniqueItineraryList.add(SUMMER);","lastModifiedDate":"2022-10-16"},{"lineNumber":138,"author":{"gitId":"ciaoosuuu"},"content":"        UniqueItineraryList expectedUniqueItineraryList \u003d new UniqueItineraryList();","lastModifiedDate":"2022-10-16"},{"lineNumber":139,"author":{"gitId":"ciaoosuuu"},"content":"        expectedUniqueItineraryList.add(WINTER);","lastModifiedDate":"2022-10-16"},{"lineNumber":140,"author":{"gitId":"ciaoosuuu"},"content":"        uniqueItineraryList.setItineraries(expectedUniqueItineraryList);","lastModifiedDate":"2022-10-16"},{"lineNumber":141,"author":{"gitId":"ciaoosuuu"},"content":"        assertEquals(expectedUniqueItineraryList, uniqueItineraryList);","lastModifiedDate":"2022-10-16"},{"lineNumber":142,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":145,"author":{"gitId":"ciaoosuuu"},"content":"    public void setItinerary_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":146,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueItineraryList.setItineraries((List\u003cItinerary\u003e) null));","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":149,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":150,"author":{"gitId":"ciaoosuuu"},"content":"    public void setItinerary_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":151,"author":{"gitId":"ciaoosuuu"},"content":"        uniqueItineraryList.add(SUMMER);","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"ciaoosuuu"},"content":"        List\u003cItinerary\u003e itineraryList \u003d Collections.singletonList(WINTER);","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"ciaoosuuu"},"content":"        uniqueItineraryList.setItineraries(itineraryList);","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"ciaoosuuu"},"content":"        UniqueItineraryList expectedUniqueItineraryList \u003d new UniqueItineraryList();","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"ciaoosuuu"},"content":"        expectedUniqueItineraryList.add(WINTER);","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"ciaoosuuu"},"content":"        assertEquals(expectedUniqueItineraryList, uniqueItineraryList);","lastModifiedDate":"2022-10-16"},{"lineNumber":157,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":160,"author":{"gitId":"ciaoosuuu"},"content":"    public void setItinerary_listWithDuplicateItinerary_throwsDuplicateItineraryException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":161,"author":{"gitId":"ciaoosuuu"},"content":"        List\u003cItinerary\u003e listWithDuplicateItinerary \u003d Arrays.asList(SUMMER, SUMMER);","lastModifiedDate":"2022-10-16"},{"lineNumber":162,"author":{"gitId":"seox123"},"content":"        assertThrows(DuplicateItineraryException.class, ()","lastModifiedDate":"2022-10-17"},{"lineNumber":163,"author":{"gitId":"seox123"},"content":"            -\u003e uniqueItineraryList.setItineraries(listWithDuplicateItinerary));","lastModifiedDate":"2022-10-17"},{"lineNumber":164,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":165,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":166,"author":{"gitId":"ciaoosuuu"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":167,"author":{"gitId":"ciaoosuuu"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":168,"author":{"gitId":"ciaoosuuu"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-10-16"},{"lineNumber":169,"author":{"gitId":"ciaoosuuu"},"content":"            -\u003e uniqueItineraryList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-16"},{"lineNumber":170,"author":{"gitId":"ciaoosuuu"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":171,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"ciaoosuuu":169,"seox123":2}},{"path":"src/test/java/seedu/waddle/storage/JsonAdaptedItineraryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pewggls"},"content":"package seedu.waddle.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"pewggls"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.storage.JsonAdaptedItinerary.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.testutil.TypicalItineraries.SUMMER;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"pewggls"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"pewggls"},"content":"import java.util.List;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"pewggls"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Country;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Date;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Description;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.ItineraryDuration;","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.People;","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"pewggls"},"content":"public class JsonAdaptedItineraryTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"pewggls"},"content":"    private static final String INVALID_NAME \u003d \"S@mmer Trip\";","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"pewggls"},"content":"    private static final String INVALID_COUNTRY \u003d \"Austr@lia\";","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"pewggls"},"content":"    private static final String INVALID_START_DATE \u003d \"1-2-3\";","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"pewggls"},"content":"    private static final String INVALID_DURATION \u003d \"1 week\";","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"pewggls"},"content":"    private static final String INVALID_PEOPLE \u003d \"three\";","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"pewggls"},"content":"    private static final String INVALID_BUDGET \u003d \"$4000\";","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"CFSY"},"content":"    private static final String VALID_NAME \u003d SUMMER.getDescription().toString();","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"pewggls"},"content":"    private static final String VALID_COUNTRY \u003d SUMMER.getCountry().toString();","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"pewggls"},"content":"    private static final String VALID_START_DATE \u003d SUMMER.getStartDate().toString();","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"pewggls"},"content":"    private static final String VALID_DURATION \u003d SUMMER.getDuration().toString();","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"pewggls"},"content":"    private static final String VALID_PEOPLE \u003d SUMMER.getPeople().toString();","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"pewggls"},"content":"    private static final String VALID_BUDGET \u003d SUMMER.getBudget().toString();","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"seox123"},"content":"    private static final List\u003cJsonAdaptedItem\u003e VALID_EMPTY_ITEM_LIST \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"seox123"},"content":"    private static final List\u003cJsonAdaptedDay\u003e VALID_EMPTY_DAY_LIST \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"pewggls"},"content":"    /*","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"pewggls"},"content":"    TODO: Make non-empty item list","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"pewggls"},"content":"    private final List\u003cJsonAdaptedItem\u003e VALID_ITEM_LIST \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"pewggls"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"pewggls"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"pewggls"},"content":"    public void toModelType_validItineraryDetails_returnsItinerary() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"pewggls"},"content":"        JsonAdaptedItinerary itinerary \u003d new JsonAdaptedItinerary(SUMMER);","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"pewggls"},"content":"        assertEquals(SUMMER, itinerary.toModelType());","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"pewggls"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"pewggls"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"seox123"},"content":"        JsonAdaptedItinerary itinerary \u003d new JsonAdaptedItinerary(INVALID_NAME, VALID_COUNTRY, VALID_START_DATE,","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"seox123"},"content":"                VALID_DURATION, VALID_PEOPLE, VALID_BUDGET, VALID_EMPTY_ITEM_LIST, VALID_EMPTY_DAY_LIST);","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"ciaoosuuu"},"content":"        String expectedMessage \u003d Description.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"pewggls"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, itinerary::toModelType);","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"pewggls"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"pewggls"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"seox123"},"content":"        JsonAdaptedItinerary itinerary \u003d new JsonAdaptedItinerary(null, VALID_COUNTRY, VALID_START_DATE,","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"seox123"},"content":"                VALID_DURATION, VALID_PEOPLE, VALID_BUDGET, VALID_EMPTY_ITEM_LIST, VALID_EMPTY_DAY_LIST);","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"ciaoosuuu"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName());","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"pewggls"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, itinerary::toModelType);","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"pewggls"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"pewggls"},"content":"    public void toModelType_invalidCountry_throwsIllegalValueException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"seox123"},"content":"        JsonAdaptedItinerary itinerary \u003d new JsonAdaptedItinerary(VALID_NAME, INVALID_COUNTRY, VALID_START_DATE,","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"seox123"},"content":"                VALID_DURATION, VALID_PEOPLE, VALID_BUDGET, VALID_EMPTY_ITEM_LIST, VALID_EMPTY_DAY_LIST);","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"pewggls"},"content":"        String expectedMessage \u003d Country.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"pewggls"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, itinerary::toModelType);","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"pewggls"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"pewggls"},"content":"    public void toModelType_nullCountry_throwsIllegalValueException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"seox123"},"content":"        JsonAdaptedItinerary itinerary \u003d new JsonAdaptedItinerary(VALID_NAME, null, VALID_START_DATE,","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"seox123"},"content":"                VALID_DURATION, VALID_PEOPLE, VALID_BUDGET, VALID_EMPTY_ITEM_LIST, VALID_EMPTY_DAY_LIST);","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"pewggls"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Country.class.getSimpleName());","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"pewggls"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, itinerary::toModelType);","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"pewggls"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"pewggls"},"content":"    public void toModelType_invalidStartDate_throwsIllegalValueException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"seox123"},"content":"        JsonAdaptedItinerary itinerary \u003d new JsonAdaptedItinerary(VALID_NAME, VALID_COUNTRY, INVALID_START_DATE,","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"seox123"},"content":"                VALID_DURATION, VALID_PEOPLE, VALID_BUDGET, VALID_EMPTY_ITEM_LIST, VALID_EMPTY_DAY_LIST);","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"pewggls"},"content":"        String expectedMessage \u003d Date.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"pewggls"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, itinerary::toModelType);","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"pewggls"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"pewggls"},"content":"    public void toModelType_nullStartDate_throwsIllegalValueException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"seox123"},"content":"        JsonAdaptedItinerary itinerary \u003d new JsonAdaptedItinerary(VALID_NAME, VALID_COUNTRY, null,","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"seox123"},"content":"                VALID_DURATION, VALID_PEOPLE, VALID_BUDGET, VALID_EMPTY_ITEM_LIST, VALID_EMPTY_DAY_LIST);","lastModifiedDate":"2022-10-25"},{"lineNumber":92,"author":{"gitId":"pewggls"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName());","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"pewggls"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, itinerary::toModelType);","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"pewggls"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"pewggls"},"content":"    public void toModelType_invalidDuration_throwsIllegalValueException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"pewggls"},"content":"        JsonAdaptedItinerary itinerary \u003d","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"pewggls"},"content":"                new JsonAdaptedItinerary(VALID_NAME, VALID_COUNTRY, VALID_START_DATE, INVALID_DURATION, VALID_PEOPLE,","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"seox123"},"content":"                        VALID_BUDGET, VALID_EMPTY_ITEM_LIST, VALID_EMPTY_DAY_LIST);","lastModifiedDate":"2022-10-25"},{"lineNumber":101,"author":{"gitId":"pewggls"},"content":"        String expectedMessage \u003d Date.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"pewggls"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, itinerary::toModelType);","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"pewggls"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"pewggls"},"content":"    public void toModelType_nullDuration_throwsIllegalValueException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":107,"author":{"gitId":"seox123"},"content":"        JsonAdaptedItinerary itinerary \u003d new JsonAdaptedItinerary(VALID_NAME, VALID_COUNTRY, VALID_START_DATE,","lastModifiedDate":"2022-10-17"},{"lineNumber":108,"author":{"gitId":"seox123"},"content":"                null, VALID_PEOPLE, VALID_BUDGET, VALID_EMPTY_ITEM_LIST, VALID_EMPTY_DAY_LIST);","lastModifiedDate":"2022-10-25"},{"lineNumber":109,"author":{"gitId":"pewggls"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ItineraryDuration.class.getSimpleName());","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"pewggls"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, itinerary::toModelType);","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"pewggls"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"pewggls"},"content":"    public void toModelType_invalidPeople_throwsIllegalValueException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"seox123"},"content":"        JsonAdaptedItinerary itinerary \u003d new JsonAdaptedItinerary(VALID_NAME, VALID_COUNTRY, VALID_START_DATE,","lastModifiedDate":"2022-10-17"},{"lineNumber":116,"author":{"gitId":"seox123"},"content":"                VALID_DURATION, INVALID_PEOPLE, VALID_BUDGET, VALID_EMPTY_ITEM_LIST, VALID_EMPTY_DAY_LIST);","lastModifiedDate":"2022-10-25"},{"lineNumber":117,"author":{"gitId":"pewggls"},"content":"        String expectedMessage \u003d People.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-16"},{"lineNumber":118,"author":{"gitId":"pewggls"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, itinerary::toModelType);","lastModifiedDate":"2022-10-16"},{"lineNumber":119,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"pewggls"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"pewggls"},"content":"    public void toModelType_nullPeople_throwsIllegalValueException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"seox123"},"content":"        JsonAdaptedItinerary itinerary \u003d new JsonAdaptedItinerary(VALID_NAME, VALID_COUNTRY, VALID_START_DATE,","lastModifiedDate":"2022-10-17"},{"lineNumber":124,"author":{"gitId":"seox123"},"content":"                VALID_DURATION, null, VALID_BUDGET, VALID_EMPTY_ITEM_LIST, VALID_EMPTY_DAY_LIST);","lastModifiedDate":"2022-10-25"},{"lineNumber":125,"author":{"gitId":"pewggls"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, People.class.getSimpleName());","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"pewggls"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, itinerary::toModelType);","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"pewggls"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"ciaoosuuu":3,"CFSY":1,"pewggls":103,"seox123":21}},{"path":"src/test/java/seedu/waddle/storage/JsonSerializableWaddleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pewggls"},"content":"package seedu.waddle.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"pewggls"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"pewggls"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"pewggls"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"pewggls"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.commons.util.JsonUtil;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.Waddle;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.testutil.TypicalItineraries;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"pewggls"},"content":"public class JsonSerializableWaddleTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"pewggls"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableWaddleTest\");","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"pewggls"},"content":"    private static final Path TYPICAL_ITINERARIES_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalItinerariesWaddle.json\");","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"pewggls"},"content":"    private static final Path INVALID_ITINERARY_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidItineraryWaddle.json\");","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"pewggls"},"content":"    private static final Path DUPLICATE_ITINERARY_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateItineraryWaddle.json\");","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"pewggls"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"pewggls"},"content":"    public void toModelType_typicalItinerariesFile_success() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"pewggls"},"content":"        JsonSerializableWaddle dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_ITINERARIES_FILE,","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"pewggls"},"content":"                JsonSerializableWaddle.class).get();","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"pewggls"},"content":"        Waddle waddleFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"pewggls"},"content":"        Waddle typicalItinerariesWaddle \u003d TypicalItineraries.getTypicalWaddle();","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"pewggls"},"content":"        assertEquals(waddleFromFile, typicalItinerariesWaddle);","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"pewggls"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"pewggls"},"content":"    public void toModelType_invalidItineraryFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"pewggls"},"content":"        JsonSerializableWaddle dataFromFile \u003d JsonUtil.readJsonFile(INVALID_ITINERARY_FILE,","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"pewggls"},"content":"                JsonSerializableWaddle.class).get();","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"pewggls"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"pewggls"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"pewggls"},"content":"    public void toModelType_duplicateItinerary_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"pewggls"},"content":"        JsonSerializableWaddle dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_ITINERARY_FILE,","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"pewggls"},"content":"                JsonSerializableWaddle.class).get();","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"pewggls"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableWaddle.MESSAGE_DUPLICATE_ITINERARY,","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"pewggls"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"pewggls"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"pewggls":47}},{"path":"src/test/java/seedu/waddle/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"seox123"},"content":"import seedu.waddle.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"seox123"},"content":"import seedu.waddle.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"pewggls"},"content":"        userPrefs.setWaddleFilePath(Paths.get(\"data/waddle.json\"));","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2022-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"pewggls":1,"-":117,"seox123":5}},{"path":"src/test/java/seedu/waddle/storage/JsonWaddleStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pewggls"},"content":"package seedu.waddle.storage;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"pewggls"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"pewggls"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.testutil.TypicalItineraries.SPRING;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.testutil.TypicalItineraries.SUMMER;","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.testutil.TypicalItineraries.WINTER;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.testutil.TypicalItineraries.getTypicalWaddle;","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"pewggls"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"pewggls"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"pewggls"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"pewggls"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"pewggls"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.ReadOnlyWaddle;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.Waddle;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":22,"author":{"gitId":"pewggls"},"content":"public class JsonWaddleStorageTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"pewggls"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonWaddleStorageTest\");","lastModifiedDate":"2022-10-16"},{"lineNumber":24,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"pewggls"},"content":"    @TempDir","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"pewggls"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"pewggls"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"pewggls"},"content":"    public void readWaddle_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"pewggls"},"content":"        assertThrows(NullPointerException.class, () -\u003e readWaddle(null));","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"pewggls"},"content":"    private java.util.Optional\u003cReadOnlyWaddle\u003e readWaddle(String filePath) throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"pewggls"},"content":"        return new JsonWaddleStorage(Paths.get(filePath)).readWaddle(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":37,"author":{"gitId":"pewggls"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"pewggls"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-16"},{"lineNumber":39,"author":{"gitId":"pewggls"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"pewggls"},"content":"                : null;","lastModifiedDate":"2022-10-16"},{"lineNumber":41,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":42,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"pewggls"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"pewggls"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":45,"author":{"gitId":"pewggls"},"content":"        assertFalse(readWaddle(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"pewggls"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":49,"author":{"gitId":"pewggls"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"pewggls"},"content":"        assertThrows(DataConversionException.class, () -\u003e readWaddle(\"notJsonFormatWaddle.json\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"pewggls"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"pewggls"},"content":"    public void readWaddle_invalidItineraryWaddle_throwDataConversionException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"pewggls"},"content":"        assertThrows(DataConversionException.class, () -\u003e readWaddle(\"invalidItineraryWaddle.json\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"pewggls"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"pewggls"},"content":"    public void readWaddle_invalidAndValidItineraryWaddle_throwDataConversionException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"pewggls"},"content":"        assertThrows(DataConversionException.class, () -\u003e readWaddle(\"invalidAndValidItineraryWaddle.json\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"pewggls"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"pewggls"},"content":"    public void readAndSaveWaddle_allInOrder_success() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"pewggls"},"content":"        Path filePath \u003d testFolder.resolve(\"TempWaddle.json\");","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"pewggls"},"content":"        Waddle original \u003d getTypicalWaddle();","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"pewggls"},"content":"        JsonWaddleStorage jsonWaddleStorage \u003d new JsonWaddleStorage(filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"pewggls"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"pewggls"},"content":"        jsonWaddleStorage.saveWaddle(original, filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"pewggls"},"content":"        ReadOnlyWaddle readBack \u003d jsonWaddleStorage.readWaddle(filePath).get();","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"pewggls"},"content":"        assertEquals(original, new Waddle(readBack));","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":74,"author":{"gitId":"pewggls"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"seox123"},"content":"        original.addItinerary(SUMMER);","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"seox123"},"content":"        original.removeItinerary(SPRING);","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"pewggls"},"content":"        jsonWaddleStorage.saveWaddle(original, filePath);","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"pewggls"},"content":"        readBack \u003d jsonWaddleStorage.readWaddle(filePath).get();","lastModifiedDate":"2022-10-16"},{"lineNumber":79,"author":{"gitId":"pewggls"},"content":"        assertEquals(original, new Waddle(readBack));","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":81,"author":{"gitId":"pewggls"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-10-16"},{"lineNumber":82,"author":{"gitId":"seox123"},"content":"        original.addItinerary(WINTER);","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"pewggls"},"content":"        jsonWaddleStorage.saveWaddle(original); // file path not specified","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"pewggls"},"content":"        readBack \u003d jsonWaddleStorage.readWaddle().get(); // file path not specified","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"pewggls"},"content":"        assertEquals(original, new Waddle(readBack));","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":87,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"pewggls"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"pewggls"},"content":"    public void saveWaddle_nullWaddle_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":91,"author":{"gitId":"pewggls"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveWaddle(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":93,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"pewggls"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"pewggls"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"pewggls"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"pewggls"},"content":"    private void saveWaddle(ReadOnlyWaddle waddle, String filePath) {","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"pewggls"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"pewggls"},"content":"            new JsonWaddleStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-16"},{"lineNumber":100,"author":{"gitId":"pewggls"},"content":"                    .saveWaddle(waddle, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"pewggls"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-10-16"},{"lineNumber":102,"author":{"gitId":"pewggls"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-10-16"},{"lineNumber":103,"author":{"gitId":"pewggls"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":104,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":105,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":106,"author":{"gitId":"pewggls"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"pewggls"},"content":"    public void saveWaddle_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"pewggls"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveWaddle(new Waddle(), null));","lastModifiedDate":"2022-10-16"},{"lineNumber":109,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"pewggls"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"pewggls":103,"seox123":7}},{"path":"src/test/java/seedu/waddle/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.testutil.TypicalItineraries.getTypicalWaddle;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"seox123"},"content":"import seedu.waddle.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.ReadOnlyWaddle;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.Waddle;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"pewggls"},"content":"        JsonWaddleStorage waddleStorage \u003d new JsonWaddleStorage(getTempFilePath(\"waddle\"));","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"pewggls"},"content":"        storageManager \u003d new StorageManager(waddleStorage, userPrefsStorage);","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"pewggls"},"content":"    public void waddleReadSave() throws Exception {","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"pewggls"},"content":"         * {@link JsonWaddleStorage} class.","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"pewggls"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonWaddleStorageTest} class.","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"pewggls"},"content":"        Waddle original \u003d getTypicalWaddle();","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"pewggls"},"content":"        storageManager.saveWaddle(original);","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"pewggls"},"content":"        ReadOnlyWaddle retrieved \u003d storageManager.readWaddle().get();","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"pewggls"},"content":"        assertEquals(original, new Waddle(retrieved));","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"pewggls"},"content":"        assertNotNull(storageManager.getWaddleFilePath());","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"pewggls":13,"-":52,"seox123":3}},{"path":"src/test/java/seedu/waddle/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"-":33,"seox123":1}},{"path":"src/test/java/seedu/waddle/testutil/EditItineraryDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.testutil;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"import seedu.waddle.logic.commands.EditCommand.EditItineraryDescriptor;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Budget;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Country;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Date;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Description;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.ItineraryDuration;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.People;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"seox123"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"seox123"},"content":" * A utility class to help with building EditItineraryDescriptor objects.","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"seox123"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"seox123"},"content":"public class EditItineraryDescriptorBuilder {","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"seox123"},"content":"    private EditItineraryDescriptor descriptor;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"seox123"},"content":"    public EditItineraryDescriptorBuilder() {","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"seox123"},"content":"        descriptor \u003d new EditItineraryDescriptor();","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"seox123"},"content":"    public EditItineraryDescriptorBuilder(EditItineraryDescriptor descriptor) {","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"seox123"},"content":"        this.descriptor \u003d new EditItineraryDescriptor(descriptor);","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"seox123"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"seox123"},"content":"     * Returns an {@code EditItineraryDescriptor} with fields containing an {@code itinerary}\u0027s details","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"seox123"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"seox123"},"content":"    public EditItineraryDescriptorBuilder(Itinerary itinerary) {","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"seox123"},"content":"        descriptor \u003d new EditItineraryDescriptor();","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"CFSY"},"content":"        descriptor.setName(itinerary.getDescription());","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"seox123"},"content":"        descriptor.setCountry(itinerary.getCountry());","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"seox123"},"content":"        descriptor.setStartDate(itinerary.getStartDate());","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"pewggls"},"content":"        descriptor.setDuration(itinerary.getDuration());","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"seox123"},"content":"        descriptor.setPeople(itinerary.getPeople());","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"pewggls"},"content":"        descriptor.setBudget(itinerary.getBudget());","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"seox123"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"seox123"},"content":"     * Sets the {@code Name} of the {@code EditItineraryDescriptor} that we are building.","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"seox123"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"seox123"},"content":"    public EditItineraryDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"ciaoosuuu"},"content":"        descriptor.setName(new Description(name));","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"seox123"},"content":"        return this;","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"seox123"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"seox123"},"content":"     * Sets the {@code Country} of the {@code EditItineraryDescriptor} that we are building.","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"seox123"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"seox123"},"content":"    public EditItineraryDescriptorBuilder withCountry(String country) {","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"seox123"},"content":"        descriptor.setCountry(new Country(country));","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"seox123"},"content":"        return this;","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"seox123"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"seox123"},"content":"     * Sets the {@code Start Date} of the {@code EditItineraryDescriptor} that we are building.","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"seox123"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"seox123"},"content":"    public EditItineraryDescriptorBuilder withStartDate(String startDate) {","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"seox123"},"content":"        descriptor.setStartDate(new Date(startDate));","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"seox123"},"content":"        return this;","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"seox123"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"pewggls"},"content":"     * Sets the {@code Duration} of the {@code EditItineraryDescriptor} that we are building.","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"seox123"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"pewggls"},"content":"    public EditItineraryDescriptorBuilder withDuration(String duration) {","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"pewggls"},"content":"        descriptor.setDuration(new ItineraryDuration(duration));","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"seox123"},"content":"        return this;","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"seox123"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"seox123"},"content":"     * Sets the {@code People} of the {@code EditItineraryDescriptor} that we are building.","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"seox123"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"seox123"},"content":"    public EditItineraryDescriptorBuilder withPeople(String people) {","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"seox123"},"content":"        descriptor.setPeople(new People(people));","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"seox123"},"content":"        return this;","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"seox123"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"pewggls"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"pewggls"},"content":"     * Sets the {@code Budget} of the {@code EditItineraryDescriptor} that we are building.","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"pewggls"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"pewggls"},"content":"    public EditItineraryDescriptorBuilder withBudget(String budget) {","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"pewggls"},"content":"        descriptor.setBudget(new Budget(budget));","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"pewggls"},"content":"        return this;","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"seox123"},"content":"    public EditItineraryDescriptor build() {","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"seox123"},"content":"        return descriptor;","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"seox123"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"seox123"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"ciaoosuuu":2,"CFSY":1,"pewggls":19,"seox123":69}},{"path":"src/test/java/seedu/waddle/testutil/ItineraryBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ningtan11"},"content":"package seedu.waddle.testutil;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Budget;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Country;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Date;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":"import seedu.waddle.model.itinerary.Description;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.ItineraryDuration;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.People;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"ningtan11"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"ningtan11"},"content":" * A utility class to help with building Itinerary objects.","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"ningtan11"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"ningtan11"},"content":"public class ItineraryBuilder {","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"ningtan11"},"content":"    public static final String DEFAULT_NAME \u003d \"Summer\";","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"ningtan11"},"content":"    public static final String DEFAULT_COUNTRY \u003d \"FRANCE\";","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"ningtan11"},"content":"    public static final String DEFAULT_START_DATE \u003d \"2022-10-14\";","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"pewggls"},"content":"    public static final String DEFAULT_DURATION \u003d \"1\";","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"ningtan11"},"content":"    public static final String DEFAULT_PEOPLE \u003d \"1\";","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"pewggls"},"content":"    public static final String DEFAULT_BUDGET \u003d \"100.00\";","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"ciaoosuuu"},"content":"    private Description name;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"ningtan11"},"content":"    private Country country;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"ningtan11"},"content":"    private Date startDate;","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"pewggls"},"content":"    private ItineraryDuration duration;","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"ningtan11"},"content":"    private People people;","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"pewggls"},"content":"    private Budget budget;","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"ningtan11"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"ningtan11"},"content":"     * Creates a {@code ItineraryBuilder} with the default details.","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"ningtan11"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"ningtan11"},"content":"    public ItineraryBuilder() {","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"ciaoosuuu"},"content":"        name \u003d new Description(DEFAULT_NAME);","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"ningtan11"},"content":"        country \u003d new Country(DEFAULT_COUNTRY);","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"ningtan11"},"content":"        startDate \u003d new Date(DEFAULT_START_DATE);","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"pewggls"},"content":"        duration \u003d new ItineraryDuration(DEFAULT_DURATION);","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"ningtan11"},"content":"        people \u003d new People(DEFAULT_PEOPLE);","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"pewggls"},"content":"        budget \u003d new Budget(DEFAULT_BUDGET);","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"ningtan11"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"ningtan11"},"content":"     * Initializes the ItineraryBuilder with the data of {@code itineraryToCopy}.","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"ningtan11"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"ningtan11"},"content":"    public ItineraryBuilder(Itinerary itineraryToCopy) {","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"CFSY"},"content":"        name \u003d itineraryToCopy.getDescription();","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"ningtan11"},"content":"        country \u003d itineraryToCopy.getCountry();","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"ningtan11"},"content":"        startDate \u003d itineraryToCopy.getStartDate();","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"pewggls"},"content":"        duration \u003d itineraryToCopy.getDuration();","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"ningtan11"},"content":"        people \u003d itineraryToCopy.getPeople();","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"pewggls"},"content":"        budget \u003d itineraryToCopy.getBudget();","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"ningtan11"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"ningtan11"},"content":"     * Sets the {@code Name} of the {@code Itinerary} that we are building.","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"ningtan11"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"ningtan11"},"content":"    public ItineraryBuilder withName(String name) {","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"ciaoosuuu"},"content":"        this.name \u003d new Description(name);","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"ningtan11"},"content":"        return this;","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"ningtan11"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"ningtan11"},"content":"     * Sets the {@code Country} of the {@code Itinerary} that we are building.","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"ningtan11"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"ningtan11"},"content":"    public ItineraryBuilder withCountry(String country) {","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"ningtan11"},"content":"        this.country \u003d new Country(country);","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"ningtan11"},"content":"        return this;","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"ningtan11"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"ningtan11"},"content":"     * Sets the {@code Start Date} of the {@code Itinerary} that we are building.","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"ningtan11"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"ningtan11"},"content":"    public ItineraryBuilder withStartDate(String startDate) {","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"ningtan11"},"content":"        this.startDate \u003d new Date(startDate);","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"ningtan11"},"content":"        return this;","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"ningtan11"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"pewggls"},"content":"     * Sets the {@code ItineraryDuration} of the {@code Itinerary} that we are building.","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"ningtan11"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"pewggls"},"content":"    public ItineraryBuilder withDuration(String duration) {","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"pewggls"},"content":"        this.duration \u003d new ItineraryDuration(duration);","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"ningtan11"},"content":"        return this;","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"ningtan11"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"ningtan11"},"content":"     * Sets the {@code People} of the {@code Itinerary} that we are building.","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"ningtan11"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"ningtan11"},"content":"    public ItineraryBuilder withPeople(String people) {","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"ningtan11"},"content":"        this.people \u003d new People(people);","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"ningtan11"},"content":"        return this;","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"pewggls"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"pewggls"},"content":"     * Sets the {@code Budget} of the {@code Itinerary} that we are building.","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"pewggls"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"pewggls"},"content":"    public ItineraryBuilder withBudget(String budget) {","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"pewggls"},"content":"        this.budget \u003d new Budget(budget);","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"pewggls"},"content":"        return this;","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"pewggls"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"ningtan11"},"content":"    public Itinerary build() {","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"pewggls"},"content":"        return new Itinerary(name, country, startDate, duration, people, budget);","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"ningtan11"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"ciaoosuuu":4,"CFSY":1,"ningtan11":74,"pewggls":26}},{"path":"src/test/java/seedu/waddle/testutil/ItineraryUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ningtan11"},"content":"package seedu.waddle.testutil;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_BUDGET;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_COUNTRY;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_ITINERARY_DURATION;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_PEOPLE;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.parser.CliSyntax.PREFIX_START_DATE;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.logic.commands.AddCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.logic.commands.EditCommand.EditItineraryDescriptor;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"ningtan11"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"ningtan11"},"content":" * A utility class for Person.","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"ningtan11"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"ningtan11"},"content":"public class ItineraryUtil {","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"ningtan11"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"ningtan11"},"content":"     * Returns an add command string for adding the {@code itinerary}.","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"ningtan11"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"ningtan11"},"content":"    public static String getAddCommand(Itinerary itinerary) {","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"ningtan11"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getItineraryDetails(itinerary);","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"ningtan11"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"ningtan11"},"content":"     * Returns the part of command string for the given {@code itinerary}\u0027s details.","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"ningtan11"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"ningtan11"},"content":"    public static String getItineraryDetails(Itinerary itinerary) {","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"ningtan11"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"CFSY"},"content":"        sb.append(PREFIX_DESCRIPTION + itinerary.getDescription().description + \" \");","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"ciaoosuuu"},"content":"        sb.append(PREFIX_COUNTRY + itinerary.getCountry().country + \" \");","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"CFSY"},"content":"        sb.append(PREFIX_START_DATE + itinerary.getStartDate().toString() + \" \");","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"pewggls"},"content":"        sb.append(PREFIX_ITINERARY_DURATION + itinerary.getDuration().toString() + \" \");","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"pewggls"},"content":"        sb.append(PREFIX_PEOPLE + itinerary.getPeople().numOfPeople + \" \");","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"pewggls"},"content":"        sb.append(PREFIX_BUDGET + itinerary.getBudget().toString());","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"ningtan11"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"ningtan11"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"ningtan11"},"content":"     * Returns the part of command string for the given {@code EditItineraryDescriptor}\u0027s details.","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"ningtan11"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"ningtan11"},"content":"    public static String getEditItineraryDescriptorDetails(EditItineraryDescriptor descriptor) {","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"ningtan11"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"ciaoosuuu"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_DESCRIPTION).append(name.description).append(\" \"));","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"ningtan11"},"content":"        descriptor.getCountry().ifPresent(phone -\u003e sb.append(PREFIX_COUNTRY).append(phone).append(\" \"));","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"ningtan11"},"content":"        descriptor.getStartDate().ifPresent(email -\u003e sb.append(PREFIX_START_DATE).append(email).append(\" \"));","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"pewggls"},"content":"        descriptor.getDuration().ifPresent(address -\u003e sb.append(PREFIX_ITINERARY_DURATION).append(address).append(\" \"));","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"ningtan11"},"content":"        descriptor.getPeople().ifPresent(people -\u003e sb.append(PREFIX_PEOPLE).append(people).append(\" \"));","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"pewggls"},"content":"        descriptor.getBudget().ifPresent(people -\u003e sb.append(PREFIX_BUDGET).append(people).append(\" \"));","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"ningtan11"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"ningtan11"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"ciaoosuuu":3,"CFSY":2,"ningtan11":36,"pewggls":11}},{"path":"src/test/java/seedu/waddle/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"-":71,"seox123":1}},{"path":"src/test/java/seedu/waddle/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"seox123"},"content":"import seedu.waddle.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"seox123"},"content":"import seedu.waddle.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"pewggls"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"pewggls"},"content":"        return Index.fromOneBased(model.getFilteredItineraryList().size() / 2);","lastModifiedDate":"2022-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"pewggls"},"content":"        return Index.fromOneBased(model.getFilteredItineraryList().size());","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"pewggls"},"content":"    public static Itinerary getItinerary(Model model, Index index) {","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"pewggls"},"content":"        return model.getFilteredItineraryList().get(index.getZeroBased());","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"pewggls":5,"-":47,"seox123":3}},{"path":"src/test/java/seedu/waddle/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"import seedu.waddle.commons.core.index.Index;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"ciaoosuuu"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"ciaoosuuu"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"ciaoosuuu"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"ciaoosuuu"},"content":"public class TypicalIndexes {","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"ningtan11"},"content":"    public static final Index INDEX_FIRST_ITINERARY \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"ningtan11"},"content":"    public static final Index INDEX_SECOND_ITINERARY \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"ningtan11"},"content":"    public static final Index INDEX_THIRD_ITINERARY \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"ciaoosuuu"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"ciaoosuuu":7,"ningtan11":3,"seox123":2}},{"path":"src/test/java/seedu/waddle/testutil/TypicalItineraries.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ningtan11"},"content":"package seedu.waddle.testutil;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_BUDGET_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_BUDGET_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_COUNTRY_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_COUNTRY_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_DURATION_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_DURATION_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_NAME_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_NAME_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_PEOPLE_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_PEOPLE_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_START_DATE_SUMMER;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"pewggls"},"content":"import static seedu.waddle.logic.commands.CommandTestUtil.VALID_START_DATE_WINTER;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"ningtan11"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"ningtan11"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"ningtan11"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.Waddle;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"ningtan11"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"ningtan11"},"content":" * A utility class containing a list of {@code Itinerary} objects to be used in tests.","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"ningtan11"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"ningtan11"},"content":"public class TypicalItineraries {","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"CFSY"},"content":"    public static final Itinerary SPRING \u003d new ItineraryBuilder().withName(\"Spring Trip\")","lastModifiedDate":"2022-10-16"},{"lineNumber":29,"author":{"gitId":"pewggls"},"content":"            .withCountry(\"Australia\").withStartDate(\"2022-01-01\")","lastModifiedDate":"2022-10-16"},{"lineNumber":30,"author":{"gitId":"pewggls"},"content":"            .withDuration(\"14\").withPeople(\"1\").withBudget(\"300\").build();","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"seox123"},"content":"    public static final Itinerary AUTUMN \u003d new ItineraryBuilder().withName(\"Autumn Hiking\")","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"pewggls"},"content":"            .withCountry(\"Canada\").withStartDate(\"2022-02-02\")","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"pewggls"},"content":"            .withDuration(\"22\").withPeople(\"2\").withBudget(\"700\").build();","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"pewggls"},"content":"    public static final Itinerary GRADUATION \u003d new ItineraryBuilder().withName(\"Graduation Trip\")","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"pewggls"},"content":"            .withCountry(\"France\").withStartDate(\"2022-03-03\")","lastModifiedDate":"2022-10-16"},{"lineNumber":36,"author":{"gitId":"pewggls"},"content":"            .withDuration(\"4\").withPeople(\"4\").withBudget(\"2200\").build();","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":38,"author":{"gitId":"seox123"},"content":"    // Manually added - Itinerary\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"seox123"},"content":"    public static final Itinerary SUMMER \u003d new ItineraryBuilder().withName(VALID_NAME_SUMMER)","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"seox123"},"content":"            .withCountry(VALID_COUNTRY_SUMMER).withStartDate(VALID_START_DATE_SUMMER)","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"pewggls"},"content":"            .withDuration(VALID_DURATION_SUMMER).withPeople(VALID_PEOPLE_SUMMER)","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"pewggls"},"content":"            .withBudget(VALID_BUDGET_SUMMER).build();","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"seox123"},"content":"    public static final Itinerary WINTER \u003d new ItineraryBuilder().withName(VALID_NAME_WINTER)","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"seox123"},"content":"            .withCountry(VALID_COUNTRY_WINTER).withStartDate(VALID_START_DATE_WINTER)","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"pewggls"},"content":"            .withDuration(VALID_DURATION_WINTER).withPeople(VALID_PEOPLE_WINTER)","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"pewggls"},"content":"            .withBudget(VALID_BUDGET_WINTER).build();","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"pewggls"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":48,"author":{"gitId":"ningtan11"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"ningtan11"},"content":"    private TypicalItineraries() {} // prevents instantiation","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"ningtan11"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"ningtan11"},"content":"     * Returns a {@code Waddle} with all the typical itineraries.","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"ningtan11"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"ningtan11"},"content":"    public static Waddle getTypicalWaddle() {","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"pewggls"},"content":"        Waddle waddle \u003d new Waddle();","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"pewggls"},"content":"        for (Itinerary itinerary : getTypicalItineraries()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"pewggls"},"content":"            waddle.addItinerary(itinerary);","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"ningtan11"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"pewggls"},"content":"        return waddle;","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"ningtan11"},"content":"    public static List\u003cItinerary\u003e getTypicalItineraries() {","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"seox123"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(SPRING, AUTUMN, GRADUATION));","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"ningtan11"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"CFSY":1,"ningtan11":28,"pewggls":30,"seox123":7}},{"path":"src/test/java/seedu/waddle/testutil/WaddleBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ningtan11"},"content":"package seedu.waddle.testutil;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.Waddle;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"ningtan11"},"content":"import seedu.waddle.model.itinerary.Itinerary;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"ningtan11"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"ningtan11"},"content":" * A utility class to help with building Waddle objects.","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"ningtan11"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"ningtan11"},"content":" *     {@code Waddle w \u003d new WaddleBuilder().withItineraries(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"ningtan11"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"ningtan11"},"content":"public class WaddleBuilder {","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"ningtan11"},"content":"    private Waddle waddle;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"ningtan11"},"content":"    public WaddleBuilder() {","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"ningtan11"},"content":"        waddle \u003d new Waddle();","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"ningtan11"},"content":"    public WaddleBuilder(Waddle waddle) {","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"ningtan11"},"content":"        this.waddle \u003d waddle;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"ningtan11"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"ningtan11"},"content":"     * Adds a new {@code Itinerary} to the {@code Waddle} that we are building.","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"ningtan11"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"ciaoosuuu"},"content":"    public WaddleBuilder withItinerary(Itinerary itinerary) {","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"ningtan11"},"content":"        waddle.addItinerary(itinerary);","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"ningtan11"},"content":"        return this;","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"ningtan11"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"ningtan11"},"content":"    public Waddle build() {","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"ningtan11"},"content":"        return waddle;","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"ningtan11"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"ningtan11"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"ciaoosuuu":1,"ningtan11":33}},{"path":"src/test/java/seedu/waddle/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"-":34,"seox123":1}},{"path":"src/test/java/seedu/waddle/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"seox123"},"content":"package seedu.waddle.ui;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"seox123"},"content":"import static seedu.waddle.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"seox123"},"content":"import seedu.waddle.MainApp;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"-":111,"seox123":3}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"\u003c?import seedu.waddle.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"-":3,"seox123":1}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"seox123"},"content":"\u003cfx:root type\u003d\"seedu.waddle.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"ciaoosuuu"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"ciaoosuuu":1,"-":4,"seox123":1}}]
