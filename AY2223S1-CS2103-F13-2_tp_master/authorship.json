[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"[![Java CI](https://github.com/AY2223S1-CS2103-F13-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103-F13-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"deepimpactmir"},"content":"- This is **brownfield project for Software Engineering (SE) students**.\u003cbr\u003e","lastModifiedDate":"2022-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"  - as a surveyee manager for surveyors","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"- The project simulates an ongoing software project for a desktop application (called _Survin_) used for managing contact details.","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"deepimpactmir"},"content":"  - It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2022-09-24"},{"lineNumber":10,"author":{"gitId":"deepimpactmir"},"content":"  - It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2022-09-24"},{"lineNumber":11,"author":{"gitId":"deepimpactmir"},"content":"- It is named `Survin`","lastModifiedDate":"2022-09-24"},{"lineNumber":12,"author":{"gitId":"ryanlml"},"content":"- This project is based on the Survin-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-11-04"}],"authorContributionMap":{"KeithPJX":3,"ryanlml":1,"-":4,"deepimpactmir":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"deepimpactmir"},"content":"    id \u0027java-library\u0027","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"run {","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"deepimpactmir"},"content":"    String jUnitVersion \u003d \u00275.9.1\u0027","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"deepimpactmir"},"content":"    String javaFxVersion \u003d \u002711.0.2\u0027","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027Survin.jar\u0027","lastModifiedDate":"2022-09-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"KeithPJX":4,"-":69,"deepimpactmir":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"### Low Weimin, Ian","lastModifiedDate":"2022-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"\u003cimg src\u003d\"images/castryl.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[github](https://github.com/castryl)]","lastModifiedDate":"2022-09-24"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"[[portfolio](team/castryl.md)]","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2022-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2022-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"NUSDG"},"content":"### Guo Qi","lastModifiedDate":"2022-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"NUSDG"},"content":"\u003cimg src\u003d\"images/nusdg.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"NUSDG"},"content":"[[github](http://github.com/NUSDG)]","lastModifiedDate":"2022-09-24"},{"lineNumber":27,"author":{"gitId":"NUSDG"},"content":"[[portfolio](team/nusdg.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"NUSDG"},"content":"* Role: Developer","lastModifiedDate":"2022-09-24"},{"lineNumber":30,"author":{"gitId":"NUSDG"},"content":"* Responsibilities: Testing","lastModifiedDate":"2022-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"deepimpactmir"},"content":"### Jeremy Toh","lastModifiedDate":"2022-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"deepimpactmir"},"content":"\u003cimg src\u003d\"images/deepimpactmir.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"KeithPJX"},"content":"[[github](http://github.com/deepimpactmir)]","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"[[portfolio](team/deepimpactmir.md)]","lastModifiedDate":"2022-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"deepimpactmir"},"content":"- Role: Developer","lastModifiedDate":"2022-09-24"},{"lineNumber":40,"author":{"gitId":"deepimpactmir"},"content":"- Responsibilities: Code quality","lastModifiedDate":"2022-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"KeithPJX"},"content":"### Keith Png","lastModifiedDate":"2022-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"KeithPJX"},"content":"\u003cimg src\u003d\"images/keithpjx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"KeithPJX"},"content":"[[github](http://github.com/KeithPJX)]","lastModifiedDate":"2022-09-24"},{"lineNumber":47,"author":{"gitId":"KeithPJX"},"content":"[[portfolio](team/keithpjx.md)]","lastModifiedDate":"2022-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"KeithPJX"},"content":"* Responsibilities: Deliverables and deadlines","lastModifiedDate":"2022-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"ryanlml"},"content":"### Ryan Lee","lastModifiedDate":"2022-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"ryanlml"},"content":"\u003cimg src\u003d\"images/ryanlml.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"ryanlml"},"content":"[[github](http://github.com/ryanlml)]","lastModifiedDate":"2022-09-24"},{"lineNumber":57,"author":{"gitId":"KeithPJX"},"content":"[[portfolio](team/ryanlml.md)]","lastModifiedDate":"2022-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"ryanlml"},"content":"* Responsibilities: Integration","lastModifiedDate":"2022-09-24"}],"authorContributionMap":{"KeithPJX":10,"NUSDG":6,"ryanlml":4,"-":36,"deepimpactmir":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"deepimpactmir"},"content":"- Table of Contents","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"deepimpactmir"},"content":"---","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"ryanlml"},"content":"-   This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"deepimpactmir"},"content":"-   Borrowed from AddressBook-Level4 for the `undo` feature.","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"ryanlml"},"content":"-   Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"deepimpactmir"},"content":"---","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"deepimpactmir"},"content":"---","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"deepimpactmir"},"content":"The **_Architecture Diagram_** given above explains the high-level design of the App.","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"deepimpactmir"},"content":"-   At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"deepimpactmir"},"content":"-   At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"deepimpactmir"},"content":"-   [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"deepimpactmir"},"content":"-   [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"deepimpactmir"},"content":"-   [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"deepimpactmir"},"content":"-   [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"deepimpactmir"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"deepimpactmir"},"content":"-   defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"deepimpactmir"},"content":"-   implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"deepimpactmir"},"content":"-   executes user commands using the `Logic` component.","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"deepimpactmir"},"content":"-   listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"deepimpactmir"},"content":"-   keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"deepimpactmir"},"content":"-   depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"ryanlml"},"content":"1. When `Logic` is called upon to execute a command, it uses the `SurvinParser` class to parse the user command.","lastModifiedDate":"2022-11-04"},{"lineNumber":102,"author":{"gitId":"KeithPJX"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2022-10-31"},{"lineNumber":103,"author":{"gitId":"KeithPJX"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2022-10-31"},{"lineNumber":104,"author":{"gitId":"KeithPJX"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2022-10-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":119,"author":{"gitId":"ryanlml"},"content":"-   When called upon to parse a user command, the `SurvinParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `SurvinParser` returns back as a `Command` object.","lastModifiedDate":"2022-11-04"},{"lineNumber":120,"author":{"gitId":"deepimpactmir"},"content":"-   All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"ryanlml"},"content":"-   stores Survin data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2022-11-04"},{"lineNumber":131,"author":{"gitId":"deepimpactmir"},"content":"-   stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-10-20"},{"lineNumber":132,"author":{"gitId":"deepimpactmir"},"content":"-   stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2022-10-20"},{"lineNumber":133,"author":{"gitId":"deepimpactmir"},"content":"-   does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2022-10-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"ryanlml"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `Survin`, which `Person` references. This allows `Survin` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":149,"author":{"gitId":"ryanlml"},"content":"-   can save both Survin data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2022-11-04"},{"lineNumber":150,"author":{"gitId":"ryanlml"},"content":"-   inherits from both `SurvinStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-11-04"},{"lineNumber":151,"author":{"gitId":"deepimpactmir"},"content":"-   depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2022-10-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"ryanlml"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2022-11-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"deepimpactmir"},"content":"---","lastModifiedDate":"2022-10-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"deepimpactmir"},"content":"### Undo/redo feature","lastModifiedDate":"2022-11-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"deepimpactmir"},"content":"#### Implementation","lastModifiedDate":"2022-11-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"deepimpactmir"},"content":"Note that we only implement the undo feature in this iteration. The undo/redo mechanism is facilitated by `VersionedSurvin`. It extends `Survin` with an undo/redo history, stored internally as an `survinStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2022-11-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"ryanlml"},"content":"-   `VersionedSurvin#commit()` — Saves the current Survin state in its history.","lastModifiedDate":"2022-11-04"},{"lineNumber":170,"author":{"gitId":"ryanlml"},"content":"-   `VersionedSurvin#undo()` — Restores the previous Survin state from its history.","lastModifiedDate":"2022-11-04"},{"lineNumber":171,"author":{"gitId":"ryanlml"},"content":"-   `VersionedSurvin#redo()` — Restores a previously undone Survin state from its history.","lastModifiedDate":"2022-11-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"ryanlml"},"content":"These operations are exposed in the `Model` interface as `Model#commitSurvin()`, `Model#undoSurvin()` and `Model#redoSurvin()` respectively.","lastModifiedDate":"2022-11-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"ryanlml"},"content":"Step 1. The user launches the application for the first time. The `VersionedSurvin` will be initialized with the initial Survin state, and the `currentStatePointer` pointing to that single Survin state.","lastModifiedDate":"2022-11-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"ryanlml"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in Survin. The `delete` command calls `Model#commitSurvin()`, causing the modified state of Survin after the `delete 5` command executes to be saved in the `survinStateList`, and the `currentStatePointer` is shifted to the newly inserted Survin state.","lastModifiedDate":"2022-11-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"ryanlml"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitSurvin()`, causing another modified Survin state to be saved into the `survinStateList`.","lastModifiedDate":"2022-11-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"ryanlml"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitSurvin()`, so the Survin state will not be saved into the `survinStateList`.","lastModifiedDate":"2022-11-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"ryanlml"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoSurvin()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous Survin state, and restores Survin to that state.","lastModifiedDate":"2022-11-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"ryanlml"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial Survin state, then there are no previous Survin states to restore. The `undo` command uses `Model#canUndoSurvin()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2022-11-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"ryanlml"},"content":"The `redo` command does the opposite — it calls `Model#redoSurvin()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores Survin to that state.","lastModifiedDate":"2022-11-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"ryanlml"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `survinStateList.size() - 1`, pointing to the latest Survin state, then there are no undone Survin states to restore. The `redo` command uses `Model#canRedoSurvin()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2022-11-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"ryanlml"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the Survin, such as `list`, will usually not call `Model#commitSurvin()`, `Model#undoSurvin()` or `Model#redoSurvin()`. Thus, the `survinStateList` remains unchanged.","lastModifiedDate":"2022-11-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"ryanlml"},"content":"Step 6. The user executes `clear`, which calls `Model#commitSurvin()`. Since the `currentStatePointer` is not pointing at the end of the `survinStateList`, all Survin states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2022-11-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"ryanlml"},"content":"-   **Alternative 1 (current choice):** Saves the entire Survin state.","lastModifiedDate":"2022-11-04"},{"lineNumber":233,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":234,"author":{"gitId":"deepimpactmir"},"content":"    -   Pros: Easy to implement.","lastModifiedDate":"2022-10-20"},{"lineNumber":235,"author":{"gitId":"deepimpactmir"},"content":"    -   Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2022-10-20"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"deepimpactmir"},"content":"-   **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2022-10-20"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":240,"author":{"gitId":"deepimpactmir"},"content":"    -   Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2022-10-20"},{"lineNumber":241,"author":{"gitId":"deepimpactmir"},"content":"    -   Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2022-10-20"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"KeithPJX"},"content":"### Changing themes","lastModifiedDate":"2022-11-01"},{"lineNumber":250,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":251,"author":{"gitId":"KeithPJX"},"content":"#### Implementation","lastModifiedDate":"2022-11-01"},{"lineNumber":252,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":253,"author":{"gitId":"KeithPJX"},"content":"Implementing this feature will require the `MainWindow` to keep track of the current theme of Survin. This is done with an enum called `Theme` which is kept in a container class called `Themes`. `Themes` also stores static String variables to represent what users should type to swap to that theme.","lastModifiedDate":"2022-11-01"},{"lineNumber":254,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":255,"author":{"gitId":"KeithPJX"},"content":"Currently, since there are only 2 themes, there is a toggle button in GUI to toggle between the 2 themes. The method that is called when the button is pressed is called `handleLightDarkTheme()` in `MainWindow`. When called it simply checks what the current theme is and sets the theme to the other one. To keep things simple, the `theme` command also uses this `handleLightDarkTheme()` command to change the themes. A user invoking the `theme` command will result in the call of the `handeThemeCommand(Theme)` method in `MainWindow` which will only call `handleLightDarkTheme()` if the specified theme to change to is different from the current theme. This gives the expected behavior of the `theme` command using the toggling nature of `handeLightDarkTheme()`.","lastModifiedDate":"2022-11-01"},{"lineNumber":256,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":257,"author":{"gitId":"KeithPJX"},"content":"Below is the sequence diagram that explains how the `theme` command works:","lastModifiedDate":"2022-11-01"},{"lineNumber":258,"author":{"gitId":"KeithPJX"},"content":"![ThemeSequenceDiagram](images/ThemeSequenceDiagram.png)","lastModifiedDate":"2022-11-01"},{"lineNumber":259,"author":{"gitId":"KeithPJX"},"content":"(Note: Details of the creation of CommandResult is similar to the Delete Command just without the update to model. You can find the sequence diagram for that command under the Logic Component section.)","lastModifiedDate":"2022-11-01"},{"lineNumber":260,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":261,"author":{"gitId":"KeithPJX"},"content":"#### Adding more themes (In the future)","lastModifiedDate":"2022-11-01"},{"lineNumber":262,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":263,"author":{"gitId":"KeithPJX"},"content":"The `theme` command was implemented with the addition of more themes in mind. First, add the names of the new themes in the container class `Themes` and their stylesheets in `resources/view`. Then just edit the `handleThemeCommand(Theme)` method with a simple switch case to change the stylesheet based on the specified theme. And since there is more than 2 themes, a toggle button would no longer work so you might want to replace that with a ComboBox or something similar. This also means that then `handleLightDarkTheme()` command is obsolete and can be removed.","lastModifiedDate":"2022-11-01"},{"lineNumber":264,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":265,"author":{"gitId":"KeithPJX"},"content":"### Compactable and expandable PersonCard","lastModifiedDate":"2022-10-19"},{"lineNumber":266,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":267,"author":{"gitId":"KeithPJX"},"content":"This feature is accomplished by recording the current state of the `PersonCard` with a boolean variable called `isExpanded`. `isExpanded` is true if `PersonCard` is expanded and false if `PersonCard` is compacted. `isExpanded` is set to `false` by default so that the application starts with all `PersonCard` compacted.","lastModifiedDate":"2022-10-19"},{"lineNumber":268,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":269,"author":{"gitId":"KeithPJX"},"content":"There is also a listener that listens to mouse clicks on each `PersonCard`. Clicking on a `PersonCard` calls one of two methods depending on its `isExpanded` value. If `isExpanded` is `true`, it calls `hideLabels()`. If `isExpanded` is `false`, it calls `showLabels()`.","lastModifiedDate":"2022-10-20"},{"lineNumber":270,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":271,"author":{"gitId":"KeithPJX"},"content":"`showLabels()` calls `setManaged(true)` and `setVisible(true)` on all elements that should be shown and managed for when expanding a `PersonCard`. `hideLabels()` likewise calls `setManage(false)` and `setVisible(false)` on all elements that should be hidden and not managed for when compacting a `PersonCard`.","lastModifiedDate":"2022-10-19"},{"lineNumber":272,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":273,"author":{"gitId":"KeithPJX"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** It is required to `setManaged(true)` or `setManaged(false)` when showing or hiding respectively, if not `PersonCard` will not account for space for the shown elements or will account for space for hidden elements.","lastModifiedDate":"2022-10-19"},{"lineNumber":274,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":275,"author":{"gitId":"KeithPJX"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":276,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":277,"author":{"gitId":"KeithPJX"},"content":"The sequence diagram below shows how the process works:","lastModifiedDate":"2022-10-19"},{"lineNumber":278,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":279,"author":{"gitId":"KeithPJX"},"content":"![PersonCardCompactExpandSequenceDiagram](images/CompactExpandSequenceDiagram.png)","lastModifiedDate":"2022-10-19"},{"lineNumber":280,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":281,"author":{"gitId":"KeithPJX"},"content":"Due to the way the `updateItem` method works in the `ListCell` class. There were some undesirable effects in the UI. Whenever the user clicks on a `PersonCard`, two things would happen, `handleMouseClicked` and `updateItem` would be called. `updateItem` would create a new `PersonCard` to replace the old `PersonCard`. This is good if there was an update to the `PersonCard` but in this case there was no update. This results in the `handleMouseClicked` call to be useless since it was called in the `PersonCard` that was replaced. The newly created `PersonCard` would default to its original state of being compacted and effectively nothing would happen from the click the user made.","lastModifiedDate":"2022-10-20"},{"lineNumber":282,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":283,"author":{"gitId":"KeithPJX"},"content":"The sequence diagram below demonstrates the problem:","lastModifiedDate":"2022-10-19"},{"lineNumber":284,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":285,"author":{"gitId":"KeithPJX"},"content":"![CompactExpandProblemSequenceDiagram](images/CompactExpandProblemSequenceDiagram.png)","lastModifiedDate":"2022-10-19"},{"lineNumber":286,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":287,"author":{"gitId":"KeithPJX"},"content":"To stop this from happening, `updateItem` has to create a new `PersonCard` only if the `PersonCard` to be created is not the same as the current `PersonCard`. Now even if `updateItem` is called, no new `PersonCard` is created unless it is a different `PersonCard`. This results in the expected behavior of resetting the state of a `PersonCard` to its default state if it changes and keeping its state, since it is not replaced, if it is the same `PersonCard`.","lastModifiedDate":"2022-10-19"},{"lineNumber":288,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":289,"author":{"gitId":"KeithPJX"},"content":"The activity diagram below explains what happens when the user clicks on a `PersonCard`:","lastModifiedDate":"2022-10-19"},{"lineNumber":290,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":291,"author":{"gitId":"KeithPJX"},"content":"![CompactExpandActivityDiagram](images/CompactExpandActivityDiagram.png)","lastModifiedDate":"2022-10-19"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"deepimpactmir"},"content":"### Improved `DeleteCommand`","lastModifiedDate":"2022-10-20"},{"lineNumber":294,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":295,"author":{"gitId":"deepimpactmir"},"content":"To accomodate the new functionality of `delete`, we make modifications in both `DeleteCommandParser` and `DeleteCommand` classes.","lastModifiedDate":"2022-10-20"},{"lineNumber":296,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":297,"author":{"gitId":"deepimpactmir"},"content":"In the `DeleteCommandParser` class, we made use of a regex string to check if the user specified a digit or attributes. If the user provided a number, then the `parse` method would parse the input as an index. Else, the method would attempt to parse for the attributes. If none is provided, then we will throw an exception.","lastModifiedDate":"2022-10-20"},{"lineNumber":298,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":299,"author":{"gitId":"deepimpactmir"},"content":"Since the user can provide any number of the three attributes (from 1 to 3 inclusive), it is natural to make use of the `Optional` container object, which is rather helpful in avoiding the usage of `null` in the implementation.","lastModifiedDate":"2022-10-20"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":301,"author":{"gitId":"deepimpactmir"},"content":"For the `DeleteCommand` class, the idea is rather straightforward where we make use of `Predicate` so that we can make use of the `updateFilteredPersonList` method in the `ModelManager` class. Note that if the user specified a survey, we would only remove the person if that was the only survey that the person is involved in, or else, we would just remove the survey from the person.","lastModifiedDate":"2022-10-20"},{"lineNumber":302,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":303,"author":{"gitId":"deepimpactmir"},"content":"![NewDeleteSequenceDiagram](images/NewDeleteSequenceDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":304,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":305,"author":{"gitId":"ryanlml"},"content":"### `ViewCommand` feature","lastModifiedDate":"2022-10-20"},{"lineNumber":306,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":307,"author":{"gitId":"ryanlml"},"content":"This feature allows users to view `Person` objects with specified attributes. The current implementation supports viewing keywords in any of the following fields","lastModifiedDate":"2022-11-04"},{"lineNumber":308,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":309,"author":{"gitId":"ryanlml"},"content":"1. `Name`","lastModifiedDate":"2022-11-04"},{"lineNumber":310,"author":{"gitId":"ryanlml"},"content":"2. `Phone`","lastModifiedDate":"2022-11-04"},{"lineNumber":311,"author":{"gitId":"ryanlml"},"content":"3. `Email`","lastModifiedDate":"2022-11-04"},{"lineNumber":312,"author":{"gitId":"ryanlml"},"content":"4. `Address`","lastModifiedDate":"2022-11-04"},{"lineNumber":313,"author":{"gitId":"ryanlml"},"content":"5. `Gender`","lastModifiedDate":"2022-11-04"},{"lineNumber":314,"author":{"gitId":"ryanlml"},"content":"6. `Birthdate`","lastModifiedDate":"2022-11-04"},{"lineNumber":315,"author":{"gitId":"ryanlml"},"content":"7. `Race`","lastModifiedDate":"2022-11-04"},{"lineNumber":316,"author":{"gitId":"ryanlml"},"content":"8. `Religion`","lastModifiedDate":"2022-11-04"},{"lineNumber":317,"author":{"gitId":"ryanlml"},"content":"9. `Survey`","lastModifiedDate":"2022-11-04"},{"lineNumber":318,"author":{"gitId":"ryanlml"},"content":"10. `Tag`","lastModifiedDate":"2022-11-04"},{"lineNumber":319,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":320,"author":{"gitId":"ryanlml"},"content":"This is a new enhancement in v1.3, as older iterations did not support viewing by `Survey` or `Tag`. We hope that this implementation allows the user to filter and view specific demographics more easily, for example, viewing all chinese males that has participated in a Food survey.","lastModifiedDate":"2022-11-04"},{"lineNumber":321,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":322,"author":{"gitId":"ryanlml"},"content":"This is achieved in the `ViewCommand` and `ViewCommandParser` classes.","lastModifiedDate":"2022-11-04"},{"lineNumber":323,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":324,"author":{"gitId":"ryanlml"},"content":"In `ViewCommandParser`, we make use of the `ArugmenetMultimap` class to parse the user input and interprets them to get the values of the suffixes input by the user. Note that there is a possibility that the values to said suffixes are `null`, but this is handled by wrapping them in an `Optional` by `ArgumentMultimap`.","lastModifiedDate":"2022-11-05"},{"lineNumber":325,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":326,"author":{"gitId":"ryanlml"},"content":"With this list of values, we make use of `Predicate` to define a predicate which returns true whenever a person contains the attributes as specified by the list of values, and returns false otherwise.","lastModifiedDate":"2022-11-05"},{"lineNumber":327,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":328,"author":{"gitId":"ryanlml"},"content":"The predicate is then passed into `ViewCommand`, where we call `updateFilteredPersonList` in the `ModelManager` class to get a filtered list of people satisfying the predicate.","lastModifiedDate":"2022-11-05"},{"lineNumber":329,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":330,"author":{"gitId":"ryanlml"},"content":"The sequence diagram below shows how the process works:","lastModifiedDate":"2022-10-20"},{"lineNumber":331,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":332,"author":{"gitId":"ryanlml"},"content":"![ViewSequenceDiagram](images/ViewSequenceDiagram.png)","lastModifiedDate":"2022-10-20"},{"lineNumber":333,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":334,"author":{"gitId":"NUSDG"},"content":"### `CloneCommand` feature","lastModifiedDate":"2022-10-21"},{"lineNumber":335,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":336,"author":{"gitId":"NUSDG"},"content":"This feature allows the user to clone all details of an existing surveyee with updated attributes. It is accomplished mainly by using the `CloneCommandParser` and `CloneCommand` classes.","lastModifiedDate":"2022-11-06"},{"lineNumber":337,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":338,"author":{"gitId":"NUSDG"},"content":"In the `CloneCommandParser` class, we parse the arguments using `ArgumentMultimap` class and check which attributes are present in the arguments. We will then create a `ClonePersonDescriptor` object to store these attributes.","lastModifiedDate":"2022-10-21"},{"lineNumber":339,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":340,"author":{"gitId":"NUSDG"},"content":"In the `CloneCommand` class, we will retrieve the person we want to clone by `getFilteredPersonList` method, then call `createClonedPerson` method to compare the person we retrieved with the `ClonePersonDescriptor` object, get the updated attributes and return a new person. Then call `addPerson` method in `ModelManager` to add this newly created person in.","lastModifiedDate":"2022-10-21"},{"lineNumber":341,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":342,"author":{"gitId":"ryanlml"},"content":"Note that if the new person we cloned is already in Survin, it will trigger a duplicate cloned person exception.","lastModifiedDate":"2022-11-04"},{"lineNumber":343,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":344,"author":{"gitId":"NUSDG"},"content":"![ViewSequenceDiagram](images/CloneSequenceDiagram.png)","lastModifiedDate":"2022-10-21"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":346,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"deepimpactmir"},"content":"-   [Documentation guide](Documentation.md)","lastModifiedDate":"2022-10-20"},{"lineNumber":349,"author":{"gitId":"deepimpactmir"},"content":"-   [Testing guide](Testing.md)","lastModifiedDate":"2022-10-20"},{"lineNumber":350,"author":{"gitId":"deepimpactmir"},"content":"-   [Logging guide](Logging.md)","lastModifiedDate":"2022-10-20"},{"lineNumber":351,"author":{"gitId":"deepimpactmir"},"content":"-   [Configuration guide](Configuration.md)","lastModifiedDate":"2022-10-20"},{"lineNumber":352,"author":{"gitId":"deepimpactmir"},"content":"-   [DevOps guide](DevOps.md)","lastModifiedDate":"2022-10-20"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"deepimpactmir"},"content":"---","lastModifiedDate":"2022-10-20"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"deepimpactmir"},"content":"-   has a need to manage a significant number of surveyees","lastModifiedDate":"2022-10-20"},{"lineNumber":363,"author":{"gitId":"deepimpactmir"},"content":"-   prefer desktop apps over other types","lastModifiedDate":"2022-10-20"},{"lineNumber":364,"author":{"gitId":"deepimpactmir"},"content":"-   can type fast","lastModifiedDate":"2022-10-20"},{"lineNumber":365,"author":{"gitId":"deepimpactmir"},"content":"-   prefers typing to mouse interactions","lastModifiedDate":"2022-10-20"},{"lineNumber":366,"author":{"gitId":"deepimpactmir"},"content":"-   is reasonably comfortable using CLI apps","lastModifiedDate":"2022-10-20"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"deepimpactmir"},"content":"**Value proposition**: manage surveyees faster than a typical mouse/GUI driven app","lastModifiedDate":"2022-09-24"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"| Priority             | As a …​ | I want to …​                                                                             | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"NUSDG"},"content":"| -------------------- | ------- |------------------------------------------------------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2022-11-06"},{"lineNumber":376,"author":{"gitId":"KeithPJX"},"content":"| `* * *`              | user    | use \u0027add\u0027 in the command line                                                            | add a new surveyee quickly                                             |","lastModifiedDate":"2022-10-31"},{"lineNumber":377,"author":{"gitId":"KeithPJX"},"content":"| `* * *`              | user    | use \u0027edit\u0027 in the command line                                                           | edit a surveyee quickly                                                |","lastModifiedDate":"2022-10-31"},{"lineNumber":378,"author":{"gitId":"KeithPJX"},"content":"| `* * *`              | user    | use \u0027delete\u0027 in the command line                                                         | delete a surveyee quickly                                              |","lastModifiedDate":"2022-10-31"},{"lineNumber":379,"author":{"gitId":"KeithPJX"},"content":"| `* * *`              | user    | use \u0027view\u0027 in the command line                                                           | view my surveyees\u0027 information quickly                                 |","lastModifiedDate":"2022-10-31"},{"lineNumber":380,"author":{"gitId":"KeithPJX"},"content":"| `* *`                | user    | use \u0027clone\u0027 in the command line                                                          | use an existing surveyee as a template for a new surveyee to save time |","lastModifiedDate":"2022-10-31"},{"lineNumber":381,"author":{"gitId":"KeithPJX"},"content":"| `* *`                | user    | add on surveys or tags to existing surveyees without the need to retype everything again | save time and effort when adding on surveys and tags                   |","lastModifiedDate":"2022-10-31"},{"lineNumber":382,"author":{"gitId":"KeithPJX"},"content":"| `* *`                | user    | remove existing surveys or tags from surveyees without clearing everything               | save time and effort re-adding the ones I did not want to delete       |","lastModifiedDate":"2022-10-31"},{"lineNumber":383,"author":{"gitId":"KeithPJX"},"content":"| `* *`                | user    | hide more detailed information on a surveyee                                             | protect their information and have a less cluttered GUI                |","lastModifiedDate":"2022-10-31"},{"lineNumber":384,"author":{"gitId":"KeithPJX"},"content":"| `* *`                | user    | use \u0027view \u003cattribute\u003e\u0027 to view only surveyees of specific attribute                      | save time when looking for surveyees with a specific attribute         |","lastModifiedDate":"2022-10-31"},{"lineNumber":385,"author":{"gitId":"KeithPJX"},"content":"| `* *`                | user    | use \u0027delete \u003cattribute\u003e\u0027 to delete all surveyees with a specific attribute               | save time when deleting surveyees with a specific attribute            |","lastModifiedDate":"2022-10-31"},{"lineNumber":386,"author":{"gitId":"KeithPJX"},"content":"| `*`                  | user    | change between a \u0027light\u0027 and \u0027dark\u0027 theme                                                | have a GUI that is comfortable to use in the day and at night          |","lastModifiedDate":"2022-10-31"},{"lineNumber":387,"author":{"gitId":"NUSDG"},"content":"| `*`                  | user    | use CTRL + N                                                                             | add a new surveyee qucickly                                            |","lastModifiedDate":"2022-11-06"},{"lineNumber":388,"author":{"gitId":"NUSDG"},"content":"| `*`                  | user    | use CTRL + R                                                                             | clear all the texts in command box qucikly                             |","lastModifiedDate":"2022-11-06"},{"lineNumber":389,"author":{"gitId":"NUSDG"},"content":"| `*`                  | user    | use CTRL + E                                                                             | edit an existing surveyee qucickly                                     |","lastModifiedDate":"2022-11-06"},{"lineNumber":390,"author":{"gitId":"NUSDG"},"content":"| `*`                  | user    | use CTRL + D                                                                             | delete an existing surveyee qucickly                                   |","lastModifiedDate":"2022-11-06"},{"lineNumber":391,"author":{"gitId":"NUSDG"},"content":"| `*`                  | user    | use CTRL + M                                                                             | mark an existing surveyee qucickly                                     |","lastModifiedDate":"2022-11-06"},{"lineNumber":392,"author":{"gitId":"NUSDG"},"content":"| `*`                  | user    | use CTRL + U                                                                             | unmark an existing surveyee qucickly                                   |","lastModifiedDate":"2022-11-06"},{"lineNumber":393,"author":{"gitId":"NUSDG"},"content":"| `*`                  | user    | use CTRL + Z                                                                             | undo a command qucikly                                                 |","lastModifiedDate":"2022-11-06"},{"lineNumber":394,"author":{"gitId":"NUSDG"},"content":"| `*`                  | user    | use CTRL + L                                                                             | clone a new surveyee qucickly                                          |","lastModifiedDate":"2022-11-06"},{"lineNumber":395,"author":{"gitId":"NUSDG"},"content":"| `*`                  | user    | use CTRL + I                                                                             | view an existing surveyee qucickly                                     |","lastModifiedDate":"2022-11-06"},{"lineNumber":396,"author":{"gitId":"KeithPJX"},"content":"| _{More to be added}_ |         |                                                                                          |                                                                        |","lastModifiedDate":"2022-10-31"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"deepimpactmir"},"content":"(For all use cases below, the **System** is the `Survin` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-24"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"deepimpactmir"},"content":"**Use case: Delete a surveyee**","lastModifiedDate":"2022-09-24"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"deepimpactmir"},"content":"1. User requests to list surveyees","lastModifiedDate":"2022-09-24"},{"lineNumber":407,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":408,"author":{"gitId":"deepimpactmir"},"content":"2. Survin shows a list of surveyees","lastModifiedDate":"2022-09-24"},{"lineNumber":409,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":410,"author":{"gitId":"deepimpactmir"},"content":"3. User requests to delete a specific surveyee in the list","lastModifiedDate":"2022-09-24"},{"lineNumber":411,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":412,"author":{"gitId":"deepimpactmir"},"content":"4. Survin deletes the surveyee","lastModifiedDate":"2022-09-24"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"deepimpactmir"},"content":"-   2a. The list is empty.","lastModifiedDate":"2022-10-20"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"deepimpactmir"},"content":"-   3a. The given index is invalid.","lastModifiedDate":"2022-10-20"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"deepimpactmir"},"content":"    -   3a1. Survin shows an error message.","lastModifiedDate":"2022-10-20"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"ryanlml"},"content":"**Use case: view surveyees**","lastModifiedDate":"2022-11-04"},{"lineNumber":429,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":430,"author":{"gitId":"ryanlml"},"content":"Preconditions: User can recall the part of a survey name","lastModifiedDate":"2022-11-04"},{"lineNumber":431,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":432,"author":{"gitId":"ryanlml"},"content":"**MSS**","lastModifiedDate":"2022-11-04"},{"lineNumber":433,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":434,"author":{"gitId":"ryanlml"},"content":"1. User would like to search for a specific demographic for a survey","lastModifiedDate":"2022-11-04"},{"lineNumber":435,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":436,"author":{"gitId":"ryanlml"},"content":"2. User views such surveyees in the desired demographic with `view`","lastModifiedDate":"2022-11-04"},{"lineNumber":437,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":438,"author":{"gitId":"ryanlml"},"content":"3. Survin displays all surveyees that matches the search and shows whether the survey has been completed","lastModifiedDate":"2022-11-04"},{"lineNumber":439,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":440,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-11-04"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":442,"author":{"gitId":"ryanlml"},"content":"-   2a. The survey name is not found.","lastModifiedDate":"2022-11-04"},{"lineNumber":443,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":444,"author":{"gitId":"ryanlml"},"content":"    -   2a1. Survin returns an empty list.","lastModifiedDate":"2022-11-04"},{"lineNumber":445,"author":{"gitId":"ryanlml"},"content":"    -   2a2. The user tries again with another survey keyword.","lastModifiedDate":"2022-11-04"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":447,"author":{"gitId":"ryanlml"},"content":"    Steps 2a1-2a2 are repeated until some keywords are matched","lastModifiedDate":"2022-11-04"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":449,"author":{"gitId":"ryanlml"},"content":"    Use case resumes from step 3.","lastModifiedDate":"2022-11-04"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":451,"author":{"gitId":"KeithPJX"},"content":"**Use case: Append surveys/tags to a surveyee**","lastModifiedDate":"2022-10-31"},{"lineNumber":452,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":453,"author":{"gitId":"KeithPJX"},"content":"**MSS**","lastModifiedDate":"2022-10-31"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":455,"author":{"gitId":"KeithPJX"},"content":"1. User requests to list surveyees","lastModifiedDate":"2022-10-31"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":457,"author":{"gitId":"KeithPJX"},"content":"2. Survin shows a list of surveyees","lastModifiedDate":"2022-10-31"},{"lineNumber":458,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":459,"author":{"gitId":"KeithPJX"},"content":"3. User requests to append surveys and/or tags to a specific surveyee in the list","lastModifiedDate":"2022-10-31"},{"lineNumber":460,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":461,"author":{"gitId":"KeithPJX"},"content":"4. Survin appends requested surveys and/or tags to the surveyee","lastModifiedDate":"2022-10-31"},{"lineNumber":462,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":463,"author":{"gitId":"KeithPJX"},"content":"    Use case ends.","lastModifiedDate":"2022-10-31"},{"lineNumber":464,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":465,"author":{"gitId":"KeithPJX"},"content":"**Extensions**","lastModifiedDate":"2022-10-31"},{"lineNumber":466,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":467,"author":{"gitId":"KeithPJX"},"content":"-   2a. The list is empty.","lastModifiedDate":"2022-10-31"},{"lineNumber":468,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":469,"author":{"gitId":"KeithPJX"},"content":"    Use case ends.","lastModifiedDate":"2022-10-31"},{"lineNumber":470,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":471,"author":{"gitId":"KeithPJX"},"content":"-   4a. The requested surveys and/or tags already exist on the surveyee","lastModifiedDate":"2022-10-31"},{"lineNumber":472,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":473,"author":{"gitId":"KeithPJX"},"content":"    -   4a1. Survin shows an error message.","lastModifiedDate":"2022-10-31"},{"lineNumber":474,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":475,"author":{"gitId":"KeithPJX"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2022-10-31"},{"lineNumber":476,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":477,"author":{"gitId":"KeithPJX"},"content":"**Use case: Unappend surveys/tags to a surveyee**","lastModifiedDate":"2022-10-31"},{"lineNumber":478,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":479,"author":{"gitId":"KeithPJX"},"content":"**MSS**","lastModifiedDate":"2022-10-31"},{"lineNumber":480,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":481,"author":{"gitId":"KeithPJX"},"content":"1. User requests to list surveyees","lastModifiedDate":"2022-10-31"},{"lineNumber":482,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":483,"author":{"gitId":"KeithPJX"},"content":"2. Survin shows a list of surveyees","lastModifiedDate":"2022-10-31"},{"lineNumber":484,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":485,"author":{"gitId":"KeithPJX"},"content":"3. User requests to unappend surveys and/or tags from a specific surveyee in the list","lastModifiedDate":"2022-10-31"},{"lineNumber":486,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":487,"author":{"gitId":"KeithPJX"},"content":"4. Survin unappends requested surveys and/or tags from the surveyee","lastModifiedDate":"2022-10-31"},{"lineNumber":488,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":489,"author":{"gitId":"KeithPJX"},"content":"    Use case ends.","lastModifiedDate":"2022-10-31"},{"lineNumber":490,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":491,"author":{"gitId":"KeithPJX"},"content":"**Extensions**","lastModifiedDate":"2022-10-31"},{"lineNumber":492,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":493,"author":{"gitId":"KeithPJX"},"content":"-   2a. The list is empty.","lastModifiedDate":"2022-10-31"},{"lineNumber":494,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":495,"author":{"gitId":"KeithPJX"},"content":"    Use case ends.","lastModifiedDate":"2022-10-31"},{"lineNumber":496,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":497,"author":{"gitId":"KeithPJX"},"content":"-   4a. The requested surveys and/or tags does not exist on the surveyee","lastModifiedDate":"2022-10-31"},{"lineNumber":498,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":499,"author":{"gitId":"KeithPJX"},"content":"    -   4a1. Survin shows an error message.","lastModifiedDate":"2022-10-31"},{"lineNumber":500,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":501,"author":{"gitId":"KeithPJX"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2022-10-31"},{"lineNumber":502,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":503,"author":{"gitId":"KeithPJX"},"content":"**Use case: Change theme**","lastModifiedDate":"2022-10-31"},{"lineNumber":504,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":505,"author":{"gitId":"KeithPJX"},"content":"**MSS**","lastModifiedDate":"2022-10-31"},{"lineNumber":506,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":507,"author":{"gitId":"KeithPJX"},"content":"1. User requests to change the theme of Survin","lastModifiedDate":"2022-10-31"},{"lineNumber":508,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":509,"author":{"gitId":"KeithPJX"},"content":"2. Survin\u0027s theme changes","lastModifiedDate":"2022-10-31"},{"lineNumber":510,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":511,"author":{"gitId":"KeithPJX"},"content":"    Use case ends.","lastModifiedDate":"2022-10-31"},{"lineNumber":512,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":513,"author":{"gitId":"KeithPJX"},"content":"**Use case: Show/Hide more detailed information**","lastModifiedDate":"2022-10-31"},{"lineNumber":514,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":515,"author":{"gitId":"KeithPJX"},"content":"**MSS**","lastModifiedDate":"2022-10-31"},{"lineNumber":516,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":517,"author":{"gitId":"KeithPJX"},"content":"1. User requests to show/hide more detailed information of surveyees","lastModifiedDate":"2022-10-31"},{"lineNumber":518,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":519,"author":{"gitId":"KeithPJX"},"content":"2. Survin shows/hides more detailed information of surveyees","lastModifiedDate":"2022-10-31"},{"lineNumber":520,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":521,"author":{"gitId":"KeithPJX"},"content":"    Use case ends.","lastModifiedDate":"2022-10-31"},{"lineNumber":522,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":523,"author":{"gitId":"NUSDG"},"content":"**Use case: Clone an existing surveyee**","lastModifiedDate":"2022-11-06"},{"lineNumber":524,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":525,"author":{"gitId":"NUSDG"},"content":"**MSS**","lastModifiedDate":"2022-11-06"},{"lineNumber":526,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":527,"author":{"gitId":"NUSDG"},"content":"1. User wants to add a new person that is the son of an existing surveyee, both of them sharing alot similar information and took part in the same survey.","lastModifiedDate":"2022-11-06"},{"lineNumber":528,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":529,"author":{"gitId":"NUSDG"},"content":"2. User finds the index of the dad in the list of surveyees.","lastModifiedDate":"2022-11-06"},{"lineNumber":530,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":531,"author":{"gitId":"NUSDG"},"content":"3. User uses clone command to clone the dad with updated details of the son.","lastModifiedDate":"2022-11-06"},{"lineNumber":532,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":533,"author":{"gitId":"NUSDG"},"content":"4. A new surveyee which is the son has been added.","lastModifiedDate":"2022-11-06"},{"lineNumber":534,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":535,"author":{"gitId":"NUSDG"},"content":"   Use case ends.","lastModifiedDate":"2022-11-06"},{"lineNumber":536,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":537,"author":{"gitId":"deepimpactmir"},"content":"_{More to be added}_","lastModifiedDate":"2022-10-20"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"KeithPJX"},"content":"2. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-10-01"},{"lineNumber":543,"author":{"gitId":"KeithPJX"},"content":"3. No backend server required since local storage is used.","lastModifiedDate":"2022-10-01"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"deepimpactmir"},"content":"_{More to be added}_","lastModifiedDate":"2022-10-20"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"deepimpactmir"},"content":"-   **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2022-10-20"},{"lineNumber":550,"author":{"gitId":"deepimpactmir"},"content":"-   **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2022-10-20"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"deepimpactmir"},"content":"---","lastModifiedDate":"2022-10-20"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"KeithPJX"},"content":"    2. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2022-10-31"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"KeithPJX"},"content":"2. Saving window preferences","lastModifiedDate":"2022-10-31"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"KeithPJX"},"content":"    2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":576,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"KeithPJX"},"content":"3. _{ more test cases …​ }_","lastModifiedDate":"2022-10-31"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"KeithPJX"},"content":"    2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":587,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"KeithPJX"},"content":"    3. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":590,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"KeithPJX"},"content":"    4. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":593,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"KeithPJX"},"content":"2. _{ more test cases …​ }_","lastModifiedDate":"2022-10-31"},{"lineNumber":596,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":597,"author":{"gitId":"KeithPJX"},"content":"### Appending surveys/tags to a surveyee","lastModifiedDate":"2022-10-31"},{"lineNumber":598,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":599,"author":{"gitId":"KeithPJX"},"content":"1. Appending surveys/tags to a surveyee while all surveyees are shown","lastModifiedDate":"2022-10-31"},{"lineNumber":600,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":601,"author":{"gitId":"KeithPJX"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2022-10-31"},{"lineNumber":602,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":603,"author":{"gitId":"KeithPJX"},"content":"    2. Test case: `append 1 s/New Survey`\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":604,"author":{"gitId":"KeithPJX"},"content":"       Expected 1: First surveyee in the list has \u0027New Survey\u0027 added to their list of surveys\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":605,"author":{"gitId":"KeithPJX"},"content":"       Expected 2: Error shown if first surveyee in the list already has \u0027New Survey\u0027 in their list of surveys before the command.","lastModifiedDate":"2022-10-31"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":607,"author":{"gitId":"KeithPJX"},"content":"    3. Test case: `append 1 s/New Survey s/New Survey2 t/newTag t/newTag2`\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":608,"author":{"gitId":"KeithPJX"},"content":"       Expected 1: First surveyee in the list has \u0027New Survey\u0027 and \u0027New Survey2\u0027 added to their list of surveys and has \u0027newTag\u0027 and \u0027newTag2\u0027 added to their list of tags.\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":609,"author":{"gitId":"KeithPJX"},"content":"       Expected 2: Error shown if first surveyee in the list already has any of the surveys or tags specified in the command before the command.","lastModifiedDate":"2022-10-31"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":611,"author":{"gitId":"KeithPJX"},"content":"### Unappending surveys/tags from a surveyee","lastModifiedDate":"2022-10-31"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":613,"author":{"gitId":"KeithPJX"},"content":"1. Omitted as it is similar to \u0027Appending surveys/tags to a surveyee\u0027","lastModifiedDate":"2022-10-31"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":615,"author":{"gitId":"KeithPJX"},"content":"### Changing theme","lastModifiedDate":"2022-10-31"},{"lineNumber":616,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":617,"author":{"gitId":"KeithPJX"},"content":"1. Changing theme while in light theme","lastModifiedDate":"2022-10-31"},{"lineNumber":618,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":619,"author":{"gitId":"KeithPJX"},"content":"    1. Test case: `theme dark`\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":620,"author":{"gitId":"KeithPJX"},"content":"       Expected: Survin changes to the dark theme.","lastModifiedDate":"2022-10-31"},{"lineNumber":621,"author":{"gitId":"KeithPJX"},"content":"    2. Test case: `theme light`\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":622,"author":{"gitId":"KeithPJX"},"content":"       Expected: Survin shows an error message.","lastModifiedDate":"2022-10-31"},{"lineNumber":623,"author":{"gitId":"KeithPJX"},"content":"    3. Test case: Click on the `Appearance` tab and select `Dark Theme`\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":624,"author":{"gitId":"KeithPJX"},"content":"       Expected: Survin changes to the dark theme.","lastModifiedDate":"2022-10-31"},{"lineNumber":625,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":626,"author":{"gitId":"KeithPJX"},"content":"2. Changing theme while in dark theme","lastModifiedDate":"2022-10-31"},{"lineNumber":627,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":628,"author":{"gitId":"KeithPJX"},"content":"    1. Test case: `theme light`\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":629,"author":{"gitId":"KeithPJX"},"content":"       Expected: Survin changes to the light theme.","lastModifiedDate":"2022-10-31"},{"lineNumber":630,"author":{"gitId":"KeithPJX"},"content":"    2. Test case: `theme dark`\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":631,"author":{"gitId":"KeithPJX"},"content":"       Expected: Survin changes to the dark theme.","lastModifiedDate":"2022-10-31"},{"lineNumber":632,"author":{"gitId":"KeithPJX"},"content":"    3. Test case: Click on the `Appearance` tab and select `Light Theme`\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":633,"author":{"gitId":"KeithPJX"},"content":"       Expected: Survin changes to the light theme.","lastModifiedDate":"2022-10-31"},{"lineNumber":634,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":635,"author":{"gitId":"KeithPJX"},"content":"### Showing/Hiding more detailed information","lastModifiedDate":"2022-10-31"},{"lineNumber":636,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":637,"author":{"gitId":"KeithPJX"},"content":"1. Showing more detailed information","lastModifiedDate":"2022-10-31"},{"lineNumber":638,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":639,"author":{"gitId":"KeithPJX"},"content":"    1. Single surveyee","lastModifiedDate":"2022-10-31"},{"lineNumber":640,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":641,"author":{"gitId":"KeithPJX"},"content":"        1. Test case: Click on the surveyee you wish to show more details (Note: surveyee should be in the hiding more detailed information state)","lastModifiedDate":"2022-10-31"},{"lineNumber":642,"author":{"gitId":"KeithPJX"},"content":"           Expected: Surveyee will have their more detailed information shown.","lastModifiedDate":"2022-10-31"},{"lineNumber":643,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":644,"author":{"gitId":"KeithPJX"},"content":"    2. All surveyees","lastModifiedDate":"2022-10-31"},{"lineNumber":645,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":646,"author":{"gitId":"KeithPJX"},"content":"        1. Test case: `toggle-list-mode`\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":647,"author":{"gitId":"KeithPJX"},"content":"           Expected: All surveyees have their more detailed information shown. (Note: The mode of the list will change, this means that new `PersonCard` will be created in this showing more detailed information state)","lastModifiedDate":"2022-10-31"},{"lineNumber":648,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":649,"author":{"gitId":"KeithPJX"},"content":"        2. Test case: Click on the `Appearance` tab and select `Expanded Cards`\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":650,"author":{"gitId":"KeithPJX"},"content":"           Expected: All surveyees have their more detailed information shown. (Note: The mode of the list will change, this means that new `PersonCard` will be created in this showing more detailed information state)","lastModifiedDate":"2022-10-31"},{"lineNumber":651,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":652,"author":{"gitId":"KeithPJX"},"content":"2. Hiding more detailed information","lastModifiedDate":"2022-10-31"},{"lineNumber":653,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":654,"author":{"gitId":"KeithPJX"},"content":"    1. Omitted as it is similar to \u0027Showing more detailed information\u0027.","lastModifiedDate":"2022-10-31"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"NUSDG"},"content":"### Clone an existing surveyee","lastModifiedDate":"2022-11-06"},{"lineNumber":657,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":658,"author":{"gitId":"NUSDG"},"content":"1. Clone an existing surveyee while all surveyees are shown","lastModifiedDate":"2022-11-06"},{"lineNumber":659,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":660,"author":{"gitId":"NUSDG"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2022-11-06"},{"lineNumber":661,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":662,"author":{"gitId":"NUSDG"},"content":"    2. Test case: `clone 1 n/James Lee p/91234567 e/jameslee@example.com b/1990-10-22`\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":663,"author":{"gitId":"NUSDG"},"content":"       Expected 1: A new person with name James Lee, phone number 91234567, email jameslee@example.com and birthdate 1990-10-22 and other details same as the first person will be added to the end of the list.\u003cbr\u003e","lastModifiedDate":"2022-11-06"},{"lineNumber":664,"author":{"gitId":"NUSDG"},"content":"       Expected 2: Error shown if this person is already exist in the Survin.","lastModifiedDate":"2022-11-06"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":666,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"KeithPJX"},"content":"2. _{ more test cases …​ }_","lastModifiedDate":"2022-10-31"},{"lineNumber":673,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":674,"author":{"gitId":"KeithPJX"},"content":"## **Appendix: Effort**","lastModifiedDate":"2022-11-01"},{"lineNumber":675,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":676,"author":{"gitId":"KeithPJX"},"content":"### Challenges faced","lastModifiedDate":"2022-11-01"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":678,"author":{"gitId":"KeithPJX"},"content":"1. Finding out that the `updateItem()` method was the reason for the buggy implementation of the compacted and expanded PersonCard took some time. There was a need to read a lot of documentation to find the fix.","lastModifiedDate":"2022-11-01"},{"lineNumber":679,"author":{"gitId":"KeithPJX"},"content":"2. Finding out how to change the stylesheet took some time. AB3 did not seem to use `Scene` due to the use of `FXMLLoader` and I needed to get the scene to get the stylesheet. Took a few hours to find out that the `Stage` class had a `getScene()` method.","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"KeithPJX":203,"NUSDG":43,"ryanlml":70,"-":283,"deepimpactmir":80}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"ryanlml"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [Survin’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2022-11-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"ryanlml":1,"-":54}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"deepimpactmir"},"content":"Survin is a desktop application for surveyors to use to keep track of people they have surveyed. The surveyor can easily follow up with people they have surveyed for additional information or for confirmation. The user interacts with the application using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"deepimpactmir"},"content":"- Table of Contents","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"deepimpactmir"},"content":"---","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"2. Download the latest `Survin.jar` from [here](https://github.com/AY2223S1-CS2103-F13-2/tp).","lastModifiedDate":"2022-10-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for the app.","lastModifiedDate":"2022-10-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"deepimpactmir"},"content":"    - **`list`** : Lists all contacts.","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"    - **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 g/male b/1989-10-1 ra/White American re/Christian s/Environment Survey` : Adds a contact named `John Doe` to Survin.","lastModifiedDate":"2022-10-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"deepimpactmir"},"content":"    - **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"deepimpactmir"},"content":"    - **`clear`** : Deletes all contacts.","lastModifiedDate":"2022-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"deepimpactmir"},"content":"    - **`exit`** : Exits the app.","lastModifiedDate":"2022-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-10-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"deepimpactmir"},"content":"---","lastModifiedDate":"2022-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"deepimpactmir"},"content":"-   Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"deepimpactmir"},"content":"-   Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"deepimpactmir"},"content":"-   Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":54,"author":{"gitId":"deepimpactmir"},"content":"    e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2022-10-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"deepimpactmir"},"content":"-   Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"deepimpactmir"},"content":"-   If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"ryanlml"},"content":"-   Extraneous parameters for commands that do not take in parameters (such as `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":63,"author":{"gitId":"ryanlml"},"content":"    e.g. if the command specifies `list 123`, it will be interpreted as `list`.","lastModifiedDate":"2022-10-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"KeithPJX"},"content":"-   A person is uniquely characterised by their name, phone number and email. You cannot have 2 people with the same name, phone number, and email.","lastModifiedDate":"2022-11-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"ryanlml"},"content":"Format: `help [COMMAND_NAME]`","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"ryanlml"},"content":"-   Use `help [COMMAND_NAME]` to see more information about the command features and usages.","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"ryanlml"},"content":"-   There is a help window for each command in Survin.","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"ryanlml"},"content":"-   Using `help` without any parameters will prompt you to our [user guide](https://ay2223s1-cs2103-f13-2.github.io/tp/UserGuide.html).","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"deepimpactmir"},"content":"Adds a person to the app.","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"KeithPJX"},"content":"Format: `add n/NAME p/PHONE e/EMAIL a/ADDRESS g/GENDER b/BIRTHDATE ra/RACE re/RELIGION [s/SURVEY]… [t/TAG]…`","lastModifiedDate":"2022-10-30"},{"lineNumber":86,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"deepimpactmir"},"content":"-   Adds a surveyee with the all the descriptions listed.","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"deepimpactmir"},"content":"-   All descriptors have to be specified and follow their own specified format.","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"deepimpactmir"},"content":"A person can have any number of surveys and tags (including 0)","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":96,"author":{"gitId":"KeithPJX"},"content":"-   `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 g/male b/1989-10-1 ra/White American re/Christian s/Environment Survey` Adds a person with the descriptions as stated.","lastModifiedDate":"2022-10-02"},{"lineNumber":97,"author":{"gitId":"KeithPJX"},"content":"-   `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal g/female b/1991-11-31 ra/Chinese re/Buddhist`","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"deepimpactmir"},"content":"Shows a list of all persons in the app.","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"deepimpactmir"},"content":"Edits an existing person in Survin.","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"deepimpactmir"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [g/GENDER] [b/BIRTHDATE] [ra/RACE] [re/RELIGION] [s/SURVEY]… [t/TAG]…`","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"deepimpactmir"},"content":"-   Edits the surveyee at the specified INDEX. The index refers to the index number of the surveyee you wish to edit, as shown in the display list. The index must be a **positive integer**.","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"KeithPJX"},"content":"-   At least one of the optional fields has to be provided. (E.g. Phone or Email)","lastModifiedDate":"2022-10-31"},{"lineNumber":113,"author":{"gitId":"deepimpactmir"},"content":"-   Existing value in specified field will be updated to the new value.","lastModifiedDate":"2022-10-27"},{"lineNumber":114,"author":{"gitId":"KeithPJX"},"content":"-   When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2022-10-02"},{"lineNumber":115,"author":{"gitId":"deepimpactmir"},"content":"-   You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2022-10-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":120,"author":{"gitId":"deepimpactmir"},"content":"-   `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2022-10-01"},{"lineNumber":121,"author":{"gitId":"deepimpactmir"},"content":"-   `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2022-10-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"deepimpactmir"},"content":"Delete an existing person in Survin by index or delete all persons satisfying the specified attributes.","lastModifiedDate":"2022-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"deepimpactmir"},"content":"Format: `delete INDEX` OR `delete [ra/RACE] [re/RELIGION] [s/NAME OF SURVEY]`","lastModifiedDate":"2022-10-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":129,"author":{"gitId":"deepimpactmir"},"content":"-   Delete surveyee(s) satisfying the conditions specified. (the conditions cannot be all empty)","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"deepimpactmir"},"content":"-   The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2022-10-01"},{"lineNumber":131,"author":{"gitId":"deepimpactmir"},"content":"-   The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2022-10-01"},{"lineNumber":132,"author":{"gitId":"deepimpactmir"},"content":"-   Fields must be non-empty if deleting by attributes","lastModifiedDate":"2022-10-01"},{"lineNumber":133,"author":{"gitId":"deepimpactmir"},"content":"-   Note that deleting using `s/NAME OF SURVEY` only deletes a person if he/she only has that one survey.","lastModifiedDate":"2022-10-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":135,"author":{"gitId":"deepimpactmir"},"content":"Example:","lastModifiedDate":"2022-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"deepimpactmir"},"content":"-   `list` followed by `delete 2` deletes the 2nd person in the app.","lastModifiedDate":"2022-10-01"},{"lineNumber":138,"author":{"gitId":"ryanlml"},"content":"-   `view n/Betsy` followed by `delete 1` deletes the 1st person in the results of the `view` command.","lastModifiedDate":"2022-10-30"},{"lineNumber":139,"author":{"gitId":"deepimpactmir"},"content":"-   `delete ra/Chinese re/Christian` Deletes all surveyees that are Chinese and Christian.","lastModifiedDate":"2022-10-31"},{"lineNumber":140,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":141,"author":{"gitId":"NUSDG"},"content":"### Clone a person : `clone`","lastModifiedDate":"2022-10-14"},{"lineNumber":142,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":143,"author":{"gitId":"deepimpactmir"},"content":"Creates a new person with updated details based on an existing person in Survin, the new person created will be added to end of existing app.","lastModifiedDate":"2022-10-27"},{"lineNumber":144,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":145,"author":{"gitId":"NUSDG"},"content":"Format: `clone INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [g/GENDER] [b/BIRTHDATE] [ra/RACE] [re/RELIGION] [s/SURVEY] [t/TAG]…`","lastModifiedDate":"2022-10-20"},{"lineNumber":146,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":147,"author":{"gitId":"NUSDG"},"content":"-   Clones the surveyee at the specified INDEX. The index refers to the index number of the surveyee you wish to clone, as shown in the display list. The index must be a **positive integer**.","lastModifiedDate":"2022-10-20"},{"lineNumber":148,"author":{"gitId":"NUSDG"},"content":"-   At least one of the unique optional fields (Name, Phone or Email) has to be provided.","lastModifiedDate":"2022-10-31"},{"lineNumber":149,"author":{"gitId":"ryanlml"},"content":"-   A new person with updated values in specified field will be added to Survin.","lastModifiedDate":"2022-11-04"},{"lineNumber":150,"author":{"gitId":"NUSDG"},"content":"-   When updating tags or surveys, the existing tags or surveys of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2022-10-20"},{"lineNumber":151,"author":{"gitId":"NUSDG"},"content":"-   You can remove all the person’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2022-10-20"},{"lineNumber":152,"author":{"gitId":"NUSDG"},"content":"-   You can remove all the person’s surveys by typing `s/` without specifying any surveys after it.","lastModifiedDate":"2022-10-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-10-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":156,"author":{"gitId":"NUSDG"},"content":"-   `clone 1 p/91234567 e/johndoe@example.com` Add a new person with all details of the 1st person except the phone number and email will be updated to `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2022-10-20"},{"lineNumber":157,"author":{"gitId":"NUSDG"},"content":"-   `clone 2 n/Betsy Crower t/` Add a new person with all details of the 2nd person except the name will be updated to `Betsy Crower` and all tags are removed.","lastModifiedDate":"2022-10-20"},{"lineNumber":158,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":159,"author":{"gitId":"deepimpactmir"},"content":"### Viewing a person : `view`","lastModifiedDate":"2022-10-01"},{"lineNumber":160,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":161,"author":{"gitId":"deepimpactmir"},"content":"Views the attributes of all surveyees with some specified attributes.","lastModifiedDate":"2022-10-01"},{"lineNumber":162,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":163,"author":{"gitId":"deepimpactmir"},"content":"Format: `[n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [g/GENDER] [b/BIRTHDATE] [ra/RACE] [re/RELIGION] [s/NAME OF SURVEY]`","lastModifiedDate":"2022-10-01"},{"lineNumber":164,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":165,"author":{"gitId":"ryanlml"},"content":"-   The search is case-insensitive.","lastModifiedDate":"2022-11-04"},{"lineNumber":166,"author":{"gitId":"ryanlml"},"content":"    -   `alex` will match `Alex`","lastModifiedDate":"2022-11-04"},{"lineNumber":167,"author":{"gitId":"ryanlml"},"content":"-   For all fields except `email` and `birthdate`, only full words are matched.","lastModifiedDate":"2022-11-04"},{"lineNumber":168,"author":{"gitId":"ryanlml"},"content":"    -   In the `name` field, `Ale` will not match `Alex`","lastModifiedDate":"2022-11-04"},{"lineNumber":169,"author":{"gitId":"ryanlml"},"content":"-   For the `email` and `birthdate` field, only substrings are matched.","lastModifiedDate":"2022-11-04"},{"lineNumber":170,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":171,"author":{"gitId":"ryanlml"},"content":"    -   In the `email` field, `google` will match `alextan@google.com`.","lastModifiedDate":"2022-11-04"},{"lineNumber":172,"author":{"gitId":"ryanlml"},"content":"    -   In the `birthdate` field, `10` will match any of the following","lastModifiedDate":"2022-11-04"},{"lineNumber":173,"author":{"gitId":"ryanlml"},"content":"        -   `2010-12-25`, 25th December 2010.","lastModifiedDate":"2022-11-04"},{"lineNumber":174,"author":{"gitId":"ryanlml"},"content":"        -   `2022-10-03`, 3rd October 2022.","lastModifiedDate":"2022-11-04"},{"lineNumber":175,"author":{"gitId":"ryanlml"},"content":"        -   `2022-03-10`, 10th March 2022.","lastModifiedDate":"2022-11-04"},{"lineNumber":176,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":177,"author":{"gitId":"ryanlml"},"content":"-   If no quotation marks are used, the order of the keywords does not matter.","lastModifiedDate":"2022-11-04"},{"lineNumber":178,"author":{"gitId":"ryanlml"},"content":"    -   `Alex Tan` will match `Tan Alex`","lastModifiedDate":"2022-11-04"},{"lineNumber":179,"author":{"gitId":"ryanlml"},"content":"-   If a pair of quotation marks are used, `view` matches exact phrases (not substrings) and order matters","lastModifiedDate":"2022-11-04"},{"lineNumber":180,"author":{"gitId":"ryanlml"},"content":"    -   `\"Alex T\"` will not match `Alex Tan`","lastModifiedDate":"2022-11-04"},{"lineNumber":181,"author":{"gitId":"ryanlml"},"content":"    -   `\"Alex Tan\"` will not match `Tan Alex`","lastModifiedDate":"2022-11-04"},{"lineNumber":182,"author":{"gitId":"ryanlml"},"content":"-   If multiple words are used, `view` matches any of the words or phrases specified.","lastModifiedDate":"2022-11-04"},{"lineNumber":183,"author":{"gitId":"ryanlml"},"content":"    -   `view n/Jane Doe \"Alex Tan\"` lists all persons whose names contain any of the following: `Jane`, `Doe` or `Alex Tan`.","lastModifiedDate":"2022-11-04"},{"lineNumber":184,"author":{"gitId":"ryanlml"},"content":"    -   `view n/Jane Doe Alex Tan` lists all persons whose names contain any of the following: `Jane`, `Doe`, `Alex`, or `Tan`.","lastModifiedDate":"2022-11-04"},{"lineNumber":185,"author":{"gitId":"ryanlml"},"content":"-   If an odd number of quotation marks `\"` is used, then its last occurrence is ignored.","lastModifiedDate":"2022-11-04"},{"lineNumber":186,"author":{"gitId":"ryanlml"},"content":"    -   `view n/\"Jane Doe\" Alex Tan\"` is equivalent to `view n/\"Jane Doe\" Alex Tan`","lastModifiedDate":"2022-11-04"},{"lineNumber":187,"author":{"gitId":"ryanlml"},"content":"-   When using `view` on an attribute with multiple objects (e.g. `Survey` or `Tag`), `view` performs the search on each survey and tag.","lastModifiedDate":"2022-10-29"},{"lineNumber":188,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":189,"author":{"gitId":"ryanlml"},"content":"    -   Views surveyees who have a survey that contains the word `airport`","lastModifiedDate":"2022-11-04"},{"lineNumber":190,"author":{"gitId":"ryanlml"},"content":"        ```","lastModifiedDate":"2022-11-04"},{"lineNumber":191,"author":{"gitId":"ryanlml"},"content":"        view s/airport","lastModifiedDate":"2022-11-04"},{"lineNumber":192,"author":{"gitId":"ryanlml"},"content":"        \u003e 2 persons listed!","lastModifiedDate":"2022-11-04"},{"lineNumber":193,"author":{"gitId":"ryanlml"},"content":"        \u003e Jane Doe ... [Changi Airport Survey][Food Survey]","lastModifiedDate":"2022-11-04"},{"lineNumber":194,"author":{"gitId":"ryanlml"},"content":"        \u003e Jenette Doe ... [Seletar Airport Survey][Academic Survey]","lastModifiedDate":"2022-11-04"},{"lineNumber":195,"author":{"gitId":"ryanlml"},"content":"        ```","lastModifiedDate":"2022-11-04"},{"lineNumber":196,"author":{"gitId":"ryanlml"},"content":"    -   View surveyees who have a survey that contains the word `changi` or `airport`.","lastModifiedDate":"2022-11-04"},{"lineNumber":197,"author":{"gitId":"ryanlml"},"content":"        ```","lastModifiedDate":"2022-11-04"},{"lineNumber":198,"author":{"gitId":"ryanlml"},"content":"        view s/Changi Airport","lastModifiedDate":"2022-11-04"},{"lineNumber":199,"author":{"gitId":"ryanlml"},"content":"        \u003e 2 persons listed!","lastModifiedDate":"2022-11-04"},{"lineNumber":200,"author":{"gitId":"ryanlml"},"content":"        \u003e Jane Doe ... [Changi Airport Survey][Food Survey]","lastModifiedDate":"2022-11-04"},{"lineNumber":201,"author":{"gitId":"ryanlml"},"content":"        \u003e Jenette Doe ... [Seletar Airport Survey][Academic Survey]","lastModifiedDate":"2022-11-04"},{"lineNumber":202,"author":{"gitId":"ryanlml"},"content":"        ```","lastModifiedDate":"2022-11-04"},{"lineNumber":203,"author":{"gitId":"ryanlml"},"content":"    -   View surveyees who have a survey that contains the phrase `changi airport`.","lastModifiedDate":"2022-11-04"},{"lineNumber":204,"author":{"gitId":"ryanlml"},"content":"        ```","lastModifiedDate":"2022-11-04"},{"lineNumber":205,"author":{"gitId":"ryanlml"},"content":"        view s/\"Changi Airport\"","lastModifiedDate":"2022-11-04"},{"lineNumber":206,"author":{"gitId":"ryanlml"},"content":"        \u003e 1 person listed!","lastModifiedDate":"2022-11-04"},{"lineNumber":207,"author":{"gitId":"ryanlml"},"content":"        \u003e Jane Doe ... [Changi Airport Survey][Food Survey]","lastModifiedDate":"2022-11-04"},{"lineNumber":208,"author":{"gitId":"ryanlml"},"content":"        ```","lastModifiedDate":"2022-11-04"},{"lineNumber":209,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":210,"author":{"gitId":"ryanlml"},"content":"-   Only the last prefix instance is parsed.","lastModifiedDate":"2022-11-04"},{"lineNumber":211,"author":{"gitId":"ryanlml"},"content":"    -   `view ra/chinese ra/malay g/male g/female` lists female malay persons, ignores `ra/chinese` and `g/male`.","lastModifiedDate":"2022-11-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":213,"author":{"gitId":"deepimpactmir"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-10-01"},{"lineNumber":214,"author":{"gitId":"ryanlml"},"content":"Fields that are specified must have a non-empty value! The following is a non-exhaustive list of invalid examples.\u003cbr /\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":215,"author":{"gitId":"ryanlml"},"content":"- Only empty spaces `view n/                `\u003cbr /\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":216,"author":{"gitId":"ryanlml"},"content":"- Only empty spaces in quotations `view n/\"          \"`\u003cbr /\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":217,"author":{"gitId":"ryanlml"},"content":"- Empty string `view n/` or `view n/\"\"`\u003cbr /\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":218,"author":{"gitId":"ryanlml"},"content":"- Any combination of the above and its variants `view n/       \"       \"          `","lastModifiedDate":"2022-11-04"},{"lineNumber":219,"author":{"gitId":"ryanlml"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":221,"author":{"gitId":"deepimpactmir"},"content":"Examples:","lastModifiedDate":"2022-10-01"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":223,"author":{"gitId":"deepimpactmir"},"content":"```","lastModifiedDate":"2022-10-01"},{"lineNumber":224,"author":{"gitId":"deepimpactmir"},"content":"view g/female ra/chinese re/christian","lastModifiedDate":"2022-10-01"},{"lineNumber":225,"author":{"gitId":"ryanlml"},"content":"\u003e 2 persons listed!","lastModifiedDate":"2022-10-24"},{"lineNumber":226,"author":{"gitId":"ryanlml"},"content":"\u003e Jane Doe 91234567 jane_doe@example.com, …","lastModifiedDate":"2022-10-24"},{"lineNumber":227,"author":{"gitId":"ryanlml"},"content":"\u003e Jenette Doe 81234567 jenette_doe@example.com, …","lastModifiedDate":"2022-10-24"},{"lineNumber":228,"author":{"gitId":"KeithPJX"},"content":"```","lastModifiedDate":"2022-10-01"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"KeithPJX"},"content":"### Append to a person: `append`","lastModifiedDate":"2022-10-27"},{"lineNumber":231,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":232,"author":{"gitId":"KeithPJX"},"content":"Append surveys or tags to the person identified by the index number in the command.","lastModifiedDate":"2022-10-27"},{"lineNumber":233,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":234,"author":{"gitId":"KeithPJX"},"content":"Format: `INDEX [s/SURVEYS]... [t/TAGS]...`","lastModifiedDate":"2022-10-27"},{"lineNumber":235,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":236,"author":{"gitId":"KeithPJX"},"content":"-   Person should not already have any of the surveys or tags that you are appending.","lastModifiedDate":"2022-10-30"},{"lineNumber":237,"author":{"gitId":"KeithPJX"},"content":"-   The append command is case-sensitive. e.g. you can append both `Food Survey` and `food survey`.","lastModifiedDate":"2022-10-30"},{"lineNumber":238,"author":{"gitId":"KeithPJX"},"content":"-   At least one of the optional fields has to be provided. (Survey or Tag)","lastModifiedDate":"2022-10-31"},{"lineNumber":239,"author":{"gitId":"KeithPJX"},"content":"-   Able to append multiple surveys and tags in a single command.","lastModifiedDate":"2022-10-27"},{"lineNumber":240,"author":{"gitId":"KeithPJX"},"content":"-   Fields must be non-empty.","lastModifiedDate":"2022-10-27"},{"lineNumber":241,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":242,"author":{"gitId":"KeithPJX"},"content":"Example: `append 1 s/Food Survey s/Environment Survey t/friend t/student`","lastModifiedDate":"2022-10-27"},{"lineNumber":243,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":244,"author":{"gitId":"KeithPJX"},"content":"### Unappend from a person: `unappend`","lastModifiedDate":"2022-10-27"},{"lineNumber":245,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":246,"author":{"gitId":"KeithPJX"},"content":"Unappend surveys or tags from the person identified by the index number in the command.","lastModifiedDate":"2022-10-27"},{"lineNumber":247,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":248,"author":{"gitId":"KeithPJX"},"content":"Format: `INDEX [s/SURVEYS]... [t/TAGS]...`","lastModifiedDate":"2022-10-27"},{"lineNumber":249,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":250,"author":{"gitId":"KeithPJX"},"content":"-   The unappend command is case-sensitive. e.g. you can only unappend `Food Survey` by typing `Food Survey` and not `food survey`.","lastModifiedDate":"2022-10-30"},{"lineNumber":251,"author":{"gitId":"KeithPJX"},"content":"-   At least one of the optional fields has to be provided. (Survey or Tag)","lastModifiedDate":"2022-10-31"},{"lineNumber":252,"author":{"gitId":"KeithPJX"},"content":"-   Able to unappend multiple surveys and tags in a single command.","lastModifiedDate":"2022-10-27"},{"lineNumber":253,"author":{"gitId":"KeithPJX"},"content":"-   Fields must be non-empty.","lastModifiedDate":"2022-10-27"},{"lineNumber":254,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":255,"author":{"gitId":"KeithPJX"},"content":"Example: `unappend 1 s/Food Survey s/Environment Survey t/friend t/student`","lastModifiedDate":"2022-10-27"},{"lineNumber":256,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":257,"author":{"gitId":"KeithPJX"},"content":"### Change theme : `theme`","lastModifiedDate":"2022-10-25"},{"lineNumber":258,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":259,"author":{"gitId":"KeithPJX"},"content":"Changes the theme of the app. Only \"light\" or \"dark\".","lastModifiedDate":"2022-10-25"},{"lineNumber":260,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":261,"author":{"gitId":"KeithPJX"},"content":"Format: `THEME (\"light\" or \"dark\")`","lastModifiedDate":"2022-10-25"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":263,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-10-25"},{"lineNumber":264,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":265,"author":{"gitId":"KeithPJX"},"content":"-   `theme light`","lastModifiedDate":"2022-10-25"},{"lineNumber":266,"author":{"gitId":"KeithPJX"},"content":"-   `theme dark`","lastModifiedDate":"2022-10-25"},{"lineNumber":267,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":268,"author":{"gitId":"KeithPJX"},"content":"### Toggle mode of list : `toggle-list-mode`","lastModifiedDate":"2022-10-25"},{"lineNumber":269,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":270,"author":{"gitId":"KeithPJX"},"content":"Toggle the mode of the list between a compacted or an expanded mode.","lastModifiedDate":"2022-10-25"},{"lineNumber":271,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":272,"author":{"gitId":"KeithPJX"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** You can toggle the modes of individual elements in the list by clicking on them.","lastModifiedDate":"2022-10-28"},{"lineNumber":273,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":274,"author":{"gitId":"KeithPJX"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":275,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":276,"author":{"gitId":"KeithPJX"},"content":"Expanded Mode:\u003cbr\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":277,"author":{"gitId":"KeithPJX"},"content":"![ExpandedMode](images/ExpandedMode.png)","lastModifiedDate":"2022-10-25"},{"lineNumber":278,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":279,"author":{"gitId":"KeithPJX"},"content":"Compacted Mode:\u003cbr\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":280,"author":{"gitId":"KeithPJX"},"content":"![CompactedMode](images/CompactedMode.png)","lastModifiedDate":"2022-10-25"},{"lineNumber":281,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":282,"author":{"gitId":"KeithPJX"},"content":"Format: `toggle-list-mode`","lastModifiedDate":"2022-10-25"},{"lineNumber":283,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":284,"author":{"gitId":"deepimpactmir"},"content":"### Mark or unmark a survey as done or not done: `mark/unmark`","lastModifiedDate":"2022-10-27"},{"lineNumber":285,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":286,"author":{"gitId":"KeithPJX"},"content":"Changes the status of the survey to done or not done. More specifically, mark changes the status of the specified survey to done while unmark changes the status of the specified survey to not done. Note that the name of the survey is case-sensitive.","lastModifiedDate":"2022-11-03"},{"lineNumber":287,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":288,"author":{"gitId":"deepimpactmir"},"content":"Format: `mark INDEX s/NAME OF SURVEY`, `unmark INDEX s/NAME OF SURVEY`","lastModifiedDate":"2022-10-27"},{"lineNumber":289,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":290,"author":{"gitId":"deepimpactmir"},"content":"Example: `mark 1 s/Shopping survey`, `unmark 3 s/Environmental survey`","lastModifiedDate":"2022-10-27"},{"lineNumber":291,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":292,"author":{"gitId":"NUSDG"},"content":"### Shortcut keys","lastModifiedDate":"2022-10-26"},{"lineNumber":293,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":294,"author":{"gitId":"NUSDG"},"content":"These shortcut keys will add texts to the command box, this helps the users to enter the commands faster.","lastModifiedDate":"2022-10-26"},{"lineNumber":295,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":296,"author":{"gitId":"NUSDG"},"content":"-   `CTRL + N` adds `add n/ p/ e/ a/ g/ b/ ra/ re/ s/ t/` to the command box.","lastModifiedDate":"2022-10-26"},{"lineNumber":297,"author":{"gitId":"NUSDG"},"content":"-   `CTRL + E` adds `edit` to the command box.","lastModifiedDate":"2022-10-26"},{"lineNumber":298,"author":{"gitId":"NUSDG"},"content":"-   `CTRL + D` adds `delete` to the command box.","lastModifiedDate":"2022-10-26"},{"lineNumber":299,"author":{"gitId":"NUSDG"},"content":"-   `CTRL + M` adds `mark` to the command box.","lastModifiedDate":"2022-10-26"},{"lineNumber":300,"author":{"gitId":"NUSDG"},"content":"-   `CTRL + U` adds `unmark` to the command box.","lastModifiedDate":"2022-10-26"},{"lineNumber":301,"author":{"gitId":"NUSDG"},"content":"-   `CTRL + Z` adds `undo` to the command box.","lastModifiedDate":"2022-10-26"},{"lineNumber":302,"author":{"gitId":"NUSDG"},"content":"-   `CTRL + L` adds `clone` to the command box.","lastModifiedDate":"2022-10-26"},{"lineNumber":303,"author":{"gitId":"NUSDG"},"content":"-   `CTRL + I` adds `view` to the command box.","lastModifiedDate":"2022-10-26"},{"lineNumber":304,"author":{"gitId":"NUSDG"},"content":"-   `CTRL + R` clears all texts in the command box.","lastModifiedDate":"2022-10-26"},{"lineNumber":305,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":306,"author":{"gitId":"deepimpactmir"},"content":"### Undo command","lastModifiedDate":"2022-10-30"},{"lineNumber":307,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":308,"author":{"gitId":"deepimpactmir"},"content":"Undoes commands that are undoable.","lastModifiedDate":"2022-10-30"},{"lineNumber":309,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":310,"author":{"gitId":"deepimpactmir"},"content":"Format: `undo`","lastModifiedDate":"2022-10-30"},{"lineNumber":311,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":312,"author":{"gitId":"deepimpactmir"},"content":"Example: `undo`","lastModifiedDate":"2022-10-30"},{"lineNumber":313,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":314,"author":{"gitId":"deepimpactmir"},"content":"| Commands        | Undoable?          |","lastModifiedDate":"2022-11-06"},{"lineNumber":315,"author":{"gitId":"deepimpactmir"},"content":"| --------------- | ------------------ |","lastModifiedDate":"2022-11-06"},{"lineNumber":316,"author":{"gitId":"deepimpactmir"},"content":"| Add             | :heavy_check_mark: |","lastModifiedDate":"2022-11-06"},{"lineNumber":317,"author":{"gitId":"deepimpactmir"},"content":"| Append/Unappend | :heavy_check_mark: |","lastModifiedDate":"2022-11-06"},{"lineNumber":318,"author":{"gitId":"deepimpactmir"},"content":"| Clone           | :heavy_check_mark: |","lastModifiedDate":"2022-11-06"},{"lineNumber":319,"author":{"gitId":"deepimpactmir"},"content":"| Delete          | :heavy_check_mark: |","lastModifiedDate":"2022-11-06"},{"lineNumber":320,"author":{"gitId":"deepimpactmir"},"content":"| Edit            | :heavy_check_mark: |","lastModifiedDate":"2022-11-06"},{"lineNumber":321,"author":{"gitId":"deepimpactmir"},"content":"| Mark/Unmark     | :heavy_check_mark: |","lastModifiedDate":"2022-11-06"},{"lineNumber":322,"author":{"gitId":"deepimpactmir"},"content":"| Clear           | :x:                |","lastModifiedDate":"2022-11-06"},{"lineNumber":323,"author":{"gitId":"deepimpactmir"},"content":"| View            | :x:                |","lastModifiedDate":"2022-11-06"},{"lineNumber":324,"author":{"gitId":"deepimpactmir"},"content":"| Exit            | :x:                |","lastModifiedDate":"2022-11-06"},{"lineNumber":325,"author":{"gitId":"deepimpactmir"},"content":"| List            | :x:                |","lastModifiedDate":"2022-11-06"},{"lineNumber":326,"author":{"gitId":"deepimpactmir"},"content":"| Help            | :x:                |","lastModifiedDate":"2022-11-06"},{"lineNumber":327,"author":{"gitId":"deepimpactmir"},"content":"| Theme           | :x:                |","lastModifiedDate":"2022-11-06"},{"lineNumber":328,"author":{"gitId":"deepimpactmir"},"content":"| ToggleList      | :x:                |","lastModifiedDate":"2022-11-06"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":330,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"deepimpactmir"},"content":"Clears all entries from the app.","lastModifiedDate":"2022-10-27"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"deepimpactmir"},"content":"Survin are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-10-27"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":348,"author":{"gitId":"deepimpactmir"},"content":"Survin data are saved as a JSON file `[JAR file location]/data/survin.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-10-27"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":350,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":351,"author":{"gitId":"deepimpactmir"},"content":"If your changes to the data file makes its format invalid, Survin will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-10-27"},{"lineNumber":352,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":354,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"deepimpactmir"},"content":"---","lastModifiedDate":"2022-10-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"deepimpactmir"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Survin home folder.","lastModifiedDate":"2022-10-27"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"deepimpactmir"},"content":"**Q**: What is a unique person?","lastModifiedDate":"2022-11-06"},{"lineNumber":366,"author":{"gitId":"deepimpactmir"},"content":"**A**: A person is uniquely characterised by their name, phone number and email. You cannot have 2 people with the same name, phone number, and email.","lastModifiedDate":"2022-11-06"},{"lineNumber":367,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-06"},{"lineNumber":368,"author":{"gitId":"deepimpactmir"},"content":"---","lastModifiedDate":"2022-10-01"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"deepimpactmir"},"content":"| Action                  | Format, Examples                                                                                                                                                                                                                                                                  |","lastModifiedDate":"2022-10-01"},{"lineNumber":373,"author":{"gitId":"deepimpactmir"},"content":"| ----------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2022-11-06"},{"lineNumber":374,"author":{"gitId":"ryanlml"},"content":"| **Add**                 | `n/NAME p/PHONE e/EMAIL a/ADDRESS g/GENDER b/BIRTHDATE ra/RACE re/RELIGION [s/SURVEY]... [t/TAG]...` \u003cbr\u003e e.g., `add n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 g/male b/1998-11-28 ra/Chinese re/Christian s/Shopping survey t/friends t/owesMoney` |","lastModifiedDate":"2022-10-29"},{"lineNumber":375,"author":{"gitId":"deepimpactmir"},"content":"| **Clear**               | `clear`                                                                                                                                                                                                                                                                           |","lastModifiedDate":"2022-10-01"},{"lineNumber":376,"author":{"gitId":"deepimpactmir"},"content":"| **Delete**              | `delete INDEX`\u003cbr\u003e e.g. `delete 3`                                                                                                                                                                                                                                                |","lastModifiedDate":"2022-10-27"},{"lineNumber":377,"author":{"gitId":"deepimpactmir"},"content":"| **Delete by attribute** | `delete [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [g/GENDER] [b/BIRTHDATE] [ra/RACE] [re/RELIGION] [s/NAME OF SURVEY]`\u003cbr\u003e e.g. `delete ra/Chinese`                                                                                                                                |","lastModifiedDate":"2022-10-27"},{"lineNumber":378,"author":{"gitId":"deepimpactmir"},"content":"| **Edit**                | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                                                                                                                                         |","lastModifiedDate":"2022-10-01"},{"lineNumber":379,"author":{"gitId":"ryanlml"},"content":"| **Exit**                | `exit`                                                                                                                                                                                                                                                                            |","lastModifiedDate":"2022-10-30"},{"lineNumber":380,"author":{"gitId":"ryanlml"},"content":"| **View**                | `view n/NAME p/PHONE e/EMAIL a/ADDRESS g/GENDER b/BIRTHDATE ra/RACE re/RELIGION s/SURVEY `\u003cbr\u003e e.g., `view g/female ra/chinese re/christian`                                                                                                                                      |","lastModifiedDate":"2022-10-29"},{"lineNumber":381,"author":{"gitId":"ryanlml"},"content":"| **Undo**                | `undo`                                                                                                                                                                                                                                                                            |","lastModifiedDate":"2022-10-30"},{"lineNumber":382,"author":{"gitId":"ryanlml"},"content":"| **Theme**               | `theme`                                                                                                                                                                                                                                                                           |","lastModifiedDate":"2022-10-30"},{"lineNumber":383,"author":{"gitId":"ryanlml"},"content":"| **Mark**                | `mark INDEX [s/NAME OF SURVEY]`\u003cbr\u003e e.g., `mark 1 s/Shopping Survey`                                                                                                                                                                                                              |","lastModifiedDate":"2022-10-30"},{"lineNumber":384,"author":{"gitId":"ryanlml"},"content":"| **Unmark**              | `unmark INDEX [s/NAME OF SURVEY]`\u003cbr\u003e e.g., `unmark 1 s/Shopping Survey`                                                                                                                                                                                                          |","lastModifiedDate":"2022-10-30"},{"lineNumber":385,"author":{"gitId":"ryanlml"},"content":"| **Append**              | `append INDEX [s/SURVEY]... [t/TAG]...`\u003cbr\u003e e.g., `append 1 s/Food Survey s/Environment Survey t/friend t/student`                                                                                                                                                                |","lastModifiedDate":"2022-10-30"},{"lineNumber":386,"author":{"gitId":"ryanlml"},"content":"| **Unappend**            | `unappend INDEX [s/SURVEY]... [t/TAG]...`\u003cbr\u003e e.g., `unappend 1 s/Food Survey s/Environment Survey t/friend t/student`                                                                                                                                                            |","lastModifiedDate":"2022-10-30"},{"lineNumber":387,"author":{"gitId":"ryanlml"},"content":"| **Toggle list mode**    | `toggle-list-mode`                                                                                                                                                                                                                                                                |","lastModifiedDate":"2022-10-30"},{"lineNumber":388,"author":{"gitId":"NUSDG"},"content":"| **Clone**               | `clone INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL]` \u003cbr\u003e e.g., `clone 1 n/James Lee p/91234567 e/jameslee@example.com`                                                                                                                                                              |","lastModifiedDate":"2022-10-24"},{"lineNumber":389,"author":{"gitId":"deepimpactmir"},"content":"| **List**                | `list`                                                                                                                                                                                                                                                                            |","lastModifiedDate":"2022-10-01"},{"lineNumber":390,"author":{"gitId":"ryanlml"},"content":"| **Help**                | `help` and `help [NAME_OF_COMMAND]`                                                                                                                                                                                                                                               |","lastModifiedDate":"2022-10-30"},{"lineNumber":391,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":392,"author":{"gitId":"KeithPJX"},"content":"## Parameters format","lastModifiedDate":"2022-10-30"},{"lineNumber":393,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":394,"author":{"gitId":"KeithPJX"},"content":"**NAME**: Names should only contain alphanumeric characters and spaces, and it should not be blank.","lastModifiedDate":"2022-10-30"},{"lineNumber":395,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":396,"author":{"gitId":"KeithPJX"},"content":"**PHONE**: Phone numbers should only contain numbers, and it should be at least 3 digits long.","lastModifiedDate":"2022-10-30"},{"lineNumber":397,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":398,"author":{"gitId":"KeithPJX"},"content":"**EMAIL**: Emails should be of the format local-part@domain and adhere to the following constraints:","lastModifiedDate":"2022-10-30"},{"lineNumber":399,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":400,"author":{"gitId":"deepimpactmir"},"content":"1. The local-part should only contain alphanumeric characters and these special characters, excluding the parentheses, (+\\_.-). The local-part may not start or end with any special characters.","lastModifiedDate":"2022-11-06"},{"lineNumber":401,"author":{"gitId":"KeithPJX"},"content":"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels separated by periods.","lastModifiedDate":"2022-10-30"},{"lineNumber":402,"author":{"gitId":"KeithPJX"},"content":"3. The domain name must:","lastModifiedDate":"2022-10-30"},{"lineNumber":403,"author":{"gitId":"KeithPJX"},"content":"    - end with a domain label at least 2 characters long","lastModifiedDate":"2022-10-30"},{"lineNumber":404,"author":{"gitId":"KeithPJX"},"content":"    - have each domain label start and end with alphanumeric characters","lastModifiedDate":"2022-10-30"},{"lineNumber":405,"author":{"gitId":"KeithPJX"},"content":"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.","lastModifiedDate":"2022-10-30"},{"lineNumber":406,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":407,"author":{"gitId":"KeithPJX"},"content":"**ADDRESS**: Addresses can take any values, and it should not be blank.","lastModifiedDate":"2022-10-30"},{"lineNumber":408,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":409,"author":{"gitId":"KeithPJX"},"content":"**GENDER**: Gender should only be \u0027male\u0027, \u0027female\u0027, or \u0027others\u0027, and it should not be blank.","lastModifiedDate":"2022-10-30"},{"lineNumber":410,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":411,"author":{"gitId":"KeithPJX"},"content":"**BIRTHDATE**: Birthdate should be in the format of yyyy-mm-dd, it should be a valid date, and it should not be blank. Birthdate should also not be in the future.","lastModifiedDate":"2022-10-30"},{"lineNumber":412,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":413,"author":{"gitId":"KeithPJX"},"content":"**RACE**: Race should only contain alphabetical characters and spaces, and it should not be blank.","lastModifiedDate":"2022-10-30"},{"lineNumber":414,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":415,"author":{"gitId":"KeithPJX"},"content":"**RELIGION**: Religion should only contain alphabetical characters and spaces, and it should not be blank.","lastModifiedDate":"2022-10-30"},{"lineNumber":416,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":417,"author":{"gitId":"KeithPJX"},"content":"**SURVEY**: Survey should only contain alphanumeric characters and spaces, and it should not be blank.","lastModifiedDate":"2022-10-30"},{"lineNumber":418,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":419,"author":{"gitId":"KeithPJX"},"content":"**TAG**: Tags names should be alphanumeric.","lastModifiedDate":"2022-10-30"}],"authorContributionMap":{"KeithPJX":91,"NUSDG":25,"ryanlml":73,"-":124,"deepimpactmir":106}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"ryanlml"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveSurvin(survin)","lastModifiedDate":"2022-11-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ryanlml":1,"-":37}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"ryanlml"},"content":"Survin *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2022-11-04"},{"lineNumber":8,"author":{"gitId":"ryanlml"},"content":"Survin *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ryanlml":2,"-":19}},{"path":"docs/diagrams/CloneSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NUSDG"},"content":"@startuml","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"NUSDG"},"content":"!include style.puml","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"NUSDG"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"NUSDG"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"ryanlml"},"content":"participant \":SurvinParser\" as SurvinParser LOGIC_COLOR","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"NUSDG"},"content":"participant \":CloneCommandParser\" as CloneCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"NUSDG"},"content":"participant \"c:CloneCommand\" as CloneCommand LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"NUSDG"},"content":"participant \"n:Person\" as Person LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"NUSDG"},"content":"participant \"d:ClonePersonDescriptor\" as ClonePersonDescriptor LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"NUSDG"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"NUSDG"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"NUSDG"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"NUSDG"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"NUSDG"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"NUSDG"},"content":"[-\u003e LogicManager : execute(\"clone 1 n/Tom\")","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"NUSDG"},"content":"activate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"ryanlml"},"content":"LogicManager -\u003e SurvinParser : parseCommand(\"clone 1 n/Tom\")","lastModifiedDate":"2022-11-04"},{"lineNumber":22,"author":{"gitId":"ryanlml"},"content":"activate SurvinParser","lastModifiedDate":"2022-11-04"},{"lineNumber":23,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"NUSDG"},"content":"create CloneCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"ryanlml"},"content":"SurvinParser -\u003e CloneCommandParser","lastModifiedDate":"2022-11-04"},{"lineNumber":26,"author":{"gitId":"NUSDG"},"content":"activate CloneCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"ryanlml"},"content":"CloneCommandParser --\u003e SurvinParser","lastModifiedDate":"2022-11-04"},{"lineNumber":29,"author":{"gitId":"NUSDG"},"content":"deactivate CloneCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"ryanlml"},"content":"SurvinParser -\u003e CloneCommandParser : parse(\"1 n/Tom\")","lastModifiedDate":"2022-11-04"},{"lineNumber":32,"author":{"gitId":"NUSDG"},"content":"activate CloneCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"NUSDG"},"content":"create ClonePersonDescriptor","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"NUSDG"},"content":"CloneCommandParser -\u003e ClonePersonDescriptor","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"NUSDG"},"content":"activate ClonePersonDescriptor","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"NUSDG"},"content":"ClonePersonDescriptor --\u003e CloneCommandParser : d","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"NUSDG"},"content":"deactivate ClonePersonDescriptor","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"NUSDG"},"content":"create CloneCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"NUSDG"},"content":"CloneCommandParser -\u003e CloneCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"NUSDG"},"content":"activate CloneCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"NUSDG"},"content":"CloneCommand --\u003e CloneCommandParser : c","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"NUSDG"},"content":"deactivate CloneCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"ryanlml"},"content":"CloneCommandParser --\u003e SurvinParser : c","lastModifiedDate":"2022-11-04"},{"lineNumber":49,"author":{"gitId":"NUSDG"},"content":"deactivate CloneCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"NUSDG"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"ryanlml"},"content":"CloneCommandParser -[hidden]-\u003e SurvinParser","lastModifiedDate":"2022-11-04"},{"lineNumber":52,"author":{"gitId":"NUSDG"},"content":"destroy CloneCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"ryanlml"},"content":"SurvinParser --\u003e LogicManager : c","lastModifiedDate":"2022-11-04"},{"lineNumber":55,"author":{"gitId":"ryanlml"},"content":"deactivate SurvinParser","lastModifiedDate":"2022-11-04"},{"lineNumber":56,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"NUSDG"},"content":"LogicManager -\u003e CloneCommand : execute()","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"NUSDG"},"content":"activate CloneCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"NUSDG"},"content":"CloneCommand -\u003e Model : getFilteredPersonList(1)","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"NUSDG"},"content":"activate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"NUSDG"},"content":"Model --\u003e CloneCommand : p","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"NUSDG"},"content":"deactivate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"NUSDG"},"content":"create Person","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"NUSDG"},"content":"CloneCommand -\u003e Person : createClonedPerson(p, d)","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"NUSDG"},"content":"activate Person","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"NUSDG"},"content":"Person --\u003e CloneCommand : n","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"NUSDG"},"content":"deactivate Person","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"NUSDG"},"content":"CloneCommand -\u003e Model : addPerson(n)","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"NUSDG"},"content":"activate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"NUSDG"},"content":"Model --\u003e CloneCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"NUSDG"},"content":"deactivate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"NUSDG"},"content":"create CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"NUSDG"},"content":"CloneCommand -\u003e CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"NUSDG"},"content":"activate CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"NUSDG"},"content":"CommandResult --\u003e CloneCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"NUSDG"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"NUSDG"},"content":"CloneCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"NUSDG"},"content":"deactivate CloneCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"NUSDG"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"NUSDG"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"NUSDG"},"content":"@enduml","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"NUSDG":81,"ryanlml":10}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"ryanlml"},"content":"if () then ([command commits Survin])","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":"    :Save Survin to","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"ryanlml"},"content":"    survinStateList;","lastModifiedDate":"2022-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ryanlml":3,"-":12}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"ryanlml"},"content":"participant \":SurvinParser\" as SurvinParser LOGIC_COLOR","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"ryanlml"},"content":"LogicManager -\u003e SurvinParser : parseCommand(\"delete 1\")","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"ryanlml"},"content":"activate SurvinParser","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"ryanlml"},"content":"SurvinParser -\u003e DeleteCommandParser","lastModifiedDate":"2022-11-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"ryanlml"},"content":"DeleteCommandParser --\u003e SurvinParser","lastModifiedDate":"2022-11-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"ryanlml"},"content":"SurvinParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2022-11-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"ryanlml"},"content":"DeleteCommandParser --\u003e SurvinParser : d","lastModifiedDate":"2022-11-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"ryanlml"},"content":"DeleteCommandParser -[hidden]-\u003e SurvinParser","lastModifiedDate":"2022-11-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"ryanlml"},"content":"SurvinParser --\u003e LogicManager : d","lastModifiedDate":"2022-11-04"},{"lineNumber":46,"author":{"gitId":"ryanlml"},"content":"deactivate SurvinParser","lastModifiedDate":"2022-11-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ryanlml":10,"-":59}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"ryanlml"},"content":"Class SurvinParser","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"ryanlml"},"content":"LogicManager -right-\u003e\"1\" SurvinParser","lastModifiedDate":"2022-11-04"},{"lineNumber":31,"author":{"gitId":"ryanlml"},"content":"SurvinParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"ryanlml"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nDeleteCommand, etc","lastModifiedDate":"2022-10-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ryanlml":4,"-":42}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"ryanlml"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlySurvin\" as ReadOnlySurvin","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"ryanlml"},"content":"Class Survin","lastModifiedDate":"2022-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"ryanlml"},"content":"Survin .up.|\u003e ReadOnlySurvin","lastModifiedDate":"2022-11-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"ryanlml"},"content":"Model .left.\u003e ReadOnlySurvin","lastModifiedDate":"2022-11-04"},{"lineNumber":33,"author":{"gitId":"ryanlml"},"content":"ModelManager -left-\u003e \"1\" Survin","lastModifiedDate":"2022-11-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"ryanlml"},"content":"Survin *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2022-11-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ryanlml":6,"-":44}},{"path":"docs/diagrams/NewDeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"deepimpactmir"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"deepimpactmir"},"content":"!include style.puml","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"deepimpactmir"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"deepimpactmir"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"ryanlml"},"content":"participant \":SurvinParser\" as SurvinParser LOGIC_COLOR","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"deepimpactmir"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"deepimpactmir"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"deepimpactmir"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"deepimpactmir"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"deepimpactmir"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"deepimpactmir"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"deepimpactmir"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"deepimpactmir"},"content":"[-\u003e LogicManager : execute(\"delete s/Survey\")","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"deepimpactmir"},"content":"activate LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"ryanlml"},"content":"LogicManager -\u003e SurvinParser : parseCommand(\"delete s/Survey\")","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"ryanlml"},"content":"activate SurvinParser","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"deepimpactmir"},"content":"create DeleteCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"ryanlml"},"content":"SurvinParser -\u003e DeleteCommandParser","lastModifiedDate":"2022-11-04"},{"lineNumber":24,"author":{"gitId":"deepimpactmir"},"content":"activate DeleteCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"ryanlml"},"content":"DeleteCommandParser --\u003e SurvinParser","lastModifiedDate":"2022-11-04"},{"lineNumber":27,"author":{"gitId":"deepimpactmir"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"ryanlml"},"content":"SurvinParser -\u003e DeleteCommandParser : parse(\"s/Survey\")","lastModifiedDate":"2022-11-04"},{"lineNumber":30,"author":{"gitId":"deepimpactmir"},"content":"activate DeleteCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"deepimpactmir"},"content":"create DeleteCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"deepimpactmir"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"deepimpactmir"},"content":"activate DeleteCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"deepimpactmir"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"deepimpactmir"},"content":"deactivate DeleteCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"ryanlml"},"content":"DeleteCommandParser --\u003e SurvinParser : d","lastModifiedDate":"2022-11-04"},{"lineNumber":40,"author":{"gitId":"deepimpactmir"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"deepimpactmir"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"ryanlml"},"content":"DeleteCommandParser -[hidden]-\u003e SurvinParser","lastModifiedDate":"2022-11-04"},{"lineNumber":43,"author":{"gitId":"deepimpactmir"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"ryanlml"},"content":"SurvinParser --\u003e LogicManager : d","lastModifiedDate":"2022-11-04"},{"lineNumber":46,"author":{"gitId":"ryanlml"},"content":"deactivate SurvinParser","lastModifiedDate":"2022-11-04"},{"lineNumber":47,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"deepimpactmir"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"deepimpactmir"},"content":"activate DeleteCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"deepimpactmir"},"content":"loop for each Person in filteredList","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"deepimpactmir"},"content":"    DeleteCommand -\u003e Model : deletePerson(p)","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"deepimpactmir"},"content":"    activate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"deepimpactmir"},"content":"end","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"deepimpactmir"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"deepimpactmir"},"content":"deactivate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"deepimpactmir"},"content":"create CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"deepimpactmir"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"deepimpactmir"},"content":"activate CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"deepimpactmir"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"deepimpactmir"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"deepimpactmir"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"deepimpactmir"},"content":"deactivate DeleteCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"deepimpactmir"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"deepimpactmir"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"deepimpactmir"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"ryanlml":10,"deepimpactmir":61}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"ryanlml"},"content":"Class SurvinParser","lastModifiedDate":"2022-11-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"ryanlml"},"content":"HiddenOutside ..\u003e SurvinParser","lastModifiedDate":"2022-11-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"ryanlml"},"content":"SurvinParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"ryanlml"},"content":"SurvinParser ..\u003e Command : returns \u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"ryanlml":4,"-":34}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"ryanlml"},"content":"package \"Survin Storage\" #F4F6F6{","lastModifiedDate":"2022-11-04"},{"lineNumber":18,"author":{"gitId":"ryanlml"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nSurvinStorage\" as SurvinStorage","lastModifiedDate":"2022-11-04"},{"lineNumber":19,"author":{"gitId":"ryanlml"},"content":"Class JsonSurvinStorage","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"ryanlml"},"content":"Class JsonSerializableSurvin","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"ryanlml"},"content":"StorageManager -up-\u003e \"1\" SurvinStorage","lastModifiedDate":"2022-11-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"ryanlml"},"content":"Storage -right-|\u003e SurvinStorage","lastModifiedDate":"2022-11-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"ryanlml"},"content":"JsonSurvinStorage .up.|\u003e SurvinStorage","lastModifiedDate":"2022-11-04"},{"lineNumber":39,"author":{"gitId":"ryanlml"},"content":"JsonSurvinStorage ..\u003e JsonSerializableSurvin","lastModifiedDate":"2022-11-04"},{"lineNumber":40,"author":{"gitId":"ryanlml"},"content":"JsonSerializableSurvin --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2022-11-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ryanlml":9,"-":34}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"ryanlml"},"content":"    class State1 as \"__ab0:Survin__\"","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":"    class State2 as \"__ab1:Survin__\"","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"ryanlml"},"content":"    class State3 as \"__ab2:Survin__\"","lastModifiedDate":"2022-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ryanlml":3,"-":17}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"ryanlml"},"content":"    class State1 as \"__ab0:Survin__\"","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":"    class State2 as \"__ab1:Survin__\"","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"ryanlml"},"content":"    class State3 as \"__ab2:Survin__\"","lastModifiedDate":"2022-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ryanlml":3,"-":19}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"ryanlml"},"content":"    class State1 as \"__ab0:Survin__\"","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":"    class State2 as \"__ab1:Survin__\"","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"ryanlml"},"content":"    class State3 as \"__ab2:Survin__\"","lastModifiedDate":"2022-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ryanlml":3,"-":17}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"ryanlml"},"content":"    class State1 as \"__ab0:Survin__\"","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":"    class State2 as \"__ab1:Survin__\"","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"ryanlml"},"content":"    class State3 as \"__ab2:Survin__\"","lastModifiedDate":"2022-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ryanlml":3,"-":17}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"ryanlml"},"content":"    class State1 as \"__ab0:Survin__\"","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":"    class State2 as \"__ab1:Survin__\"","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"ryanlml"},"content":"    class State3 as \"__ab2:Survin__\"","lastModifiedDate":"2022-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ryanlml":3,"-":17}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"ryanlml"},"content":"    class State1 as \"__ab0:Survin__\"","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":"    class State2 as \"__ab1:Survin__\"","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"ryanlml"},"content":"    class State3 as \"__ab3:Survin__\"","lastModifiedDate":"2022-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"note right on link: State ab2 deleted.","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ryanlml":3,"-":18}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"ryanlml"},"content":"participant \":SurvinParser\" as SurvinParser LOGIC_COLOR","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"ryanlml"},"content":"participant \":VersionedSurvin\" as VersionedSurvin MODEL_COLOR","lastModifiedDate":"2022-11-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"ryanlml"},"content":"LogicManager -\u003e SurvinParser : parseCommand(undo)","lastModifiedDate":"2022-11-04"},{"lineNumber":18,"author":{"gitId":"ryanlml"},"content":"activate SurvinParser","lastModifiedDate":"2022-11-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"ryanlml"},"content":"SurvinParser -\u003e UndoCommand","lastModifiedDate":"2022-11-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"ryanlml"},"content":"UndoCommand --\u003e SurvinParser","lastModifiedDate":"2022-11-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"ryanlml"},"content":"SurvinParser --\u003e LogicManager : u","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"ryanlml"},"content":"deactivate SurvinParser","lastModifiedDate":"2022-11-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"ryanlml"},"content":"UndoCommand -\u003e Model : undoSurvin()","lastModifiedDate":"2022-11-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"ryanlml"},"content":"Model -\u003e VersionedSurvin : undo()","lastModifiedDate":"2022-11-04"},{"lineNumber":37,"author":{"gitId":"ryanlml"},"content":"activate VersionedSurvin","lastModifiedDate":"2022-11-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"ryanlml"},"content":"VersionedSurvin -\u003e VersionedSurvin :resetData(ReadOnlySurvin)","lastModifiedDate":"2022-11-04"},{"lineNumber":40,"author":{"gitId":"ryanlml"},"content":"VersionedSurvin --\u003e Model :","lastModifiedDate":"2022-11-04"},{"lineNumber":41,"author":{"gitId":"ryanlml"},"content":"deactivate VersionedSurvin","lastModifiedDate":"2022-11-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ryanlml":14,"-":39}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"ryanlml"},"content":"Participant \":SurvinParser\" as abp LOGIC_COLOR","lastModifiedDate":"2022-11-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"ecp -\u003e ec ++: index, editPersonDescriptor","lastModifiedDate":"2019-06-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"ryanlml":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"deepimpactmir"},"content":"title: Survin","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"deepimpactmir"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103-F13-2/tp/actions)","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103-F13-2/tp/branch/master/graph/badge.svg?token\u003dFS4ASEB7UE)](https://codecov.io/gh/AY2223S1-CS2103-F13-2/tp)","lastModifiedDate":"2022-09-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"deepimpactmir"},"content":"**Survin is a desktop application for managing your surveyees details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"deepimpactmir"},"content":"- If you are interested in using Survin, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"deepimpactmir"},"content":"- If you are interested about developing Survin, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"deepimpactmir"},"content":"- Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"-":12,"deepimpactmir":6}},{"path":"docs/team/castryl.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"---","lastModifiedDate":"2022-10-01"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"layout: page","lastModifiedDate":"2022-10-01"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"title: Ian\u0027s Project Portfolio Page","lastModifiedDate":"2022-10-01"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"---","lastModifiedDate":"2022-10-01"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"### Project: Survin","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"Survin is a desktop application for surveyors to use to keep track of people they have surveyed. The surveyor can easily follow up with people they have surveyed for additional information or for confirmation. The user interacts with the application using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"* **New Feature**:","lastModifiedDate":"2022-10-01"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"    * TO BE ADDED LATER","lastModifiedDate":"2022-10-01"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"* **New Feature**: TO BE ADDED LATER","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dcastryl\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"* **Project management**:","lastModifiedDate":"2022-10-01"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"    * TO BE ADDED LATER","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"    * TO BE ADDED LATER","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"* **Documentation**:","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"    * User Guide:","lastModifiedDate":"2022-10-01"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"        * TO BE ADDED LATER","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"    * Developer Guide:","lastModifiedDate":"2022-10-01"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"        * TO BE ADDED LATER","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":31,"author":{"gitId":"KeithPJX"},"content":"* **Community**:","lastModifiedDate":"2022-10-01"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"    * TO BE ADDED LATER","lastModifiedDate":"2022-10-01"},{"lineNumber":33,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":34,"author":{"gitId":"KeithPJX"},"content":"* **Tools**:","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"KeithPJX"},"content":"    * TO BE ADDED LATER","lastModifiedDate":"2022-10-01"},{"lineNumber":36,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-10-01"}],"authorContributionMap":{"KeithPJX":37}},{"path":"docs/team/deepimpactmir.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"deepimpactmir"},"content":"---","lastModifiedDate":"2022-09-24"},{"lineNumber":2,"author":{"gitId":"deepimpactmir"},"content":"layout: page","lastModifiedDate":"2022-09-24"},{"lineNumber":3,"author":{"gitId":"deepimpactmir"},"content":"title: Jeremy Toh\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-24"},{"lineNumber":4,"author":{"gitId":"deepimpactmir"},"content":"---","lastModifiedDate":"2022-09-24"},{"lineNumber":5,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":6,"author":{"gitId":"deepimpactmir"},"content":"### Project: Survin","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"deepimpactmir"},"content":"Survin is a desktop application for surveyors to use to keep track of people they have surveyed. The surveyor can easily follow up with people they have surveyed for additional information or for confirmation. The user interacts with the application using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":10,"author":{"gitId":"deepimpactmir"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-24"},{"lineNumber":11,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":12,"author":{"gitId":"deepimpactmir"},"content":"-   **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003ddeepimpactmir\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-11-05"},{"lineNumber":13,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"deepimpactmir"},"content":"-   **New Feature**: `mark` and `unmark` commands.","lastModifiedDate":"2022-11-03"},{"lineNumber":15,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":16,"author":{"gitId":"deepimpactmir"},"content":"    -   What it does: Allows the user to mark whether a certain survey of a person is done. Users can use unmark to set it as not done.","lastModifiedDate":"2022-11-03"},{"lineNumber":17,"author":{"gitId":"deepimpactmir"},"content":"    -   Justification: This feature allows the user to track whether surveys are completed or not, which helps the user to better keep track of the progress of the surveys.","lastModifiedDate":"2022-11-03"},{"lineNumber":18,"author":{"gitId":"deepimpactmir"},"content":"    -   Highlights: Implementing this feature necessitate a change in how data is stored since we have to store a new boolean field `isDone` in `Survey` to ensure that the status of a survey is persistent.","lastModifiedDate":"2022-11-03"},{"lineNumber":19,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":20,"author":{"gitId":"deepimpactmir"},"content":"-   **New Feature**: `undo` command.","lastModifiedDate":"2022-11-03"},{"lineNumber":21,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":22,"author":{"gitId":"deepimpactmir"},"content":"    -   What it does: allows the user to undo all previous commands one at a time. Note that we only implemented `undo` but not `redo`.","lastModifiedDate":"2022-11-03"},{"lineNumber":23,"author":{"gitId":"deepimpactmir"},"content":"    -   Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2022-09-24"},{"lineNumber":24,"author":{"gitId":"deepimpactmir"},"content":"    -   Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2022-09-24"},{"lineNumber":25,"author":{"gitId":"deepimpactmir"},"content":"    -   Credits: Borrowed heavily from AddressBook-4 with little changes.","lastModifiedDate":"2022-11-03"},{"lineNumber":26,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":27,"author":{"gitId":"deepimpactmir"},"content":"-   **Enhancements to existing features**: `delete` surveyees by attributes.","lastModifiedDate":"2022-11-05"},{"lineNumber":28,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":29,"author":{"gitId":"deepimpactmir"},"content":"    -   What it does: Allows the user to delete surveyees by `RACE`, `RELIGION` or `SURVEY`.","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"deepimpactmir"},"content":"    -   Justification: This is particularly helpful for surveyors since they might want to delete all persons that is in a particular survey.","lastModifiedDate":"2022-11-05"},{"lineNumber":31,"author":{"gitId":"deepimpactmir"},"content":"    -   Highlights: Since we support a person holding multiple surveys, we have to make sure that the person is only deleted if the person only has that one survey.","lastModifiedDate":"2022-11-05"},{"lineNumber":32,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":33,"author":{"gitId":"deepimpactmir"},"content":"-   **Enhancements to existing features**: `add` command supporting multiple surveys","lastModifiedDate":"2022-11-05"},{"lineNumber":34,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":35,"author":{"gitId":"deepimpactmir"},"content":"    -   What it does: Change the behaviour of `add` such that if the new person added only differs from the existing person in survey, then, `add` would add the new survey to the existing person instead of adding a new person.","lastModifiedDate":"2022-11-05"},{"lineNumber":36,"author":{"gitId":"deepimpactmir"},"content":"    -   Justification: Since the user probably intended to use add new surveys to the existing person instead of creating an identical person, this change ensures that `add` behaves as expected to the user.","lastModifiedDate":"2022-11-05"},{"lineNumber":37,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-05"},{"lineNumber":38,"author":{"gitId":"deepimpactmir"},"content":"-   **Project management**:","lastModifiedDate":"2022-11-05"},{"lineNumber":39,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":40,"author":{"gitId":"deepimpactmir"},"content":"    -   Upgraded the versions of `gradle`, `junit`, `javafx` in `build.gradle` [\\#83](https://github.com/AY2223S1-CS2103-F13-2/tp/pull/83)","lastModifiedDate":"2022-11-05"},{"lineNumber":41,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":42,"author":{"gitId":"deepimpactmir"},"content":"-   **Documentation**:","lastModifiedDate":"2022-09-24"},{"lineNumber":43,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":44,"author":{"gitId":"deepimpactmir"},"content":"    -   User Guide:","lastModifiedDate":"2022-09-24"},{"lineNumber":45,"author":{"gitId":"deepimpactmir"},"content":"        -   Add documentation for the features `delete`, `mark`, `undo`.","lastModifiedDate":"2022-11-03"},{"lineNumber":46,"author":{"gitId":"deepimpactmir"},"content":"    -   Developer Guide:","lastModifiedDate":"2022-11-05"},{"lineNumber":47,"author":{"gitId":"deepimpactmir"},"content":"        -   Add new diagrams for the enhancement to `delete` [\\#125](https://github.com/AY2223S1-CS2103-F13-2/tp/pull/125/)","lastModifiedDate":"2022-11-05"},{"lineNumber":48,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":49,"author":{"gitId":"deepimpactmir"},"content":"-   **Review contributions**:","lastModifiedDate":"2022-11-05"},{"lineNumber":50,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":51,"author":{"gitId":"deepimpactmir"},"content":"    -   Selected PR reviews: [\\#81](https://github.com/AY2223S1-CS2103-F13-2/tp/pull/81), [\\#113](https://github.com/AY2223S1-CS2103-F13-2/tp/pull/113)","lastModifiedDate":"2022-11-05"}],"authorContributionMap":{"deepimpactmir":51}},{"path":"docs/team/johndoe.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ryanlml"},"content":"### Project: Survin Level 3","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"ryanlml"},"content":"Survin - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ryanlml":2,"-":44}},{"path":"docs/team/keithpjx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"---","lastModifiedDate":"2022-09-24"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"layout: page","lastModifiedDate":"2022-09-24"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"title: Keith\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-24"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"---","lastModifiedDate":"2022-09-24"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"### Project: Survin","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"Survin is a desktop application for surveyors to use to keep track of people they have surveyed. The surveyor can easily follow up with people they have surveyed for additional information or for confirmation. The user interacts with the application using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-24"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"* **New Feature**: Update model to include 5 new attributes of a person","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"  * What it does: Allows the application to keep track of 5 new attributes in a person.","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"  * Justification: Since the application is for surveyors to keep track of their surveyees, there is a need to add more attributes to a person that surveyors will need.","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"* **Updated Feature**: `add` command","lastModifiedDate":"2022-11-03"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"  * What it does: Allows the user to add new surveyees using a text command.","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"  * Justification: While the feature was already included in v1.0, it had to be updated to suit the updated model.","lastModifiedDate":"2022-11-01"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"  * Highlights: Updated the command to accept these new attributes as parameters.","lastModifiedDate":"2022-11-01"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"* **Updated Feature**: `edit` command","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"  * What it does: Allows the user to edit existing surveyees using a text command.","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"  * Justification: While the feature was already included in v1.0, it had to be updated to suit the updated model.","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"  * Highlights: Updated the command to accept these new attributes as parameters.","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"* **New Feature**: Change themes","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"  * What it does: Allows the user to switch between a light and dark theme using either the GUI or a text command.","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"  * Justification: Users can have a more comfortable view of the GUI be it in the day or at night.","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"  * Highlights: Created a light themed stylesheet that the application can switch to when commanded and implemented the logic to switch stylesheets.","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"* **New Feature**: Compacted and Expanded PersonCards","lastModifiedDate":"2022-11-01"},{"lineNumber":31,"author":{"gitId":"KeithPJX"},"content":"  * What it does: Allows the user to hide more detailed information of surveyees. This can be done from the GUI or a text command.","lastModifiedDate":"2022-11-01"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"  * Justification: Users do not have to be afraid of shoulder surfers. It also serves as a way to declutter the GUI.","lastModifiedDate":"2022-11-01"},{"lineNumber":33,"author":{"gitId":"KeithPJX"},"content":"  * Highlights: Implemented the logic to hide more detailed information of surveyees.","lastModifiedDate":"2022-11-01"},{"lineNumber":34,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"KeithPJX"},"content":"* **New Feature**: `append` and `unappend` commands","lastModifiedDate":"2022-11-01"},{"lineNumber":36,"author":{"gitId":"KeithPJX"},"content":"  * What it does: Allows the user to add on or remove surveys and tags from existing surveyees.","lastModifiedDate":"2022-11-01"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"  * Justification: Users could only add surveys or tags by typing out all existing ones and then the new ones. Users could only remove surveys or tags by deleting all of them then adding back the ones they did not want to remove. This was very tedious.","lastModifiedDate":"2022-11-01"},{"lineNumber":38,"author":{"gitId":"KeithPJX"},"content":"  * Highlights: Implemented 2 new commands to append and unappend surveys and tags.","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":40,"author":{"gitId":"KeithPJX"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dkeithpjx\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-10-01"},{"lineNumber":41,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":42,"author":{"gitId":"KeithPJX"},"content":"* **Project management**:","lastModifiedDate":"2022-09-24"},{"lineNumber":43,"author":{"gitId":"KeithPJX"},"content":"  * Did most of the administrative work","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":45,"author":{"gitId":"KeithPJX"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-24"},{"lineNumber":46,"author":{"gitId":"KeithPJX"},"content":"  * User Guide:","lastModifiedDate":"2022-09-24"},{"lineNumber":47,"author":{"gitId":"KeithPJX"},"content":"    * Added documentation for the features:","lastModifiedDate":"2022-11-01"},{"lineNumber":48,"author":{"gitId":"KeithPJX"},"content":"      * `edit` [\\#57](https://github.com/AY2223S1-CS2103-F13-2/tp/pull/57)","lastModifiedDate":"2022-11-01"},{"lineNumber":49,"author":{"gitId":"KeithPJX"},"content":"      * `theme` and `toggle-list-mode` [\\#145](https://github.com/AY2223S1-CS2103-F13-2/tp/pull/145)","lastModifiedDate":"2022-11-01"},{"lineNumber":50,"author":{"gitId":"KeithPJX"},"content":"      * `append` and `unappend` [\\#151](https://github.com/AY2223S1-CS2103-F13-2/tp/pull/151)","lastModifiedDate":"2022-11-01"},{"lineNumber":51,"author":{"gitId":"KeithPJX"},"content":"    * Added \u0027Parameters format\u0027 [\\#204](https://github.com/AY2223S1-CS2103-F13-2/tp/pull/204)","lastModifiedDate":"2022-11-01"},{"lineNumber":52,"author":{"gitId":"KeithPJX"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-24"},{"lineNumber":53,"author":{"gitId":"KeithPJX"},"content":"    * Added implementation description for the features:","lastModifiedDate":"2022-11-01"},{"lineNumber":54,"author":{"gitId":"KeithPJX"},"content":"      * Changing themes [\\#210](https://github.com/AY2223S1-CS2103-F13-2/tp/pull/210)","lastModifiedDate":"2022-11-01"},{"lineNumber":55,"author":{"gitId":"KeithPJX"},"content":"      * Compactable and expandable PersonCard [\\#123](https://github.com/AY2223S1-CS2103-F13-2/tp/pull/123)","lastModifiedDate":"2022-11-01"},{"lineNumber":56,"author":{"gitId":"KeithPJX"},"content":"    * Added use cases for, Change theme, Show/Hide more detailed information, Append surveys/tags to a surveyee, and Unappend surveys/tags to a surveyee [\\#210](https://github.com/AY2223S1-CS2103-F13-2/tp/pull/210)","lastModifiedDate":"2022-11-01"},{"lineNumber":57,"author":{"gitId":"KeithPJX"},"content":"    * Added instructions for manual testing for, Appending surveys/tags to a surveyee, Changing theme, and Showing/Hiding more detailed information [\\#210](https://github.com/AY2223S1-CS2103-F13-2/tp/pull/210)","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"KeithPJX":57}},{"path":"docs/team/nusdg.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"NUSDG"},"content":"---","lastModifiedDate":"2022-09-24"},{"lineNumber":2,"author":{"gitId":"NUSDG"},"content":"layout: page","lastModifiedDate":"2022-09-24"},{"lineNumber":3,"author":{"gitId":"NUSDG"},"content":"title: Guo Qi\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-24"},{"lineNumber":4,"author":{"gitId":"NUSDG"},"content":"---","lastModifiedDate":"2022-09-24"},{"lineNumber":5,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":6,"author":{"gitId":"NUSDG"},"content":"### Project: Survin","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"NUSDG"},"content":"Survin is a desktop application for surveyors to use to keep track of people they have surveyed. The surveyor can easily follow up with people they have surveyed for additional information or for confirmation. The user interacts with the application using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":10,"author":{"gitId":"NUSDG"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-24"},{"lineNumber":11,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":12,"author":{"gitId":"NUSDG"},"content":"* **New Feature**: `clone` command","lastModifiedDate":"2022-11-06"},{"lineNumber":13,"author":{"gitId":"NUSDG"},"content":"  * What it does: Allow the users to add a new person based on the details of an existing person.","lastModifiedDate":"2022-11-06"},{"lineNumber":14,"author":{"gitId":"NUSDG"},"content":"  * Justification: This feature provides an easy way to add a new person without having to retype all the similar information again, for example, this can be useful in the scenario of adding a father and a son that are living in the same household, the user does not have to retype the repeated information such as address, race, surveys and etc again.","lastModifiedDate":"2022-11-06"},{"lineNumber":15,"author":{"gitId":"NUSDG"},"content":"  * Highlights: It\u0027s fine if the users have forgotten to update some of the fields when cloning a person because they can always use edit command to edit again later, however, at least one of the unique optional fields (Name, Phone or Email) has to be provided when executing clone command else it will not work.","lastModifiedDate":"2022-11-06"},{"lineNumber":16,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":17,"author":{"gitId":"NUSDG"},"content":"* **New Feature**: Shortcut keys","lastModifiedDate":"2022-11-06"},{"lineNumber":18,"author":{"gitId":"NUSDG"},"content":"  * What it does: Allow the users to use keyboard shortcuts to add helpful text to the command box.","lastModifiedDate":"2022-11-06"},{"lineNumber":19,"author":{"gitId":"NUSDG"},"content":"  * Justification: This feature provides a fast and efficient way for user to enter the commands, it can also help the users to avoid mistakes such as typos and missing prefixes in the command.","lastModifiedDate":"2022-11-06"},{"lineNumber":20,"author":{"gitId":"NUSDG"},"content":"  * Highlights: Currently, only shortcut for add command has included all the prefixes because most of the fields are compulsory to add, shortcuts for other commands do not contain any prefixes because most of the fields are optional, if we include all the prefixes the users have to take more time to delete away those unwanted prefixes.","lastModifiedDate":"2022-11-06"},{"lineNumber":21,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":22,"author":{"gitId":"NUSDG"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dNUSDG\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-24"},{"lineNumber":23,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":24,"author":{"gitId":"NUSDG"},"content":"* **Project management**:","lastModifiedDate":"2022-09-24"},{"lineNumber":25,"author":{"gitId":"NUSDG"},"content":"  - Record demo video.","lastModifiedDate":"2022-11-06"},{"lineNumber":26,"author":{"gitId":"NUSDG"},"content":"  ","lastModifiedDate":"2022-09-24"},{"lineNumber":27,"author":{"gitId":"NUSDG"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-24"},{"lineNumber":28,"author":{"gitId":"NUSDG"},"content":"  * User Guide:","lastModifiedDate":"2022-09-24"},{"lineNumber":29,"author":{"gitId":"NUSDG"},"content":"    * Added documentation for the feature `clone` [\\#124](https://github.com/AY2223S1-CS2103-F13-2/tp/pull/124)","lastModifiedDate":"2022-11-06"},{"lineNumber":30,"author":{"gitId":"NUSDG"},"content":"    * Added documentation for the features `shortcut keys` [\\#147](https://github.com/AY2223S1-CS2103-F13-2/tp/pull/147)","lastModifiedDate":"2022-11-06"},{"lineNumber":31,"author":{"gitId":"NUSDG"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-24"},{"lineNumber":32,"author":{"gitId":"NUSDG"},"content":"    - Added implementation details for feature `clone` [\\#129](https://github.com/AY2223S1-CS2103-F13-2/tp/pull/129)","lastModifiedDate":"2022-11-06"},{"lineNumber":33,"author":{"gitId":"NUSDG"},"content":"    - Added use case and instruction for manual testing for clone command. [\\#220](https://github.com/AY2223S1-CS2103-F13-2/tp/pull/220)","lastModifiedDate":"2022-11-06"}],"authorContributionMap":{"NUSDG":33}},{"path":"docs/team/ryanlml.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ryanlml"},"content":"---","lastModifiedDate":"2022-09-24"},{"lineNumber":2,"author":{"gitId":"ryanlml"},"content":"layout: page","lastModifiedDate":"2022-09-24"},{"lineNumber":3,"author":{"gitId":"ryanlml"},"content":"title: Ryan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-24"},{"lineNumber":4,"author":{"gitId":"ryanlml"},"content":"---","lastModifiedDate":"2022-09-24"},{"lineNumber":5,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":6,"author":{"gitId":"ryanlml"},"content":"### Project: Survin","lastModifiedDate":"2022-09-24"},{"lineNumber":7,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":8,"author":{"gitId":"ryanlml"},"content":"Survin is a desktop application for surveyors to use to keep track of people they have surveyed. The surveyor can easily follow up with people they have surveyed for additional information or for confirmation. The user interacts with the application using a CLI, and it has a GUI created with JavaFX. It is written in Java.","lastModifiedDate":"2022-09-24"},{"lineNumber":9,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-24"},{"lineNumber":11,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":12,"author":{"gitId":"ryanlml"},"content":"* **New Feature**: Added the ability to view surveyees with given attributes.","lastModifiedDate":"2022-09-24"},{"lineNumber":13,"author":{"gitId":"ryanlml"},"content":"  * What it does: allows the user to search for surveyees via attributes.","lastModifiedDate":"2022-09-24"},{"lineNumber":14,"author":{"gitId":"ryanlml"},"content":"  * Justification: This feature improves the product significantly because a user may want to filter all surveyees of a given demographic, say, chinese christian females.","lastModifiedDate":"2022-09-24"},{"lineNumber":15,"author":{"gitId":"ryanlml"},"content":"  * Highlights: Able to search for exact phrases by using quotation marks on the specific phrase.","lastModifiedDate":"2022-11-04"},{"lineNumber":16,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":17,"author":{"gitId":"ryanlml"},"content":"* **Updated Feature**: `help` command","lastModifiedDate":"2022-11-04"},{"lineNumber":18,"author":{"gitId":"ryanlml"},"content":"  * What it does: Added functionality of help to show information for each command in Survin.","lastModifiedDate":"2022-11-04"},{"lineNumber":19,"author":{"gitId":"ryanlml"},"content":"  * Justification: New users may be unfamiliar with command usage, especially those with many parameters. `help \u003cCOMMAND\u003e` provides a useful tool to help new users get accustomed with using Survin.","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"ryanlml"},"content":"* **Updated Feature**: Update persons to allow for multiple `survey` objects.","lastModifiedDate":"2022-11-04"},{"lineNumber":22,"author":{"gitId":"ryanlml"},"content":"  * What it does: A surveyee in Survin can keep track of multiple surveys.","lastModifiedDate":"2022-11-04"},{"lineNumber":23,"author":{"gitId":"ryanlml"},"content":"  * Justification: This is to make for a more pleasant user interface, rather than having the same person card repeated in Survin for each different Survey they participate in.","lastModifiedDate":"2022-11-04"},{"lineNumber":24,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dryanlml\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-10-01"},{"lineNumber":26,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":27,"author":{"gitId":"ryanlml"},"content":"* **Project management**:","lastModifiedDate":"2022-09-24"},{"lineNumber":28,"author":{"gitId":"ryanlml"},"content":"  * In charge of `Model` component","lastModifiedDate":"2022-11-04"},{"lineNumber":29,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-09-24"},{"lineNumber":30,"author":{"gitId":"ryanlml"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-24"},{"lineNumber":31,"author":{"gitId":"ryanlml"},"content":"  * User Guide:","lastModifiedDate":"2022-09-24"},{"lineNumber":32,"author":{"gitId":"ryanlml"},"content":"    * Add documentation for the following features","lastModifiedDate":"2022-11-04"},{"lineNumber":33,"author":{"gitId":"ryanlml"},"content":"      * `view` [\\#55](https://github.com/AY2223S1-CS2103-F13-2/tp/pull/55)","lastModifiedDate":"2022-11-04"},{"lineNumber":34,"author":{"gitId":"ryanlml"},"content":"      * `help` [\\#154](https://github.com/AY2223S1-CS2103-F13-2/tp/pull/154)","lastModifiedDate":"2022-11-04"},{"lineNumber":35,"author":{"gitId":"ryanlml"},"content":"    * Improved wording in the user guide [\\#201](https://github.com/AY2223S1-CS2103-F13-2/tp/pull/201)","lastModifiedDate":"2022-11-04"},{"lineNumber":36,"author":{"gitId":"ryanlml"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-24"},{"lineNumber":37,"author":{"gitId":"ryanlml"},"content":"    * Add documentation for `view` [\\#128](https://github.com/AY2223S1-CS2103-F13-2/tp/pull/128)","lastModifiedDate":"2022-11-04"},{"lineNumber":38,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-09-24"}],"authorContributionMap":{"KeithPJX":1,"ryanlml":37}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"ryanlml"},"content":"This command allows users of the Survin application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"ryanlml"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `SurvinParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2022-11-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"ryanlml"},"content":":information_source: Don’t forget to update `SurvinParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2022-11-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"ryanlml"},"content":"Survin stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2022-11-04"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"ryanlml"},"content":":exclamation: You must delete Survin’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause Survin to default to an empty address book!","lastModifiedDate":"2022-11-04"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"ryanlml"},"content":"This concludes the tutorial for adding a new `Command` to Survin.","lastModifiedDate":"2022-11-04"}],"authorContributionMap":{"ryanlml":6,"-":395}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"ryanlml"},"content":"**`invalidPersonSurvin.json`:**","lastModifiedDate":"2022-11-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ryanlml":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"ryanlml"},"content":"        Command command \u003d survinParser.parseCommand(commandText);","lastModifiedDate":"2022-11-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"ryanlml"},"content":"            storage.saveSurvin(model.getSurvin());","lastModifiedDate":"2022-11-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"ryanlml"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `SurvinParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2022-11-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"ryanlml"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveSurvin(model.getSurvin())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2022-11-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"ryanlml"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonSurvin#saveSurvin()` method which calls the `JsonSerializableSurvin` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2022-11-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"ryanlml"},"content":"    **`JsonSerializableSurvin` constructor:**","lastModifiedDate":"2022-11-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"ryanlml"},"content":"     * Converts a given {@code ReadOnlySurvin} into this class for Jackson use.","lastModifiedDate":"2022-11-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"ryanlml"},"content":"     * {@code JsonSerializableSurvin}.","lastModifiedDate":"2022-11-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"ryanlml"},"content":"    public JsonSerializableSurvin(ReadOnlySurvin source) {","lastModifiedDate":"2022-11-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"ryanlml"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableSurvin`.","lastModifiedDate":"2022-11-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ryanlml":10,"-":291}},{"path":"gradle/wrapper/gradle-wrapper.properties","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"distributionBase\u003dGRADLE_USER_HOME","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"distributionPath\u003dwrapper/dists","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"deepimpactmir"},"content":"distributionUrl\u003dhttps\\://services.gradle.org/distributions/gradle-7.5.1-bin.zip","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"zipStoreBase\u003dGRADLE_USER_HOME","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"zipStorePath\u003dwrapper/dists","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":4,"deepimpactmir":1}},{"path":"gradlew.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2022-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2022-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2022-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2022-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2022-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-06-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\"\u003d\u003d\"\" @echo off","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\"\u003d\u003d\"\" set DIRNAME\u003d.","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-06-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-06-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-06-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2018-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-06-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-05-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@rem Find java.exe","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"deepimpactmir"},"content":"if %ERRORLEVEL% equ 0 goto execute","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":":findJavaFromJavaHome","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-06-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":":execute","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@rem Setup the command line","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-06-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@rem Execute Gradle","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-06-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":":end","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"deepimpactmir"},"content":"if %ERRORLEVEL% equ 0 goto mainEnd","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":":fail","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"deepimpactmir"},"content":"set EXIT_CODE\u003d%ERRORLEVEL%","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"deepimpactmir"},"content":"if %EXIT_CODE% equ 0 set EXIT_CODE\u003d1","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"deepimpactmir"},"content":"if not \"\"\u003d\u003d\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"deepimpactmir"},"content":"exit /b %EXIT_CODE%","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":":mainEnd","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":":omega","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":85,"deepimpactmir":6}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.ReadOnlySurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.Survin;","lastModifiedDate":"2022-11-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"ryanlml"},"content":"import seedu.address.storage.JsonSurvinStorage;","lastModifiedDate":"2022-11-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"ryanlml"},"content":"import seedu.address.storage.SurvinStorage;","lastModifiedDate":"2022-11-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"KeithPJX"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"KeithPJX"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Survin ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"ryanlml"},"content":"        SurvinStorage survinStorage \u003d new JsonSurvinStorage(userPrefs.getSurvinFilePath());","lastModifiedDate":"2022-11-04"},{"lineNumber":59,"author":{"gitId":"ryanlml"},"content":"        storage \u003d new StorageManager(survinStorage, userPrefsStorage);","lastModifiedDate":"2022-11-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"ryanlml"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s Survin","lastModifiedDate":"2022-11-04"},{"lineNumber":72,"author":{"gitId":"ryanlml"},"content":"     * and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":73,"author":{"gitId":"ryanlml"},"content":"     * The data from the sample Survin will be used instead if","lastModifiedDate":"2022-11-04"},{"lineNumber":74,"author":{"gitId":"ryanlml"},"content":"     * {@code storage}\u0027s Survin is not found, or an empty Survin will be","lastModifiedDate":"2022-11-04"},{"lineNumber":75,"author":{"gitId":"ryanlml"},"content":"     * used instead if errors occur when reading {@code storage}\u0027s Survin.","lastModifiedDate":"2022-11-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":78,"author":{"gitId":"ryanlml"},"content":"        Optional\u003cReadOnlySurvin\u003e survinOptional;","lastModifiedDate":"2022-11-04"},{"lineNumber":79,"author":{"gitId":"ryanlml"},"content":"        ReadOnlySurvin initialData;","lastModifiedDate":"2022-11-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"ryanlml"},"content":"            survinOptional \u003d storage.readSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":82,"author":{"gitId":"ryanlml"},"content":"            if (!survinOptional.isPresent()) {","lastModifiedDate":"2022-11-04"},{"lineNumber":83,"author":{"gitId":"ryanlml"},"content":"                logger.info(\"Data file not found. Will be starting with a sample Survin\");","lastModifiedDate":"2022-11-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"ryanlml"},"content":"            initialData \u003d survinOptional.orElseGet(SampleDataUtil::getSampleSurvin);","lastModifiedDate":"2022-11-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"ryanlml"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty Survin\");","lastModifiedDate":"2022-11-04"},{"lineNumber":88,"author":{"gitId":"ryanlml"},"content":"            initialData \u003d new Survin();","lastModifiedDate":"2022-11-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":90,"author":{"gitId":"ryanlml"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Survin\");","lastModifiedDate":"2022-11-04"},{"lineNumber":91,"author":{"gitId":"ryanlml"},"content":"            initialData \u003d new Survin();","lastModifiedDate":"2022-11-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"deepimpactmir"},"content":"        // Update config file in case it was missing to begin with or there are","lastModifiedDate":"2022-10-24"},{"lineNumber":129,"author":{"gitId":"deepimpactmir"},"content":"        // new/unused fields","lastModifiedDate":"2022-10-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"deepimpactmir"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs","lastModifiedDate":"2022-10-24"},{"lineNumber":140,"author":{"gitId":"deepimpactmir"},"content":"     * file path, or a new {@code UserPrefs} with default configuration if errors","lastModifiedDate":"2022-10-24"},{"lineNumber":141,"author":{"gitId":"deepimpactmir"},"content":"     * occur when reading from the file.","lastModifiedDate":"2022-10-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"ryanlml"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Survin\");","lastModifiedDate":"2022-11-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"deepimpactmir"},"content":"        // Update prefs file in case it was missing to begin with or there are","lastModifiedDate":"2022-10-24"},{"lineNumber":161,"author":{"gitId":"deepimpactmir"},"content":"        // new/unused fields","lastModifiedDate":"2022-10-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"ryanlml"},"content":"        logger.info(\"Starting Survin \" + MainApp.VERSION);","lastModifiedDate":"2022-11-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"ryanlml"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Survin ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-11-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KeithPJX":2,"ryanlml":24,"-":153,"deepimpactmir":7}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"ryanlml"},"content":"    private static final String LOG_FILE \u003d \"survin.log\";","lastModifiedDate":"2022-11-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ryanlml":1,"-":111}},{"path":"src/main/java/seedu/address/commons/core/Themes.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":" * Container for theme related data.","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"public class Themes {","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"     * Represents the themes that are available.","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"    public enum Theme {","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"        LIGHT, DARK","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"    public static final String DARK_THEME_STRING \u003d \"dark\";","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"    public static final String LIGHT_THEME_STRING \u003d \"light\";","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"KeithPJX":17}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.ReadOnlySurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"ryanlml"},"content":"     * Returns the Survin.","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"ryanlml"},"content":"     * @see seedu.address.model.Model#getSurvin()","lastModifiedDate":"2022-11-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"ryanlml"},"content":"    ReadOnlySurvin getSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"ryanlml"},"content":"     * Returns the user prefs\u0027 Survin file path.","lastModifiedDate":"2022-11-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"ryanlml"},"content":"    Path getSurvinFilePath();","lastModifiedDate":"2022-11-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ryanlml":6,"-":44}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.parser.SurvinParser;","lastModifiedDate":"2022-11-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.ReadOnlySurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"ryanlml"},"content":"    private final SurvinParser survinParser;","lastModifiedDate":"2022-11-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"ryanlml"},"content":"        survinParser \u003d new SurvinParser();","lastModifiedDate":"2022-11-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"ryanlml"},"content":"        Command command \u003d survinParser.parseCommand(commandText);","lastModifiedDate":"2022-11-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"ryanlml"},"content":"            storage.saveSurvin(model.getSurvin());","lastModifiedDate":"2022-11-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"ryanlml"},"content":"    public ReadOnlySurvin getSurvin() {","lastModifiedDate":"2022-11-04"},{"lineNumber":59,"author":{"gitId":"ryanlml"},"content":"        return model.getSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"ryanlml"},"content":"    public Path getSurvinFilePath() {","lastModifiedDate":"2022-11-04"},{"lineNumber":69,"author":{"gitId":"ryanlml"},"content":"        return model.getSurvinFilePath();","lastModifiedDate":"2022-11-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ryanlml":10,"-":71}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RACE;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RELIGION;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SURVEY;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"deepimpactmir"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"deepimpactmir"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"ryanlml"},"content":" * Adds a person to Survin.","lastModifiedDate":"2022-11-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to Survin.\\n\" + \"Parameters: \"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"deepimpactmir"},"content":"            + PREFIX_NAME + \"NAME \" + PREFIX_PHONE + \"PHONE \" + PREFIX_EMAIL + \"EMAIL \" + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"            + PREFIX_GENDER + \"GENDER \" + PREFIX_BIRTHDATE + \"BIRTHDATE \" + PREFIX_RACE + \"RACE \" + PREFIX_RELIGION","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"KeithPJX"},"content":"            + \"RELIGION \" + \"[\" + PREFIX_SURVEY + \"SURVEY]... \" + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"KeithPJX"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"John Doe \" + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"KeithPJX"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \" + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"KeithPJX"},"content":"            + PREFIX_GENDER + \"male \" + PREFIX_BIRTHDATE + \"1998-11-28 \" + PREFIX_RACE + \"Chinese \" + PREFIX_RELIGION","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"            + \"Christian \" + PREFIX_SURVEY + \"Shopping survey \" + PREFIX_TAG + \"friends \" + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"ryanlml"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in Survin\";","lastModifiedDate":"2022-11-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"deepimpactmir"},"content":"            Person person \u003d model.getPerson(toAdd).orElseThrow(() -\u003e new CommandException(MESSAGE_DUPLICATE_PERSON));","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"KeithPJX"},"content":"            if (person.getSurveys().containsAll(toAdd.getSurveys())) {","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"deepimpactmir"},"content":"            Set\u003cSurvey\u003e surveySet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"deepimpactmir"},"content":"            surveySet.addAll(person.getSurveys());","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"deepimpactmir"},"content":"            surveySet.addAll(toAdd.getSurveys());","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"deepimpactmir"},"content":"            Person newPerson \u003d new Person(toAdd.getName(), toAdd.getPhone(), toAdd.getEmail(), toAdd.getAddress(),","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"deepimpactmir"},"content":"                    toAdd.getGender(), toAdd.getBirthdate(), toAdd.getRace(), toAdd.getReligion(), surveySet,","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"deepimpactmir"},"content":"                    toAdd.getTags());","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"deepimpactmir"},"content":"            model.setPerson(person, newPerson);","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"deepimpactmir"},"content":"        } else {","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"ryanlml"},"content":"        model.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                        \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KeithPJX":13,"ryanlml":3,"-":51,"deepimpactmir":14}},{"path":"src/main/java/seedu/address/logic/commands/AppendCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SURVEY;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":" * Appends surveys or tags to an existing person in Survin.","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"public class AppendCommand extends Command {","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"    public static final String COMMAND_WORD \u003d \"append\";","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Appends surveys or tags to the person identified \"","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"            + \"by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"            + \"Parameters: INDEX (must be a positive integer) \" + \"[\" + PREFIX_SURVEY + \"SURVEY]... \"","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\" + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_SURVEY + \"Food Survey \"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"KeithPJX"},"content":"            + PREFIX_SURVEY + \"Environment Survey \" + PREFIX_TAG + \"friend \" + PREFIX_TAG + \"student\";","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"KeithPJX"},"content":"    public static final String MESSAGE_APPEND_SUCCESS \u003d \"Appended Person: %1$s\";","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"KeithPJX"},"content":"    public static final String MESSAGE_NOT_APPENDED \u003d \"At least one field to append must be provided.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"    public static final String MESSAGE_SURVEY_FOUND \u003d \"Person already has one of the surveys that you are appending.\";","lastModifiedDate":"2022-10-30"},{"lineNumber":38,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":39,"author":{"gitId":"KeithPJX"},"content":"    public static final String MESSAGE_TAG_FOUND \u003d \"Person already has one of the tags that you are appending.\";","lastModifiedDate":"2022-10-30"},{"lineNumber":40,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":41,"author":{"gitId":"KeithPJX"},"content":"    private final Index index;","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"KeithPJX"},"content":"    private final Set\u003cSurvey\u003e newSurveys;","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"KeithPJX"},"content":"    private final Set\u003cTag\u003e newTags;","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"KeithPJX"},"content":"     * @param index of the person in the filtered person to append surveys or tags to","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"KeithPJX"},"content":"     * @param newSurveys set of new surveys to be appended","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"KeithPJX"},"content":"     * @param newTags set of new tags to be appended","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"KeithPJX"},"content":"    public AppendCommand(Index index, Set\u003cSurvey\u003e newSurveys, Set\u003cTag\u003e newTags) {","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"KeithPJX"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"KeithPJX"},"content":"        requireNonNull(newSurveys);","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"KeithPJX"},"content":"        requireNonNull(newTags);","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"KeithPJX"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"KeithPJX"},"content":"        this.newSurveys \u003d newSurveys;","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"KeithPJX"},"content":"        this.newTags \u003d newTags;","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"KeithPJX"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"KeithPJX"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"KeithPJX"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"KeithPJX"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"KeithPJX"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"KeithPJX"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"KeithPJX"},"content":"        Person personToAppend \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"KeithPJX"},"content":"        Person appendedPerson \u003d createAppendedPerson(personToAppend);","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"KeithPJX"},"content":"        model.setPerson(personToAppend, appendedPerson);","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"KeithPJX"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"ryanlml"},"content":"        model.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":75,"author":{"gitId":"KeithPJX"},"content":"        return new CommandResult(String.format(MESSAGE_APPEND_SUCCESS, appendedPerson));","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"KeithPJX"},"content":"    private Person createAppendedPerson(Person personToAppend) throws CommandException {","lastModifiedDate":"2022-10-30"},{"lineNumber":79,"author":{"gitId":"KeithPJX"},"content":"        assert personToAppend !\u003d null;","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cSurvey\u003e oldSurveys \u003d personToAppend.getSurveys();","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"KeithPJX"},"content":"        if (doesOldSurveysContainNewSurveys(oldSurveys, newSurveys)) {","lastModifiedDate":"2022-10-30"},{"lineNumber":83,"author":{"gitId":"KeithPJX"},"content":"            throw new CommandException(MESSAGE_SURVEY_FOUND);","lastModifiedDate":"2022-10-30"},{"lineNumber":84,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":85,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cSurvey\u003e surveys \u003d new HashSet\u003cSurvey\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"KeithPJX"},"content":"        surveys.addAll(oldSurveys);","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"KeithPJX"},"content":"        surveys.addAll(newSurveys);","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":89,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cTag\u003e oldTags \u003d personToAppend.getTags();","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"KeithPJX"},"content":"        if (doesOldTagsContainNewTags(oldTags, newTags)) {","lastModifiedDate":"2022-10-30"},{"lineNumber":91,"author":{"gitId":"KeithPJX"},"content":"            throw new CommandException(MESSAGE_TAG_FOUND);","lastModifiedDate":"2022-10-30"},{"lineNumber":92,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":93,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"KeithPJX"},"content":"        tags.addAll(oldTags);","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"KeithPJX"},"content":"        tags.addAll(newTags);","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"KeithPJX"},"content":"        return new Person(personToAppend.getName(), personToAppend.getPhone(), personToAppend.getEmail(),","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"KeithPJX"},"content":"                personToAppend.getAddress(), personToAppend.getGender(), personToAppend.getBirthdate(),","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"KeithPJX"},"content":"                personToAppend.getRace(), personToAppend.getReligion(),","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"KeithPJX"},"content":"                surveys, tags);","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":103,"author":{"gitId":"KeithPJX"},"content":"    private boolean doesOldSurveysContainNewSurveys(Set\u003cSurvey\u003e oldSurveys, Set\u003cSurvey\u003e newSurveys) {","lastModifiedDate":"2022-10-30"},{"lineNumber":104,"author":{"gitId":"KeithPJX"},"content":"        for (Survey oldSurvey : oldSurveys) {","lastModifiedDate":"2022-10-30"},{"lineNumber":105,"author":{"gitId":"KeithPJX"},"content":"            for (Survey newSurvey : newSurveys) {","lastModifiedDate":"2022-10-30"},{"lineNumber":106,"author":{"gitId":"KeithPJX"},"content":"                if (oldSurvey.survey.equals(newSurvey.survey)) {","lastModifiedDate":"2022-10-30"},{"lineNumber":107,"author":{"gitId":"KeithPJX"},"content":"                    return true;","lastModifiedDate":"2022-10-30"},{"lineNumber":108,"author":{"gitId":"KeithPJX"},"content":"                }","lastModifiedDate":"2022-10-30"},{"lineNumber":109,"author":{"gitId":"KeithPJX"},"content":"            }","lastModifiedDate":"2022-10-30"},{"lineNumber":110,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":111,"author":{"gitId":"KeithPJX"},"content":"        return false;","lastModifiedDate":"2022-10-30"},{"lineNumber":112,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":113,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":114,"author":{"gitId":"KeithPJX"},"content":"    private boolean doesOldTagsContainNewTags(Set\u003cTag\u003e oldTags, Set\u003cTag\u003e newTags) {","lastModifiedDate":"2022-10-30"},{"lineNumber":115,"author":{"gitId":"KeithPJX"},"content":"        for (Tag oldTag : oldTags) {","lastModifiedDate":"2022-10-30"},{"lineNumber":116,"author":{"gitId":"KeithPJX"},"content":"            for (Tag newTag : newTags) {","lastModifiedDate":"2022-10-30"},{"lineNumber":117,"author":{"gitId":"KeithPJX"},"content":"                if (oldTag.tagName.equals(newTag.tagName)) {","lastModifiedDate":"2022-10-30"},{"lineNumber":118,"author":{"gitId":"KeithPJX"},"content":"                    return true;","lastModifiedDate":"2022-10-30"},{"lineNumber":119,"author":{"gitId":"KeithPJX"},"content":"                }","lastModifiedDate":"2022-10-30"},{"lineNumber":120,"author":{"gitId":"KeithPJX"},"content":"            }","lastModifiedDate":"2022-10-30"},{"lineNumber":121,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":122,"author":{"gitId":"KeithPJX"},"content":"        return false;","lastModifiedDate":"2022-10-30"},{"lineNumber":123,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":124,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"KeithPJX":123,"ryanlml":1}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.Survin;","lastModifiedDate":"2022-11-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"ryanlml"},"content":" * Clears Survin.","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"ryanlml"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Survin has been cleared!\";","lastModifiedDate":"2022-11-04"},{"lineNumber":15,"author":{"gitId":"ryanlml"},"content":"    public static final String MESSAGE_USAGE \u003d \"Clears all persons from Survin.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"ryanlml"},"content":"        model.setSurvin(new Survin());","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ryanlml":5,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/CloneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NUSDG"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"NUSDG"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RACE;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RELIGION;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SURVEY;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"NUSDG"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"NUSDG"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"NUSDG"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"NUSDG"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"NUSDG"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"NUSDG"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"NUSDG"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"NUSDG"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"NUSDG"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.person.Race;","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.person.Religion;","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"NUSDG"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"ryanlml"},"content":" * Clones an existing person in Survin.","lastModifiedDate":"2022-11-04"},{"lineNumber":40,"author":{"gitId":"NUSDG"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"NUSDG"},"content":"public class CloneCommand extends Command {","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"NUSDG"},"content":"    public static final String COMMAND_WORD \u003d \"clone\";","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"NUSDG"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Clones the details of the person identified \"","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"NUSDG"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"NUSDG"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"NUSDG"},"content":"            + \"Parameters: INDEX (the index of the person needs to be exist) \"","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"NUSDG"},"content":"            + \"[Optional parameters in square brackets] \"","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"NUSDG"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"NUSDG"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"NUSDG"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"NUSDG"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"NUSDG"},"content":"            + \"[\" + PREFIX_GENDER + \"GENDER] \"","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"NUSDG"},"content":"            + \"[\" + PREFIX_BIRTHDATE + \"BIRTHDATE] \"","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"NUSDG"},"content":"            + \"[\" + PREFIX_RACE + \"RACE] \"","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"NUSDG"},"content":"            + \"[\" + PREFIX_RELIGION + \"RELIGION] \"","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"NUSDG"},"content":"            + \"[\" + PREFIX_SURVEY + \"SURVEY] \"","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"NUSDG"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"NUSDG"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"NUSDG"},"content":"            + PREFIX_NAME + \"John \"","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"NUSDG"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"NUSDG"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"NUSDG"},"content":"    public static final String MESSAGE_CLONE_PERSON_SUCCESS \u003d \"Cloned Person: %1$s\";","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"NUSDG"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one of the unique optional fields (Name, Phone or Email)\"","lastModifiedDate":"2022-10-31"},{"lineNumber":67,"author":{"gitId":"NUSDG"},"content":"            + \" has to be provided.\";","lastModifiedDate":"2022-10-31"},{"lineNumber":68,"author":{"gitId":"ryanlml"},"content":"    public static final String MESSAGE_DUPLICATE_CLONED_PERSON \u003d \"This person already exists in Survin, \"","lastModifiedDate":"2022-11-04"},{"lineNumber":69,"author":{"gitId":"NUSDG"},"content":"            + \"try again with different details, at least one of the unique optional fields (Name, Phone or Email) \"","lastModifiedDate":"2022-10-31"},{"lineNumber":70,"author":{"gitId":"NUSDG"},"content":"            + \"has to be provided.\";","lastModifiedDate":"2022-10-31"},{"lineNumber":71,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"NUSDG"},"content":"    private final Index index;","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"NUSDG"},"content":"    private final ClonePersonDescriptor clonePersonDescriptor;","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"NUSDG"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"NUSDG"},"content":"     * @param index of the person in the filtered person list to cloned","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"NUSDG"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":79,"author":{"gitId":"NUSDG"},"content":"    public CloneCommand(Index index, ClonePersonDescriptor clonePersonDescriptor) {","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"NUSDG"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"NUSDG"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"NUSDG"},"content":"        this.clonePersonDescriptor \u003d new ClonePersonDescriptor(clonePersonDescriptor);","lastModifiedDate":"2022-10-19"},{"lineNumber":83,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":85,"author":{"gitId":"NUSDG"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"NUSDG"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"NUSDG"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"NUSDG"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"NUSDG"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"NUSDG"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-14"},{"lineNumber":92,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":93,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"NUSDG"},"content":"        Person personToClone \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"NUSDG"},"content":"        Person clonedPerson \u003d createClonedPerson(personToClone, clonePersonDescriptor);","lastModifiedDate":"2022-10-19"},{"lineNumber":96,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":97,"author":{"gitId":"NUSDG"},"content":"        if (model.hasPerson(clonedPerson)) {","lastModifiedDate":"2022-11-06"},{"lineNumber":98,"author":{"gitId":"NUSDG"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLONED_PERSON);","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":101,"author":{"gitId":"NUSDG"},"content":"        model.addPerson(clonedPerson);","lastModifiedDate":"2022-10-14"},{"lineNumber":102,"author":{"gitId":"ryanlml"},"content":"        model.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":103,"author":{"gitId":"NUSDG"},"content":"        return new CommandResult(String.format(MESSAGE_CLONE_PERSON_SUCCESS, clonedPerson));","lastModifiedDate":"2022-10-14"},{"lineNumber":104,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":105,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":106,"author":{"gitId":"NUSDG"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":107,"author":{"gitId":"NUSDG"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToClone}.","lastModifiedDate":"2022-10-14"},{"lineNumber":108,"author":{"gitId":"NUSDG"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":109,"author":{"gitId":"NUSDG"},"content":"    private static Person createClonedPerson(Person personToClone, ClonePersonDescriptor clonePersonDescriptor) {","lastModifiedDate":"2022-10-19"},{"lineNumber":110,"author":{"gitId":"NUSDG"},"content":"        assert personToClone !\u003d null;","lastModifiedDate":"2022-10-14"},{"lineNumber":111,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":112,"author":{"gitId":"NUSDG"},"content":"        Name clonedName \u003d clonePersonDescriptor.getName().orElse(personToClone.getName());","lastModifiedDate":"2022-10-19"},{"lineNumber":113,"author":{"gitId":"NUSDG"},"content":"        Phone clonedPhone \u003d clonePersonDescriptor.getPhone().orElse(personToClone.getPhone());","lastModifiedDate":"2022-10-19"},{"lineNumber":114,"author":{"gitId":"NUSDG"},"content":"        Email clonedEmail \u003d clonePersonDescriptor.getEmail().orElse(personToClone.getEmail());","lastModifiedDate":"2022-10-19"},{"lineNumber":115,"author":{"gitId":"NUSDG"},"content":"        Address clonedAddress \u003d clonePersonDescriptor.getAddress().orElse(personToClone.getAddress());","lastModifiedDate":"2022-10-19"},{"lineNumber":116,"author":{"gitId":"NUSDG"},"content":"        Gender clonedGender \u003d clonePersonDescriptor.getGender().orElse(personToClone.getGender());","lastModifiedDate":"2022-10-19"},{"lineNumber":117,"author":{"gitId":"NUSDG"},"content":"        Birthdate clonedBirthdate \u003d clonePersonDescriptor.getBirthdate().orElse(personToClone.getBirthdate());","lastModifiedDate":"2022-10-19"},{"lineNumber":118,"author":{"gitId":"NUSDG"},"content":"        Race clonedRace \u003d clonePersonDescriptor.getRace().orElse(personToClone.getRace());","lastModifiedDate":"2022-10-19"},{"lineNumber":119,"author":{"gitId":"NUSDG"},"content":"        Religion clonedReligion \u003d clonePersonDescriptor.getReligion().orElse(personToClone.getReligion());","lastModifiedDate":"2022-10-19"},{"lineNumber":120,"author":{"gitId":"NUSDG"},"content":"        Set\u003cSurvey\u003e clonedSurveys \u003d clonePersonDescriptor.getSurveys().orElse(personToClone.getSurveys());","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"NUSDG"},"content":"        Set\u003cTag\u003e clonedTags \u003d clonePersonDescriptor.getTags().orElse(personToClone.getTags());","lastModifiedDate":"2022-10-19"},{"lineNumber":122,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":123,"author":{"gitId":"NUSDG"},"content":"        return new Person(clonedName, clonedPhone, clonedEmail, clonedAddress,","lastModifiedDate":"2022-10-19"},{"lineNumber":124,"author":{"gitId":"NUSDG"},"content":"                clonedGender, clonedBirthdate, clonedRace, clonedReligion, clonedSurveys, clonedTags);","lastModifiedDate":"2022-10-20"},{"lineNumber":125,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":126,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":127,"author":{"gitId":"NUSDG"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":128,"author":{"gitId":"NUSDG"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":129,"author":{"gitId":"NUSDG"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-14"},{"lineNumber":130,"author":{"gitId":"NUSDG"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-14"},{"lineNumber":131,"author":{"gitId":"NUSDG"},"content":"            return true;","lastModifiedDate":"2022-10-14"},{"lineNumber":132,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":133,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":134,"author":{"gitId":"NUSDG"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"NUSDG"},"content":"        if (!(other instanceof CloneCommand)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"NUSDG"},"content":"            return false;","lastModifiedDate":"2022-10-14"},{"lineNumber":137,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":138,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":139,"author":{"gitId":"NUSDG"},"content":"        // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":140,"author":{"gitId":"NUSDG"},"content":"        CloneCommand e \u003d (CloneCommand) other;","lastModifiedDate":"2022-10-14"},{"lineNumber":141,"author":{"gitId":"NUSDG"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-19"},{"lineNumber":142,"author":{"gitId":"NUSDG"},"content":"                \u0026\u0026 clonePersonDescriptor.equals(e.clonePersonDescriptor);","lastModifiedDate":"2022-10-19"},{"lineNumber":143,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":144,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":145,"author":{"gitId":"NUSDG"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":146,"author":{"gitId":"NUSDG"},"content":"     * Stores the details to clone the person with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-20"},{"lineNumber":147,"author":{"gitId":"NUSDG"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2022-10-19"},{"lineNumber":148,"author":{"gitId":"NUSDG"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":149,"author":{"gitId":"NUSDG"},"content":"    public static class ClonePersonDescriptor {","lastModifiedDate":"2022-10-19"},{"lineNumber":150,"author":{"gitId":"NUSDG"},"content":"        private Name name;","lastModifiedDate":"2022-10-19"},{"lineNumber":151,"author":{"gitId":"NUSDG"},"content":"        private Phone phone;","lastModifiedDate":"2022-10-19"},{"lineNumber":152,"author":{"gitId":"NUSDG"},"content":"        private Email email;","lastModifiedDate":"2022-10-19"},{"lineNumber":153,"author":{"gitId":"NUSDG"},"content":"        private Address address;","lastModifiedDate":"2022-10-19"},{"lineNumber":154,"author":{"gitId":"NUSDG"},"content":"        private Gender gender;","lastModifiedDate":"2022-10-19"},{"lineNumber":155,"author":{"gitId":"NUSDG"},"content":"        private Birthdate birthdate;","lastModifiedDate":"2022-10-19"},{"lineNumber":156,"author":{"gitId":"NUSDG"},"content":"        private Race race;","lastModifiedDate":"2022-10-19"},{"lineNumber":157,"author":{"gitId":"NUSDG"},"content":"        private Religion religion;","lastModifiedDate":"2022-10-19"},{"lineNumber":158,"author":{"gitId":"NUSDG"},"content":"        private Set\u003cSurvey\u003e surveys;","lastModifiedDate":"2022-10-20"},{"lineNumber":159,"author":{"gitId":"NUSDG"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2022-10-19"},{"lineNumber":160,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":161,"author":{"gitId":"NUSDG"},"content":"        public ClonePersonDescriptor() {}","lastModifiedDate":"2022-10-19"},{"lineNumber":162,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":163,"author":{"gitId":"NUSDG"},"content":"        /**","lastModifiedDate":"2022-10-19"},{"lineNumber":164,"author":{"gitId":"NUSDG"},"content":"         * Copy constructor.","lastModifiedDate":"2022-10-19"},{"lineNumber":165,"author":{"gitId":"NUSDG"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-19"},{"lineNumber":166,"author":{"gitId":"NUSDG"},"content":"         */","lastModifiedDate":"2022-10-19"},{"lineNumber":167,"author":{"gitId":"NUSDG"},"content":"        public ClonePersonDescriptor(CloneCommand.ClonePersonDescriptor toCopy) {","lastModifiedDate":"2022-10-19"},{"lineNumber":168,"author":{"gitId":"NUSDG"},"content":"            setName(toCopy.name);","lastModifiedDate":"2022-10-19"},{"lineNumber":169,"author":{"gitId":"NUSDG"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2022-10-19"},{"lineNumber":170,"author":{"gitId":"NUSDG"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2022-10-19"},{"lineNumber":171,"author":{"gitId":"NUSDG"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2022-10-19"},{"lineNumber":172,"author":{"gitId":"NUSDG"},"content":"            setGender(toCopy.gender);","lastModifiedDate":"2022-10-19"},{"lineNumber":173,"author":{"gitId":"NUSDG"},"content":"            setBirthdate(toCopy.birthdate);","lastModifiedDate":"2022-10-19"},{"lineNumber":174,"author":{"gitId":"NUSDG"},"content":"            setRace(toCopy.race);","lastModifiedDate":"2022-10-19"},{"lineNumber":175,"author":{"gitId":"NUSDG"},"content":"            setReligion(toCopy.religion);","lastModifiedDate":"2022-10-19"},{"lineNumber":176,"author":{"gitId":"NUSDG"},"content":"            setSurveys(toCopy.surveys);","lastModifiedDate":"2022-10-20"},{"lineNumber":177,"author":{"gitId":"NUSDG"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2022-10-19"},{"lineNumber":178,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":179,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":180,"author":{"gitId":"NUSDG"},"content":"        /**","lastModifiedDate":"2022-10-19"},{"lineNumber":181,"author":{"gitId":"NUSDG"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-19"},{"lineNumber":182,"author":{"gitId":"NUSDG"},"content":"         */","lastModifiedDate":"2022-10-19"},{"lineNumber":183,"author":{"gitId":"NUSDG"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-19"},{"lineNumber":184,"author":{"gitId":"NUSDG"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, gender, birthdate,","lastModifiedDate":"2022-10-20"},{"lineNumber":185,"author":{"gitId":"NUSDG"},"content":"                    race, religion, surveys, tags);","lastModifiedDate":"2022-10-20"},{"lineNumber":186,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":187,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":188,"author":{"gitId":"NUSDG"},"content":"        public void setName(Name name) {","lastModifiedDate":"2022-10-19"},{"lineNumber":189,"author":{"gitId":"NUSDG"},"content":"            this.name \u003d name;","lastModifiedDate":"2022-10-19"},{"lineNumber":190,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":191,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":192,"author":{"gitId":"NUSDG"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2022-10-19"},{"lineNumber":193,"author":{"gitId":"NUSDG"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2022-10-19"},{"lineNumber":194,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":195,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":196,"author":{"gitId":"NUSDG"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2022-10-19"},{"lineNumber":197,"author":{"gitId":"NUSDG"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2022-10-19"},{"lineNumber":198,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":199,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":200,"author":{"gitId":"NUSDG"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2022-10-19"},{"lineNumber":201,"author":{"gitId":"NUSDG"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2022-10-19"},{"lineNumber":202,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":203,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":204,"author":{"gitId":"NUSDG"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2022-10-19"},{"lineNumber":205,"author":{"gitId":"NUSDG"},"content":"            this.email \u003d email;","lastModifiedDate":"2022-10-19"},{"lineNumber":206,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":207,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":208,"author":{"gitId":"NUSDG"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2022-10-19"},{"lineNumber":209,"author":{"gitId":"NUSDG"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2022-10-19"},{"lineNumber":210,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":211,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":212,"author":{"gitId":"NUSDG"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2022-10-19"},{"lineNumber":213,"author":{"gitId":"NUSDG"},"content":"            this.address \u003d address;","lastModifiedDate":"2022-10-19"},{"lineNumber":214,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":215,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":216,"author":{"gitId":"NUSDG"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2022-10-19"},{"lineNumber":217,"author":{"gitId":"NUSDG"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2022-10-19"},{"lineNumber":218,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":219,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":220,"author":{"gitId":"NUSDG"},"content":"        public void setGender(Gender gender) {","lastModifiedDate":"2022-10-19"},{"lineNumber":221,"author":{"gitId":"NUSDG"},"content":"            this.gender \u003d gender;","lastModifiedDate":"2022-10-19"},{"lineNumber":222,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":223,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":224,"author":{"gitId":"NUSDG"},"content":"        public Optional\u003cGender\u003e getGender() {","lastModifiedDate":"2022-10-19"},{"lineNumber":225,"author":{"gitId":"NUSDG"},"content":"            return Optional.ofNullable(gender);","lastModifiedDate":"2022-10-19"},{"lineNumber":226,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":227,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":228,"author":{"gitId":"NUSDG"},"content":"        public void setBirthdate(Birthdate birthdate) {","lastModifiedDate":"2022-10-19"},{"lineNumber":229,"author":{"gitId":"NUSDG"},"content":"            this.birthdate \u003d birthdate;","lastModifiedDate":"2022-10-19"},{"lineNumber":230,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":231,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":232,"author":{"gitId":"NUSDG"},"content":"        public Optional\u003cBirthdate\u003e getBirthdate() {","lastModifiedDate":"2022-10-19"},{"lineNumber":233,"author":{"gitId":"NUSDG"},"content":"            return Optional.ofNullable(birthdate);","lastModifiedDate":"2022-10-19"},{"lineNumber":234,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":235,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":236,"author":{"gitId":"NUSDG"},"content":"        public void setRace(Race race) {","lastModifiedDate":"2022-10-19"},{"lineNumber":237,"author":{"gitId":"NUSDG"},"content":"            this.race \u003d race;","lastModifiedDate":"2022-10-19"},{"lineNumber":238,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":239,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":240,"author":{"gitId":"NUSDG"},"content":"        public Optional\u003cRace\u003e getRace() {","lastModifiedDate":"2022-10-19"},{"lineNumber":241,"author":{"gitId":"NUSDG"},"content":"            return Optional.ofNullable(race);","lastModifiedDate":"2022-10-19"},{"lineNumber":242,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":243,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":244,"author":{"gitId":"NUSDG"},"content":"        public void setReligion(Religion religion) {","lastModifiedDate":"2022-10-19"},{"lineNumber":245,"author":{"gitId":"NUSDG"},"content":"            this.religion \u003d religion;","lastModifiedDate":"2022-10-19"},{"lineNumber":246,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":247,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":248,"author":{"gitId":"NUSDG"},"content":"        public Optional\u003cReligion\u003e getReligion() {","lastModifiedDate":"2022-10-19"},{"lineNumber":249,"author":{"gitId":"NUSDG"},"content":"            return Optional.ofNullable(religion);","lastModifiedDate":"2022-10-19"},{"lineNumber":250,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":251,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":252,"author":{"gitId":"NUSDG"},"content":"        public void setSurveys(Set\u003cSurvey\u003e surveys) {","lastModifiedDate":"2022-10-20"},{"lineNumber":253,"author":{"gitId":"NUSDG"},"content":"            this.surveys \u003d (surveys !\u003d null) ? new HashSet\u003c\u003e(surveys) : null;","lastModifiedDate":"2022-10-20"},{"lineNumber":254,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":255,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":256,"author":{"gitId":"NUSDG"},"content":"        public Optional\u003cSet\u003cSurvey\u003e\u003e getSurveys() {","lastModifiedDate":"2022-10-20"},{"lineNumber":257,"author":{"gitId":"NUSDG"},"content":"            return (surveys !\u003d null) ? Optional.of(Collections.unmodifiableSet(surveys)) : Optional.empty();","lastModifiedDate":"2022-10-20"},{"lineNumber":258,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":259,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":260,"author":{"gitId":"NUSDG"},"content":"        /**","lastModifiedDate":"2022-10-19"},{"lineNumber":261,"author":{"gitId":"NUSDG"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-10-19"},{"lineNumber":262,"author":{"gitId":"NUSDG"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-19"},{"lineNumber":263,"author":{"gitId":"NUSDG"},"content":"         */","lastModifiedDate":"2022-10-19"},{"lineNumber":264,"author":{"gitId":"NUSDG"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-19"},{"lineNumber":265,"author":{"gitId":"NUSDG"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-10-19"},{"lineNumber":266,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":267,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":268,"author":{"gitId":"NUSDG"},"content":"        /**","lastModifiedDate":"2022-10-19"},{"lineNumber":269,"author":{"gitId":"NUSDG"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-19"},{"lineNumber":270,"author":{"gitId":"NUSDG"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-10-19"},{"lineNumber":271,"author":{"gitId":"NUSDG"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-10-19"},{"lineNumber":272,"author":{"gitId":"NUSDG"},"content":"         */","lastModifiedDate":"2022-10-19"},{"lineNumber":273,"author":{"gitId":"NUSDG"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2022-10-19"},{"lineNumber":274,"author":{"gitId":"NUSDG"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2022-10-19"},{"lineNumber":275,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":276,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":277,"author":{"gitId":"NUSDG"},"content":"        @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":278,"author":{"gitId":"NUSDG"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":279,"author":{"gitId":"NUSDG"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-14"},{"lineNumber":280,"author":{"gitId":"NUSDG"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-14"},{"lineNumber":281,"author":{"gitId":"NUSDG"},"content":"                return true;","lastModifiedDate":"2022-10-14"},{"lineNumber":282,"author":{"gitId":"NUSDG"},"content":"            }","lastModifiedDate":"2022-10-14"},{"lineNumber":283,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":284,"author":{"gitId":"NUSDG"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":285,"author":{"gitId":"NUSDG"},"content":"            if (!(other instanceof CloneCommand.ClonePersonDescriptor)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":286,"author":{"gitId":"NUSDG"},"content":"                return false;","lastModifiedDate":"2022-10-14"},{"lineNumber":287,"author":{"gitId":"NUSDG"},"content":"            }","lastModifiedDate":"2022-10-14"},{"lineNumber":288,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":289,"author":{"gitId":"NUSDG"},"content":"            // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":290,"author":{"gitId":"NUSDG"},"content":"            CloneCommand.ClonePersonDescriptor e \u003d (CloneCommand.ClonePersonDescriptor) other;","lastModifiedDate":"2022-10-19"},{"lineNumber":291,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":292,"author":{"gitId":"NUSDG"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2022-10-19"},{"lineNumber":293,"author":{"gitId":"NUSDG"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2022-10-19"},{"lineNumber":294,"author":{"gitId":"NUSDG"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2022-10-19"},{"lineNumber":295,"author":{"gitId":"NUSDG"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2022-10-19"},{"lineNumber":296,"author":{"gitId":"NUSDG"},"content":"                    \u0026\u0026 getGender().equals(e.getGender())","lastModifiedDate":"2022-10-19"},{"lineNumber":297,"author":{"gitId":"NUSDG"},"content":"                    \u0026\u0026 getBirthdate().equals(e.getBirthdate())","lastModifiedDate":"2022-10-19"},{"lineNumber":298,"author":{"gitId":"NUSDG"},"content":"                    \u0026\u0026 getRace().equals(e.getRace())","lastModifiedDate":"2022-10-19"},{"lineNumber":299,"author":{"gitId":"NUSDG"},"content":"                    \u0026\u0026 getReligion().equals(e.getReligion())","lastModifiedDate":"2022-10-19"},{"lineNumber":300,"author":{"gitId":"NUSDG"},"content":"                    \u0026\u0026 getSurveys().equals(e.getSurveys())","lastModifiedDate":"2022-10-20"},{"lineNumber":301,"author":{"gitId":"NUSDG"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2022-10-19"},{"lineNumber":302,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":303,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":304,"author":{"gitId":"NUSDG"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"NUSDG":300,"ryanlml":4}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.commons.core.Themes.Theme;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"ryanlml"},"content":"    /** Help information for the specified command to be shown. */","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"ryanlml"},"content":"    private final String showHelpFor;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"    /** The theme to change to, null if no change. */","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"    private final Theme theme;","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"    /** Should toggle the list mode */","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"    private final boolean toggleListMode;","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"ryanlml"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, String showHelpFor, boolean exit,","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"ryanlml"},"content":"                         Theme theme, boolean toggleListMode) {","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"ryanlml"},"content":"        this.showHelpFor \u003d showHelpFor;","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"KeithPJX"},"content":"        this.theme \u003d theme;","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"ryanlml"},"content":"        this.toggleListMode \u003d toggleListMode;","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"ryanlml"},"content":"     * Constructs a {@code CommandResult} with the specified fields","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"ryanlml"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"ryanlml"},"content":"    public CommandResult(String feedbackToUser, Theme theme) {","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"ryanlml"},"content":"        this(feedbackToUser, false, \"\", false, theme, false);","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"ryanlml"},"content":"     * Constructs a {@code CommandResult} with the specified fields","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"KeithPJX"},"content":"     * and Optional fields set to empty","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"ryanlml"},"content":"        this(feedbackToUser, showHelp, \"\", exit, null, false);","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"KeithPJX"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean toggleListMode) {","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"ryanlml"},"content":"        this(feedbackToUser, showHelp, \"\", exit, null, toggleListMode);","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"ryanlml"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser}","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"ryanlml"},"content":"        this(feedbackToUser, false, \"\", false, null, false);","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"ryanlml"},"content":"     * Constructs a {@code CommandResult} with the specified fields","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"ryanlml"},"content":"     * and Optional fields set to empty","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"ryanlml"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, String showHelpFor) {","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"ryanlml"},"content":"        this(feedbackToUser, showHelp, showHelpFor, false, null, false);","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"ryanlml"},"content":"    public String getShowHelpFor() {","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"ryanlml"},"content":"        return this.showHelpFor;","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":97,"author":{"gitId":"KeithPJX"},"content":"     * Returns true if theme is not null. Meaning there is a call to change the theme.","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"KeithPJX"},"content":"     * @return true if theme is not null.","lastModifiedDate":"2022-10-25"},{"lineNumber":99,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":100,"author":{"gitId":"KeithPJX"},"content":"    public boolean isThemeChange() {","lastModifiedDate":"2022-10-25"},{"lineNumber":101,"author":{"gitId":"KeithPJX"},"content":"        return theme !\u003d null;","lastModifiedDate":"2022-10-25"},{"lineNumber":102,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":103,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":104,"author":{"gitId":"KeithPJX"},"content":"    public Theme getTheme() {","lastModifiedDate":"2022-10-25"},{"lineNumber":105,"author":{"gitId":"KeithPJX"},"content":"        return theme;","lastModifiedDate":"2022-10-25"},{"lineNumber":106,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":107,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":108,"author":{"gitId":"KeithPJX"},"content":"    public boolean isToggleListMode() {","lastModifiedDate":"2022-10-25"},{"lineNumber":109,"author":{"gitId":"KeithPJX"},"content":"        return toggleListMode;","lastModifiedDate":"2022-10-25"},{"lineNumber":110,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":111,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KeithPJX":27,"ryanlml":32,"-":75}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"deepimpactmir"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"deepimpactmir"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"deepimpactmir"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"deepimpactmir"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"deepimpactmir"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.person.Race;","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.person.Religion;","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"ryanlml"},"content":" * Deletes a person identified using it\u0027s displayed index from Survin.","lastModifiedDate":"2022-11-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"deepimpactmir"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list\"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"deepimpactmir"},"content":"            + \" OR delete all persons satisfying the specified attributes.\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"deepimpactmir"},"content":"            + \"Parameters: INDEX (must be a positive integer) OR [ra/RACE] [re/RELIGION] [s/NAME OF SURVEY]\\n\"","lastModifiedDate":"2022-10-30"},{"lineNumber":33,"author":{"gitId":"deepimpactmir"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\" + \" OR \" + COMMAND_WORD + \" ra/Chinese re/Christian\";","lastModifiedDate":"2022-10-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"deepimpactmir"},"content":"    private final Optional\u003cIndex\u003e targetIndex;","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"deepimpactmir"},"content":"    private final Optional\u003cRace\u003e race;","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"deepimpactmir"},"content":"    private final Optional\u003cReligion\u003e religion;","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"deepimpactmir"},"content":"    private final Optional\u003cSurvey\u003e survey;","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"deepimpactmir"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"deepimpactmir"},"content":"     * Initialises a new DeleteCommand","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"deepimpactmir"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"deepimpactmir"},"content":"     * @param targetIndex","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"deepimpactmir"},"content":"     * @param race","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"deepimpactmir"},"content":"     * @param religion","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"deepimpactmir"},"content":"     * @param survey","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"deepimpactmir"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"deepimpactmir"},"content":"    public DeleteCommand(Optional\u003cIndex\u003e targetIndex, Optional\u003cRace\u003e race, Optional\u003cReligion\u003e religion,","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"deepimpactmir"},"content":"            Optional\u003cSurvey\u003e survey) {","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"deepimpactmir"},"content":"        this.race \u003d race;","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"deepimpactmir"},"content":"        this.religion \u003d religion;","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"deepimpactmir"},"content":"        this.survey \u003d survey;","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"deepimpactmir"},"content":"        if (targetIndex.isPresent()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"deepimpactmir"},"content":"            if (targetIndex.get().getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"deepimpactmir"},"content":"            Person personToDelete \u003d lastShownList.get(targetIndex.get().getZeroBased());","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"ryanlml"},"content":"            model.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"deepimpactmir"},"content":"        Predicate\u003cPerson\u003e predicate \u003d x -\u003e x.getRace().equals(race.orElse(x.getRace()))","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"deepimpactmir"},"content":"                \u0026\u0026 x.getReligion().equals(religion.orElse(x.getReligion()))","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"ryanlml"},"content":"                \u0026\u0026 x.getSurveys().contains(survey.orElse(x.getSurveys().iterator().next()));","lastModifiedDate":"2022-10-18"},{"lineNumber":77,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":78,"author":{"gitId":"deepimpactmir"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-19"},{"lineNumber":79,"author":{"gitId":"deepimpactmir"},"content":"        List\u003cPerson\u003e personList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"deepimpactmir"},"content":"        if (model.getFilteredPersonList().isEmpty()) {","lastModifiedDate":"2022-10-30"},{"lineNumber":81,"author":{"gitId":"deepimpactmir"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-30"},{"lineNumber":82,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":83,"author":{"gitId":"deepimpactmir"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","lastModifiedDate":"2022-10-30"},{"lineNumber":84,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":85,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":86,"author":{"gitId":"deepimpactmir"},"content":"        personList.addAll(model.getFilteredPersonList());","lastModifiedDate":"2022-10-19"},{"lineNumber":87,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":88,"author":{"gitId":"deepimpactmir"},"content":"        for (Person p : personList) {","lastModifiedDate":"2022-10-19"},{"lineNumber":89,"author":{"gitId":"deepimpactmir"},"content":"            if (survey.isPresent() \u0026\u0026 p.hasMultipleSurveys()) {","lastModifiedDate":"2022-11-01"},{"lineNumber":90,"author":{"gitId":"deepimpactmir"},"content":"                Set\u003cSurvey\u003e surveys \u003d p.getSurveys();","lastModifiedDate":"2022-10-19"},{"lineNumber":91,"author":{"gitId":"deepimpactmir"},"content":"                Set\u003cSurvey\u003e editedSurvey \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"deepimpactmir"},"content":"                editedSurvey.addAll(surveys);","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"deepimpactmir"},"content":"                editedSurvey.remove(survey.orElseThrow());","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"deepimpactmir"},"content":"                Person editedPerson \u003d new Person(p.getName(), p.getPhone(), p.getEmail(), p.getAddress(), p.getGender(),","lastModifiedDate":"2022-10-19"},{"lineNumber":96,"author":{"gitId":"deepimpactmir"},"content":"                        p.getBirthdate(), p.getRace(), p.getReligion(), editedSurvey, p.getTags());","lastModifiedDate":"2022-10-19"},{"lineNumber":97,"author":{"gitId":"deepimpactmir"},"content":"                model.setPerson(p, editedPerson);","lastModifiedDate":"2022-10-19"},{"lineNumber":98,"author":{"gitId":"deepimpactmir"},"content":"            } else {","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"deepimpactmir"},"content":"                model.deletePerson(p);","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"deepimpactmir"},"content":"            }","lastModifiedDate":"2022-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":103,"author":{"gitId":"ryanlml"},"content":"        model.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":104,"author":{"gitId":"deepimpactmir"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personList.toString()));","lastModifiedDate":"2022-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"deepimpactmir"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-17"},{"lineNumber":110,"author":{"gitId":"deepimpactmir"},"content":"            return true;","lastModifiedDate":"2022-10-17"},{"lineNumber":111,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":112,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":113,"author":{"gitId":"deepimpactmir"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2022-10-17"},{"lineNumber":114,"author":{"gitId":"deepimpactmir"},"content":"            return false;","lastModifiedDate":"2022-10-17"},{"lineNumber":115,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":116,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":117,"author":{"gitId":"deepimpactmir"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2022-10-17"},{"lineNumber":118,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":119,"author":{"gitId":"deepimpactmir"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex) \u0026\u0026 race.equals(otherDeleteCommand.race)","lastModifiedDate":"2022-10-17"},{"lineNumber":120,"author":{"gitId":"deepimpactmir"},"content":"                \u0026\u0026 religion.equals(otherDeleteCommand.religion) \u0026\u0026 survey.equals(otherDeleteCommand.survey);","lastModifiedDate":"2022-10-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ryanlml":5,"-":45,"deepimpactmir":72}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RACE;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RELIGION;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SURVEY;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Race;","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Religion;","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"KeithPJX"},"content":" * Edits the details of an existing person in Survin.","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"deepimpactmir"},"content":"            + \"Parameters: INDEX (must be a positive integer) \" + \"[\" + PREFIX_NAME + \"NAME] \" + \"[\" + PREFIX_PHONE","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"KeithPJX"},"content":"            + \"PHONE] \" + \"[\" + PREFIX_EMAIL + \"EMAIL] \" + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \" + \"[\" + PREFIX_GENDER","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"KeithPJX"},"content":"            + \"GENDER] \" + \"[\" + PREFIX_BIRTHDATE + \"BIRTHDATE] \" + \"[\" + PREFIX_RACE + \"RACE] \" + \"[\"","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"KeithPJX"},"content":"            + PREFIX_RELIGION + \"RELIGION] \" + \"[\" + PREFIX_SURVEY + \"SURVEY]... \" + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"KeithPJX"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_PHONE + \"91234567 \" + PREFIX_EMAIL + \"johndoe@example.com \"","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"KeithPJX"},"content":"            + PREFIX_SURVEY + \"Environment Survey \" + PREFIX_SURVEY + \"Food Survey\";","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"ryanlml"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in Survin.\";","lastModifiedDate":"2022-11-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"ryanlml"},"content":"        model.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":108,"author":{"gitId":"KeithPJX"},"content":"        Gender updatedGender \u003d editPersonDescriptor.getGender().orElse(personToEdit.getGender());","lastModifiedDate":"2022-10-02"},{"lineNumber":109,"author":{"gitId":"KeithPJX"},"content":"        Birthdate updatedBirthdate \u003d editPersonDescriptor.getBirthdate().orElse(personToEdit.getBirthdate());","lastModifiedDate":"2022-10-02"},{"lineNumber":110,"author":{"gitId":"KeithPJX"},"content":"        Race updatedRace \u003d editPersonDescriptor.getRace().orElse(personToEdit.getRace());","lastModifiedDate":"2022-10-02"},{"lineNumber":111,"author":{"gitId":"KeithPJX"},"content":"        Religion updatedReligion \u003d editPersonDescriptor.getReligion().orElse(personToEdit.getReligion());","lastModifiedDate":"2022-10-02"},{"lineNumber":112,"author":{"gitId":"ryanlml"},"content":"        Set\u003cSurvey\u003e updatedSurvey \u003d editPersonDescriptor.getSurveys().orElse(personToEdit.getSurveys());","lastModifiedDate":"2022-10-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"deepimpactmir"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedGender, updatedBirthdate,","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"deepimpactmir"},"content":"                updatedRace, updatedReligion, updatedSurvey, updatedTags);","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"deepimpactmir"},"content":"        return index.equals(e.index) \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"deepimpactmir"},"content":"     * Stores the details to edit the person with. Each non-empty field value will","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"deepimpactmir"},"content":"     * replace the corresponding field value of the person.","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"KeithPJX"},"content":"        private Gender gender;","lastModifiedDate":"2022-10-02"},{"lineNumber":146,"author":{"gitId":"KeithPJX"},"content":"        private Birthdate birthdate;","lastModifiedDate":"2022-10-02"},{"lineNumber":147,"author":{"gitId":"KeithPJX"},"content":"        private Race race;","lastModifiedDate":"2022-10-02"},{"lineNumber":148,"author":{"gitId":"KeithPJX"},"content":"        private Religion religion;","lastModifiedDate":"2022-10-02"},{"lineNumber":149,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":150,"author":{"gitId":"ryanlml"},"content":"        private Set\u003cSurvey\u003e surveys;","lastModifiedDate":"2022-10-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"deepimpactmir"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":157,"author":{"gitId":"deepimpactmir"},"content":"         * Copy constructor. A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":164,"author":{"gitId":"KeithPJX"},"content":"            setGender(toCopy.gender);","lastModifiedDate":"2022-10-02"},{"lineNumber":165,"author":{"gitId":"KeithPJX"},"content":"            setBirthdate(toCopy.birthdate);","lastModifiedDate":"2022-10-02"},{"lineNumber":166,"author":{"gitId":"KeithPJX"},"content":"            setRace(toCopy.race);","lastModifiedDate":"2022-10-02"},{"lineNumber":167,"author":{"gitId":"KeithPJX"},"content":"            setReligion(toCopy.religion);","lastModifiedDate":"2022-10-02"},{"lineNumber":168,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":169,"author":{"gitId":"ryanlml"},"content":"            setSurveys(toCopy.surveys);","lastModifiedDate":"2022-10-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"KeithPJX"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags,","lastModifiedDate":"2022-10-20"},{"lineNumber":178,"author":{"gitId":"KeithPJX"},"content":"                    gender, birthdate, race, religion, surveys);","lastModifiedDate":"2022-10-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"KeithPJX"},"content":"        public void setGender(Gender gender) {","lastModifiedDate":"2022-10-02"},{"lineNumber":214,"author":{"gitId":"KeithPJX"},"content":"            this.gender \u003d gender;","lastModifiedDate":"2022-10-02"},{"lineNumber":215,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":216,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":217,"author":{"gitId":"KeithPJX"},"content":"        public Optional\u003cGender\u003e getGender() {","lastModifiedDate":"2022-10-02"},{"lineNumber":218,"author":{"gitId":"KeithPJX"},"content":"            return Optional.ofNullable(gender);","lastModifiedDate":"2022-10-02"},{"lineNumber":219,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":220,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":221,"author":{"gitId":"KeithPJX"},"content":"        public void setBirthdate(Birthdate birthdate) {","lastModifiedDate":"2022-10-02"},{"lineNumber":222,"author":{"gitId":"KeithPJX"},"content":"            this.birthdate \u003d birthdate;","lastModifiedDate":"2022-10-02"},{"lineNumber":223,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":224,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":225,"author":{"gitId":"KeithPJX"},"content":"        public Optional\u003cBirthdate\u003e getBirthdate() {","lastModifiedDate":"2022-10-02"},{"lineNumber":226,"author":{"gitId":"KeithPJX"},"content":"            return Optional.ofNullable(birthdate);","lastModifiedDate":"2022-10-02"},{"lineNumber":227,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":228,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":229,"author":{"gitId":"KeithPJX"},"content":"        public void setRace(Race race) {","lastModifiedDate":"2022-10-02"},{"lineNumber":230,"author":{"gitId":"KeithPJX"},"content":"            this.race \u003d race;","lastModifiedDate":"2022-10-02"},{"lineNumber":231,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":232,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":233,"author":{"gitId":"KeithPJX"},"content":"        public Optional\u003cRace\u003e getRace() {","lastModifiedDate":"2022-10-02"},{"lineNumber":234,"author":{"gitId":"KeithPJX"},"content":"            return Optional.ofNullable(race);","lastModifiedDate":"2022-10-02"},{"lineNumber":235,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":236,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":237,"author":{"gitId":"KeithPJX"},"content":"        public void setReligion(Religion religion) {","lastModifiedDate":"2022-10-02"},{"lineNumber":238,"author":{"gitId":"KeithPJX"},"content":"            this.religion \u003d religion;","lastModifiedDate":"2022-10-02"},{"lineNumber":239,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":240,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":241,"author":{"gitId":"KeithPJX"},"content":"        public Optional\u003cReligion\u003e getReligion() {","lastModifiedDate":"2022-10-02"},{"lineNumber":242,"author":{"gitId":"KeithPJX"},"content":"            return Optional.ofNullable(religion);","lastModifiedDate":"2022-10-02"},{"lineNumber":243,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":244,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":245,"author":{"gitId":"ryanlml"},"content":"        /**","lastModifiedDate":"2022-10-18"},{"lineNumber":246,"author":{"gitId":"ryanlml"},"content":"         * Sets {@code surveys} to this object\u0027s {@code surveys}.","lastModifiedDate":"2022-10-18"},{"lineNumber":247,"author":{"gitId":"ryanlml"},"content":"         * A defensive copy of {@code surveys} is used internally.","lastModifiedDate":"2022-10-18"},{"lineNumber":248,"author":{"gitId":"ryanlml"},"content":"         */","lastModifiedDate":"2022-10-18"},{"lineNumber":249,"author":{"gitId":"ryanlml"},"content":"        public void setSurveys(Set\u003cSurvey\u003e surveys) {","lastModifiedDate":"2022-10-18"},{"lineNumber":250,"author":{"gitId":"ryanlml"},"content":"            this.surveys \u003d (surveys !\u003d null) ? new HashSet\u003c\u003e(surveys) : null;","lastModifiedDate":"2022-10-18"},{"lineNumber":251,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":252,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2022-10-18"},{"lineNumber":254,"author":{"gitId":"ryanlml"},"content":"         * Returns an unmodifiable survey set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-18"},{"lineNumber":255,"author":{"gitId":"ryanlml"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-10-18"},{"lineNumber":256,"author":{"gitId":"ryanlml"},"content":"         * Returns {@code Optional#empty()} if {@code surveys} is null.","lastModifiedDate":"2022-10-18"},{"lineNumber":257,"author":{"gitId":"ryanlml"},"content":"         */","lastModifiedDate":"2022-10-18"},{"lineNumber":258,"author":{"gitId":"ryanlml"},"content":"        public Optional\u003cSet\u003cSurvey\u003e\u003e getSurveys() {","lastModifiedDate":"2022-10-18"},{"lineNumber":259,"author":{"gitId":"ryanlml"},"content":"            return (surveys !\u003d null) ? Optional.of(Collections.unmodifiableSet(surveys)) : Optional.empty();","lastModifiedDate":"2022-10-18"},{"lineNumber":260,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":261,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":263,"author":{"gitId":"deepimpactmir"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}. A defensive copy of","lastModifiedDate":"2022-10-12"},{"lineNumber":264,"author":{"gitId":"deepimpactmir"},"content":"         * {@code tags} is used internally.","lastModifiedDate":"2022-10-12"},{"lineNumber":265,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":271,"author":{"gitId":"deepimpactmir"},"content":"         * Returns an unmodifiable tag set, which throws","lastModifiedDate":"2022-10-12"},{"lineNumber":272,"author":{"gitId":"deepimpactmir"},"content":"         * {@code UnsupportedOperationException} if modification is attempted. Returns","lastModifiedDate":"2022-10-12"},{"lineNumber":273,"author":{"gitId":"deepimpactmir"},"content":"         * {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-10-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":294,"author":{"gitId":"deepimpactmir"},"content":"            return getName().equals(e.getName()) \u0026\u0026 getPhone().equals(e.getPhone()) \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2022-10-12"},{"lineNumber":295,"author":{"gitId":"deepimpactmir"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress()) \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2022-10-12"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"KeithPJX":66,"ryanlml":19,"-":197,"deepimpactmir":16}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"ryanlml"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Survin as requested ...\";","lastModifiedDate":"2022-11-04"},{"lineNumber":12,"author":{"gitId":"ryanlml"},"content":"    public static final String MESSAGE_USAGE \u003d \"Exits survin.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"KeithPJX":1,"ryanlml":2,"-":16}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"ryanlml"},"content":"    private final String commandToShowHelp;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"ryanlml"},"content":"    public HelpCommand(String commandToShowHelp) {","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"ryanlml"},"content":"        this.commandToShowHelp \u003d commandToShowHelp;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"ryanlml"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, commandToShowHelp);","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ryanlml":7,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"ryanlml"},"content":" * Lists all persons in Survin to the user.","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"ryanlml"},"content":"    public static final String MESSAGE_USAGE \u003d \"Lists all persons in Survin.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ryanlml":2,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"deepimpactmir"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"deepimpactmir"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"deepimpactmir"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"deepimpactmir"},"content":"import java.util.List;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"deepimpactmir"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"deepimpactmir"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"deepimpactmir"},"content":" * Marks the specified survey of a person as done.","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"deepimpactmir"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"deepimpactmir"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"deepimpactmir"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"deepimpactmir"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"deepimpactmir"},"content":"            + \": Marks survey in the person identified by the index number in the displayed person list as completed\"","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"deepimpactmir"},"content":"            + \"Parameters: INDEX (must be a positive integer), s/NAME OF SURVEY\\n\" + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"deepimpactmir"},"content":"            + \" 1 s/Shopping survey\";","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"deepimpactmir"},"content":"    public static final String MESSAGE_MARK_PERSON_SUCCESS \u003d \"Marked survey as done: %1$s\";","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"deepimpactmir"},"content":"    public static final String MESSAGE_INVALID_SURVEY \u003d \"Wrong survey. Please type in the correct survey name\";","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"deepimpactmir"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"deepimpactmir"},"content":"    private final Survey targetSurvey;","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"deepimpactmir"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"deepimpactmir"},"content":"     * Creates a MarkCommand to mark the specified survey","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"deepimpactmir"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"deepimpactmir"},"content":"     * @param index","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"deepimpactmir"},"content":"     * @param survey","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"deepimpactmir"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"deepimpactmir"},"content":"    public MarkCommand(Index index, Survey survey) {","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"deepimpactmir"},"content":"        targetIndex \u003d index;","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"deepimpactmir"},"content":"        targetSurvey \u003d survey;","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"deepimpactmir"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"deepimpactmir"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"deepimpactmir"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"deepimpactmir"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"deepimpactmir"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"deepimpactmir"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"deepimpactmir"},"content":"        Person targetPerson \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"deepimpactmir"},"content":"        Set\u003cSurvey\u003e surveySet \u003d targetPerson.getSurveys();","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"deepimpactmir"},"content":"        if (!surveySet.stream().anyMatch(x -\u003e x.survey.equals(targetSurvey.survey))) {","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"deepimpactmir"},"content":"            throw new CommandException(MESSAGE_INVALID_SURVEY);","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"deepimpactmir"},"content":"        Person editedPerson \u003d createMarkedPerson(targetPerson, surveySet);","lastModifiedDate":"2022-11-01"},{"lineNumber":61,"author":{"gitId":"deepimpactmir"},"content":"        model.setPerson(targetPerson, editedPerson);","lastModifiedDate":"2022-11-01"},{"lineNumber":62,"author":{"gitId":"ryanlml"},"content":"        model.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":63,"author":{"gitId":"deepimpactmir"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2022-11-01"},{"lineNumber":64,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":65,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":66,"author":{"gitId":"deepimpactmir"},"content":"    private Person createMarkedPerson(Person targetPerson, Set\u003cSurvey\u003e surveySet) {","lastModifiedDate":"2022-11-01"},{"lineNumber":67,"author":{"gitId":"deepimpactmir"},"content":"        Set\u003cSurvey\u003e newSurveySet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"deepimpactmir"},"content":"        for (Survey s : surveySet) {","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"deepimpactmir"},"content":"            if (s.survey.equals(targetSurvey.survey)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"deepimpactmir"},"content":"                Survey newSurvey \u003d new Survey(targetSurvey.survey, true);","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"deepimpactmir"},"content":"                newSurveySet.add(newSurvey);","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"deepimpactmir"},"content":"            } else {","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"deepimpactmir"},"content":"                newSurveySet.add(s);","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"deepimpactmir"},"content":"            }","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"deepimpactmir"},"content":"        Person editedPerson \u003d new Person(targetPerson.getName(), targetPerson.getPhone(), targetPerson.getEmail(),","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"deepimpactmir"},"content":"            targetPerson.getAddress(), targetPerson.getGender(), targetPerson.getBirthdate(),","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"deepimpactmir"},"content":"            targetPerson.getRace(), targetPerson.getReligion(), newSurveySet, targetPerson.getTags());","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"deepimpactmir"},"content":"        return editedPerson;","lastModifiedDate":"2022-11-01"},{"lineNumber":82,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":83,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":84,"author":{"gitId":"deepimpactmir"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":85,"author":{"gitId":"deepimpactmir"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-11-01"},{"lineNumber":86,"author":{"gitId":"deepimpactmir"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-11-01"},{"lineNumber":87,"author":{"gitId":"deepimpactmir"},"content":"            return true;","lastModifiedDate":"2022-11-01"},{"lineNumber":88,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":89,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":90,"author":{"gitId":"deepimpactmir"},"content":"        if (!(other instanceof MarkCommand)) {","lastModifiedDate":"2022-11-01"},{"lineNumber":91,"author":{"gitId":"deepimpactmir"},"content":"            return false;","lastModifiedDate":"2022-11-01"},{"lineNumber":92,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":93,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":94,"author":{"gitId":"deepimpactmir"},"content":"        MarkCommand otherMarkCommand \u003d (MarkCommand) other;","lastModifiedDate":"2022-11-01"},{"lineNumber":95,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":96,"author":{"gitId":"deepimpactmir"},"content":"        return targetIndex.equals(otherMarkCommand.targetIndex) \u0026\u0026 targetSurvey.equals(otherMarkCommand.targetSurvey);","lastModifiedDate":"2022-11-01"},{"lineNumber":97,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"deepimpactmir"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"ryanlml":1,"deepimpactmir":97}},{"path":"src/main/java/seedu/address/logic/commands/ThemeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.commons.core.Themes.Theme;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":" * Changes to theme to the theme given in the argument.","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":" * Currently only Light and Dark theme.","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"public class ThemeCommand extends Command {","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"    public static final String COMMAND_WORD \u003d \"theme\";","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Changes the theme to the specified theme.\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"            + \"Parameters: THEME (only \\\"light\\\" or \\\"dark\\\")\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"            + \"Example: \" + COMMAND_WORD + \" dark OR \" + COMMAND_WORD + \" light\";","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"    public static final String CHANGE_THEME_MESSAGE \u003d \"Changed theme.\";","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"    public static final String CHANGE_THEME_ERROR \u003d \"Specified theme is already selected.\";","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"    private final Theme theme;","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"    public ThemeCommand(Theme theme) {","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"        this.theme \u003d theme;","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"        return new CommandResult(CHANGE_THEME_MESSAGE, theme);","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"KeithPJX"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"KeithPJX"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"KeithPJX"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"KeithPJX"},"content":"                || (other instanceof ThemeCommand","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"                \u0026\u0026 theme.equals(((ThemeCommand) other).theme));","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"KeithPJX":39}},{"path":"src/main/java/seedu/address/logic/commands/ToggleListModeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":" * Toggles the PersonCards between a compacted or an expanded mode.","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"public class ToggleListModeCommand extends Command {","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"    public static final String COMMAND_WORD \u003d \"toggle-list-mode\";","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"            + \": Toggles the entries of the list between a compacted mode or \"","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"            + \"an expanded mode depending on the current mode\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"            + \"Usage: \" + COMMAND_WORD;","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"    public static final String TOGGLED_MODE_MESSAGE \u003d \"Toggled list mode\";","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"        return new CommandResult(TOGGLED_MODE_MESSAGE, false, false, true);","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"KeithPJX":23}},{"path":"src/main/java/seedu/address/logic/commands/UnappendCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SURVEY;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":" * Unappends surveys or tags from an existing person in Survin","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"public class UnappendCommand extends Command {","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"    public static final String COMMAND_WORD \u003d \"unappend\";","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Unappends surveys or tags from the person identified \"","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"            + \"by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"            + \"Parameters: INDEX (must be a positive integer) \" + \"[\" + PREFIX_SURVEY + \"SURVEY]... \"","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\" + \"Example: \" + COMMAND_WORD + \" 1 \" + PREFIX_SURVEY + \"Food Survey \"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"KeithPJX"},"content":"            + PREFIX_SURVEY + \"Environment Survey \" + PREFIX_TAG + \"friend \" + PREFIX_TAG + \"student\";","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"KeithPJX"},"content":"    public static final String MESSAGE_UNAPPEND_SUCCESS \u003d \"Unappended Person: %1$s\";","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"KeithPJX"},"content":"    public static final String MESSAGE_NOT_UNAPPENDED \u003d \"At least one field to unappend must be provided\";","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"KeithPJX"},"content":"    public static final String MESSAGE_SURVEY_TAG_NOT_FOUND \u003d \"Unable to unappend any survey(s) or tag(s)\"","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"KeithPJX"},"content":"            + \" as they do not exist.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"KeithPJX"},"content":"    private final Index index;","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"KeithPJX"},"content":"    private final Set\u003cSurvey\u003e surveysToRemove;","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"KeithPJX"},"content":"    private final Set\u003cTag\u003e tagsToRemove;","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"KeithPJX"},"content":"     * @param index of the person in the filtered person to unappend surveys or tags from","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"KeithPJX"},"content":"     * @param surveysToRemove set of surveys to unappend","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"KeithPJX"},"content":"     * @param tagsToRemove set of tags to unappend","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"KeithPJX"},"content":"    public UnappendCommand(Index index, Set\u003cSurvey\u003e surveysToRemove, Set\u003cTag\u003e tagsToRemove) {","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"KeithPJX"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"KeithPJX"},"content":"        requireNonNull(surveysToRemove);","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"KeithPJX"},"content":"        requireNonNull(tagsToRemove);","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"KeithPJX"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"KeithPJX"},"content":"        this.surveysToRemove \u003d surveysToRemove;","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"KeithPJX"},"content":"        this.tagsToRemove \u003d tagsToRemove;","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"KeithPJX"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"KeithPJX"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"KeithPJX"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"KeithPJX"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"KeithPJX"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"KeithPJX"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"KeithPJX"},"content":"        Person personToUnappend \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"KeithPJX"},"content":"        Person unappendedPerson \u003d createUnappendedPerson(personToUnappend);","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"KeithPJX"},"content":"        if (personToUnappend.equals(unappendedPerson)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"KeithPJX"},"content":"            throw new CommandException(MESSAGE_SURVEY_TAG_NOT_FOUND);","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"KeithPJX"},"content":"        model.setPerson(personToUnappend, unappendedPerson);","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"KeithPJX"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"ryanlml"},"content":"        model.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":77,"author":{"gitId":"KeithPJX"},"content":"        return new CommandResult(String.format(MESSAGE_UNAPPEND_SUCCESS, unappendedPerson));","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"KeithPJX"},"content":"    private Person createUnappendedPerson(Person personToUnappend) {","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"KeithPJX"},"content":"        assert personToUnappend !\u003d null;","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cSurvey\u003e surveys \u003d removeSurveysFromSurveys(personToUnappend.getSurveys(), surveysToRemove);","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cTag\u003e tags \u003d removeTagsFromTags(personToUnappend.getTags(), tagsToRemove);","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"KeithPJX"},"content":"        return new Person(personToUnappend.getName(), personToUnappend.getPhone(), personToUnappend.getEmail(),","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"KeithPJX"},"content":"                personToUnappend.getAddress(), personToUnappend.getGender(), personToUnappend.getBirthdate(),","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"KeithPJX"},"content":"                personToUnappend.getRace(), personToUnappend.getReligion(),","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"KeithPJX"},"content":"                surveys, tags);","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"KeithPJX"},"content":"    private static Set\u003cSurvey\u003e removeSurveysFromSurveys(Set\u003cSurvey\u003e set, Set\u003cSurvey\u003e setToExclude) {","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cSurvey\u003e returnSet \u003d new HashSet\u003cSurvey\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"KeithPJX"},"content":"        for (Survey survey : set) {","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"KeithPJX"},"content":"            boolean isFound \u003d false;","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"KeithPJX"},"content":"            for (Survey excludedSurvey : setToExclude) {","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"KeithPJX"},"content":"                if (survey.survey.equals(excludedSurvey.survey)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"KeithPJX"},"content":"                    isFound \u003d true;","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"KeithPJX"},"content":"                }","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"KeithPJX"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"KeithPJX"},"content":"            if (!isFound) {","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"KeithPJX"},"content":"                returnSet.add(survey);","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"KeithPJX"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"KeithPJX"},"content":"        return returnSet;","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"KeithPJX"},"content":"    private static Set\u003cTag\u003e removeTagsFromTags(Set\u003cTag\u003e set, Set\u003cTag\u003e setToExclude) {","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cTag\u003e returnSet \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"KeithPJX"},"content":"        for (Tag tag : set) {","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"KeithPJX"},"content":"            boolean isFound \u003d false;","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"KeithPJX"},"content":"            for (Tag excludedTag : setToExclude) {","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"KeithPJX"},"content":"                if (tag.tagName.equals(excludedTag.tagName)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":114,"author":{"gitId":"KeithPJX"},"content":"                    isFound \u003d true;","lastModifiedDate":"2022-10-27"},{"lineNumber":115,"author":{"gitId":"KeithPJX"},"content":"                }","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"KeithPJX"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":117,"author":{"gitId":"KeithPJX"},"content":"            if (!isFound) {","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"KeithPJX"},"content":"                returnSet.add(tag);","lastModifiedDate":"2022-10-27"},{"lineNumber":119,"author":{"gitId":"KeithPJX"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":120,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"KeithPJX"},"content":"        return returnSet;","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"KeithPJX":122,"ryanlml":1}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"deepimpactmir"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"deepimpactmir"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"deepimpactmir"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":" * Restores survin to a previous state.","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"deepimpactmir"},"content":" *","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"deepimpactmir"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"deepimpactmir"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"deepimpactmir"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"deepimpactmir"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Undoes the previous command. \\n\" + \"Example: \"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"deepimpactmir"},"content":"            + COMMAND_WORD;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"deepimpactmir"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Undo is successful!\";","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"deepimpactmir"},"content":"    public static final String MESSAGE_CANNOT_UNDO \u003d \"No states to undo to!\";","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"deepimpactmir"},"content":"    public UndoCommand() {","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"deepimpactmir"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"deepimpactmir"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"deepimpactmir"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"ryanlml"},"content":"        if (!model.canUndoSurvin()) {","lastModifiedDate":"2022-11-04"},{"lineNumber":30,"author":{"gitId":"deepimpactmir"},"content":"            throw new CommandException(MESSAGE_CANNOT_UNDO);","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"ryanlml"},"content":"        model.undoSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":34,"author":{"gitId":"deepimpactmir"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"deepimpactmir"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"deepimpactmir"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"ryanlml":3,"deepimpactmir":35}},{"path":"src/main/java/seedu/address/logic/commands/UnmarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"deepimpactmir"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"deepimpactmir"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"deepimpactmir"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"deepimpactmir"},"content":"import java.util.List;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"deepimpactmir"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"deepimpactmir"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"deepimpactmir"},"content":" * Unmarks the specified survey of a person as not done.","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"deepimpactmir"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"deepimpactmir"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"deepimpactmir"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"deepimpactmir"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"deepimpactmir"},"content":"            + \": Unmarks survey in the person identified by the index number in the displayed person list as not done\"","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"deepimpactmir"},"content":"            + \"Parameters: INDEX (must be a positive integer), s/NAME OF SURVEY\\n\" + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"deepimpactmir"},"content":"            + \" 1 s/Shopping survey\";","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"deepimpactmir"},"content":"    public static final String MESSAGE_MARK_PERSON_SUCCESS \u003d \"Unmarked survey as not done: %1$s\";","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"deepimpactmir"},"content":"    public static final String MESSAGE_INVALID_SURVEY \u003d \"Wrong survey. Please type in the correct survey name\";","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"deepimpactmir"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"deepimpactmir"},"content":"    private final Survey targetSurvey;","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"deepimpactmir"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"deepimpactmir"},"content":"     * Creates a UnmarkCommnad to unmark the specified survey","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"deepimpactmir"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"deepimpactmir"},"content":"     * @param index","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"deepimpactmir"},"content":"     * @param survey","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"deepimpactmir"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"deepimpactmir"},"content":"    public UnmarkCommand(Index index, Survey survey) {","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"deepimpactmir"},"content":"        targetIndex \u003d index;","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"deepimpactmir"},"content":"        targetSurvey \u003d survey;","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"deepimpactmir"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"deepimpactmir"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"deepimpactmir"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"deepimpactmir"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"deepimpactmir"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"deepimpactmir"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"deepimpactmir"},"content":"        Person targetPerson \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"deepimpactmir"},"content":"        Set\u003cSurvey\u003e surveySet \u003d targetPerson.getSurveys();","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"deepimpactmir"},"content":"        if (!surveySet.stream().anyMatch(x -\u003e x.survey.equals(targetSurvey.survey))) {","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"deepimpactmir"},"content":"            throw new CommandException(MESSAGE_INVALID_SURVEY);","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"deepimpactmir"},"content":"        Person editedPerson \u003d createUnmarkedPerson(targetPerson, surveySet);","lastModifiedDate":"2022-11-01"},{"lineNumber":61,"author":{"gitId":"deepimpactmir"},"content":"        model.setPerson(targetPerson, editedPerson);","lastModifiedDate":"2022-11-01"},{"lineNumber":62,"author":{"gitId":"ryanlml"},"content":"        model.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":63,"author":{"gitId":"deepimpactmir"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2022-11-01"},{"lineNumber":64,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":65,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":66,"author":{"gitId":"deepimpactmir"},"content":"    private Person createUnmarkedPerson(Person targetPerson, Set\u003cSurvey\u003e surveySet) {","lastModifiedDate":"2022-11-01"},{"lineNumber":67,"author":{"gitId":"deepimpactmir"},"content":"        Set\u003cSurvey\u003e newSurveySet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"deepimpactmir"},"content":"        for (Survey s : surveySet) {","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"deepimpactmir"},"content":"            if (s.survey.equals(targetSurvey.survey)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"deepimpactmir"},"content":"                Survey newSurvey \u003d new Survey(targetSurvey.survey, false);","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"deepimpactmir"},"content":"                newSurveySet.add(newSurvey);","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"deepimpactmir"},"content":"            } else {","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"deepimpactmir"},"content":"                newSurveySet.add(s);","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"deepimpactmir"},"content":"            }","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"deepimpactmir"},"content":"        Person editedPerson \u003d new Person(targetPerson.getName(), targetPerson.getPhone(), targetPerson.getEmail(),","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"deepimpactmir"},"content":"            targetPerson.getAddress(), targetPerson.getGender(), targetPerson.getBirthdate(),","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"deepimpactmir"},"content":"            targetPerson.getRace(), targetPerson.getReligion(), newSurveySet, targetPerson.getTags());","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"deepimpactmir"},"content":"        return editedPerson;","lastModifiedDate":"2022-11-01"},{"lineNumber":82,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":83,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":84,"author":{"gitId":"deepimpactmir"},"content":"    @Override","lastModifiedDate":"2022-11-01"},{"lineNumber":85,"author":{"gitId":"deepimpactmir"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-11-01"},{"lineNumber":86,"author":{"gitId":"deepimpactmir"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-11-01"},{"lineNumber":87,"author":{"gitId":"deepimpactmir"},"content":"            return true;","lastModifiedDate":"2022-11-01"},{"lineNumber":88,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":89,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":90,"author":{"gitId":"deepimpactmir"},"content":"        if (!(other instanceof UnmarkCommand)) {","lastModifiedDate":"2022-11-01"},{"lineNumber":91,"author":{"gitId":"deepimpactmir"},"content":"            return false;","lastModifiedDate":"2022-11-01"},{"lineNumber":92,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":93,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":94,"author":{"gitId":"deepimpactmir"},"content":"        UnmarkCommand otherUnmarkCommand \u003d (UnmarkCommand) other;","lastModifiedDate":"2022-11-01"},{"lineNumber":95,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":96,"author":{"gitId":"deepimpactmir"},"content":"        return targetIndex.equals(otherUnmarkCommand.targetIndex)","lastModifiedDate":"2022-11-01"},{"lineNumber":97,"author":{"gitId":"deepimpactmir"},"content":"            \u0026\u0026 targetSurvey.equals(otherUnmarkCommand.targetSurvey);","lastModifiedDate":"2022-11-01"},{"lineNumber":98,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"deepimpactmir"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"ryanlml":1,"deepimpactmir":98}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlml"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"ryanlml"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RACE;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RELIGION;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SURVEY;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"ryanlml"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.person.PersonContainsAttributePredicate;","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"ryanlml"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"ryanlml"},"content":" * Finds and lists all persons in Survin whose name contains any of the argument keywords.","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"ryanlml"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"ryanlml"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"ryanlml"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"ryanlml"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"ryanlml"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Views all persons whose attributes contain any of \"","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"ryanlml"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"ryanlml"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"ryanlml"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"ryanlml"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"ryanlml"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"ryanlml"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"ryanlml"},"content":"            + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"ryanlml"},"content":"            + PREFIX_BIRTHDATE + \"BIRTHDATE \"","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"ryanlml"},"content":"            + PREFIX_RACE + \"RACE \"","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"ryanlml"},"content":"            + PREFIX_RELIGION + \"RELIGION \"","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"ryanlml"},"content":"            + PREFIX_SURVEY + \"SURVEY \\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"ryanlml"},"content":"            + \"Example: \" + COMMAND_WORD + \" g/female ra/chinese re/christian\";","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"ryanlml"},"content":"    private final PersonContainsAttributePredicate predicate;","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"ryanlml"},"content":"    public ViewCommand(PersonContainsAttributePredicate predicate) {","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"ryanlml"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"ryanlml"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"ryanlml"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"ryanlml"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"ryanlml"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"ryanlml"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"ryanlml"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"ryanlml"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"ryanlml"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"ryanlml"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"ryanlml"},"content":"                || (other instanceof ViewCommand // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"ryanlml"},"content":"                \u0026\u0026 predicate.equals(((ViewCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"ryanlml"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"ryanlml":60}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RACE;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RELIGION;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SURVEY;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Race;","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Religion;","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":44,"author":{"gitId":"KeithPJX"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"KeithPJX"},"content":"                        PREFIX_GENDER, PREFIX_BIRTHDATE, PREFIX_RACE, PREFIX_RELIGION, PREFIX_SURVEY, PREFIX_TAG);","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"KeithPJX"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"KeithPJX"},"content":"                PREFIX_GENDER, PREFIX_BIRTHDATE, PREFIX_RACE, PREFIX_RELIGION)","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"KeithPJX"},"content":"        Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"KeithPJX"},"content":"        Birthdate birthdate \u003d ParserUtil.parseBirthdate(argMultimap.getValue(PREFIX_BIRTHDATE).get());","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"KeithPJX"},"content":"        Race race \u003d ParserUtil.parseRace(argMultimap.getValue(PREFIX_RACE).get());","lastModifiedDate":"2022-10-02"},{"lineNumber":60,"author":{"gitId":"KeithPJX"},"content":"        Religion religion \u003d ParserUtil.parseReligion(argMultimap.getValue(PREFIX_RELIGION).get());","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"ryanlml"},"content":"        Set\u003cSurvey\u003e surveyList \u003d ParserUtil.parseSurveys(argMultimap.getAllValues(PREFIX_SURVEY));","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"ryanlml"},"content":"        Person person \u003d new Person(name, phone, email, address, gender, birthdate, race, religion, surveyList, tagList);","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"KeithPJX":18,"ryanlml":2,"-":57}},{"path":"src/main/java/seedu/address/logic/parser/AppendCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.AppendCommand.MESSAGE_NOT_APPENDED;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SURVEY;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.logic.commands.AppendCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":" * Parses input arguments and creates a new AppendCommand object","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"public class AppendCommandParser implements Parser\u003cAppendCommand\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"    public AppendCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_SURVEY, PREFIX_TAG);","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"KeithPJX"},"content":"        Index index;","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"KeithPJX"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"KeithPJX"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"KeithPJX"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"KeithPJX"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AppendCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"KeithPJX"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_SURVEY) \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_TAG)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"KeithPJX"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_NOT_APPENDED));","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cTag\u003e newTags \u003d parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cSurvey\u003e newSurveys \u003d parseSurveysForEdit(argMultimap.getAllValues(PREFIX_SURVEY));","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"KeithPJX"},"content":"        return new AppendCommand(index, newSurveys, newTags);","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"KeithPJX"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"KeithPJX"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"KeithPJX"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"KeithPJX"},"content":"    public static Set\u003cTag\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"KeithPJX"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"KeithPJX"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"KeithPJX"},"content":"            return Collections.emptySet();","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"KeithPJX"},"content":"        return ParserUtil.parseTags(tags);","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"KeithPJX"},"content":"     * Parses {@code Collection\u003cString\u003e surveys} into a {@code Set\u003cSurvey\u003e} if {@code surveys} is non-empty.","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"KeithPJX"},"content":"     * If {@code surveys} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"KeithPJX"},"content":"     * {@code Set\u003cSurvey\u003e} containing zero surveys.","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"KeithPJX"},"content":"    public static Set\u003cSurvey\u003e parseSurveysForEdit(Collection\u003cString\u003e surveys) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"KeithPJX"},"content":"        assert surveys !\u003d null;","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"KeithPJX"},"content":"        if (surveys.isEmpty()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"KeithPJX"},"content":"            return Collections.emptySet();","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"KeithPJX"},"content":"        return ParserUtil.parseSurveys(surveys);","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"KeithPJX"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"KeithPJX"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"KeithPJX"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"KeithPJX"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"KeithPJX":85}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"g/\");","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"    public static final Prefix PREFIX_BIRTHDATE \u003d new Prefix(\"b/\");","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"    public static final Prefix PREFIX_RACE \u003d new Prefix(\"ra/\");","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"    public static final Prefix PREFIX_RELIGION \u003d new Prefix(\"re/\");","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"    public static final Prefix PREFIX_SURVEY \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"KeithPJX":5,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/CloneCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"NUSDG"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"NUSDG"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RACE;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RELIGION;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SURVEY;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"NUSDG"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"NUSDG"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"NUSDG"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"NUSDG"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"NUSDG"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"NUSDG"},"content":"import seedu.address.logic.commands.CloneCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"NUSDG"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"NUSDG"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"NUSDG"},"content":" * Parses input arguments and creates a new CloneCommand object","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"NUSDG"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"NUSDG"},"content":"public class CloneCommandParser implements Parser\u003cCloneCommand\u003e {","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"NUSDG"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"NUSDG"},"content":"     * Parses the given {@code String} of arguments in the context of the CloneCommand","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"NUSDG"},"content":"     * and returns an CloneCommand object for execution.","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"NUSDG"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"NUSDG"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"NUSDG"},"content":"    public CloneCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"NUSDG"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"NUSDG"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"NUSDG"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"NUSDG"},"content":"                        PREFIX_GENDER, PREFIX_BIRTHDATE, PREFIX_RACE, PREFIX_RELIGION, PREFIX_SURVEY, PREFIX_TAG);","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"NUSDG"},"content":"        Index index;","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"NUSDG"},"content":"        try {","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"NUSDG"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"NUSDG"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"NUSDG"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CloneCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"NUSDG"},"content":"        CloneCommand.ClonePersonDescriptor clonePersonDescriptor \u003d new CloneCommand.ClonePersonDescriptor();","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"NUSDG"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"NUSDG"},"content":"            clonePersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"NUSDG"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"NUSDG"},"content":"            clonePersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"NUSDG"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"NUSDG"},"content":"            clonePersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"NUSDG"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"NUSDG"},"content":"            clonePersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"NUSDG"},"content":"        if (argMultimap.getValue(PREFIX_GENDER).isPresent()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"NUSDG"},"content":"            clonePersonDescriptor.setGender(ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get()));","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"NUSDG"},"content":"        if (argMultimap.getValue(PREFIX_BIRTHDATE).isPresent()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"NUSDG"},"content":"            clonePersonDescriptor.setBirthdate(ParserUtil.parseBirthdate(argMultimap.getValue(PREFIX_BIRTHDATE).get()));","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"NUSDG"},"content":"        if (argMultimap.getValue(PREFIX_RACE).isPresent()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"NUSDG"},"content":"            clonePersonDescriptor.setRace(ParserUtil.parseRace(argMultimap.getValue(PREFIX_RACE).get()));","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"NUSDG"},"content":"        if (argMultimap.getValue(PREFIX_RELIGION).isPresent()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"NUSDG"},"content":"            clonePersonDescriptor.setReligion(ParserUtil.parseReligion(argMultimap.getValue(PREFIX_RELIGION).get()));","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"NUSDG"},"content":"        parseSurveysForClone(argMultimap.getAllValues(PREFIX_SURVEY)).ifPresent(clonePersonDescriptor::setSurveys);","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"NUSDG"},"content":"        parseTagsForClone(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(clonePersonDescriptor::setTags);","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":81,"author":{"gitId":"NUSDG"},"content":"        if (!clonePersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":82,"author":{"gitId":"NUSDG"},"content":"            throw new ParseException(CloneCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-19"},{"lineNumber":83,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"NUSDG"},"content":"        return new CloneCommand(index, clonePersonDescriptor);","lastModifiedDate":"2022-10-19"},{"lineNumber":86,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":88,"author":{"gitId":"NUSDG"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":89,"author":{"gitId":"NUSDG"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2022-10-19"},{"lineNumber":90,"author":{"gitId":"NUSDG"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-10-19"},{"lineNumber":91,"author":{"gitId":"NUSDG"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"NUSDG"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"NUSDG"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForClone(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"NUSDG"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":96,"author":{"gitId":"NUSDG"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":97,"author":{"gitId":"NUSDG"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-19"},{"lineNumber":98,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"NUSDG"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"NUSDG"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2022-10-19"},{"lineNumber":101,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":102,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":103,"author":{"gitId":"NUSDG"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"NUSDG"},"content":"     * Parses {@code Collection\u003cString\u003e surveys} into a {@code Set\u003cSurvey\u003e} if {@code surveys} is non-empty.","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"NUSDG"},"content":"     * If {@code surveys} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"NUSDG"},"content":"     * {@code Set\u003cSurvey\u003e} containing zero surveys.","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"NUSDG"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"NUSDG"},"content":"    private Optional\u003cSet\u003cSurvey\u003e\u003e parseSurveysForClone(Collection\u003cString\u003e surveys) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"NUSDG"},"content":"        assert surveys !\u003d null;","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"NUSDG"},"content":"        if (surveys.isEmpty()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"NUSDG"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"NUSDG"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"NUSDG"},"content":"        Collection\u003cString\u003e surveySet \u003d surveys.size() \u003d\u003d 1 \u0026\u0026 surveys.contains(\"\") ? Collections.emptySet() : surveys;","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"NUSDG"},"content":"        return Optional.of(ParserUtil.parseSurveys(surveySet));","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":118,"author":{"gitId":"NUSDG"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"NUSDG":118}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RACE;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RELIGION;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SURVEY;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"deepimpactmir"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"deepimpactmir"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"deepimpactmir"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.person.Race;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.person.Religion;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"deepimpactmir"},"content":"    private static final String REGEX \u003d \"(?\u003cindex\u003e\\\\d+)\";","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"deepimpactmir"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"deepimpactmir"},"content":"     * DeleteCommand and returns a DeleteCommand object for execution.","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"deepimpactmir"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"deepimpactmir"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_RACE, PREFIX_RELIGION, PREFIX_SURVEY);","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"deepimpactmir"},"content":"        Optional\u003cIndex\u003e index \u003d Optional.empty();","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"deepimpactmir"},"content":"        Optional\u003cRace\u003e race \u003d Optional.empty();","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"deepimpactmir"},"content":"        Optional\u003cReligion\u003e religion \u003d Optional.empty();","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"deepimpactmir"},"content":"        Optional\u003cSurvey\u003e survey \u003d Optional.empty();","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"deepimpactmir"},"content":"        Pattern pattern \u003d Pattern.compile(REGEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"deepimpactmir"},"content":"        Matcher matcher \u003d pattern.matcher(args.trim());","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"deepimpactmir"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"deepimpactmir"},"content":"            if (args.isEmpty() || Character.isDigit(args.trim().charAt(0))) {","lastModifiedDate":"2022-10-30"},{"lineNumber":43,"author":{"gitId":"deepimpactmir"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"deepimpactmir"},"content":"            }","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"deepimpactmir"},"content":"            if (argMultimap.getValue(PREFIX_RACE).isPresent()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"deepimpactmir"},"content":"                race \u003d Optional.of(ParserUtil.parseRace(argMultimap.getValue(PREFIX_RACE).get()));","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"deepimpactmir"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"deepimpactmir"},"content":"            if (argMultimap.getValue(PREFIX_RELIGION).isPresent()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"deepimpactmir"},"content":"                religion \u003d Optional.of(ParserUtil.parseReligion(argMultimap.getValue(PREFIX_RELIGION).get()));","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"deepimpactmir"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"deepimpactmir"},"content":"            if (argMultimap.getValue(PREFIX_SURVEY).isPresent()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"deepimpactmir"},"content":"                survey \u003d Optional.of(ParserUtil.parseSurvey(argMultimap.getValue(PREFIX_SURVEY).get()));","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"deepimpactmir"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"deepimpactmir"},"content":"        } else {","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"deepimpactmir"},"content":"            String indexString \u003d matcher.group(\"index\").strip();","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"deepimpactmir"},"content":"            index \u003d Optional.of(ParserUtil.parseIndex(indexString));","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"deepimpactmir"},"content":"        if (!isAnyAttributePresent(index, race, religion, survey)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"deepimpactmir"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"deepimpactmir"},"content":"        return new DeleteCommand(index, race, religion, survey);","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"deepimpactmir"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"deepimpactmir"},"content":"     * Returns true if at least one attribute is present.","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"deepimpactmir"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"deepimpactmir"},"content":"    private boolean isAnyAttributePresent(Optional\u003cIndex\u003e index, Optional\u003cRace\u003e race, Optional\u003cReligion\u003e religion,","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"deepimpactmir"},"content":"            Optional\u003cSurvey\u003e survey) {","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"deepimpactmir"},"content":"        if (index.isEmpty() \u0026\u0026 race.isEmpty() \u0026\u0026 religion.isEmpty() \u0026\u0026 survey.isEmpty()) {","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"deepimpactmir"},"content":"            return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"deepimpactmir"},"content":"        } else {","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"deepimpactmir"},"content":"            return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":23,"deepimpactmir":53}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RACE;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RELIGION;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SURVEY;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"KeithPJX"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"KeithPJX"},"content":"                        PREFIX_GENDER, PREFIX_BIRTHDATE, PREFIX_RACE, PREFIX_RELIGION, PREFIX_TAG, PREFIX_SURVEY);","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"KeithPJX"},"content":"        if (argMultimap.getValue(PREFIX_GENDER).isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"KeithPJX"},"content":"            editPersonDescriptor.setGender(ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get()));","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"KeithPJX"},"content":"        if (argMultimap.getValue(PREFIX_BIRTHDATE).isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"KeithPJX"},"content":"            editPersonDescriptor.setBirthdate(ParserUtil.parseBirthdate(argMultimap.getValue(PREFIX_BIRTHDATE).get()));","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"KeithPJX"},"content":"        if (argMultimap.getValue(PREFIX_RACE).isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"KeithPJX"},"content":"            editPersonDescriptor.setRace(ParserUtil.parseRace(argMultimap.getValue(PREFIX_RACE).get()));","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"KeithPJX"},"content":"        if (argMultimap.getValue(PREFIX_RELIGION).isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"KeithPJX"},"content":"            editPersonDescriptor.setReligion(ParserUtil.parseReligion(argMultimap.getValue(PREFIX_RELIGION).get()));","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"KeithPJX"},"content":"        parseSurveysForEdit(argMultimap.getAllValues(PREFIX_SURVEY)).ifPresent(editPersonDescriptor::setSurveys);","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":102,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"KeithPJX"},"content":"     * Parses {@code Collection\u003cString\u003e surveys} into a {@code Set\u003cSurvey\u003e} if {@code surveys} is non-empty.","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"KeithPJX"},"content":"     * If {@code surveys} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"KeithPJX"},"content":"     * {@code Set\u003cSurvey\u003e} containing zero surveys.","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"KeithPJX"},"content":"    private Optional\u003cSet\u003cSurvey\u003e\u003e parseSurveysForEdit(Collection\u003cString\u003e surveys) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"KeithPJX"},"content":"        assert surveys !\u003d null;","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"KeithPJX"},"content":"        if (surveys.isEmpty()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"KeithPJX"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"KeithPJX"},"content":"        Collection\u003cString\u003e surveySet \u003d surveys.size() \u003d\u003d 1 \u0026\u0026 surveys.contains(\"\") ? Collections.emptySet() : surveys;","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"KeithPJX"},"content":"        return Optional.of(ParserUtil.parseSurveys(surveySet));","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"KeithPJX":35,"-":81}},{"path":"src/main/java/seedu/address/logic/parser/HelpCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlml"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.AppendCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.CloneCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.ThemeCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.ToggleListModeCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.UnappendCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.UnmarkCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"ryanlml"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"ryanlml"},"content":" * Parses input arguments and creates a new HelpCommand object","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"ryanlml"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"ryanlml"},"content":"public class HelpCommandParser implements Parser\u003cHelpCommand\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"ryanlml"},"content":"     * Parses the given {@code String} of arguments in the context of the HelpCommand","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"ryanlml"},"content":"     * and returns a HelpCommand object for execution.","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"ryanlml"},"content":"     * @throws ParseException if the user input does not match any of the commands in Survin","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"ryanlml"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"ryanlml"},"content":"    public HelpCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"ryanlml"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"ryanlml"},"content":"        switch (trimmedArgs) {","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"ryanlml"},"content":"        case \"\":","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"ryanlml"},"content":"            return new HelpCommand(\"\");","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"ryanlml"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"ryanlml"},"content":"            return new HelpCommand(AddCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"ryanlml"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"ryanlml"},"content":"            return new HelpCommand(EditCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"ryanlml"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"ryanlml"},"content":"            return new HelpCommand(DeleteCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"ryanlml"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"ryanlml"},"content":"            return new HelpCommand(ClearCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"ryanlml"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"ryanlml"},"content":"            return new HelpCommand(ListCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"ryanlml"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"ryanlml"},"content":"            return new HelpCommand(ViewCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"ryanlml"},"content":"        case CloneCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"ryanlml"},"content":"            return new HelpCommand(CloneCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"ryanlml"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"ryanlml"},"content":"            return new HelpCommand(UndoCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"ryanlml"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"ryanlml"},"content":"            return new HelpCommand(MarkCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"ryanlml"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"ryanlml"},"content":"            return new HelpCommand(UnmarkCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"ryanlml"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"ryanlml"},"content":"            return new HelpCommand(ExitCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"ryanlml"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"ryanlml"},"content":"            return new HelpCommand(HelpCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"ryanlml"},"content":"        case ThemeCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"ryanlml"},"content":"            return new HelpCommand(ThemeCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"ryanlml"},"content":"        case AppendCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"ryanlml"},"content":"            return new HelpCommand(AppendCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"ryanlml"},"content":"        case UnappendCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"ryanlml"},"content":"            return new HelpCommand(UnappendCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"ryanlml"},"content":"        case ToggleListModeCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"ryanlml"},"content":"            return new HelpCommand(ToggleListModeCommand.COMMAND_WORD);","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"ryanlml"},"content":"        default:","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"ryanlml"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"ryanlml"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"ryanlml"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"ryanlml":93}},{"path":"src/main/java/seedu/address/logic/parser/MarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"deepimpactmir"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SURVEY;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"deepimpactmir"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"deepimpactmir"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"deepimpactmir"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"deepimpactmir"},"content":" * Parses input arguments and creates a new MarkCommand object","lastModifiedDate":"2022-10-30"},{"lineNumber":16,"author":{"gitId":"deepimpactmir"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"deepimpactmir"},"content":"public class MarkCommandParser implements Parser\u003cMarkCommand\u003e {","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"deepimpactmir"},"content":"    private static final String REGEX \u003d \"(?\u003cindex\u003e\\\\d+)\";","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"deepimpactmir"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"deepimpactmir"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"deepimpactmir"},"content":"     * MarkCommand and returns a MarkCommand object for execution.","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"deepimpactmir"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"deepimpactmir"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"deepimpactmir"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"deepimpactmir"},"content":"    public MarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"deepimpactmir"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_SURVEY);","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"deepimpactmir"},"content":"        Pattern pattern \u003d Pattern.compile(REGEX);","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"deepimpactmir"},"content":"        Matcher matcher \u003d pattern.matcher(args.trim());","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"deepimpactmir"},"content":"        if (!matcher.find() || !argMultimap.getValue(PREFIX_SURVEY).isPresent()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"deepimpactmir"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"deepimpactmir"},"content":"        Index index \u003d ParserUtil.parseIndex(matcher.group(\"index\").strip());","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"deepimpactmir"},"content":"        Survey survey \u003d ParserUtil.parseSurvey(argMultimap.getValue(PREFIX_SURVEY).get());","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"deepimpactmir"},"content":"        return new MarkCommand(index, survey);","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"deepimpactmir"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"deepimpactmir":42}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Race;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Religion;","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d","lastModifiedDate":"2022-10-31"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"            \"Index is not a non-zero unsigned integer or it exceeds 2147483647.\";","lastModifiedDate":"2022-10-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":105,"author":{"gitId":"KeithPJX"},"content":"     * Parses a {@code String gender} into an {@code Gender}.","lastModifiedDate":"2022-10-02"},{"lineNumber":106,"author":{"gitId":"KeithPJX"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-02"},{"lineNumber":107,"author":{"gitId":"KeithPJX"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":108,"author":{"gitId":"KeithPJX"},"content":"     * @throws ParseException if the given {@code gender} is invalid.","lastModifiedDate":"2022-10-02"},{"lineNumber":109,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":110,"author":{"gitId":"KeithPJX"},"content":"    public static Gender parseGender(String gender) throws ParseException {","lastModifiedDate":"2022-10-02"},{"lineNumber":111,"author":{"gitId":"KeithPJX"},"content":"        requireNonNull(gender);","lastModifiedDate":"2022-10-02"},{"lineNumber":112,"author":{"gitId":"KeithPJX"},"content":"        String trimmedGender \u003d gender.trim();","lastModifiedDate":"2022-10-02"},{"lineNumber":113,"author":{"gitId":"KeithPJX"},"content":"        if (!Gender.isValidGender(trimmedGender)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":114,"author":{"gitId":"KeithPJX"},"content":"            throw new ParseException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":115,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":116,"author":{"gitId":"KeithPJX"},"content":"        return new Gender(trimmedGender);","lastModifiedDate":"2022-10-02"},{"lineNumber":117,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":118,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":119,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":120,"author":{"gitId":"KeithPJX"},"content":"     * Parses a {@code String birthdate} into an {@code Birthdate}.","lastModifiedDate":"2022-10-02"},{"lineNumber":121,"author":{"gitId":"KeithPJX"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-02"},{"lineNumber":122,"author":{"gitId":"KeithPJX"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":123,"author":{"gitId":"KeithPJX"},"content":"     * @throws ParseException if the given {@code birthdate} is invalid.","lastModifiedDate":"2022-10-02"},{"lineNumber":124,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":125,"author":{"gitId":"KeithPJX"},"content":"    public static Birthdate parseBirthdate(String birthdate) throws ParseException {","lastModifiedDate":"2022-10-02"},{"lineNumber":126,"author":{"gitId":"KeithPJX"},"content":"        requireNonNull(birthdate);","lastModifiedDate":"2022-10-02"},{"lineNumber":127,"author":{"gitId":"KeithPJX"},"content":"        String trimmedBirthdate \u003d birthdate.trim();","lastModifiedDate":"2022-10-02"},{"lineNumber":128,"author":{"gitId":"KeithPJX"},"content":"        if (!Birthdate.isValidBirthdate(trimmedBirthdate)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":129,"author":{"gitId":"KeithPJX"},"content":"            throw new ParseException(Birthdate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":130,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":131,"author":{"gitId":"KeithPJX"},"content":"        if (!Birthdate.isDateInTheFuture(trimmedBirthdate)) {","lastModifiedDate":"2022-10-30"},{"lineNumber":132,"author":{"gitId":"KeithPJX"},"content":"            throw new ParseException(Birthdate.BIRTHDATE_AFTER_TODAY);","lastModifiedDate":"2022-10-30"},{"lineNumber":133,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-30"},{"lineNumber":134,"author":{"gitId":"KeithPJX"},"content":"        return new Birthdate(trimmedBirthdate);","lastModifiedDate":"2022-10-02"},{"lineNumber":135,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":136,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":137,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":138,"author":{"gitId":"KeithPJX"},"content":"     * Parses a {@code String race} into an {@code Race}.","lastModifiedDate":"2022-10-02"},{"lineNumber":139,"author":{"gitId":"KeithPJX"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-02"},{"lineNumber":140,"author":{"gitId":"KeithPJX"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":141,"author":{"gitId":"KeithPJX"},"content":"     * @throws ParseException if the given {@code race} is invalid.","lastModifiedDate":"2022-10-02"},{"lineNumber":142,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":143,"author":{"gitId":"KeithPJX"},"content":"    public static Race parseRace(String race) throws ParseException {","lastModifiedDate":"2022-10-02"},{"lineNumber":144,"author":{"gitId":"KeithPJX"},"content":"        requireNonNull(race);","lastModifiedDate":"2022-10-02"},{"lineNumber":145,"author":{"gitId":"KeithPJX"},"content":"        String trimmedRace \u003d race.trim();","lastModifiedDate":"2022-10-02"},{"lineNumber":146,"author":{"gitId":"KeithPJX"},"content":"        if (!Race.isValidRace(trimmedRace)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":147,"author":{"gitId":"KeithPJX"},"content":"            throw new ParseException(Race.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":148,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":149,"author":{"gitId":"KeithPJX"},"content":"        return new Race(trimmedRace);","lastModifiedDate":"2022-10-02"},{"lineNumber":150,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":151,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":152,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":153,"author":{"gitId":"KeithPJX"},"content":"     * Parses a {@code String religion} into an {@code Religion}.","lastModifiedDate":"2022-10-02"},{"lineNumber":154,"author":{"gitId":"KeithPJX"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-02"},{"lineNumber":155,"author":{"gitId":"KeithPJX"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":156,"author":{"gitId":"KeithPJX"},"content":"     * @throws ParseException if the given {@code religion} is invalid.","lastModifiedDate":"2022-10-02"},{"lineNumber":157,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":158,"author":{"gitId":"KeithPJX"},"content":"    public static Religion parseReligion(String religion) throws ParseException {","lastModifiedDate":"2022-10-02"},{"lineNumber":159,"author":{"gitId":"KeithPJX"},"content":"        requireNonNull(religion);","lastModifiedDate":"2022-10-02"},{"lineNumber":160,"author":{"gitId":"KeithPJX"},"content":"        String trimmedReligion \u003d religion.trim();","lastModifiedDate":"2022-10-02"},{"lineNumber":161,"author":{"gitId":"KeithPJX"},"content":"        if (!Religion.isValidReligion(trimmedReligion)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":162,"author":{"gitId":"KeithPJX"},"content":"            throw new ParseException(Religion.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":163,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":164,"author":{"gitId":"KeithPJX"},"content":"        return new Religion(trimmedReligion);","lastModifiedDate":"2022-10-02"},{"lineNumber":165,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":166,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":167,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":168,"author":{"gitId":"KeithPJX"},"content":"     * Parses a {@code String survey} into an {@code Survey}.","lastModifiedDate":"2022-10-02"},{"lineNumber":169,"author":{"gitId":"KeithPJX"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-02"},{"lineNumber":170,"author":{"gitId":"KeithPJX"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":171,"author":{"gitId":"KeithPJX"},"content":"     * @throws ParseException if the given {@code survey} is invalid.","lastModifiedDate":"2022-10-02"},{"lineNumber":172,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":173,"author":{"gitId":"KeithPJX"},"content":"    public static Survey parseSurvey(String survey) throws ParseException {","lastModifiedDate":"2022-10-02"},{"lineNumber":174,"author":{"gitId":"KeithPJX"},"content":"        requireNonNull(survey);","lastModifiedDate":"2022-10-02"},{"lineNumber":175,"author":{"gitId":"KeithPJX"},"content":"        String trimmedSurvey \u003d survey.trim();","lastModifiedDate":"2022-10-02"},{"lineNumber":176,"author":{"gitId":"KeithPJX"},"content":"        if (!Survey.isValidSurvey(trimmedSurvey)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":177,"author":{"gitId":"KeithPJX"},"content":"            throw new ParseException(Survey.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":178,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":179,"author":{"gitId":"KeithPJX"},"content":"        return new Survey(trimmedSurvey);","lastModifiedDate":"2022-10-02"},{"lineNumber":180,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":181,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":182,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":183,"author":{"gitId":"ryanlml"},"content":"     * Parses {@code Collection\u003cString\u003e surveys} into a {@code Set\u003cSurvey\u003e}.","lastModifiedDate":"2022-10-18"},{"lineNumber":184,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":185,"author":{"gitId":"ryanlml"},"content":"    public static Set\u003cSurvey\u003e parseSurveys(Collection\u003cString\u003e surveys) throws ParseException {","lastModifiedDate":"2022-10-18"},{"lineNumber":186,"author":{"gitId":"ryanlml"},"content":"        requireNonNull(surveys);","lastModifiedDate":"2022-10-18"},{"lineNumber":187,"author":{"gitId":"ryanlml"},"content":"        final Set\u003cSurvey\u003e surveySet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-18"},{"lineNumber":188,"author":{"gitId":"ryanlml"},"content":"        for (String surveyName : surveys) {","lastModifiedDate":"2022-10-18"},{"lineNumber":189,"author":{"gitId":"ryanlml"},"content":"            surveySet.add(parseSurvey(surveyName));","lastModifiedDate":"2022-10-18"},{"lineNumber":190,"author":{"gitId":"ryanlml"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":191,"author":{"gitId":"ryanlml"},"content":"        return surveySet;","lastModifiedDate":"2022-10-18"},{"lineNumber":192,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":193,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"KeithPJX":85,"ryanlml":12,"-":123}},{"path":"src/main/java/seedu/address/logic/parser/SurvinParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.logic.commands.AppendCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"NUSDG"},"content":"import seedu.address.logic.commands.CloneCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.logic.commands.ThemeCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.logic.commands.ToggleListModeCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.logic.commands.UnappendCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.logic.commands.UnmarkCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"ryanlml"},"content":"public class SurvinParser {","lastModifiedDate":"2022-11-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"ryanlml"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"ryanlml"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"NUSDG"},"content":"        case CloneCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"NUSDG"},"content":"            return new CloneCommandParser().parse(arguments);","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"deepimpactmir"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"deepimpactmir"},"content":"            return new UndoCommandParser().parse(arguments);","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"deepimpactmir"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"deepimpactmir"},"content":"            return new MarkCommandParser().parse(arguments);","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"deepimpactmir"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"deepimpactmir"},"content":"            return new UnmarkCommandParser().parse(arguments);","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"ryanlml"},"content":"            return new HelpCommandParser().parse(arguments);","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":90,"author":{"gitId":"KeithPJX"},"content":"        case ThemeCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"KeithPJX"},"content":"            return new ThemeCommandParser().parse(arguments);","lastModifiedDate":"2022-10-25"},{"lineNumber":92,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":93,"author":{"gitId":"KeithPJX"},"content":"        case AppendCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"KeithPJX"},"content":"            return new AppendCommandParser().parse(arguments);","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"KeithPJX"},"content":"        case UnappendCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"KeithPJX"},"content":"            return new UnappendCommandParser().parse(arguments);","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"KeithPJX"},"content":"        case ToggleListModeCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-25"},{"lineNumber":100,"author":{"gitId":"KeithPJX"},"content":"            return new ToggleListModeCommand();","lastModifiedDate":"2022-10-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KeithPJX":15,"NUSDG":4,"ryanlml":6,"-":70,"deepimpactmir":12}},{"path":"src/main/java/seedu/address/logic/parser/ThemeCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.commons.core.Themes.DARK_THEME_STRING;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.commons.core.Themes.LIGHT_THEME_STRING;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.commons.core.Themes.Theme;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.logic.commands.ThemeCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":" * Parses input arguments and creates a new ThemeCommand object","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"public class ThemeCommandParser implements Parser\u003cThemeCommand\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"     * Parses the given {@code String} of arguments in the context of the ThemeCommand","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"     * and returns a ThemeCommand object for execution.","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"    public ThemeCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"        if (trimmedArgs.equals(LIGHT_THEME_STRING)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"            return new ThemeCommand(Theme.LIGHT);","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"        } else if (trimmedArgs.equals(DARK_THEME_STRING)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"            return new ThemeCommand(Theme.DARK);","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"        } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ThemeCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"KeithPJX":32}},{"path":"src/main/java/seedu/address/logic/parser/UnappendCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.UnappendCommand.MESSAGE_NOT_UNAPPENDED;","lastModifiedDate":"2022-10-30"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.AppendCommandParser.arePrefixesPresent;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.AppendCommandParser.parseSurveysForEdit;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.AppendCommandParser.parseTagsForEdit;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SURVEY;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.logic.commands.UnappendCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":" * Parses input arguments and creates a new UnappendCommand object","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"public class UnappendCommandParser implements Parser\u003cUnappendCommand\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"    public UnappendCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_SURVEY, PREFIX_TAG);","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"KeithPJX"},"content":"        Index index;","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"KeithPJX"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"KeithPJX"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"KeithPJX"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"KeithPJX"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnappendCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-30"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"KeithPJX"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_SURVEY) \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_TAG)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"KeithPJX"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_NOT_UNAPPENDED));","lastModifiedDate":"2022-10-30"},{"lineNumber":41,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cTag\u003e newTags \u003d parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cSurvey\u003e newSurveys \u003d parseSurveysForEdit(argMultimap.getAllValues(PREFIX_SURVEY));","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"KeithPJX"},"content":"        return new UnappendCommand(index, newSurveys, newTags);","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"KeithPJX":48}},{"path":"src/main/java/seedu/address/logic/parser/UndoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"deepimpactmir"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"deepimpactmir"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"deepimpactmir"},"content":" * Parses input arguments and creates a new UndoCommand object","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"deepimpactmir"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"deepimpactmir"},"content":"public class UndoCommandParser implements Parser\u003cUndoCommand\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"deepimpactmir"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"deepimpactmir"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"deepimpactmir"},"content":"     * UndoCommand and returns a UndoCommand object for execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"deepimpactmir"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"deepimpactmir"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"deepimpactmir"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"deepimpactmir"},"content":"    public UndoCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"deepimpactmir"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"deepimpactmir"},"content":"        if (!trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"deepimpactmir"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UndoCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"deepimpactmir"},"content":"        return new UndoCommand();","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"deepimpactmir"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"deepimpactmir":28}},{"path":"src/main/java/seedu/address/logic/parser/UnmarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"deepimpactmir"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SURVEY;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"deepimpactmir"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"deepimpactmir"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.logic.commands.UnmarkCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"deepimpactmir"},"content":"/**","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"deepimpactmir"},"content":" * Parses inuput arguments and creates a new MarkCommand object","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"deepimpactmir"},"content":" */","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"deepimpactmir"},"content":"public class UnmarkCommandParser implements Parser\u003cUnmarkCommand\u003e {","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"deepimpactmir"},"content":"    private static final String REGEX \u003d \"(?\u003cindex\u003e\\\\d+)\";","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"deepimpactmir"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"deepimpactmir"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"deepimpactmir"},"content":"     * MarkCommand and returns a MarkCommand object for execution.","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"deepimpactmir"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"deepimpactmir"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"deepimpactmir"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"deepimpactmir"},"content":"    public UnmarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"deepimpactmir"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_SURVEY);","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"deepimpactmir"},"content":"        Pattern pattern \u003d Pattern.compile(REGEX);","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"deepimpactmir"},"content":"        Matcher matcher \u003d pattern.matcher(args.trim());","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"deepimpactmir"},"content":"        if (!matcher.find() || !argMultimap.getValue(PREFIX_SURVEY).isPresent()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"deepimpactmir"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"deepimpactmir"},"content":"        Index index \u003d ParserUtil.parseIndex(matcher.group(\"index\").strip());","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"deepimpactmir"},"content":"        Survey survey \u003d ParserUtil.parseSurvey(argMultimap.getValue(PREFIX_SURVEY).get());","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"deepimpactmir"},"content":"        return new UnmarkCommand(index, survey);","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"deepimpactmir"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"deepimpactmir":42}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlml"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RACE;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RELIGION;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SURVEY;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"ryanlml"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"ryanlml"},"content":"import java.util.List;","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"ryanlml"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"ryanlml"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"ryanlml"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"ryanlml"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.person.PersonContainsAttributePredicate;","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"ryanlml"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"ryanlml"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2022-10-29"},{"lineNumber":28,"author":{"gitId":"ryanlml"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"ryanlml"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"ryanlml"},"content":"    public static final String MESSAGE_EMPTY_STRING \u003d \"Please specify at least one word for each prefix entered!\";","lastModifiedDate":"2022-10-29"},{"lineNumber":32,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":33,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"ryanlml"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"ryanlml"},"content":"     * and returns a ViewCommand object for execution.","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"ryanlml"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"ryanlml"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"ryanlml"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"ryanlml"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"ryanlml"},"content":"                        PREFIX_GENDER, PREFIX_BIRTHDATE, PREFIX_RACE, PREFIX_RELIGION, PREFIX_SURVEY,","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"ryanlml"},"content":"                        PREFIX_TAG);","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"ryanlml"},"content":"        if (!areAnyPrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"ryanlml"},"content":"                PREFIX_GENDER, PREFIX_BIRTHDATE, PREFIX_RACE, PREFIX_RELIGION, PREFIX_SURVEY,","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"ryanlml"},"content":"                PREFIX_TAG)","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"ryanlml"},"content":"                || !argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"ryanlml"},"content":"                || args.trim().isEmpty()) {","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"ryanlml"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"ryanlml"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"ryanlml"},"content":"        if (!areAllPrefixValuesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2022-10-29"},{"lineNumber":54,"author":{"gitId":"ryanlml"},"content":"                PREFIX_GENDER, PREFIX_BIRTHDATE, PREFIX_RACE, PREFIX_RELIGION, PREFIX_SURVEY,","lastModifiedDate":"2022-10-29"},{"lineNumber":55,"author":{"gitId":"ryanlml"},"content":"                PREFIX_TAG)) {","lastModifiedDate":"2022-10-29"},{"lineNumber":56,"author":{"gitId":"ryanlml"},"content":"            throw new ParseException(MESSAGE_EMPTY_STRING);","lastModifiedDate":"2022-10-29"},{"lineNumber":57,"author":{"gitId":"ryanlml"},"content":"        }","lastModifiedDate":"2022-10-29"},{"lineNumber":58,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":59,"author":{"gitId":"ryanlml"},"content":"        List\u003cString\u003e nameList \u003d getKeywordsAsList(argMultimap.getValue(PREFIX_NAME));","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"ryanlml"},"content":"        List\u003cString\u003e phoneList \u003d getKeywordsAsList(argMultimap.getValue(PREFIX_PHONE));","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"ryanlml"},"content":"        List\u003cString\u003e emailList \u003d getKeywordsAsList(argMultimap.getValue(PREFIX_EMAIL));","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"ryanlml"},"content":"        List\u003cString\u003e addressList \u003d getKeywordsAsList(argMultimap.getValue(PREFIX_ADDRESS));","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"ryanlml"},"content":"        List\u003cString\u003e genderList \u003d getKeywordsAsList(argMultimap.getValue(PREFIX_GENDER));","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"ryanlml"},"content":"        List\u003cString\u003e birthdateList \u003d getKeywordsAsList(argMultimap.getValue(PREFIX_BIRTHDATE));","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"ryanlml"},"content":"        List\u003cString\u003e raceList \u003d getKeywordsAsList(argMultimap.getValue(PREFIX_RACE));","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"ryanlml"},"content":"        List\u003cString\u003e religionList \u003d getKeywordsAsList(argMultimap.getValue(PREFIX_RELIGION));","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"ryanlml"},"content":"        List\u003cString\u003e surveyList \u003d getKeywordsAsList(argMultimap.getValue(PREFIX_SURVEY));","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"ryanlml"},"content":"        List\u003cString\u003e tagList \u003d getKeywordsAsList(argMultimap.getValue(PREFIX_TAG));","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"ryanlml"},"content":"        PersonContainsAttributePredicate predicate \u003d new PersonContainsAttributePredicate(nameList, phoneList,","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"ryanlml"},"content":"                emailList, addressList, genderList, birthdateList, raceList, religionList, surveyList,","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"ryanlml"},"content":"                tagList);","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"ryanlml"},"content":"        return new ViewCommand(predicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"ryanlml"},"content":"     * Parses the given (possibly empty) {@code Optional\u003cString\u003e} of a given prefix.","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"ryanlml"},"content":"     * @return A list of {@code String} of keywords associated to the given prefix.","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"ryanlml"},"content":"    private static List\u003cString\u003e getKeywordsAsList(Optional\u003cString\u003e attributeStringOptional) {","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"ryanlml"},"content":"        return attributeStringOptional","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"ryanlml"},"content":"                .map(ViewCommandParser::parseWithQuotations)","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"ryanlml"},"content":"                .orElse(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"ryanlml"},"content":"     * Parses the given {@code String} of a given prefix with quotation marks.","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"ryanlml"},"content":"     * @return A list of {@code String} of keywords associated to the given prefix, taking into account","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"ryanlml"},"content":"     *     quotation marks to parse exact phrases.","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"ryanlml"},"content":"    //Solution below adapted from https://stackoverflow.com/a/7804472","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"ryanlml"},"content":"    private static List\u003cString\u003e parseWithQuotations(String input) {","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"ryanlml"},"content":"        if (input.trim().isEmpty()) {","lastModifiedDate":"2022-10-29"},{"lineNumber":95,"author":{"gitId":"ryanlml"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-29"},{"lineNumber":96,"author":{"gitId":"ryanlml"},"content":"        }","lastModifiedDate":"2022-10-29"},{"lineNumber":97,"author":{"gitId":"ryanlml"},"content":"        input \u003d input.replaceAll(\"\\\"\", \" \\\" \");","lastModifiedDate":"2022-11-04"},{"lineNumber":98,"author":{"gitId":"ryanlml"},"content":"        ArrayList\u003cString\u003e parsedArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"ryanlml"},"content":"        Matcher m \u003d Pattern.compile(\"\\\\s*([^\\\"]\\\\S*|\\\".+?\\\")\\\\s*\").matcher(input);","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"ryanlml"},"content":"        while (m.find()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"ryanlml"},"content":"            String toAdd \u003d m.group(1).replace(\"\\\"\", \"\").trim();","lastModifiedDate":"2022-11-04"},{"lineNumber":102,"author":{"gitId":"ryanlml"},"content":"            if (!toAdd.isEmpty()) {","lastModifiedDate":"2022-11-04"},{"lineNumber":103,"author":{"gitId":"ryanlml"},"content":"                parsedArray.add(toAdd);","lastModifiedDate":"2022-11-04"},{"lineNumber":104,"author":{"gitId":"ryanlml"},"content":"            }","lastModifiedDate":"2022-11-04"},{"lineNumber":105,"author":{"gitId":"ryanlml"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":106,"author":{"gitId":"ryanlml"},"content":"        return parsedArray;","lastModifiedDate":"2022-10-24"},{"lineNumber":107,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":109,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"ryanlml"},"content":"     * Returns true if some prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"ryanlml"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-08"},{"lineNumber":112,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":113,"author":{"gitId":"ryanlml"},"content":"    private static boolean areAnyPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-08"},{"lineNumber":114,"author":{"gitId":"ryanlml"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-08"},{"lineNumber":115,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":116,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":117,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-29"},{"lineNumber":118,"author":{"gitId":"ryanlml"},"content":"     * Returns true if some prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-29"},{"lineNumber":119,"author":{"gitId":"ryanlml"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-29"},{"lineNumber":120,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-29"},{"lineNumber":121,"author":{"gitId":"ryanlml"},"content":"    private static boolean areAllPrefixValuesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-29"},{"lineNumber":122,"author":{"gitId":"ryanlml"},"content":"        return Stream.of(prefixes)","lastModifiedDate":"2022-10-29"},{"lineNumber":123,"author":{"gitId":"ryanlml"},"content":"                .filter(prefix -\u003e argumentMultimap.getValue(prefix).isPresent())","lastModifiedDate":"2022-10-29"},{"lineNumber":124,"author":{"gitId":"ryanlml"},"content":"                .noneMatch(prefix -\u003e {","lastModifiedDate":"2022-11-04"},{"lineNumber":125,"author":{"gitId":"ryanlml"},"content":"                    String value \u003d argumentMultimap.getValue(prefix).get().trim();","lastModifiedDate":"2022-11-04"},{"lineNumber":126,"author":{"gitId":"ryanlml"},"content":"                    return parseWithQuotations(value).isEmpty();","lastModifiedDate":"2022-11-04"},{"lineNumber":127,"author":{"gitId":"ryanlml"},"content":"                });","lastModifiedDate":"2022-11-04"},{"lineNumber":128,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":129,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":130,"author":{"gitId":"ryanlml"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"ryanlml":130}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"deepimpactmir"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"ryanlml"},"content":"     * Returns the user prefs\u0027 Survin file path.","lastModifiedDate":"2022-11-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"ryanlml"},"content":"    Path getSurvinFilePath();","lastModifiedDate":"2022-11-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"ryanlml"},"content":"     * Sets the user prefs\u0027 Survin file path.","lastModifiedDate":"2022-11-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"ryanlml"},"content":"    void setSurvinFilePath(Path survinFilePath);","lastModifiedDate":"2022-11-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"ryanlml"},"content":"     * Replaces Survin data with the data in {@code survin}.","lastModifiedDate":"2022-11-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"ryanlml"},"content":"    void setSurvin(ReadOnlySurvin survin);","lastModifiedDate":"2022-11-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"ryanlml"},"content":"    /** Returns Survin */","lastModifiedDate":"2022-11-04"},{"lineNumber":54,"author":{"gitId":"ryanlml"},"content":"    ReadOnlySurvin getSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"deepimpactmir"},"content":"     * Returns true if a person with the same identity as {@code person} exists in","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"ryanlml"},"content":"     * the Survin.","lastModifiedDate":"2022-11-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"deepimpactmir"},"content":"    Optional\u003cPerson\u003e getPerson(Person person);","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"ryanlml"},"content":"     * Deletes the given person. The person must exist in Survin.","lastModifiedDate":"2022-11-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"ryanlml"},"content":"     * Adds the given person. {@code person} must not already exist in Survin","lastModifiedDate":"2022-11-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"ryanlml"},"content":"     * {@code target} must exist in Survin. The person identity of","lastModifiedDate":"2022-11-04"},{"lineNumber":77,"author":{"gitId":"ryanlml"},"content":"     * {@code editedPerson} must not be the same as another existing person in Survin.","lastModifiedDate":"2022-11-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"deepimpactmir"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"ryanlml"},"content":"     * Stores the current state of Survin.","lastModifiedDate":"2022-11-04"},{"lineNumber":83,"author":{"gitId":"deepimpactmir"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"ryanlml"},"content":"    void commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":85,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"deepimpactmir"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"ryanlml"},"content":"     * Undoes changes to Survin.","lastModifiedDate":"2022-11-04"},{"lineNumber":88,"author":{"gitId":"deepimpactmir"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"ryanlml"},"content":"    void undoSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":90,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"deepimpactmir"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"ryanlml"},"content":"     * Returns a boolean that indicates whether Survin can be undone.","lastModifiedDate":"2022-11-04"},{"lineNumber":93,"author":{"gitId":"deepimpactmir"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"ryanlml"},"content":"    boolean canUndoSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":95,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"deepimpactmir"},"content":"     * Updates the filter of the filtered person list to filter by the given","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"deepimpactmir"},"content":"     * {@code predicate}.","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"deepimpactmir"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ryanlml":19,"-":71,"deepimpactmir":16}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"deepimpactmir"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"ryanlml"},"content":" * Represents the in-memory model of Survin data.","lastModifiedDate":"2022-11-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"ryanlml"},"content":"    private final VersionedSurvin survin;","lastModifiedDate":"2022-11-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"ryanlml"},"content":"     * Initializes a ModelManager with the given survin and userPrefs.","lastModifiedDate":"2022-11-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"ryanlml"},"content":"    public ModelManager(ReadOnlySurvin survin, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-11-04"},{"lineNumber":31,"author":{"gitId":"ryanlml"},"content":"        requireAllNonNull(survin, userPrefs);","lastModifiedDate":"2022-11-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"ryanlml"},"content":"        logger.fine(\"Initializing with Survin: \" + survin + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-11-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"ryanlml"},"content":"        this.survin \u003d new VersionedSurvin(survin);","lastModifiedDate":"2022-11-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"ryanlml"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.survin.getPersonList());","lastModifiedDate":"2022-11-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"ryanlml"},"content":"        this(new Survin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"deepimpactmir"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"deepimpactmir"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"ryanlml"},"content":"    public Path getSurvinFilePath() {","lastModifiedDate":"2022-11-04"},{"lineNumber":71,"author":{"gitId":"ryanlml"},"content":"        return userPrefs.getSurvinFilePath();","lastModifiedDate":"2022-11-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"ryanlml"},"content":"    public void setSurvinFilePath(Path survinFilePath) {","lastModifiedDate":"2022-11-04"},{"lineNumber":76,"author":{"gitId":"ryanlml"},"content":"        requireNonNull(survinFilePath);","lastModifiedDate":"2022-11-04"},{"lineNumber":77,"author":{"gitId":"ryanlml"},"content":"        userPrefs.setSurvinFilePath(survinFilePath);","lastModifiedDate":"2022-11-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"ryanlml"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Survin","lastModifiedDate":"2022-11-04"},{"lineNumber":81,"author":{"gitId":"deepimpactmir"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"ryanlml"},"content":"    public void setSurvin(ReadOnlySurvin survin) {","lastModifiedDate":"2022-11-04"},{"lineNumber":85,"author":{"gitId":"ryanlml"},"content":"        this.survin.resetData(survin);","lastModifiedDate":"2022-11-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"ryanlml"},"content":"    public ReadOnlySurvin getSurvin() {","lastModifiedDate":"2022-11-04"},{"lineNumber":90,"author":{"gitId":"ryanlml"},"content":"        return survin;","lastModifiedDate":"2022-11-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"ryanlml"},"content":"        return survin.hasPerson(person);","lastModifiedDate":"2022-11-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"deepimpactmir"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"deepimpactmir"},"content":"    public Optional\u003cPerson\u003e getPerson(Person person) {","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"deepimpactmir"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"ryanlml"},"content":"        return survin.getPerson(person);","lastModifiedDate":"2022-11-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"ryanlml"},"content":"        survin.removePerson(target);","lastModifiedDate":"2022-11-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":112,"author":{"gitId":"ryanlml"},"content":"        survin.addPerson(person);","lastModifiedDate":"2022-11-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"ryanlml"},"content":"        survin.setPerson(target, editedPerson);","lastModifiedDate":"2022-11-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"deepimpactmir"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"ryanlml"},"content":"    public void commitSurvin() {","lastModifiedDate":"2022-11-04"},{"lineNumber":125,"author":{"gitId":"ryanlml"},"content":"        survin.commit();","lastModifiedDate":"2022-11-04"},{"lineNumber":126,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"deepimpactmir"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"ryanlml"},"content":"    public void undoSurvin() {","lastModifiedDate":"2022-11-04"},{"lineNumber":130,"author":{"gitId":"ryanlml"},"content":"        survin.undo();","lastModifiedDate":"2022-11-04"},{"lineNumber":131,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"deepimpactmir"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"ryanlml"},"content":"    public boolean canUndoSurvin() {","lastModifiedDate":"2022-11-04"},{"lineNumber":135,"author":{"gitId":"ryanlml"},"content":"        return survin.canUndo();","lastModifiedDate":"2022-11-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"deepimpactmir"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"deepimpactmir"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":142,"author":{"gitId":"deepimpactmir"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"ryanlml"},"content":"     * internal list of {@code versionedSurvin}","lastModifiedDate":"2022-11-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"ryanlml"},"content":"        return survin.equals(other.survin) \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2022-11-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ryanlml":32,"-":125,"deepimpactmir":17}},{"path":"src/main/java/seedu/address/model/ReadOnlySurvin.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"ryanlml"},"content":" * Unmodifiable view of Survin","lastModifiedDate":"2022-11-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"ryanlml"},"content":"public interface ReadOnlySurvin {","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ryanlml":2,"-":15}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"ryanlml"},"content":"    Path getSurvinFilePath();","lastModifiedDate":"2022-11-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"ryanlml":1,"-":15}},{"path":"src/main/java/seedu/address/model/Survin.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"deepimpactmir"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"ryanlml"},"content":" * Wraps all data at the Survin level Duplicates are not allowed (by","lastModifiedDate":"2022-11-04"},{"lineNumber":14,"author":{"gitId":"deepimpactmir"},"content":" * .isSamePerson comparison)","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"ryanlml"},"content":"public class Survin implements ReadOnlySurvin {","lastModifiedDate":"2022-11-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"deepimpactmir"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block,","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"deepimpactmir"},"content":"     * sometimes used to avoid duplication between constructors. See","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"deepimpactmir"},"content":"     * https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"deepimpactmir"},"content":"     * Note that non-static init blocks are not recommended to use. There are other","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"deepimpactmir"},"content":"     * ways to avoid duplication among constructors.","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"ryanlml"},"content":"    public Survin() {","lastModifiedDate":"2022-11-04"},{"lineNumber":33,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"ryanlml"},"content":"     * Creates an Survin using the Persons in the {@code toBeCopied}","lastModifiedDate":"2022-11-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"ryanlml"},"content":"    public Survin(ReadOnlySurvin toBeCopied) {","lastModifiedDate":"2022-11-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"ryanlml"},"content":"     * Resets the existing data of this {@code Survin} with {@code newData}.","lastModifiedDate":"2022-11-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"ryanlml"},"content":"    public void resetData(ReadOnlySurvin newData) {","lastModifiedDate":"2022-11-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"deepimpactmir"},"content":"     * Returns true if a person with the same identity as {@code person} exists in","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"ryanlml"},"content":"     * Survin.","lastModifiedDate":"2022-11-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"deepimpactmir"},"content":"    public Optional\u003cPerson\u003e getPerson(Person person) {","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"deepimpactmir"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"deepimpactmir"},"content":"        return persons.getPerson(person);","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"ryanlml"},"content":"     * Adds a person to Survin. The person must not already exist in Survin","lastModifiedDate":"2022-11-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"deepimpactmir"},"content":"     * Replaces the given person {@code target} in the list with","lastModifiedDate":"2022-10-19"},{"lineNumber":87,"author":{"gitId":"ryanlml"},"content":"     * {@code editedPerson}. {@code target} must exist in Survin. The","lastModifiedDate":"2022-11-04"},{"lineNumber":88,"author":{"gitId":"deepimpactmir"},"content":"     * person identity of {@code editedPerson} must not be the same as another","lastModifiedDate":"2022-10-19"},{"lineNumber":89,"author":{"gitId":"ryanlml"},"content":"     * existing person in Survin.","lastModifiedDate":"2022-11-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"ryanlml"},"content":"     * Removes {@code key} from this {@code Survin}. {@code key} must exist in","lastModifiedDate":"2022-11-04"},{"lineNumber":99,"author":{"gitId":"ryanlml"},"content":"     * Survin.","lastModifiedDate":"2022-11-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"ryanlml"},"content":"                || (other instanceof Survin // instanceof handles nulls","lastModifiedDate":"2022-11-04"},{"lineNumber":122,"author":{"gitId":"ryanlml"},"content":"                        \u0026\u0026 persons.equals(((Survin) other).persons));","lastModifiedDate":"2022-11-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ryanlml":15,"-":98,"deepimpactmir":16}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"ryanlml"},"content":"    private Path survinFilePath \u003d Paths.get(\"data\" , \"survin.json\");","lastModifiedDate":"2022-11-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"ryanlml"},"content":"        setSurvinFilePath(newUserPrefs.getSurvinFilePath());","lastModifiedDate":"2022-11-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"ryanlml"},"content":"    public Path getSurvinFilePath() {","lastModifiedDate":"2022-11-04"},{"lineNumber":51,"author":{"gitId":"ryanlml"},"content":"        return survinFilePath;","lastModifiedDate":"2022-11-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"ryanlml"},"content":"    public void setSurvinFilePath(Path survinFilePath) {","lastModifiedDate":"2022-11-04"},{"lineNumber":55,"author":{"gitId":"ryanlml"},"content":"        requireNonNull(survinFilePath);","lastModifiedDate":"2022-11-04"},{"lineNumber":56,"author":{"gitId":"ryanlml"},"content":"        this.survinFilePath \u003d survinFilePath;","lastModifiedDate":"2022-11-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"ryanlml"},"content":"                \u0026\u0026 survinFilePath.equals(o.survinFilePath);","lastModifiedDate":"2022-11-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"ryanlml"},"content":"        return Objects.hash(guiSettings, survinFilePath);","lastModifiedDate":"2022-11-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"ryanlml"},"content":"        sb.append(\"\\nLocal data file location : \" + survinFilePath);","lastModifiedDate":"2022-11-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ryanlml":10,"-":77}},{"path":"src/main/java/seedu/address/model/VersionedSurvin.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlml"},"content":"package seedu.address.model;","lastModifiedDate":"2022-11-04"},{"lineNumber":2,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":3,"author":{"gitId":"ryanlml"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-11-04"},{"lineNumber":4,"author":{"gitId":"ryanlml"},"content":"import java.util.List;","lastModifiedDate":"2022-11-04"},{"lineNumber":5,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":6,"author":{"gitId":"ryanlml"},"content":"/**","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"ryanlml"},"content":" * Reused from https://github.com/se-edu/addressbook-level4 with small changes.","lastModifiedDate":"2022-11-04"},{"lineNumber":8,"author":{"gitId":"ryanlml"},"content":" *","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"ryanlml"},"content":" * @@author se-edu","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":" */","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":12,"author":{"gitId":"ryanlml"},"content":"public class VersionedSurvin extends Survin {","lastModifiedDate":"2022-11-04"},{"lineNumber":13,"author":{"gitId":"ryanlml"},"content":"    private final List\u003cReadOnlySurvin\u003e survinStateList;","lastModifiedDate":"2022-11-04"},{"lineNumber":14,"author":{"gitId":"ryanlml"},"content":"    private int currentStatePointer;","lastModifiedDate":"2022-11-04"},{"lineNumber":15,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":16,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":17,"author":{"gitId":"ryanlml"},"content":"     * Creates a VersionedSurvin","lastModifiedDate":"2022-11-04"},{"lineNumber":18,"author":{"gitId":"ryanlml"},"content":"     *","lastModifiedDate":"2022-11-04"},{"lineNumber":19,"author":{"gitId":"ryanlml"},"content":"     * @param survin","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"ryanlml"},"content":"    public VersionedSurvin(ReadOnlySurvin survin) {","lastModifiedDate":"2022-11-04"},{"lineNumber":22,"author":{"gitId":"ryanlml"},"content":"        super(survin);","lastModifiedDate":"2022-11-04"},{"lineNumber":23,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":24,"author":{"gitId":"ryanlml"},"content":"        survinStateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-11-04"},{"lineNumber":25,"author":{"gitId":"ryanlml"},"content":"        survinStateList.add(new Survin(survin));","lastModifiedDate":"2022-11-04"},{"lineNumber":26,"author":{"gitId":"ryanlml"},"content":"        currentStatePointer \u003d 0;","lastModifiedDate":"2022-11-04"},{"lineNumber":27,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":29,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":30,"author":{"gitId":"ryanlml"},"content":"     * Commits the current survin state into {@code survinStateList}.","lastModifiedDate":"2022-11-04"},{"lineNumber":31,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":32,"author":{"gitId":"ryanlml"},"content":"    public void commit() {","lastModifiedDate":"2022-11-04"},{"lineNumber":33,"author":{"gitId":"ryanlml"},"content":"        removeUndoneStates();","lastModifiedDate":"2022-11-04"},{"lineNumber":34,"author":{"gitId":"ryanlml"},"content":"        survinStateList.add(new Survin(this));","lastModifiedDate":"2022-11-04"},{"lineNumber":35,"author":{"gitId":"ryanlml"},"content":"        currentStatePointer++;","lastModifiedDate":"2022-11-04"},{"lineNumber":36,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":37,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":38,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":39,"author":{"gitId":"ryanlml"},"content":"     * Restores survin to a previous state if survin is undoable.","lastModifiedDate":"2022-11-04"},{"lineNumber":40,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":41,"author":{"gitId":"ryanlml"},"content":"    public void undo() {","lastModifiedDate":"2022-11-04"},{"lineNumber":42,"author":{"gitId":"ryanlml"},"content":"        assert canUndo() : \"should be undoable\";","lastModifiedDate":"2022-11-04"},{"lineNumber":43,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":44,"author":{"gitId":"ryanlml"},"content":"        currentStatePointer--;","lastModifiedDate":"2022-11-04"},{"lineNumber":45,"author":{"gitId":"ryanlml"},"content":"        resetData(survinStateList.get(currentStatePointer));","lastModifiedDate":"2022-11-04"},{"lineNumber":46,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":47,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":48,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":49,"author":{"gitId":"ryanlml"},"content":"     * Returns true if there exists previous states that we can undo to.","lastModifiedDate":"2022-11-04"},{"lineNumber":50,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":51,"author":{"gitId":"ryanlml"},"content":"    public boolean canUndo() {","lastModifiedDate":"2022-11-04"},{"lineNumber":52,"author":{"gitId":"ryanlml"},"content":"        return currentStatePointer \u003e 0;","lastModifiedDate":"2022-11-04"},{"lineNumber":53,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":54,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":55,"author":{"gitId":"ryanlml"},"content":"    @Override","lastModifiedDate":"2022-11-04"},{"lineNumber":56,"author":{"gitId":"ryanlml"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-11-04"},{"lineNumber":57,"author":{"gitId":"ryanlml"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-11-04"},{"lineNumber":58,"author":{"gitId":"ryanlml"},"content":"            return true;","lastModifiedDate":"2022-11-04"},{"lineNumber":59,"author":{"gitId":"ryanlml"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":60,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":61,"author":{"gitId":"ryanlml"},"content":"        if (!(other instanceof VersionedSurvin)) {","lastModifiedDate":"2022-11-04"},{"lineNumber":62,"author":{"gitId":"ryanlml"},"content":"            return false;","lastModifiedDate":"2022-11-04"},{"lineNumber":63,"author":{"gitId":"ryanlml"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":64,"author":{"gitId":"ryanlml"},"content":"        VersionedSurvin otherVersionedSurvin \u003d (VersionedSurvin) other;","lastModifiedDate":"2022-11-04"},{"lineNumber":65,"author":{"gitId":"ryanlml"},"content":"        return super.equals(otherVersionedSurvin)","lastModifiedDate":"2022-11-04"},{"lineNumber":66,"author":{"gitId":"ryanlml"},"content":"                \u0026\u0026 survinStateList.equals(otherVersionedSurvin.survinStateList)","lastModifiedDate":"2022-11-04"},{"lineNumber":67,"author":{"gitId":"ryanlml"},"content":"                \u0026\u0026 currentStatePointer \u003d\u003d otherVersionedSurvin.currentStatePointer;","lastModifiedDate":"2022-11-04"},{"lineNumber":68,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":69,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":70,"author":{"gitId":"ryanlml"},"content":"    private void removeUndoneStates() {","lastModifiedDate":"2022-11-04"},{"lineNumber":71,"author":{"gitId":"ryanlml"},"content":"        for (int i \u003d currentStatePointer + 1; i \u003c survinStateList.size(); ++i) {","lastModifiedDate":"2022-11-04"},{"lineNumber":72,"author":{"gitId":"ryanlml"},"content":"            survinStateList.remove(i);","lastModifiedDate":"2022-11-04"},{"lineNumber":73,"author":{"gitId":"ryanlml"},"content":"        }","lastModifiedDate":"2022-11-04"},{"lineNumber":74,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":75,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":76,"author":{"gitId":"ryanlml"},"content":"}","lastModifiedDate":"2022-11-04"}],"authorContributionMap":{"ryanlml":76}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"ryanlml"},"content":" * Represents a Person\u0027s address in Survin.","lastModifiedDate":"2022-11-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ryanlml":1,"-":56}},{"path":"src/main/java/seedu/address/model/person/Birthdate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":" * Represents a Person\u0027s birthdate in the application.","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBirthdate(String)}","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"public class Birthdate {","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"            \"Birthdate should be in the format of yyyy-mm-dd, it should be a valid date, and it should not be blank.\";","lastModifiedDate":"2022-10-30"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"    public static final String BIRTHDATE_AFTER_TODAY \u003d \"Birthdate should not be in the future.\";","lastModifiedDate":"2022-10-30"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"    private static final String DATE_FORMAT \u003d \"y-M-d\";","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"    public final LocalDate birthdate;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"     * Constructs a {@code Birthdate}.","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"     * @param birthdate A valid birthdate, in the form dd-mm-yyyy.","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"    public Birthdate(String birthdate) {","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"        requireNonNull(birthdate);","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"KeithPJX"},"content":"        checkArgument(isValidBirthdate(birthdate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"        checkArgument(isDateInTheFuture(birthdate), BIRTHDATE_AFTER_TODAY);","lastModifiedDate":"2022-10-30"},{"lineNumber":33,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":34,"author":{"gitId":"KeithPJX"},"content":"        this.birthdate \u003d LocalDate.parse(birthdate, DateTimeFormatter.ofPattern(DATE_FORMAT));;","lastModifiedDate":"2022-10-30"},{"lineNumber":35,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"KeithPJX"},"content":"     * Returns true if a given string is a valid birthdate.","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"KeithPJX"},"content":"    public static boolean isValidBirthdate(String test) {","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"KeithPJX"},"content":"        try {","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"KeithPJX"},"content":"            LocalDate.parse(test, DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"KeithPJX"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"KeithPJX"},"content":"            return false;","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"KeithPJX"},"content":"        return true;","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-30"},{"lineNumber":50,"author":{"gitId":"KeithPJX"},"content":"     * Returns true if given string which is assumed to be a valid date of the format y-M-d","lastModifiedDate":"2022-10-30"},{"lineNumber":51,"author":{"gitId":"KeithPJX"},"content":"     * is in the future. Meaning the date has not passed, and it is not today.","lastModifiedDate":"2022-10-30"},{"lineNumber":52,"author":{"gitId":"KeithPJX"},"content":"     * @param test string which is assumed to be a valid date of the format y-M-d","lastModifiedDate":"2022-10-30"},{"lineNumber":53,"author":{"gitId":"KeithPJX"},"content":"     * @return true of given date is in the future","lastModifiedDate":"2022-10-30"},{"lineNumber":54,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-30"},{"lineNumber":55,"author":{"gitId":"KeithPJX"},"content":"    public static boolean isDateInTheFuture(String test) {","lastModifiedDate":"2022-10-30"},{"lineNumber":56,"author":{"gitId":"KeithPJX"},"content":"        LocalDate dateNow \u003d LocalDate.now();","lastModifiedDate":"2022-10-30"},{"lineNumber":57,"author":{"gitId":"KeithPJX"},"content":"        LocalDate parsedDate \u003d LocalDate.parse(test, DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2022-10-30"},{"lineNumber":58,"author":{"gitId":"KeithPJX"},"content":"        return parsedDate.isBefore(dateNow) || parsedDate.isEqual(dateNow);","lastModifiedDate":"2022-10-30"},{"lineNumber":59,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-30"},{"lineNumber":60,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":61,"author":{"gitId":"KeithPJX"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"KeithPJX"},"content":"    public String toString() {","lastModifiedDate":"2022-10-02"},{"lineNumber":63,"author":{"gitId":"KeithPJX"},"content":"        return birthdate.format(DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2022-10-02"},{"lineNumber":64,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"KeithPJX"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":67,"author":{"gitId":"KeithPJX"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":68,"author":{"gitId":"KeithPJX"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":69,"author":{"gitId":"KeithPJX"},"content":"                || (other instanceof Birthdate // instanceof handles nulls","lastModifiedDate":"2022-10-02"},{"lineNumber":70,"author":{"gitId":"KeithPJX"},"content":"                \u0026\u0026 birthdate.equals(((Birthdate) other).birthdate)); // state check","lastModifiedDate":"2022-10-02"},{"lineNumber":71,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":72,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":73,"author":{"gitId":"KeithPJX"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":74,"author":{"gitId":"KeithPJX"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":75,"author":{"gitId":"KeithPJX"},"content":"        return birthdate.hashCode();","lastModifiedDate":"2022-10-02"},{"lineNumber":76,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":77,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"KeithPJX":77}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"ryanlml"},"content":" * Represents a Person\u0027s email in Survin.","lastModifiedDate":"2022-11-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ryanlml":1,"-":70}},{"path":"src/main/java/seedu/address/model/person/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":" * Represents a Person\u0027s gender in the application.","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGender(String)}","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"public class Gender {","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"            \"Gender should only be \u0027male\u0027, \u0027female\u0027, or \u0027others\u0027, and it should not be blank\";","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"    private static final String MALE \u003d \"male\";","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"    private static final String FEMALE \u003d \"female\";","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"    private static final String OTHERS \u003d \"others\";","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"    public final String gender;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"     * Constructs a {@code Gender}.","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"     * @param gender A valid gender.","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"    public Gender(String gender) {","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"        requireNonNull(gender);","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"        checkArgument(isValidGender(gender), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"     * Returns true if a given string is a valid gender.","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"KeithPJX"},"content":"    public static boolean isValidGender(String test) {","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"KeithPJX"},"content":"        return test.equals(MALE) || test.equals(FEMALE) || test.equals(OTHERS);","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"KeithPJX"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"KeithPJX"},"content":"    public String toString() {","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"KeithPJX"},"content":"        return gender;","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"KeithPJX"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"KeithPJX"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"KeithPJX"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"KeithPJX"},"content":"                || (other instanceof Gender // instanceof handles nulls","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"KeithPJX"},"content":"                \u0026\u0026 gender.equals(((Gender) other).gender)); // state check","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"KeithPJX"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"KeithPJX"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"KeithPJX"},"content":"        return gender.hashCode();","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"KeithPJX":54}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"ryanlml"},"content":" * Represents a Person\u0027s name in Survin.","lastModifiedDate":"2022-11-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ryanlml":1,"-":57}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"ryanlml"},"content":" * Represents a Person in Survin. Guarantees: details are present and","lastModifiedDate":"2022-11-04"},{"lineNumber":14,"author":{"gitId":"deepimpactmir"},"content":" * not null, field values are validated, immutable.","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"    private final Gender gender;","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"    private final Birthdate birthdate;","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"    private final Race race;","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"    private final Religion religion;","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"ryanlml"},"content":"    private final Set\u003cSurvey\u003e surveys \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"deepimpactmir"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Gender gender, Birthdate birthdate, Race race,","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"ryanlml"},"content":"            Religion religion, Set\u003cSurvey\u003e surveys, Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"deepimpactmir"},"content":"        requireAllNonNull(name, phone, email, address, gender, birthdate, race, religion, surveys, tags);","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"KeithPJX"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"KeithPJX"},"content":"        this.birthdate \u003d birthdate;","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"KeithPJX"},"content":"        this.race \u003d race;","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"KeithPJX"},"content":"        this.religion \u003d religion;","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"ryanlml"},"content":"        this.surveys.addAll(surveys);","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":66,"author":{"gitId":"KeithPJX"},"content":"    public Gender getGender() {","lastModifiedDate":"2022-10-02"},{"lineNumber":67,"author":{"gitId":"KeithPJX"},"content":"        return gender;","lastModifiedDate":"2022-10-02"},{"lineNumber":68,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":69,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":70,"author":{"gitId":"KeithPJX"},"content":"    public Birthdate getBirthdate() {","lastModifiedDate":"2022-10-02"},{"lineNumber":71,"author":{"gitId":"KeithPJX"},"content":"        return birthdate;","lastModifiedDate":"2022-10-02"},{"lineNumber":72,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":73,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":74,"author":{"gitId":"KeithPJX"},"content":"    public Race getRace() {","lastModifiedDate":"2022-10-02"},{"lineNumber":75,"author":{"gitId":"KeithPJX"},"content":"        return race;","lastModifiedDate":"2022-10-02"},{"lineNumber":76,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":77,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":78,"author":{"gitId":"KeithPJX"},"content":"    public Religion getReligion() {","lastModifiedDate":"2022-10-02"},{"lineNumber":79,"author":{"gitId":"KeithPJX"},"content":"        return religion;","lastModifiedDate":"2022-10-02"},{"lineNumber":80,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":81,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":83,"author":{"gitId":"deepimpactmir"},"content":"     * Returns an immutable survey set, which throws","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"deepimpactmir"},"content":"     * {@code UnsupportedOperationException} if modification is attempted.","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":86,"author":{"gitId":"ryanlml"},"content":"    public Set\u003cSurvey\u003e getSurveys() {","lastModifiedDate":"2022-10-18"},{"lineNumber":87,"author":{"gitId":"ryanlml"},"content":"        return Collections.unmodifiableSet(surveys);","lastModifiedDate":"2022-10-18"},{"lineNumber":88,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":89,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":90,"author":{"gitId":"deepimpactmir"},"content":"    public boolean hasMultipleSurveys() {","lastModifiedDate":"2022-10-19"},{"lineNumber":91,"author":{"gitId":"deepimpactmir"},"content":"        return surveys.size() \u003e 1;","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":95,"author":{"gitId":"deepimpactmir"},"content":"     * Returns an immutable tag set, which throws","lastModifiedDate":"2022-10-19"},{"lineNumber":96,"author":{"gitId":"deepimpactmir"},"content":"     * {@code UnsupportedOperationException} if modification is attempted.","lastModifiedDate":"2022-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"deepimpactmir"},"content":"     * Returns true if the following fields between both persons are equal","lastModifiedDate":"2022-10-19"},{"lineNumber":104,"author":{"gitId":"deepimpactmir"},"content":"     * (case-sensitive): 1. Name 2. Phone number 3. Email 4. Survey This defines a","lastModifiedDate":"2022-10-19"},{"lineNumber":105,"author":{"gitId":"deepimpactmir"},"content":"     * weaker notion of equality between two persons.","lastModifiedDate":"2022-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"deepimpactmir"},"content":"        return otherPerson !\u003d null \u0026\u0026 otherPerson.getName().equals(getName())","lastModifiedDate":"2022-10-19"},{"lineNumber":113,"author":{"gitId":"deepimpactmir"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone()) \u0026\u0026 otherPerson.getEmail().equals(getEmail());","lastModifiedDate":"2022-10-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"deepimpactmir"},"content":"     * Returns true if both persons have the same identity and data fields. This","lastModifiedDate":"2022-10-19"},{"lineNumber":118,"author":{"gitId":"deepimpactmir"},"content":"     * defines a stronger notion of equality between two persons.","lastModifiedDate":"2022-10-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"deepimpactmir"},"content":"        return otherPerson.getName().equals(getName()) \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2022-10-19"},{"lineNumber":132,"author":{"gitId":"deepimpactmir"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail()) \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2022-10-19"},{"lineNumber":133,"author":{"gitId":"deepimpactmir"},"content":"                \u0026\u0026 otherPerson.getGender().equals(getGender()) \u0026\u0026 otherPerson.getBirthdate().equals(getBirthdate())","lastModifiedDate":"2022-10-19"},{"lineNumber":134,"author":{"gitId":"deepimpactmir"},"content":"                \u0026\u0026 otherPerson.getRace().equals(getRace()) \u0026\u0026 otherPerson.getReligion().equals(getReligion())","lastModifiedDate":"2022-10-19"},{"lineNumber":135,"author":{"gitId":"deepimpactmir"},"content":"                \u0026\u0026 otherPerson.getSurveys().equals(getSurveys()) \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2022-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"deepimpactmir"},"content":"        return Objects.hash(name, phone, email, address, gender, birthdate, race, religion, surveys, tags);","lastModifiedDate":"2022-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"deepimpactmir"},"content":"        builder.append(getName()).append(\"; Phone: \").append(getPhone()).append(\"; Email: \").append(getEmail())","lastModifiedDate":"2022-10-19"},{"lineNumber":148,"author":{"gitId":"deepimpactmir"},"content":"                .append(\"; Address: \").append(getAddress()).append(\"; Gender: \").append(getGender())","lastModifiedDate":"2022-10-19"},{"lineNumber":149,"author":{"gitId":"deepimpactmir"},"content":"                .append(\"; Birthdate: \").append(getBirthdate()).append(\"; Race: \").append(getRace())","lastModifiedDate":"2022-10-19"},{"lineNumber":150,"author":{"gitId":"deepimpactmir"},"content":"                .append(\"; Religion: \").append(getReligion());","lastModifiedDate":"2022-10-19"},{"lineNumber":151,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":152,"author":{"gitId":"ryanlml"},"content":"        Set\u003cSurvey\u003e surveys \u003d getSurveys();","lastModifiedDate":"2022-10-18"},{"lineNumber":153,"author":{"gitId":"ryanlml"},"content":"        if (!surveys.isEmpty()) {","lastModifiedDate":"2022-10-18"},{"lineNumber":154,"author":{"gitId":"ryanlml"},"content":"            builder.append(\"; Surveys: \");","lastModifiedDate":"2022-10-18"},{"lineNumber":155,"author":{"gitId":"ryanlml"},"content":"            surveys.forEach(builder::append);","lastModifiedDate":"2022-10-18"},{"lineNumber":156,"author":{"gitId":"ryanlml"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"KeithPJX":27,"ryanlml":12,"-":99,"deepimpactmir":28}},{"path":"src/main/java/seedu/address/model/person/PersonContainsAttributePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlml"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"ryanlml"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"ryanlml"},"content":"import java.util.List;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"ryanlml"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"ryanlml"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-29"},{"lineNumber":7,"author":{"gitId":"ryanlml"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-29"},{"lineNumber":8,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-30"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":11,"author":{"gitId":"ryanlml"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"ryanlml"},"content":" * Tests that a {@code Person}\u0027s attributes matches any of the keywords given for each attribute.","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"ryanlml"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"ryanlml"},"content":"public class PersonContainsAttributePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"ryanlml"},"content":"    private final List\u003cString\u003e nameList;","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"ryanlml"},"content":"    private final List\u003cString\u003e phoneList;","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"ryanlml"},"content":"    private final List\u003cString\u003e emailList;","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"ryanlml"},"content":"    private final List\u003cString\u003e addressList;","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"ryanlml"},"content":"    private final List\u003cString\u003e genderList;","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"ryanlml"},"content":"    private final List\u003cString\u003e birthdateList;","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"ryanlml"},"content":"    private final List\u003cString\u003e raceList;","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"ryanlml"},"content":"    private final List\u003cString\u003e religionList;","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"ryanlml"},"content":"    private final List\u003cString\u003e surveysList;","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"ryanlml"},"content":"    private final List\u003cString\u003e tagsList;","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"ryanlml"},"content":"     * Every field must be non-null.","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"ryanlml"},"content":"    public PersonContainsAttributePredicate(List\u003cString\u003e nameList, List\u003cString\u003e phoneList, List\u003cString\u003e emailList,","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"ryanlml"},"content":"                                        List\u003cString\u003e addressList, List\u003cString\u003e genderList, List\u003cString\u003e birthdateList,","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"ryanlml"},"content":"                                        List\u003cString\u003e raceList, List\u003cString\u003e religionList, List\u003cString\u003e surveysList,","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"ryanlml"},"content":"                                        List\u003cString\u003e tagsList) {","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"ryanlml"},"content":"        this.nameList \u003d nameList;","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"ryanlml"},"content":"        this.phoneList \u003d phoneList;","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"ryanlml"},"content":"        this.emailList \u003d emailList;","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"ryanlml"},"content":"        this.addressList \u003d addressList;","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"ryanlml"},"content":"        this.genderList \u003d genderList;","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"ryanlml"},"content":"        this.birthdateList \u003d birthdateList;","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"ryanlml"},"content":"        this.raceList \u003d raceList;","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"ryanlml"},"content":"        this.religionList \u003d religionList;","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"ryanlml"},"content":"        this.surveysList \u003d surveysList;","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"ryanlml"},"content":"        this.tagsList \u003d tagsList;","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"ryanlml"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"ryanlml"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"ryanlml"},"content":"        boolean containsName \u003d nameList.isEmpty() || nameList.stream()","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"ryanlml"},"content":"                .anyMatch(containsIgnoreCase(person.getName().toString()));","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"ryanlml"},"content":"        boolean containsPhone \u003d phoneList.isEmpty() || phoneList.stream()","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"ryanlml"},"content":"                .anyMatch(containsIgnoreCase(person.getPhone().toString()));","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"ryanlml"},"content":"        boolean containsEmail \u003d emailList.isEmpty() || emailList.stream()","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"ryanlml"},"content":"                .anyMatch(email -\u003e person.getEmail().toString().contains(email));","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"ryanlml"},"content":"        boolean containsAddress \u003d addressList.isEmpty() || addressList.stream()","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"ryanlml"},"content":"                .anyMatch(containsIgnoreCase(person.getAddress().toString()));","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"ryanlml"},"content":"        boolean containsGender \u003d genderList.isEmpty() || genderList.stream()","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"ryanlml"},"content":"                .anyMatch(containsIgnoreCase(person.getGender().toString()));","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"ryanlml"},"content":"        boolean containsBirthdate \u003d birthdateList.isEmpty() || birthdateList.stream()","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"ryanlml"},"content":"                .anyMatch(birthdate -\u003e person.getBirthdate().toString().contains(birthdate));","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"ryanlml"},"content":"        boolean containsRace \u003d raceList.isEmpty() || raceList.stream()","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"ryanlml"},"content":"                .anyMatch(containsIgnoreCase(person.getRace().toString()));","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"ryanlml"},"content":"        boolean containsReligion \u003d religionList.isEmpty() || religionList.stream()","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"ryanlml"},"content":"                .anyMatch(containsIgnoreCase(person.getReligion().toString()));","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"ryanlml"},"content":"        boolean containsSurvey \u003d surveysList.isEmpty();","lastModifiedDate":"2022-10-29"},{"lineNumber":67,"author":{"gitId":"ryanlml"},"content":"        for (Survey survey : person.getSurveys()) {","lastModifiedDate":"2022-10-29"},{"lineNumber":68,"author":{"gitId":"ryanlml"},"content":"            if (surveysList.stream().anyMatch(containsIgnoreCase(survey.survey))) {","lastModifiedDate":"2022-10-29"},{"lineNumber":69,"author":{"gitId":"ryanlml"},"content":"                containsSurvey \u003d true;","lastModifiedDate":"2022-10-29"},{"lineNumber":70,"author":{"gitId":"ryanlml"},"content":"                break;","lastModifiedDate":"2022-10-29"},{"lineNumber":71,"author":{"gitId":"ryanlml"},"content":"            }","lastModifiedDate":"2022-10-29"},{"lineNumber":72,"author":{"gitId":"ryanlml"},"content":"        }","lastModifiedDate":"2022-10-29"},{"lineNumber":73,"author":{"gitId":"ryanlml"},"content":"        boolean containsTags \u003d tagsList.isEmpty();","lastModifiedDate":"2022-10-29"},{"lineNumber":74,"author":{"gitId":"ryanlml"},"content":"        for (Tag tag : person.getTags()) {","lastModifiedDate":"2022-10-29"},{"lineNumber":75,"author":{"gitId":"ryanlml"},"content":"            if (tagsList.stream().anyMatch(containsIgnoreCase(tag.tagName))) {","lastModifiedDate":"2022-10-29"},{"lineNumber":76,"author":{"gitId":"ryanlml"},"content":"                containsTags \u003d true;","lastModifiedDate":"2022-10-29"},{"lineNumber":77,"author":{"gitId":"ryanlml"},"content":"                break;","lastModifiedDate":"2022-10-29"},{"lineNumber":78,"author":{"gitId":"ryanlml"},"content":"            }","lastModifiedDate":"2022-10-29"},{"lineNumber":79,"author":{"gitId":"ryanlml"},"content":"        }","lastModifiedDate":"2022-10-29"},{"lineNumber":80,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":81,"author":{"gitId":"ryanlml"},"content":"        return (containsName \u0026\u0026 containsPhone \u0026\u0026 containsEmail \u0026\u0026 containsAddress \u0026\u0026 containsGender","lastModifiedDate":"2022-10-08"},{"lineNumber":82,"author":{"gitId":"ryanlml"},"content":"                \u0026\u0026 containsBirthdate \u0026\u0026 containsRace \u0026\u0026 containsReligion \u0026\u0026 containsSurvey","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"ryanlml"},"content":"                \u0026\u0026 containsTags);","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"ryanlml"},"content":"     * Checks whether a given {@code String} contains a word or phrase (case-insensitive).","lastModifiedDate":"2022-10-29"},{"lineNumber":88,"author":{"gitId":"ryanlml"},"content":"     * @return A predicate for whether a string contains a word or phrase.","lastModifiedDate":"2022-10-29"},{"lineNumber":89,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"ryanlml"},"content":"    public static Predicate\u003cString\u003e containsIgnoreCase(String targetString) {","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"ryanlml"},"content":"        return keyword -\u003e Arrays.stream(targetString.split(\"\\\\s+\"))","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"ryanlml"},"content":"                .anyMatch(targetWord -\u003e targetWord.equalsIgnoreCase(keyword))","lastModifiedDate":"2022-10-29"},{"lineNumber":93,"author":{"gitId":"ryanlml"},"content":"                || (keyword.contains(\" \")","lastModifiedDate":"2022-10-29"},{"lineNumber":94,"author":{"gitId":"ryanlml"},"content":"                \u0026\u0026 containsSubstringIgnoreCase(targetString, keyword)","lastModifiedDate":"2022-10-29"},{"lineNumber":95,"author":{"gitId":"ryanlml"},"content":"                \u0026\u0026 containWordsIgnoreCase(targetString, keyword));","lastModifiedDate":"2022-10-29"},{"lineNumber":96,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":97,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":98,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-29"},{"lineNumber":99,"author":{"gitId":"ryanlml"},"content":"     * Checks whether a given {@code String} contains a {@code String} as a substring (case-insensitive).","lastModifiedDate":"2022-10-29"},{"lineNumber":100,"author":{"gitId":"ryanlml"},"content":"     * @return A boolean for whether a string contains the substring.","lastModifiedDate":"2022-10-29"},{"lineNumber":101,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-29"},{"lineNumber":102,"author":{"gitId":"ryanlml"},"content":"    public static boolean containsSubstringIgnoreCase(String supersetString, String subsetString) {","lastModifiedDate":"2022-10-29"},{"lineNumber":103,"author":{"gitId":"ryanlml"},"content":"        return supersetString.toLowerCase().contains(subsetString.toLowerCase());","lastModifiedDate":"2022-10-29"},{"lineNumber":104,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-29"},{"lineNumber":105,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":106,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-29"},{"lineNumber":107,"author":{"gitId":"ryanlml"},"content":"     * Checks whether a given {@code String} contains a {@code String} as a phrase (case-insensitive).","lastModifiedDate":"2022-10-29"},{"lineNumber":108,"author":{"gitId":"ryanlml"},"content":"     * @return A boolean for whether a string contains a phrase.","lastModifiedDate":"2022-10-29"},{"lineNumber":109,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-29"},{"lineNumber":110,"author":{"gitId":"ryanlml"},"content":"    public static boolean containWordsIgnoreCase(String supersetString, String subsetString) {","lastModifiedDate":"2022-10-29"},{"lineNumber":111,"author":{"gitId":"ryanlml"},"content":"        List\u003cString\u003e supersetStringArray \u003d Stream.of(supersetString.split(\"\\\\s+\"))","lastModifiedDate":"2022-10-29"},{"lineNumber":112,"author":{"gitId":"ryanlml"},"content":"                .map(String::toLowerCase)","lastModifiedDate":"2022-10-29"},{"lineNumber":113,"author":{"gitId":"ryanlml"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-10-29"},{"lineNumber":114,"author":{"gitId":"ryanlml"},"content":"        List\u003cString\u003e subsetStringArray \u003d Stream.of(subsetString.split(\"\\\\s+\"))","lastModifiedDate":"2022-10-29"},{"lineNumber":115,"author":{"gitId":"ryanlml"},"content":"                .map(String::toLowerCase)","lastModifiedDate":"2022-10-29"},{"lineNumber":116,"author":{"gitId":"ryanlml"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-10-29"},{"lineNumber":117,"author":{"gitId":"ryanlml"},"content":"        return supersetStringArray.containsAll(subsetStringArray);","lastModifiedDate":"2022-10-29"},{"lineNumber":118,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":119,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":120,"author":{"gitId":"ryanlml"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":121,"author":{"gitId":"ryanlml"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":122,"author":{"gitId":"ryanlml"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":123,"author":{"gitId":"ryanlml"},"content":"                || (other instanceof PersonContainsAttributePredicate // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":124,"author":{"gitId":"ryanlml"},"content":"                \u0026\u0026 nameList.equals(((PersonContainsAttributePredicate) other).nameList)","lastModifiedDate":"2022-10-08"},{"lineNumber":125,"author":{"gitId":"ryanlml"},"content":"                \u0026\u0026 phoneList.equals(((PersonContainsAttributePredicate) other).phoneList)","lastModifiedDate":"2022-10-08"},{"lineNumber":126,"author":{"gitId":"ryanlml"},"content":"                \u0026\u0026 emailList.equals(((PersonContainsAttributePredicate) other).emailList)","lastModifiedDate":"2022-10-08"},{"lineNumber":127,"author":{"gitId":"ryanlml"},"content":"                \u0026\u0026 addressList.equals(((PersonContainsAttributePredicate) other).addressList)","lastModifiedDate":"2022-10-08"},{"lineNumber":128,"author":{"gitId":"ryanlml"},"content":"                \u0026\u0026 genderList.equals(((PersonContainsAttributePredicate) other).genderList)","lastModifiedDate":"2022-10-08"},{"lineNumber":129,"author":{"gitId":"ryanlml"},"content":"                \u0026\u0026 birthdateList.equals(((PersonContainsAttributePredicate) other).birthdateList)","lastModifiedDate":"2022-10-08"},{"lineNumber":130,"author":{"gitId":"ryanlml"},"content":"                \u0026\u0026 raceList.equals(((PersonContainsAttributePredicate) other).raceList)","lastModifiedDate":"2022-10-08"},{"lineNumber":131,"author":{"gitId":"ryanlml"},"content":"                \u0026\u0026 religionList.equals(((PersonContainsAttributePredicate) other).religionList)","lastModifiedDate":"2022-10-08"},{"lineNumber":132,"author":{"gitId":"ryanlml"},"content":"                \u0026\u0026 surveysList.equals(((PersonContainsAttributePredicate) other).surveysList)","lastModifiedDate":"2022-10-18"},{"lineNumber":133,"author":{"gitId":"ryanlml"},"content":"                \u0026\u0026 tagsList.equals(((PersonContainsAttributePredicate) other).tagsList)); //state check","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":135,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":136,"author":{"gitId":"ryanlml"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"ryanlml":136}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"ryanlml"},"content":" * Represents a Person\u0027s phone number in Survin.","lastModifiedDate":"2022-11-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ryanlml":1,"-":52}},{"path":"src/main/java/seedu/address/model/person/Race.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":" * Represents a Person\u0027s race in the application.","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRace(String)}","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"public class Race {","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"            \"Race should only contain alphabetical characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alpha}][\\\\p{Alpha} ]*\";","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"    public final String race;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"     * Constructs a {@code Race}.","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"     * @param race A valid race.","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"    public Race(String race) {","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"        requireNonNull(race);","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"        checkArgument(isValidRace(race), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"        this.race \u003d race;","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"KeithPJX"},"content":"     * Returns true if a given string is a valid race.","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"KeithPJX"},"content":"    public static boolean isValidRace(String test) {","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"KeithPJX"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"KeithPJX"},"content":"    public String toString() {","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"KeithPJX"},"content":"        return race;","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"KeithPJX"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"KeithPJX"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"KeithPJX"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"KeithPJX"},"content":"                || (other instanceof Race // instanceof handles nulls","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"KeithPJX"},"content":"                \u0026\u0026 race.equals(((Race) other).race)); // state check","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"KeithPJX"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"KeithPJX"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"KeithPJX"},"content":"        return race.hashCode();","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"KeithPJX":53}},{"path":"src/main/java/seedu/address/model/person/Religion.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":" * Represents a Person\u0027s religion in the application.","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidReligion(String)}","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"public class Religion {","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"            \"Religion should only contain alphabetical characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alpha}][\\\\p{Alpha} ]*\";","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"    public final String religion;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"     * Constructs a {@code Religion}.","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"     * @param religion A valid religion.","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"    public Religion(String religion) {","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"        requireNonNull(religion);","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"        checkArgument(isValidReligion(religion), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"        this.religion \u003d religion;","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"KeithPJX"},"content":"     * Returns true if a given string is a valid religion.","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"KeithPJX"},"content":"    public static boolean isValidReligion(String test) {","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"KeithPJX"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"KeithPJX"},"content":"    public String toString() {","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"KeithPJX"},"content":"        return religion;","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"KeithPJX"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"KeithPJX"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"KeithPJX"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"KeithPJX"},"content":"                || (other instanceof Religion // instanceof handles nulls","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"KeithPJX"},"content":"                \u0026\u0026 religion.equals(((Religion) other).religion)); // state check","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"KeithPJX"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"KeithPJX"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"KeithPJX"},"content":"        return religion.hashCode();","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"KeithPJX":53}},{"path":"src/main/java/seedu/address/model/person/Survey.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":" * Represents the name of the survey a Person in the application has taken.","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidSurvey(String)}","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"public class Survey {","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"            \"Survey should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"deepimpactmir"},"content":"    private static final String DONE \u003d \"DONE\";","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"deepimpactmir"},"content":"    private static final String NOT_DONE \u003d \"NOT_DONE\";","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"    public final String survey;","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"deepimpactmir"},"content":"    public final boolean isDone;","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"     * Constructs a {@code Survey}.","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"     * @param survey A valid survey.","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"deepimpactmir"},"content":"    public Survey(String survey, boolean isDone) {","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"        requireNonNull(survey);","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"        checkArgument(isValidSurvey(survey), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"KeithPJX"},"content":"        this.survey \u003d survey;","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"deepimpactmir"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"deepimpactmir"},"content":"    public Survey(String survey) {","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"deepimpactmir"},"content":"        this(survey, false);","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"KeithPJX"},"content":"     * Returns true if a given string is a valid survey.","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"KeithPJX"},"content":"    public static boolean isValidSurvey(String test) {","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"KeithPJX"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"KeithPJX"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"KeithPJX"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"deepimpactmir"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"deepimpactmir"},"content":"            return true;","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"deepimpactmir"},"content":"        if (!(other instanceof Survey)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"deepimpactmir"},"content":"            return false;","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"deepimpactmir"},"content":"        Survey otherSurvey \u003d (Survey) other;","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"deepimpactmir"},"content":"        return survey.equals(otherSurvey.survey) \u0026\u0026 isDone \u003d\u003d otherSurvey.isDone;","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":60,"author":{"gitId":"KeithPJX"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"KeithPJX"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"KeithPJX"},"content":"        return survey.hashCode();","lastModifiedDate":"2022-10-02"},{"lineNumber":63,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":64,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"ryanlml"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"ryanlml"},"content":"    public String toString() {","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"deepimpactmir"},"content":"        return String.format(\"[%s, %s]\", survey, getStatus());","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"deepimpactmir"},"content":"    private String getStatus() {","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"deepimpactmir"},"content":"        return isDone ? DONE : NOT_DONE;","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"KeithPJX":44,"ryanlml":6,"deepimpactmir":25}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"deepimpactmir"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"deepimpactmir"},"content":" * A list of persons that enforces uniqueness between its elements and does not","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"deepimpactmir"},"content":" * allow nulls. A person is considered unique by comparing using","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"deepimpactmir"},"content":" * {@code Person#isSamePerson(Person)}. As such, adding and updating of persons","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"deepimpactmir"},"content":" * uses Person#isSamePerson(Person) for equality so as to ensure that the person","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"deepimpactmir"},"content":" * being added or updated is unique in terms of identity in the","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"deepimpactmir"},"content":" * UniquePersonList. However, the removal of a person uses Person#equals(Object)","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"deepimpactmir"},"content":" * so as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"deepimpactmir"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d FXCollections","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"deepimpactmir"},"content":"            .unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"deepimpactmir"},"content":"    public Optional\u003cPerson\u003e getPerson(Person person) {","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"deepimpactmir"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"deepimpactmir"},"content":"        return internalList.stream().filter(person::isSamePerson).findFirst();","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"deepimpactmir"},"content":"     * Adds a person to the list. The person must not already exist in the list.","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"deepimpactmir"},"content":"     * {@code target} must exist in the list. The person identity of","lastModifiedDate":"2022-10-24"},{"lineNumber":61,"author":{"gitId":"deepimpactmir"},"content":"     * {@code editedPerson} must not be the same as another existing person in the","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"deepimpactmir"},"content":"     * list.","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"deepimpactmir"},"content":"     * Removes the equivalent person from the list. The person must exist in the","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"deepimpactmir"},"content":"     * list.","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"deepimpactmir"},"content":"     * Replaces the contents of this list with {@code persons}. {@code persons} must","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"deepimpactmir"},"content":"     * not contain duplicate persons.","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":122,"deepimpactmir":23}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"ryanlml"},"content":" * Represents a Tag in tSurvin.","lastModifiedDate":"2022-11-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ryanlml":1,"-":53}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.ReadOnlySurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":8,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.Survin;","lastModifiedDate":"2022-11-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Race;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Religion;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"ryanlml"},"content":" * Contains utility methods for populating {@code Survin} with sample data.","lastModifiedDate":"2022-11-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Gender(\"male\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"                new Birthdate(\"1989-10-12\"), new Race(\"Chinese\"), new Religion(\"Buddhist\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"ryanlml"},"content":"                getSurveySet(\"Environment Survey\", \"Changi Airport Survey\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"KeithPJX"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Gender(\"female\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"KeithPJX"},"content":"                new Birthdate(\"1995-01-28\"), new Race(\"Chinese\"), new Religion(\"Christian\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"ryanlml"},"content":"                getSurveySet(\"Changi Airport Survey\", \"Environment Survey\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"KeithPJX"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Gender(\"female\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"KeithPJX"},"content":"                new Birthdate(\"2001-06-06\"), new Race(\"Italian\"), new Religion(\"Christian\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"ryanlml"},"content":"                getSurveySet(\"Environment Survey\", \"Academic Survey\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"KeithPJX"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Gender(\"male\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"KeithPJX"},"content":"                new Birthdate(\"1978-04-25\"), new Race(\"Chinese\"), new Religion(\"Free Thinker\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"ryanlml"},"content":"                getSurveySet(\"Academic Survey\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"KeithPJX"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Gender(\"male\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"KeithPJX"},"content":"                new Birthdate(\"1991-08-21\"), new Race(\"Malay\"), new Religion(\"Muslim\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"ryanlml"},"content":"                getSurveySet(\"Academic Survey\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"KeithPJX"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Gender(\"male\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"KeithPJX"},"content":"                new Birthdate(\"1995-04-01\"), new Race(\"Indian\"), new Religion(\"Hinduism\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"ryanlml"},"content":"                getSurveySet(\"Changi Airport Survey\"),","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"ryanlml"},"content":"    public static ReadOnlySurvin getSampleSurvin() {","lastModifiedDate":"2022-11-04"},{"lineNumber":61,"author":{"gitId":"ryanlml"},"content":"        Survin sampleAb \u003d new Survin();","lastModifiedDate":"2022-11-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"ryanlml"},"content":"     * Returns a survey set containing the list of strings given.","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"ryanlml"},"content":"    public static Set\u003cSurvey\u003e getSurveySet(String... strings) {","lastModifiedDate":"2022-10-18"},{"lineNumber":72,"author":{"gitId":"ryanlml"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"ryanlml"},"content":"                .map(Survey::new)","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"ryanlml"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":76,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"KeithPJX":17,"ryanlml":20,"-":49}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Race;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Religion;","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"    private static final String DATE_FORMAT \u003d \"y-M-d\";","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"KeithPJX"},"content":"    private final String gender;","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"KeithPJX"},"content":"    private final String birthdate;","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"KeithPJX"},"content":"    private final String race;","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"KeithPJX"},"content":"    private final String religion;","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"ryanlml"},"content":"    private final List\u003cJsonAdaptedSurvey\u003e surveys \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"KeithPJX"},"content":"            @JsonProperty(\"gender\") String gender, @JsonProperty(\"birthdate\") String birthdate,","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"KeithPJX"},"content":"            @JsonProperty(\"race\") String race, @JsonProperty(\"religion\") String religion,","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"ryanlml"},"content":"            @JsonProperty(\"surveys\") List\u003cJsonAdaptedSurvey\u003e surveys,","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"KeithPJX"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2022-10-02"},{"lineNumber":60,"author":{"gitId":"KeithPJX"},"content":"        this.birthdate \u003d birthdate;","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"KeithPJX"},"content":"        this.race \u003d race;","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"KeithPJX"},"content":"        this.religion \u003d religion;","lastModifiedDate":"2022-10-02"},{"lineNumber":63,"author":{"gitId":"ryanlml"},"content":"        if (surveys !\u003d null) {","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"ryanlml"},"content":"            this.surveys.addAll(surveys);","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"ryanlml"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"KeithPJX"},"content":"        gender \u003d source.getGender().gender;","lastModifiedDate":"2022-10-02"},{"lineNumber":80,"author":{"gitId":"KeithPJX"},"content":"        birthdate \u003d source.getBirthdate().birthdate.format(DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2022-10-02"},{"lineNumber":81,"author":{"gitId":"KeithPJX"},"content":"        race \u003d source.getRace().race;","lastModifiedDate":"2022-10-02"},{"lineNumber":82,"author":{"gitId":"KeithPJX"},"content":"        religion \u003d source.getReligion().religion;","lastModifiedDate":"2022-10-02"},{"lineNumber":83,"author":{"gitId":"ryanlml"},"content":"        surveys.addAll(source.getSurveys().stream()","lastModifiedDate":"2022-10-18"},{"lineNumber":84,"author":{"gitId":"ryanlml"},"content":"                .map(JsonAdaptedSurvey::new)","lastModifiedDate":"2022-10-18"},{"lineNumber":85,"author":{"gitId":"ryanlml"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"ryanlml"},"content":"        final List\u003cSurvey\u003e personSurveys \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-18"},{"lineNumber":99,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":100,"author":{"gitId":"ryanlml"},"content":"        for (JsonAdaptedSurvey survey : surveys) {","lastModifiedDate":"2022-10-18"},{"lineNumber":101,"author":{"gitId":"ryanlml"},"content":"            personSurveys.add(survey.toModelType());","lastModifiedDate":"2022-10-18"},{"lineNumber":102,"author":{"gitId":"ryanlml"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":103,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"KeithPJX"},"content":"        if (gender \u003d\u003d null) {","lastModifiedDate":"2022-10-02"},{"lineNumber":141,"author":{"gitId":"KeithPJX"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName()));","lastModifiedDate":"2022-10-02"},{"lineNumber":142,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":143,"author":{"gitId":"KeithPJX"},"content":"        if (!Gender.isValidGender(gender)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":144,"author":{"gitId":"KeithPJX"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":145,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":146,"author":{"gitId":"KeithPJX"},"content":"        final Gender modelGender \u003d new Gender(gender);","lastModifiedDate":"2022-10-02"},{"lineNumber":147,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":148,"author":{"gitId":"KeithPJX"},"content":"        if (birthdate \u003d\u003d null) {","lastModifiedDate":"2022-10-02"},{"lineNumber":149,"author":{"gitId":"KeithPJX"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-03"},{"lineNumber":150,"author":{"gitId":"KeithPJX"},"content":"                    Birthdate.class.getSimpleName()));","lastModifiedDate":"2022-10-03"},{"lineNumber":151,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":152,"author":{"gitId":"KeithPJX"},"content":"        if (!Birthdate.isValidBirthdate(birthdate)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":153,"author":{"gitId":"KeithPJX"},"content":"            throw new IllegalValueException(Birthdate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":154,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":155,"author":{"gitId":"KeithPJX"},"content":"        final Birthdate modelBirthdate \u003d new Birthdate(birthdate);","lastModifiedDate":"2022-10-02"},{"lineNumber":156,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":157,"author":{"gitId":"KeithPJX"},"content":"        if (race \u003d\u003d null) {","lastModifiedDate":"2022-10-02"},{"lineNumber":158,"author":{"gitId":"KeithPJX"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Race.class.getSimpleName()));","lastModifiedDate":"2022-10-02"},{"lineNumber":159,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":160,"author":{"gitId":"KeithPJX"},"content":"        if (!Race.isValidRace(race)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":161,"author":{"gitId":"KeithPJX"},"content":"            throw new IllegalValueException(Race.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":162,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":163,"author":{"gitId":"KeithPJX"},"content":"        final Race modelRace \u003d new Race(race);","lastModifiedDate":"2022-10-02"},{"lineNumber":164,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":165,"author":{"gitId":"KeithPJX"},"content":"        if (religion \u003d\u003d null) {","lastModifiedDate":"2022-10-02"},{"lineNumber":166,"author":{"gitId":"KeithPJX"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-03"},{"lineNumber":167,"author":{"gitId":"KeithPJX"},"content":"                    Religion.class.getSimpleName()));","lastModifiedDate":"2022-10-03"},{"lineNumber":168,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":169,"author":{"gitId":"KeithPJX"},"content":"        if (!Religion.isValidReligion(religion)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":170,"author":{"gitId":"KeithPJX"},"content":"            throw new IllegalValueException(Religion.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":171,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":172,"author":{"gitId":"KeithPJX"},"content":"        final Religion modelReligion \u003d new Religion(religion);","lastModifiedDate":"2022-10-02"},{"lineNumber":173,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":174,"author":{"gitId":"ryanlml"},"content":"        final Set\u003cSurvey\u003e modelSurvey \u003d new HashSet\u003c\u003e(personSurveys);","lastModifiedDate":"2022-10-18"},{"lineNumber":175,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":177,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":178,"author":{"gitId":"KeithPJX"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress,","lastModifiedDate":"2022-10-02"},{"lineNumber":179,"author":{"gitId":"KeithPJX"},"content":"                modelGender, modelBirthdate, modelRace,","lastModifiedDate":"2022-10-02"},{"lineNumber":180,"author":{"gitId":"KeithPJX"},"content":"                modelReligion, modelSurvey, modelTags);","lastModifiedDate":"2022-10-02"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KeithPJX":59,"ryanlml":16,"-":108}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedSurvey.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlml"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"ryanlml"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"deepimpactmir"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"ryanlml"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"ryanlml"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":" * Jackson-friendly version of {@link Survey}.","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"ryanlml"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"ryanlml"},"content":"class JsonAdaptedSurvey {","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"ryanlml"},"content":"    private final String surveyName;","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"deepimpactmir"},"content":"    private final boolean isDone;","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"ryanlml"},"content":"     * Constructs a {@code JsonAdaptedSurvey} with the given {@code surveyName}.","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"ryanlml"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"deepimpactmir"},"content":"    public JsonAdaptedSurvey(@JsonProperty(\"surveyName\") String surveyName, @JsonProperty(\"isDone\") boolean isDone) {","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"ryanlml"},"content":"        this.surveyName \u003d surveyName;","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"deepimpactmir"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"ryanlml"},"content":"     * Converts a given {@code Survey} into this class for Jackson use.","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"ryanlml"},"content":"    public JsonAdaptedSurvey(Survey source) {","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"ryanlml"},"content":"        surveyName \u003d source.survey;","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"deepimpactmir"},"content":"        isDone \u003d source.isDone;","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"deepimpactmir"},"content":"    /*","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"deepimpactmir"},"content":"     * @JsonValue public String getSurveyInfo() { return surveyName + \" - \" +","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"deepimpactmir"},"content":"     * isDone; }","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"deepimpactmir"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"deepimpactmir"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"deepimpactmir"},"content":"     * {@code Survey} object.","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"ryanlml"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"deepimpactmir"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"deepimpactmir"},"content":"     *                               the adapted tag.","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"ryanlml"},"content":"    public Survey toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"ryanlml"},"content":"        if (!Survey.isValidSurvey(surveyName)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"ryanlml"},"content":"            throw new IllegalValueException(Survey.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"ryanlml"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"deepimpactmir"},"content":"        return new Survey(surveyName, isDone);","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"ryanlml"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"ryanlml":39,"deepimpactmir":14}},{"path":"src/main/java/seedu/address/storage/JsonSerializableSurvin.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.ReadOnlySurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":13,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.Survin;","lastModifiedDate":"2022-11-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"ryanlml"},"content":" * An Immutable Survin that is serializable to JSON format.","lastModifiedDate":"2022-11-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"ryanlml"},"content":"@JsonRootName(value \u003d \"survin\")","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"ryanlml"},"content":"class JsonSerializableSurvin {","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"ryanlml"},"content":"     * Constructs a {@code JsonSerializableSurvin} with the given persons.","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"ryanlml"},"content":"    public JsonSerializableSurvin(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2022-11-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"ryanlml"},"content":"     * Converts a given {@code ReadOnlySurvin} into this class for Jackson use.","lastModifiedDate":"2022-11-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"ryanlml"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableSurvin}.","lastModifiedDate":"2022-11-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"ryanlml"},"content":"    public JsonSerializableSurvin(ReadOnlySurvin source) {","lastModifiedDate":"2022-11-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"ryanlml"},"content":"     * Converts Survin into the model\u0027s {@code Survin} object.","lastModifiedDate":"2022-11-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"ryanlml"},"content":"    public Survin toModelType() throws IllegalValueException {","lastModifiedDate":"2022-11-04"},{"lineNumber":49,"author":{"gitId":"ryanlml"},"content":"        Survin survin \u003d new Survin();","lastModifiedDate":"2022-11-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"ryanlml"},"content":"            if (survin.hasPerson(person)) {","lastModifiedDate":"2022-11-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"ryanlml"},"content":"            survin.addPerson(person);","lastModifiedDate":"2022-11-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"ryanlml"},"content":"        return survin;","lastModifiedDate":"2022-11-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ryanlml":16,"-":44}},{"path":"src/main/java/seedu/address/storage/JsonSurvinStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.ReadOnlySurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"ryanlml"},"content":" * A class to access Survin data stored as a json file on the hard disk.","lastModifiedDate":"2022-11-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"ryanlml"},"content":"public class JsonSurvinStorage implements SurvinStorage {","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"ryanlml"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonSurvinStorage.class);","lastModifiedDate":"2022-11-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"ryanlml"},"content":"    public JsonSurvinStorage(Path filePath) {","lastModifiedDate":"2022-11-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"ryanlml"},"content":"    public Path getSurvinFilePath() {","lastModifiedDate":"2022-11-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"ryanlml"},"content":"    public Optional\u003cReadOnlySurvin\u003e readSurvin() throws DataConversionException {","lastModifiedDate":"2022-11-04"},{"lineNumber":36,"author":{"gitId":"ryanlml"},"content":"        return readSurvin(filePath);","lastModifiedDate":"2022-11-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"ryanlml"},"content":"     * Similar to {@link #readSurvin()}.","lastModifiedDate":"2022-11-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"ryanlml"},"content":"    public Optional\u003cReadOnlySurvin\u003e readSurvin(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-11-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"ryanlml"},"content":"        Optional\u003cJsonSerializableSurvin\u003e jsonSurvin \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-11-04"},{"lineNumber":49,"author":{"gitId":"ryanlml"},"content":"                filePath, JsonSerializableSurvin.class);","lastModifiedDate":"2022-11-04"},{"lineNumber":50,"author":{"gitId":"ryanlml"},"content":"        if (!jsonSurvin.isPresent()) {","lastModifiedDate":"2022-11-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"ryanlml"},"content":"            return Optional.of(jsonSurvin.get().toModelType());","lastModifiedDate":"2022-11-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"ryanlml"},"content":"    public void saveSurvin(ReadOnlySurvin survin) throws IOException {","lastModifiedDate":"2022-11-04"},{"lineNumber":64,"author":{"gitId":"ryanlml"},"content":"        saveSurvin(survin, filePath);","lastModifiedDate":"2022-11-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"ryanlml"},"content":"     * Similar to {@link #saveSurvin(ReadOnlySurvin)}.","lastModifiedDate":"2022-11-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"ryanlml"},"content":"    public void saveSurvin(ReadOnlySurvin survin, Path filePath) throws IOException {","lastModifiedDate":"2022-11-04"},{"lineNumber":73,"author":{"gitId":"ryanlml"},"content":"        requireNonNull(survin);","lastModifiedDate":"2022-11-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"ryanlml"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableSurvin(survin), filePath);","lastModifiedDate":"2022-11-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ryanlml":20,"-":60}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.ReadOnlySurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"ryanlml"},"content":"public interface Storage extends SurvinStorage, UserPrefsStorage {","lastModifiedDate":"2022-11-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"ryanlml"},"content":"    Path getSurvinFilePath();","lastModifiedDate":"2022-11-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"ryanlml"},"content":"    Optional\u003cReadOnlySurvin\u003e readSurvin() throws DataConversionException, IOException;","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"ryanlml"},"content":"    void saveSurvin(ReadOnlySurvin survin) throws IOException;","lastModifiedDate":"2022-11-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ryanlml":5,"-":27}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.ReadOnlySurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"ryanlml"},"content":" * Manages storage of Survin data in local storage.","lastModifiedDate":"2022-11-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"ryanlml"},"content":"    private SurvinStorage survinStorage;","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"ryanlml"},"content":"     * Creates a {@code StorageManager} with the given {@code SurvinStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-11-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"ryanlml"},"content":"    public StorageManager(SurvinStorage survinStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-11-04"},{"lineNumber":27,"author":{"gitId":"ryanlml"},"content":"        this.survinStorage \u003d survinStorage;","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"ryanlml"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Survin methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-11-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"ryanlml"},"content":"    public Path getSurvinFilePath() {","lastModifiedDate":"2022-11-04"},{"lineNumber":53,"author":{"gitId":"ryanlml"},"content":"        return survinStorage.getSurvinFilePath();","lastModifiedDate":"2022-11-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"ryanlml"},"content":"    public Optional\u003cReadOnlySurvin\u003e readSurvin() throws DataConversionException, IOException {","lastModifiedDate":"2022-11-04"},{"lineNumber":58,"author":{"gitId":"ryanlml"},"content":"        return readSurvin(survinStorage.getSurvinFilePath());","lastModifiedDate":"2022-11-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"ryanlml"},"content":"    public Optional\u003cReadOnlySurvin\u003e readSurvin(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-11-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"ryanlml"},"content":"        return survinStorage.readSurvin(filePath);","lastModifiedDate":"2022-11-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"ryanlml"},"content":"    public void saveSurvin(ReadOnlySurvin survin) throws IOException {","lastModifiedDate":"2022-11-04"},{"lineNumber":69,"author":{"gitId":"ryanlml"},"content":"        saveSurvin(survin, survinStorage.getSurvinFilePath());","lastModifiedDate":"2022-11-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"ryanlml"},"content":"    public void saveSurvin(ReadOnlySurvin survin, Path filePath) throws IOException {","lastModifiedDate":"2022-11-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"ryanlml"},"content":"        survinStorage.saveSurvin(survin, filePath);","lastModifiedDate":"2022-11-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ryanlml":17,"-":61}},{"path":"src/main/java/seedu/address/storage/SurvinStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlml"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-11-04"},{"lineNumber":2,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":3,"author":{"gitId":"ryanlml"},"content":"import java.io.IOException;","lastModifiedDate":"2022-11-04"},{"lineNumber":4,"author":{"gitId":"ryanlml"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-11-04"},{"lineNumber":5,"author":{"gitId":"ryanlml"},"content":"import java.util.Optional;","lastModifiedDate":"2022-11-04"},{"lineNumber":6,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"ryanlml"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-11-04"},{"lineNumber":8,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.ReadOnlySurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":"/**","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"ryanlml"},"content":" * Represents a storage for {@link seedu.address.model.Survin}.","lastModifiedDate":"2022-11-04"},{"lineNumber":12,"author":{"gitId":"ryanlml"},"content":" */","lastModifiedDate":"2022-11-04"},{"lineNumber":13,"author":{"gitId":"ryanlml"},"content":"public interface SurvinStorage {","lastModifiedDate":"2022-11-04"},{"lineNumber":14,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":15,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":16,"author":{"gitId":"ryanlml"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-11-04"},{"lineNumber":17,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":18,"author":{"gitId":"ryanlml"},"content":"    Path getSurvinFilePath();","lastModifiedDate":"2022-11-04"},{"lineNumber":19,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"ryanlml"},"content":"     * Returns Survin data as a {@link ReadOnlySurvin}.","lastModifiedDate":"2022-11-04"},{"lineNumber":22,"author":{"gitId":"ryanlml"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-11-04"},{"lineNumber":23,"author":{"gitId":"ryanlml"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-11-04"},{"lineNumber":24,"author":{"gitId":"ryanlml"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-11-04"},{"lineNumber":25,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":26,"author":{"gitId":"ryanlml"},"content":"    Optional\u003cReadOnlySurvin\u003e readSurvin() throws DataConversionException, IOException;","lastModifiedDate":"2022-11-04"},{"lineNumber":27,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":29,"author":{"gitId":"ryanlml"},"content":"     * @see #getSurvinFilePath()","lastModifiedDate":"2022-11-04"},{"lineNumber":30,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":31,"author":{"gitId":"ryanlml"},"content":"    Optional\u003cReadOnlySurvin\u003e readSurvin(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-11-04"},{"lineNumber":32,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":33,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":34,"author":{"gitId":"ryanlml"},"content":"     * Saves the given {@link ReadOnlySurvin} to the storage.","lastModifiedDate":"2022-11-04"},{"lineNumber":35,"author":{"gitId":"ryanlml"},"content":"     * @param survin cannot be null.","lastModifiedDate":"2022-11-04"},{"lineNumber":36,"author":{"gitId":"ryanlml"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-11-04"},{"lineNumber":37,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":38,"author":{"gitId":"ryanlml"},"content":"    void saveSurvin(ReadOnlySurvin survin) throws IOException;","lastModifiedDate":"2022-11-04"},{"lineNumber":39,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":40,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":41,"author":{"gitId":"ryanlml"},"content":"     * @see #saveSurvin(ReadOnlySurvin)","lastModifiedDate":"2022-11-04"},{"lineNumber":42,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":43,"author":{"gitId":"ryanlml"},"content":"    void saveSurvin(ReadOnlySurvin survin, Path filePath) throws IOException;","lastModifiedDate":"2022-11-04"},{"lineNumber":44,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":45,"author":{"gitId":"ryanlml"},"content":"}","lastModifiedDate":"2022-11-04"}],"authorContributionMap":{"ryanlml":45}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"NUSDG"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"NUSDG"},"content":"     * Creates a CommandBox object with text.","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"NUSDG"},"content":"     * @param commandExecutor The given commandExecutor.","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"NUSDG"},"content":"     * @param text Text to be added to the command box.","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"NUSDG"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"NUSDG"},"content":"    public CommandBox(CommandExecutor commandExecutor, String text) {","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"NUSDG"},"content":"        super(FXML);","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"NUSDG"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"NUSDG"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"NUSDG"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"NUSDG"},"content":"        commandTextField.setText(text);","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"NUSDG":13,"-":85}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"deepimpactmir"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103-f13-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"    private final String lightTheme \u003d getClass().getResource(\"/view/HelpWindowLight.css\").toExternalForm();","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"    private final String darkTheme \u003d getClass().getResource(\"/view/HelpWindowDark.css\").toExternalForm();","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"deepimpactmir"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *                               \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"deepimpactmir"},"content":"     *                               \u003cli\u003eif this method is called on a thread other","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"deepimpactmir"},"content":"     *                               than the JavaFX Application Thread.\u003c/li\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"deepimpactmir"},"content":"     *                               \u003cli\u003eif this method is called during animation","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"deepimpactmir"},"content":"     *                               or layout processing.\u003c/li\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"deepimpactmir"},"content":"     *                               \u003cli\u003eif this method is called on the primary","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"deepimpactmir"},"content":"     *                               stage.\u003c/li\u003e","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"deepimpactmir"},"content":"     *                               \u003cli\u003eif {@code dialogStage} is already showing.","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *                               \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"KeithPJX"},"content":"     * Set theme of help window to the light theme.","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"KeithPJX"},"content":"    public void setLightTheme() {","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"KeithPJX"},"content":"        getRoot().getScene().getStylesheets().add(lightTheme);","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"KeithPJX"},"content":"        getRoot().getScene().getStylesheets().remove(darkTheme);","lastModifiedDate":"2022-10-18"},{"lineNumber":98,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"KeithPJX"},"content":"     * Set theme of help window to the dark theme.","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"KeithPJX"},"content":"    public void setDarkTheme() {","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"KeithPJX"},"content":"        getRoot().getScene().getStylesheets().add(darkTheme);","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"KeithPJX"},"content":"        getRoot().getScene().getStylesheets().remove(lightTheme);","lastModifiedDate":"2022-10-18"},{"lineNumber":106,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"KeithPJX":19,"-":90,"deepimpactmir":9}},{"path":"src/main/java/seedu/address/ui/HelpWindowForCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlml"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"ryanlml"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"ryanlml"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"ryanlml"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"ryanlml"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"ryanlml"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.AppendCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.CloneCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.ThemeCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.ToggleListModeCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.UnappendCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.UnmarkCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"ryanlml"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"ryanlml"},"content":" * Controller for a help page","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"ryanlml"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"ryanlml"},"content":"public class HelpWindowForCommand extends UiPart\u003cStage\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"ryanlml"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindowForCommand.class);","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"ryanlml"},"content":"    private static final String FXML \u003d \"HelpWindowForCommand.fxml\";","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"ryanlml"},"content":"    private final String lightTheme \u003d getClass().getResource(\"/view/HelpWindowLight.css\").toExternalForm();","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"ryanlml"},"content":"    private final String darkTheme \u003d getClass().getResource(\"/view/HelpWindowDark.css\").toExternalForm();","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"ryanlml"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"ryanlml"},"content":"    private Label helpMessage;","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"ryanlml"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"ryanlml"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"ryanlml"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"ryanlml"},"content":"    public HelpWindowForCommand(Stage root) {","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"ryanlml"},"content":"        super(FXML, root);","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"ryanlml"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"ryanlml"},"content":"    public HelpWindowForCommand() {","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"ryanlml"},"content":"        this(new Stage());","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"ryanlml"},"content":"     * Shows the help window.","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"ryanlml"},"content":"     *","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"ryanlml"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"ryanlml"},"content":"     *                               \u003cul\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"ryanlml"},"content":"     *                               \u003cli\u003eif this method is called on a thread other","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"ryanlml"},"content":"     *                               than the JavaFX Application Thread.\u003c/li\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"ryanlml"},"content":"     *                               \u003cli\u003eif this method is called during animation","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"ryanlml"},"content":"     *                               or layout processing.\u003c/li\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"ryanlml"},"content":"     *                               \u003cli\u003eif this method is called on the primary","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"ryanlml"},"content":"     *                               stage.\u003c/li\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"ryanlml"},"content":"     *                               \u003cli\u003eif {@code dialogStage} is already showing.","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"ryanlml"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"ryanlml"},"content":"     *                               \u003c/ul\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"ryanlml"},"content":"    public void show() {","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"ryanlml"},"content":"        logger.fine(\"Showing help page about a command.\");","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"ryanlml"},"content":"        getRoot().show();","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"ryanlml"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"ryanlml"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2022-10-27"},{"lineNumber":79,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"ryanlml"},"content":"    public boolean isShowing() {","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"ryanlml"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"ryanlml"},"content":"     * Hides the help window.","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"ryanlml"},"content":"    public void hide() {","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"ryanlml"},"content":"        getRoot().hide();","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"ryanlml"},"content":"     * Focuses on the help window.","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"ryanlml"},"content":"    public void focus() {","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"ryanlml"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"ryanlml"},"content":"     * Set theme of help window to the light theme.","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"ryanlml"},"content":"    public void setLightTheme() {","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"ryanlml"},"content":"        getRoot().getScene().getStylesheets().add(lightTheme);","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"ryanlml"},"content":"        getRoot().getScene().getStylesheets().remove(darkTheme);","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"ryanlml"},"content":"     * Set theme of help window to the dark theme.","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"ryanlml"},"content":"    public void setDarkTheme() {","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"ryanlml"},"content":"        getRoot().getScene().getStylesheets().add(darkTheme);","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"ryanlml"},"content":"        getRoot().getScene().getStylesheets().remove(lightTheme);","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":114,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":115,"author":{"gitId":"ryanlml"},"content":"     * Set text of help window depending on the commandString.","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":117,"author":{"gitId":"ryanlml"},"content":"    public void setTextString(String commandString) {","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"ryanlml"},"content":"        String helpMessageString \u003d \"\";","lastModifiedDate":"2022-10-27"},{"lineNumber":119,"author":{"gitId":"ryanlml"},"content":"        switch (commandString) {","lastModifiedDate":"2022-10-27"},{"lineNumber":120,"author":{"gitId":"ryanlml"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"ryanlml"},"content":"            helpMessageString \u003d AddCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"ryanlml"},"content":"            break;","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"ryanlml"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"ryanlml"},"content":"            helpMessageString \u003d EditCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"ryanlml"},"content":"            break;","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"ryanlml"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"ryanlml"},"content":"            helpMessageString \u003d DeleteCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"ryanlml"},"content":"            break;","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"ryanlml"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"ryanlml"},"content":"            helpMessageString \u003d ClearCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"ryanlml"},"content":"            break;","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"ryanlml"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"ryanlml"},"content":"            helpMessageString \u003d ListCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-27"},{"lineNumber":138,"author":{"gitId":"ryanlml"},"content":"            break;","lastModifiedDate":"2022-10-27"},{"lineNumber":139,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":140,"author":{"gitId":"ryanlml"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":141,"author":{"gitId":"ryanlml"},"content":"            helpMessageString \u003d ViewCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-27"},{"lineNumber":142,"author":{"gitId":"ryanlml"},"content":"            break;","lastModifiedDate":"2022-10-27"},{"lineNumber":143,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":144,"author":{"gitId":"ryanlml"},"content":"        case CloneCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":145,"author":{"gitId":"ryanlml"},"content":"            helpMessageString \u003d CloneCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-27"},{"lineNumber":146,"author":{"gitId":"ryanlml"},"content":"            break;","lastModifiedDate":"2022-10-27"},{"lineNumber":147,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":148,"author":{"gitId":"ryanlml"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":149,"author":{"gitId":"ryanlml"},"content":"            helpMessageString \u003d UndoCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-27"},{"lineNumber":150,"author":{"gitId":"ryanlml"},"content":"            break;","lastModifiedDate":"2022-10-27"},{"lineNumber":151,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":152,"author":{"gitId":"ryanlml"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":153,"author":{"gitId":"ryanlml"},"content":"            helpMessageString \u003d MarkCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-27"},{"lineNumber":154,"author":{"gitId":"ryanlml"},"content":"            break;","lastModifiedDate":"2022-10-27"},{"lineNumber":155,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":156,"author":{"gitId":"ryanlml"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":157,"author":{"gitId":"ryanlml"},"content":"            helpMessageString \u003d UnmarkCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-27"},{"lineNumber":158,"author":{"gitId":"ryanlml"},"content":"            break;","lastModifiedDate":"2022-10-27"},{"lineNumber":159,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":160,"author":{"gitId":"ryanlml"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":161,"author":{"gitId":"ryanlml"},"content":"            helpMessageString \u003d ExitCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-27"},{"lineNumber":162,"author":{"gitId":"ryanlml"},"content":"            break;","lastModifiedDate":"2022-10-27"},{"lineNumber":163,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":164,"author":{"gitId":"ryanlml"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":165,"author":{"gitId":"ryanlml"},"content":"            helpMessageString \u003d HelpCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-27"},{"lineNumber":166,"author":{"gitId":"ryanlml"},"content":"            break;","lastModifiedDate":"2022-10-27"},{"lineNumber":167,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":168,"author":{"gitId":"ryanlml"},"content":"        case ThemeCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":169,"author":{"gitId":"ryanlml"},"content":"            helpMessageString \u003d ThemeCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-27"},{"lineNumber":170,"author":{"gitId":"ryanlml"},"content":"            break;","lastModifiedDate":"2022-10-27"},{"lineNumber":171,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":172,"author":{"gitId":"ryanlml"},"content":"        case AppendCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":173,"author":{"gitId":"ryanlml"},"content":"            helpMessageString \u003d AppendCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-27"},{"lineNumber":174,"author":{"gitId":"ryanlml"},"content":"            break;","lastModifiedDate":"2022-10-27"},{"lineNumber":175,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":176,"author":{"gitId":"ryanlml"},"content":"        case UnappendCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":177,"author":{"gitId":"ryanlml"},"content":"            helpMessageString \u003d UnappendCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-27"},{"lineNumber":178,"author":{"gitId":"ryanlml"},"content":"            break;","lastModifiedDate":"2022-10-27"},{"lineNumber":179,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":180,"author":{"gitId":"ryanlml"},"content":"        case ToggleListModeCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":181,"author":{"gitId":"ryanlml"},"content":"            helpMessageString \u003d ToggleListModeCommand.MESSAGE_USAGE;","lastModifiedDate":"2022-10-27"},{"lineNumber":182,"author":{"gitId":"ryanlml"},"content":"            break;","lastModifiedDate":"2022-10-27"},{"lineNumber":183,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":184,"author":{"gitId":"ryanlml"},"content":"        default:","lastModifiedDate":"2022-10-27"},{"lineNumber":185,"author":{"gitId":"ryanlml"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":186,"author":{"gitId":"ryanlml"},"content":"        helpMessage.setText(helpMessageString);","lastModifiedDate":"2022-10-27"},{"lineNumber":187,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":188,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":189,"author":{"gitId":"ryanlml"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"ryanlml":189}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.ThemeCommand.CHANGE_THEME_ERROR;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.commons.core.Themes.Theme;","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"    private static final String COMPACT_MENUITEM_TEXT \u003d \"Compacted Mode\";","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"KeithPJX"},"content":"    private static final String EXPAND_MENUITEM_TEXT \u003d \"Expanded Mode\";","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"    private static final String LIGHT_THEME_MENUITEM_TEXT \u003d \"Light Theme\";","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"KeithPJX"},"content":"    private static final String DARK_THEME_MENUITEM_TEXT \u003d \"Dark Theme\";","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"NUSDG"},"content":"    private static final String ADD_COMMAND_SHORTCUT_TEXT \u003d \"add n/ p/ e/ a/ g/ b/ ra/ re/ s/ t/\";","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"NUSDG"},"content":"    private static final String EDIT_COMMAND_SHORTCUT_TEXT \u003d \"edit \";","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"NUSDG"},"content":"    private static final String DELETE_COMMAND_SHORTCUT_TEXT \u003d \"delete \";","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"NUSDG"},"content":"    private static final String CLONE_COMMAND_SHORTCUT_TEXT \u003d \"clone \";","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"NUSDG"},"content":"    private static final String VIEW_COMMAND_SHORTCUT_TEXT \u003d \"view \";","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"NUSDG"},"content":"    private static final String UNDO_COMMAND_SHORTCUT_TEXT \u003d \"undo \";","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"NUSDG"},"content":"    private static final String MARK_COMMAND_SHORTCUT_TEXT \u003d \"mark \";","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"NUSDG"},"content":"    private static final String UNMARK_COMMAND_SHORTCUT_TEXT \u003d \"unmark \";","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"NUSDG"},"content":"    private static final String EMPTY_COMMAND_SHORTCUT_TEXT \u003d \"\";","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"KeithPJX"},"content":"    private final String lightTheme \u003d getClass().getResource(\"/view/LightTheme.css\").toExternalForm();","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"KeithPJX"},"content":"    private final String darkTheme \u003d getClass().getResource(\"/view/DarkTheme.css\").toExternalForm();","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"KeithPJX"},"content":"    private final String extensionsLight \u003d getClass().getResource(\"/view/ExtensionsLight.css\").toExternalForm();","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"KeithPJX"},"content":"    private final String extensionsDark \u003d getClass().getResource(\"/view/ExtensionsDark.css\").toExternalForm();","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":59,"author":{"gitId":"ryanlml"},"content":"    private HelpWindowForCommand helpWindowForCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"KeithPJX"},"content":"    private boolean isExpanded;","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"KeithPJX"},"content":"    private Theme currentTheme;","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"KeithPJX"},"content":"    @FXML","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"KeithPJX"},"content":"    private MenuItem lightDarkThemeItem;","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"KeithPJX"},"content":"    @FXML","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"KeithPJX"},"content":"    private MenuItem compactExpandItem;","lastModifiedDate":"2022-10-18"},{"lineNumber":72,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":101,"author":{"gitId":"ryanlml"},"content":"        helpWindowForCommand \u003d new HelpWindowForCommand();","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":103,"author":{"gitId":"KeithPJX"},"content":"        isExpanded \u003d false;","lastModifiedDate":"2022-10-18"},{"lineNumber":104,"author":{"gitId":"KeithPJX"},"content":"        compactExpandItem.setText(EXPAND_MENUITEM_TEXT);","lastModifiedDate":"2022-10-18"},{"lineNumber":105,"author":{"gitId":"KeithPJX"},"content":"        currentTheme \u003d Theme.LIGHT;","lastModifiedDate":"2022-10-25"},{"lineNumber":106,"author":{"gitId":"KeithPJX"},"content":"        lightDarkThemeItem.setText(DARK_THEME_MENUITEM_TEXT);","lastModifiedDate":"2022-10-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"NUSDG"},"content":"        setCommandBoxText(ADD_COMMAND_SHORTCUT_TEXT, KeyCombination.valueOf(\"Shortcut+N\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":116,"author":{"gitId":"NUSDG"},"content":"        setCommandBoxText(EDIT_COMMAND_SHORTCUT_TEXT, KeyCombination.valueOf(\"Shortcut+E\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":117,"author":{"gitId":"NUSDG"},"content":"        setCommandBoxText(DELETE_COMMAND_SHORTCUT_TEXT, KeyCombination.valueOf(\"Shortcut+D\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":118,"author":{"gitId":"NUSDG"},"content":"        setCommandBoxText(CLONE_COMMAND_SHORTCUT_TEXT, KeyCombination.valueOf(\"Shortcut+L\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"NUSDG"},"content":"        setCommandBoxText(VIEW_COMMAND_SHORTCUT_TEXT, KeyCombination.valueOf(\"Shortcut+I\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"NUSDG"},"content":"        setCommandBoxText(UNDO_COMMAND_SHORTCUT_TEXT, KeyCombination.valueOf(\"Shortcut+Z\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":121,"author":{"gitId":"NUSDG"},"content":"        setCommandBoxText(MARK_COMMAND_SHORTCUT_TEXT, KeyCombination.valueOf(\"Shortcut+M\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":122,"author":{"gitId":"NUSDG"},"content":"        setCommandBoxText(UNMARK_COMMAND_SHORTCUT_TEXT, KeyCombination.valueOf(\"Shortcut+U\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"NUSDG"},"content":"        setCommandBoxText(EMPTY_COMMAND_SHORTCUT_TEXT, KeyCombination.valueOf(\"Shortcut+R\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"NUSDG"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":157,"author":{"gitId":"NUSDG"},"content":"     * Sets the text of command box.","lastModifiedDate":"2022-10-25"},{"lineNumber":158,"author":{"gitId":"NUSDG"},"content":"     * @param text The text to be added to the command box.","lastModifiedDate":"2022-10-25"},{"lineNumber":159,"author":{"gitId":"NUSDG"},"content":"     * @param keyCombination the KeyCombination value of the accelerator.","lastModifiedDate":"2022-10-25"},{"lineNumber":160,"author":{"gitId":"NUSDG"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":161,"author":{"gitId":"NUSDG"},"content":"    private void setCommandBoxText(String text, KeyCombination keyCombination) {","lastModifiedDate":"2022-10-25"},{"lineNumber":162,"author":{"gitId":"NUSDG"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":163,"author":{"gitId":"NUSDG"},"content":"            if (keyCombination.match(event)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":164,"author":{"gitId":"NUSDG"},"content":"                CommandBox commandBox \u003d new CommandBox(this::executeCommand, text);","lastModifiedDate":"2022-10-25"},{"lineNumber":165,"author":{"gitId":"NUSDG"},"content":"                commandBoxPlaceholder.getChildren().clear();","lastModifiedDate":"2022-10-25"},{"lineNumber":166,"author":{"gitId":"NUSDG"},"content":"                commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2022-10-25"},{"lineNumber":167,"author":{"gitId":"NUSDG"},"content":"                event.consume();","lastModifiedDate":"2022-10-25"},{"lineNumber":168,"author":{"gitId":"NUSDG"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":169,"author":{"gitId":"NUSDG"},"content":"        });","lastModifiedDate":"2022-10-25"},{"lineNumber":170,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":171,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":176,"author":{"gitId":"KeithPJX"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList(), isExpanded);","lastModifiedDate":"2022-10-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":182,"author":{"gitId":"ryanlml"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getSurvinFilePath());","lastModifiedDate":"2022-11-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":213,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":214,"author":{"gitId":"ryanlml"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2022-10-27"},{"lineNumber":215,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":216,"author":{"gitId":"ryanlml"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":217,"author":{"gitId":"ryanlml"},"content":"    public void handleHelpForCommand(String helpMessageForCommand) {","lastModifiedDate":"2022-10-27"},{"lineNumber":218,"author":{"gitId":"ryanlml"},"content":"        helpWindowForCommand.setTextString(helpMessageForCommand);","lastModifiedDate":"2022-10-27"},{"lineNumber":219,"author":{"gitId":"ryanlml"},"content":"        //update the dimensions of the help window","lastModifiedDate":"2022-11-04"},{"lineNumber":220,"author":{"gitId":"ryanlml"},"content":"        helpWindowForCommand.hide();","lastModifiedDate":"2022-11-04"},{"lineNumber":221,"author":{"gitId":"ryanlml"},"content":"        helpWindowForCommand.show();","lastModifiedDate":"2022-10-27"},{"lineNumber":222,"author":{"gitId":"ryanlml"},"content":"        helpWindowForCommand.focus();","lastModifiedDate":"2022-10-27"},{"lineNumber":223,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":224,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":238,"author":{"gitId":"ryanlml"},"content":"        helpWindowForCommand.hide();","lastModifiedDate":"2022-10-27"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":242,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":243,"author":{"gitId":"KeithPJX"},"content":"     * Changes theme to light theme or dark theme depending on current state.","lastModifiedDate":"2022-10-20"},{"lineNumber":244,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":245,"author":{"gitId":"KeithPJX"},"content":"    @FXML","lastModifiedDate":"2022-10-10"},{"lineNumber":246,"author":{"gitId":"KeithPJX"},"content":"    private void handleLightDarkTheme() {","lastModifiedDate":"2022-10-18"},{"lineNumber":247,"author":{"gitId":"KeithPJX"},"content":"        if (currentTheme.equals(Theme.LIGHT)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":248,"author":{"gitId":"KeithPJX"},"content":"            logger.info(\"Switching to dark theme...\");","lastModifiedDate":"2022-10-18"},{"lineNumber":249,"author":{"gitId":"KeithPJX"},"content":"            currentTheme \u003d Theme.DARK;","lastModifiedDate":"2022-10-25"},{"lineNumber":250,"author":{"gitId":"KeithPJX"},"content":"            lightDarkThemeItem.setText(LIGHT_THEME_MENUITEM_TEXT);","lastModifiedDate":"2022-10-18"},{"lineNumber":251,"author":{"gitId":"KeithPJX"},"content":"            primaryStage.getScene().getStylesheets().clear();","lastModifiedDate":"2022-10-25"},{"lineNumber":252,"author":{"gitId":"KeithPJX"},"content":"            primaryStage.getScene().getStylesheets().add(darkTheme);","lastModifiedDate":"2022-10-18"},{"lineNumber":253,"author":{"gitId":"KeithPJX"},"content":"            primaryStage.getScene().getStylesheets().add(extensionsDark);","lastModifiedDate":"2022-10-18"},{"lineNumber":254,"author":{"gitId":"KeithPJX"},"content":"            helpWindow.setDarkTheme();","lastModifiedDate":"2022-10-18"},{"lineNumber":255,"author":{"gitId":"ryanlml"},"content":"            helpWindowForCommand.setDarkTheme();","lastModifiedDate":"2022-10-27"},{"lineNumber":256,"author":{"gitId":"KeithPJX"},"content":"        } else if (currentTheme.equals(Theme.DARK)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":257,"author":{"gitId":"KeithPJX"},"content":"            logger.info(\"Switching to light theme...\");","lastModifiedDate":"2022-10-18"},{"lineNumber":258,"author":{"gitId":"KeithPJX"},"content":"            currentTheme \u003d Theme.LIGHT;","lastModifiedDate":"2022-10-25"},{"lineNumber":259,"author":{"gitId":"KeithPJX"},"content":"            lightDarkThemeItem.setText(DARK_THEME_MENUITEM_TEXT);","lastModifiedDate":"2022-10-18"},{"lineNumber":260,"author":{"gitId":"KeithPJX"},"content":"            primaryStage.getScene().getStylesheets().clear();","lastModifiedDate":"2022-10-25"},{"lineNumber":261,"author":{"gitId":"KeithPJX"},"content":"            primaryStage.getScene().getStylesheets().add(lightTheme);","lastModifiedDate":"2022-10-10"},{"lineNumber":262,"author":{"gitId":"KeithPJX"},"content":"            primaryStage.getScene().getStylesheets().add(extensionsLight);","lastModifiedDate":"2022-10-18"},{"lineNumber":263,"author":{"gitId":"KeithPJX"},"content":"            helpWindow.setLightTheme();","lastModifiedDate":"2022-10-11"},{"lineNumber":264,"author":{"gitId":"ryanlml"},"content":"            helpWindowForCommand.setLightTheme();","lastModifiedDate":"2022-10-27"},{"lineNumber":265,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":266,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":267,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":268,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":269,"author":{"gitId":"KeithPJX"},"content":"     * Handles theme change from the ThemeCommand.","lastModifiedDate":"2022-10-25"},{"lineNumber":270,"author":{"gitId":"KeithPJX"},"content":"     * Takes in {@code Theme} that will specify the new theme to change to.","lastModifiedDate":"2022-10-25"},{"lineNumber":271,"author":{"gitId":"KeithPJX"},"content":"     * Throws a {@code CommandException} if theme to change to is same as current theme.","lastModifiedDate":"2022-10-25"},{"lineNumber":272,"author":{"gitId":"KeithPJX"},"content":"     * @param theme specifies the theme to change to","lastModifiedDate":"2022-10-25"},{"lineNumber":273,"author":{"gitId":"KeithPJX"},"content":"     * @throws CommandException if theme to change to is same as current theme","lastModifiedDate":"2022-10-25"},{"lineNumber":274,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":275,"author":{"gitId":"KeithPJX"},"content":"    private void handleThemeCommand(Theme theme) throws CommandException {","lastModifiedDate":"2022-10-25"},{"lineNumber":276,"author":{"gitId":"KeithPJX"},"content":"        if (theme.equals(currentTheme)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":277,"author":{"gitId":"KeithPJX"},"content":"            throw new CommandException(CHANGE_THEME_ERROR);","lastModifiedDate":"2022-10-25"},{"lineNumber":278,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":279,"author":{"gitId":"KeithPJX"},"content":"        handleLightDarkTheme();","lastModifiedDate":"2022-10-25"},{"lineNumber":280,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":281,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":282,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":283,"author":{"gitId":"KeithPJX"},"content":"     * Compacts or expands all PersonCard depending on current state.","lastModifiedDate":"2022-10-20"},{"lineNumber":284,"author":{"gitId":"KeithPJX"},"content":"     * Any new PersonCard will be created compacted or expanded depending on the new state.","lastModifiedDate":"2022-10-20"},{"lineNumber":285,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":286,"author":{"gitId":"KeithPJX"},"content":"    @FXML","lastModifiedDate":"2022-10-18"},{"lineNumber":287,"author":{"gitId":"KeithPJX"},"content":"    private void handleCompactExpand() {","lastModifiedDate":"2022-10-18"},{"lineNumber":288,"author":{"gitId":"KeithPJX"},"content":"        if (isExpanded) {","lastModifiedDate":"2022-10-18"},{"lineNumber":289,"author":{"gitId":"KeithPJX"},"content":"            logger.info(\"Switching to compacted mode...\");","lastModifiedDate":"2022-10-25"},{"lineNumber":290,"author":{"gitId":"KeithPJX"},"content":"            isExpanded \u003d false;","lastModifiedDate":"2022-10-18"},{"lineNumber":291,"author":{"gitId":"KeithPJX"},"content":"            compactExpandItem.setText(EXPAND_MENUITEM_TEXT);","lastModifiedDate":"2022-10-18"},{"lineNumber":292,"author":{"gitId":"KeithPJX"},"content":"        } else {","lastModifiedDate":"2022-10-18"},{"lineNumber":293,"author":{"gitId":"KeithPJX"},"content":"            logger.info(\"Switching to expanded mode...\");","lastModifiedDate":"2022-10-25"},{"lineNumber":294,"author":{"gitId":"KeithPJX"},"content":"            isExpanded \u003d true;","lastModifiedDate":"2022-10-18"},{"lineNumber":295,"author":{"gitId":"KeithPJX"},"content":"            compactExpandItem.setText(COMPACT_MENUITEM_TEXT);","lastModifiedDate":"2022-10-18"},{"lineNumber":296,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":297,"author":{"gitId":"KeithPJX"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList(), isExpanded);","lastModifiedDate":"2022-10-18"},{"lineNumber":298,"author":{"gitId":"KeithPJX"},"content":"        personListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2022-10-18"},{"lineNumber":299,"author":{"gitId":"KeithPJX"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2022-10-18"},{"lineNumber":300,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":301,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":307,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":308,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":309,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":310,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":314,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":317,"author":{"gitId":"KeithPJX"},"content":"            if (commandResult.isThemeChange()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":318,"author":{"gitId":"KeithPJX"},"content":"                assert !commandResult.isToggleListMode()","lastModifiedDate":"2022-10-25"},{"lineNumber":319,"author":{"gitId":"KeithPJX"},"content":"                        \u0026\u0026 !commandResult.isShowHelp()","lastModifiedDate":"2022-10-25"},{"lineNumber":320,"author":{"gitId":"KeithPJX"},"content":"                        \u0026\u0026 !commandResult.isExit();","lastModifiedDate":"2022-10-25"},{"lineNumber":321,"author":{"gitId":"KeithPJX"},"content":"                handleThemeCommand(commandResult.getTheme());","lastModifiedDate":"2022-10-25"},{"lineNumber":322,"author":{"gitId":"KeithPJX"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":323,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":324,"author":{"gitId":"KeithPJX"},"content":"            if (commandResult.isToggleListMode()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":325,"author":{"gitId":"KeithPJX"},"content":"                assert !commandResult.isThemeChange()","lastModifiedDate":"2022-10-25"},{"lineNumber":326,"author":{"gitId":"KeithPJX"},"content":"                        \u0026\u0026 !commandResult.isShowHelp()","lastModifiedDate":"2022-10-25"},{"lineNumber":327,"author":{"gitId":"KeithPJX"},"content":"                        \u0026\u0026 !commandResult.isExit();","lastModifiedDate":"2022-10-25"},{"lineNumber":328,"author":{"gitId":"KeithPJX"},"content":"                handleCompactExpand();","lastModifiedDate":"2022-10-25"},{"lineNumber":329,"author":{"gitId":"KeithPJX"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":330,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":331,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":332,"author":{"gitId":"KeithPJX"},"content":"                assert !commandResult.isThemeChange()","lastModifiedDate":"2022-10-25"},{"lineNumber":333,"author":{"gitId":"KeithPJX"},"content":"                        \u0026\u0026 !commandResult.isToggleListMode()","lastModifiedDate":"2022-10-25"},{"lineNumber":334,"author":{"gitId":"KeithPJX"},"content":"                        \u0026\u0026 !commandResult.isExit();","lastModifiedDate":"2022-10-25"},{"lineNumber":335,"author":{"gitId":"ryanlml"},"content":"                if (commandResult.getShowHelpFor().equals(\"\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":336,"author":{"gitId":"-"},"content":"                    handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":337,"author":{"gitId":"ryanlml"},"content":"                } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":338,"author":{"gitId":"ryanlml"},"content":"                    handleHelpForCommand(commandResult.getShowHelpFor());","lastModifiedDate":"2022-10-27"},{"lineNumber":339,"author":{"gitId":"ryanlml"},"content":"                }","lastModifiedDate":"2022-10-27"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":342,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":343,"author":{"gitId":"KeithPJX"},"content":"                assert !commandResult.isThemeChange()","lastModifiedDate":"2022-10-25"},{"lineNumber":344,"author":{"gitId":"KeithPJX"},"content":"                        \u0026\u0026 !commandResult.isToggleListMode()","lastModifiedDate":"2022-10-25"},{"lineNumber":345,"author":{"gitId":"KeithPJX"},"content":"                        \u0026\u0026 !commandResult.isShowHelp();","lastModifiedDate":"2022-10-25"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":347,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":349,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":351,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":352,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":353,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":356,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":357,"author":{"gitId":"NUSDG"},"content":"    public void setHelpMenuItem(MenuItem helpMenuItem) {","lastModifiedDate":"2022-10-25"},{"lineNumber":358,"author":{"gitId":"NUSDG"},"content":"        this.helpMenuItem \u003d helpMenuItem;","lastModifiedDate":"2022-10-25"},{"lineNumber":359,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":360,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"KeithPJX":103,"NUSDG":40,"ryanlml":22,"-":195}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"    private static final String DATE_FORMAT \u003d \"y-M-d\";","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"    private static final int WRAP_STRING_LENGTH \u003d 30;","lastModifiedDate":"2022-10-30"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"    private static final String ID_DONE \u003d \"done\";","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"    private static final String ID_NOT_DONE \u003d \"notDone\";","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"ryanlml"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on Survin level 4\u003c/a\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"    private boolean isExpanded;","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"KeithPJX"},"content":"    private Label gender;","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"KeithPJX"},"content":"    @FXML","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"KeithPJX"},"content":"    private Label birthdate;","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"KeithPJX"},"content":"    @FXML","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"KeithPJX"},"content":"    private Label race;","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"KeithPJX"},"content":"    @FXML","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"KeithPJX"},"content":"    private Label religion;","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"KeithPJX"},"content":"    @FXML","lastModifiedDate":"2022-10-02"},{"lineNumber":60,"author":{"gitId":"ryanlml"},"content":"    private FlowPane surveys;","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"KeithPJX"},"content":"    @FXML","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"KeithPJX"},"content":"    public PersonCard(Person person, int displayedIndex, boolean isExpanded) {","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"KeithPJX"},"content":"        this.isExpanded \u003d isExpanded;","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"KeithPJX"},"content":"        if (this.isExpanded) {","lastModifiedDate":"2022-10-18"},{"lineNumber":72,"author":{"gitId":"KeithPJX"},"content":"            showLabels();","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"KeithPJX"},"content":"        } else {","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"KeithPJX"},"content":"            hideLabels();","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":76,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"KeithPJX"},"content":"        person.getSurveys().stream()","lastModifiedDate":"2022-10-18"},{"lineNumber":80,"author":{"gitId":"KeithPJX"},"content":"                .sorted(Comparator.comparing(survey -\u003e survey.survey))","lastModifiedDate":"2022-10-18"},{"lineNumber":81,"author":{"gitId":"KeithPJX"},"content":"                .forEach(survey -\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"KeithPJX"},"content":"                    Label label \u003d new Label(survey.survey);","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"KeithPJX"},"content":"                    label.setId(survey.isDone ? ID_DONE : ID_NOT_DONE);","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"KeithPJX"},"content":"                    label.setWrapText(true);","lastModifiedDate":"2022-10-30"},{"lineNumber":85,"author":{"gitId":"KeithPJX"},"content":"                    if (survey.survey.length() \u003e WRAP_STRING_LENGTH) {","lastModifiedDate":"2022-10-30"},{"lineNumber":86,"author":{"gitId":"KeithPJX"},"content":"                        label.setPrefWidth(350);","lastModifiedDate":"2022-10-30"},{"lineNumber":87,"author":{"gitId":"KeithPJX"},"content":"                    }","lastModifiedDate":"2022-10-30"},{"lineNumber":88,"author":{"gitId":"KeithPJX"},"content":"                    surveys.getChildren().add(label);","lastModifiedDate":"2022-10-25"},{"lineNumber":89,"author":{"gitId":"KeithPJX"},"content":"                });","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"KeithPJX"},"content":"        phone.setText(\"Phone: \" + person.getPhone().value);","lastModifiedDate":"2022-10-30"},{"lineNumber":91,"author":{"gitId":"KeithPJX"},"content":"        address.setText(\"Address: \" + person.getAddress().value);","lastModifiedDate":"2022-10-30"},{"lineNumber":92,"author":{"gitId":"KeithPJX"},"content":"        email.setText(\"Email: \" + person.getEmail().value);","lastModifiedDate":"2022-10-30"},{"lineNumber":93,"author":{"gitId":"KeithPJX"},"content":"        gender.setText(\"Gender: \" + person.getGender().gender);","lastModifiedDate":"2022-10-30"},{"lineNumber":94,"author":{"gitId":"KeithPJX"},"content":"        birthdate.setText(\"Birthdate: \"","lastModifiedDate":"2022-10-30"},{"lineNumber":95,"author":{"gitId":"KeithPJX"},"content":"                + person.getBirthdate().birthdate.format(DateTimeFormatter.ofPattern(DATE_FORMAT)));","lastModifiedDate":"2022-10-30"},{"lineNumber":96,"author":{"gitId":"KeithPJX"},"content":"        race.setText(\"Race: \" + person.getRace().race);","lastModifiedDate":"2022-10-30"},{"lineNumber":97,"author":{"gitId":"KeithPJX"},"content":"        religion.setText(\"Religion: \" + person.getReligion().religion);","lastModifiedDate":"2022-10-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":100,"author":{"gitId":"KeithPJX"},"content":"                .forEach(tag -\u003e {","lastModifiedDate":"2022-10-30"},{"lineNumber":101,"author":{"gitId":"KeithPJX"},"content":"                    Label label \u003d new Label(tag.tagName);","lastModifiedDate":"2022-10-30"},{"lineNumber":102,"author":{"gitId":"KeithPJX"},"content":"                    label.setWrapText(true);","lastModifiedDate":"2022-10-30"},{"lineNumber":103,"author":{"gitId":"KeithPJX"},"content":"                    if (tag.tagName.length() \u003e WRAP_STRING_LENGTH) {","lastModifiedDate":"2022-10-30"},{"lineNumber":104,"author":{"gitId":"KeithPJX"},"content":"                        label.setPrefWidth(350);","lastModifiedDate":"2022-10-30"},{"lineNumber":105,"author":{"gitId":"KeithPJX"},"content":"                    }","lastModifiedDate":"2022-10-30"},{"lineNumber":106,"author":{"gitId":"KeithPJX"},"content":"                    tags.getChildren().add(label);","lastModifiedDate":"2022-10-30"},{"lineNumber":107,"author":{"gitId":"KeithPJX"},"content":"                });","lastModifiedDate":"2022-10-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":110,"author":{"gitId":"KeithPJX"},"content":"    @FXML","lastModifiedDate":"2022-10-18"},{"lineNumber":111,"author":{"gitId":"KeithPJX"},"content":"    private void handleMouseClicked() {","lastModifiedDate":"2022-10-18"},{"lineNumber":112,"author":{"gitId":"KeithPJX"},"content":"        if (isExpanded) {","lastModifiedDate":"2022-10-18"},{"lineNumber":113,"author":{"gitId":"KeithPJX"},"content":"            isExpanded \u003d false;","lastModifiedDate":"2022-10-18"},{"lineNumber":114,"author":{"gitId":"KeithPJX"},"content":"            hideLabels();","lastModifiedDate":"2022-10-18"},{"lineNumber":115,"author":{"gitId":"KeithPJX"},"content":"        } else {","lastModifiedDate":"2022-10-18"},{"lineNumber":116,"author":{"gitId":"KeithPJX"},"content":"            isExpanded \u003d true;","lastModifiedDate":"2022-10-18"},{"lineNumber":117,"author":{"gitId":"KeithPJX"},"content":"            showLabels();","lastModifiedDate":"2022-10-18"},{"lineNumber":118,"author":{"gitId":"KeithPJX"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":119,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":120,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":121,"author":{"gitId":"KeithPJX"},"content":"    private void hideLabels() {","lastModifiedDate":"2022-10-18"},{"lineNumber":122,"author":{"gitId":"KeithPJX"},"content":"        phone.setVisible(false);","lastModifiedDate":"2022-10-18"},{"lineNumber":123,"author":{"gitId":"KeithPJX"},"content":"        phone.setManaged(false);","lastModifiedDate":"2022-10-18"},{"lineNumber":124,"author":{"gitId":"KeithPJX"},"content":"        address.setVisible(false);","lastModifiedDate":"2022-10-18"},{"lineNumber":125,"author":{"gitId":"KeithPJX"},"content":"        address.setManaged(false);","lastModifiedDate":"2022-10-18"},{"lineNumber":126,"author":{"gitId":"KeithPJX"},"content":"        email.setVisible(false);","lastModifiedDate":"2022-10-18"},{"lineNumber":127,"author":{"gitId":"KeithPJX"},"content":"        email.setManaged(false);","lastModifiedDate":"2022-10-18"},{"lineNumber":128,"author":{"gitId":"KeithPJX"},"content":"        gender.setVisible(false);","lastModifiedDate":"2022-10-18"},{"lineNumber":129,"author":{"gitId":"KeithPJX"},"content":"        gender.setManaged(false);","lastModifiedDate":"2022-10-18"},{"lineNumber":130,"author":{"gitId":"KeithPJX"},"content":"        birthdate.setVisible(false);","lastModifiedDate":"2022-10-18"},{"lineNumber":131,"author":{"gitId":"KeithPJX"},"content":"        birthdate.setManaged(false);","lastModifiedDate":"2022-10-18"},{"lineNumber":132,"author":{"gitId":"KeithPJX"},"content":"        race.setVisible(false);","lastModifiedDate":"2022-10-18"},{"lineNumber":133,"author":{"gitId":"KeithPJX"},"content":"        race.setManaged(false);","lastModifiedDate":"2022-10-18"},{"lineNumber":134,"author":{"gitId":"KeithPJX"},"content":"        religion.setVisible(false);","lastModifiedDate":"2022-10-18"},{"lineNumber":135,"author":{"gitId":"KeithPJX"},"content":"        religion.setManaged(false);","lastModifiedDate":"2022-10-18"},{"lineNumber":136,"author":{"gitId":"KeithPJX"},"content":"        tags.setVisible(false);","lastModifiedDate":"2022-10-18"},{"lineNumber":137,"author":{"gitId":"KeithPJX"},"content":"        tags.setManaged(false);","lastModifiedDate":"2022-10-18"},{"lineNumber":138,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":139,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":140,"author":{"gitId":"KeithPJX"},"content":"    private void showLabels() {","lastModifiedDate":"2022-10-18"},{"lineNumber":141,"author":{"gitId":"KeithPJX"},"content":"        phone.setVisible(true);","lastModifiedDate":"2022-10-18"},{"lineNumber":142,"author":{"gitId":"KeithPJX"},"content":"        phone.setManaged(true);","lastModifiedDate":"2022-10-18"},{"lineNumber":143,"author":{"gitId":"KeithPJX"},"content":"        address.setVisible(true);","lastModifiedDate":"2022-10-18"},{"lineNumber":144,"author":{"gitId":"KeithPJX"},"content":"        address.setManaged(true);","lastModifiedDate":"2022-10-18"},{"lineNumber":145,"author":{"gitId":"KeithPJX"},"content":"        email.setVisible(true);","lastModifiedDate":"2022-10-18"},{"lineNumber":146,"author":{"gitId":"KeithPJX"},"content":"        email.setManaged(true);","lastModifiedDate":"2022-10-18"},{"lineNumber":147,"author":{"gitId":"KeithPJX"},"content":"        gender.setVisible(true);","lastModifiedDate":"2022-10-18"},{"lineNumber":148,"author":{"gitId":"KeithPJX"},"content":"        gender.setManaged(true);","lastModifiedDate":"2022-10-18"},{"lineNumber":149,"author":{"gitId":"KeithPJX"},"content":"        birthdate.setVisible(true);","lastModifiedDate":"2022-10-18"},{"lineNumber":150,"author":{"gitId":"KeithPJX"},"content":"        birthdate.setManaged(true);","lastModifiedDate":"2022-10-18"},{"lineNumber":151,"author":{"gitId":"KeithPJX"},"content":"        race.setVisible(true);","lastModifiedDate":"2022-10-18"},{"lineNumber":152,"author":{"gitId":"KeithPJX"},"content":"        race.setManaged(true);","lastModifiedDate":"2022-10-18"},{"lineNumber":153,"author":{"gitId":"KeithPJX"},"content":"        religion.setVisible(true);","lastModifiedDate":"2022-10-18"},{"lineNumber":154,"author":{"gitId":"KeithPJX"},"content":"        religion.setManaged(true);","lastModifiedDate":"2022-10-18"},{"lineNumber":155,"author":{"gitId":"KeithPJX"},"content":"        tags.setVisible(true);","lastModifiedDate":"2022-10-18"},{"lineNumber":156,"author":{"gitId":"KeithPJX"},"content":"        tags.setManaged(true);","lastModifiedDate":"2022-10-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"KeithPJX":101,"ryanlml":2,"-":73}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"    private final boolean isExpanded;","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList, boolean isExpanded) {","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"KeithPJX"},"content":"        this.isExpanded \u003d isExpanded;","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":40,"author":{"gitId":"KeithPJX"},"content":"            Person oldPerson \u003d getItem();","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"KeithPJX"},"content":"                if (!person.equals(oldPerson)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"KeithPJX"},"content":"                    setGraphic(new PersonCard(person, getIndex() + 1, isExpanded).getRoot());","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"KeithPJX":6,"-":48}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/survin_logo.png\";","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"KeithPJX":1,"-":87}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":354,"author":{"gitId":"ryanlml"},"content":"#surveys {","lastModifiedDate":"2022-10-18"},{"lineNumber":355,"author":{"gitId":"ryanlml"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-10-18"},{"lineNumber":356,"author":{"gitId":"ryanlml"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-10-18"},{"lineNumber":357,"author":{"gitId":"ryanlml"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":358,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":359,"author":{"gitId":"ryanlml"},"content":"#surveys .label {","lastModifiedDate":"2022-10-18"},{"lineNumber":360,"author":{"gitId":"ryanlml"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-18"},{"lineNumber":361,"author":{"gitId":"KeithPJX"},"content":"    -fx-padding: 2 5 2 5;","lastModifiedDate":"2022-10-18"},{"lineNumber":362,"author":{"gitId":"ryanlml"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-10-18"},{"lineNumber":363,"author":{"gitId":"ryanlml"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-10-18"},{"lineNumber":364,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2022-10-18"},{"lineNumber":365,"author":{"gitId":"ryanlml"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":366,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":367,"author":{"gitId":"KeithPJX"},"content":"#surveys #done {","lastModifiedDate":"2022-10-25"},{"lineNumber":368,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: #3e9144;","lastModifiedDate":"2022-10-25"},{"lineNumber":369,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-25"},{"lineNumber":370,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":371,"author":{"gitId":"KeithPJX"},"content":"#surveys #notDone {","lastModifiedDate":"2022-10-25"},{"lineNumber":372,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: #eb4034;","lastModifiedDate":"2022-10-25"},{"lineNumber":373,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"KeithPJX":10,"ryanlml":11,"-":352}},{"path":"src/main/resources/view/ExtensionsLight.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"    -fx-background: #ebebeb;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"    -fx-border-color: black;","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KeithPJX":3,"-":17}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2019-08-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"        \u003cURL value\u003d\"@HelpWindowLight.css\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"KeithPJX":1,"-":43}},{"path":"src/main/resources/view/HelpWindowForCommand.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlml"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"ryanlml"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"ryanlml"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"ryanlml"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"ryanlml"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"ryanlml"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"ryanlml"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"ryanlml"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"ryanlml"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"ryanlml"},"content":"  \u003cicons\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"ryanlml"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"ryanlml"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"ryanlml"},"content":"  \u003cscene\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"ryanlml"},"content":"    \u003cScene\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"ryanlml"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"ryanlml"},"content":"        \u003cURL value\u003d\"@HelpWindowLight.css\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"ryanlml"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"ryanlml"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"ryanlml"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"ryanlml"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"ryanlml"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"ryanlml"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"ryanlml"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"ryanlml"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"ryanlml"},"content":"        \u003c/children\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"ryanlml"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"ryanlml"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"ryanlml"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"ryanlml"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"ryanlml"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"ryanlml"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"ryanlml"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"ryanlml"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"ryanlml"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"ryanlml"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"ryanlml":38}},{"path":"src/main/resources/view/HelpWindowLight.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: lightgray;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: lightgray;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: #ebebeb;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"KeithPJX":5,"-":14}},{"path":"src/main/resources/view/LightTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":".background {","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: derive(#ebebeb, 20%);","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"    background-color: #ebebeb; /* Used in the default.html file */","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":".label {","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":".label-bright {","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":".label-header {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":".text-field {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":".tab-pane {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"KeithPJX"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"KeithPJX"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"KeithPJX"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"KeithPJX"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"KeithPJX"},"content":".table-view {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"KeithPJX"},"content":"    -fx-base: #ebebeb;","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"KeithPJX"},"content":"    -fx-control-inner-background: #ebebeb;","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: #ebebeb;","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"KeithPJX"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"KeithPJX"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"KeithPJX"},"content":"    -fx-padding: 5;","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"KeithPJX"},"content":".table-view .column-header-background {","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"KeithPJX"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"KeithPJX"},"content":"    -fx-size: 35;","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"KeithPJX"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"KeithPJX"},"content":"    -fx-border-color:","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"KeithPJX"},"content":"        transparent","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"KeithPJX"},"content":"        transparent","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"KeithPJX"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"KeithPJX"},"content":"        transparent;","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"KeithPJX"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"KeithPJX"},"content":".table-view .column-header .label {","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"KeithPJX"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"KeithPJX"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"KeithPJX"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"KeithPJX"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"KeithPJX"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: derive(#ebebeb, 20%);","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"KeithPJX"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"KeithPJX"},"content":".split-pane {","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"KeithPJX"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"KeithPJX"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: derive(#ebebeb, 20%);","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"KeithPJX"},"content":".list-view {","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"KeithPJX"},"content":"    -fx-padding: 0;","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: derive(#ebebeb, 20%);","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"KeithPJX"},"content":".list-cell {","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"KeithPJX"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"KeithPJX"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"KeithPJX"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"KeithPJX"},"content":".list-cell:filled:even {","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: #edeeee;","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"KeithPJX"},"content":".list-cell:filled:odd {","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: #e2e2e2;","lastModifiedDate":"2022-10-18"},{"lineNumber":108,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"KeithPJX"},"content":".list-cell:filled:selected {","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: #cadfff;","lastModifiedDate":"2022-10-18"},{"lineNumber":112,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"KeithPJX"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"KeithPJX"},"content":"    -fx-border-color: #a1a6af;","lastModifiedDate":"2022-10-18"},{"lineNumber":116,"author":{"gitId":"KeithPJX"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"KeithPJX"},"content":".list-cell .label {","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"KeithPJX"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"KeithPJX"},"content":".cell_big_label {","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"KeithPJX"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"KeithPJX"},"content":".cell_small_label {","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"KeithPJX"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"KeithPJX"},"content":".stack-pane {","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"KeithPJX"},"content":"     -fx-background-color: derive(#ebebeb, 20%);","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"KeithPJX"},"content":".pane-with-border {","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"KeithPJX"},"content":"     -fx-background-color: derive(#ebebeb, 20%);","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"KeithPJX"},"content":"     -fx-border-color: derive(#000000, 10%);","lastModifiedDate":"2022-10-20"},{"lineNumber":142,"author":{"gitId":"KeithPJX"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"KeithPJX"},"content":".status-bar {","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: derive(#ebebeb, 30%);","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"KeithPJX"},"content":".result-display {","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"KeithPJX"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"KeithPJX"},"content":".result-display .label {","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"KeithPJX"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"KeithPJX"},"content":".status-bar .label {","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"KeithPJX"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-11"},{"lineNumber":163,"author":{"gitId":"KeithPJX"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"KeithPJX"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"KeithPJX"},"content":".status-bar-with-border {","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: derive(#ebebeb, 30%);","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"KeithPJX"},"content":"    -fx-border-color: derive(#ebebeb, 25%);","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"KeithPJX"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"KeithPJX"},"content":".status-bar-with-border .label {","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"KeithPJX"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-11"},{"lineNumber":175,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"KeithPJX"},"content":".grid-pane {","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: derive(#ebebeb, 30%);","lastModifiedDate":"2022-10-11"},{"lineNumber":179,"author":{"gitId":"KeithPJX"},"content":"    -fx-border-color: derive(#ebebeb, 30%);","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"KeithPJX"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"KeithPJX"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: derive(#ebebeb, 30%);","lastModifiedDate":"2022-10-11"},{"lineNumber":185,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":186,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"KeithPJX"},"content":".context-menu {","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: derive(#ebebeb, 50%);","lastModifiedDate":"2022-10-11"},{"lineNumber":189,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":190,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":191,"author":{"gitId":"KeithPJX"},"content":".context-menu .label {","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"KeithPJX"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-11"},{"lineNumber":193,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":194,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":195,"author":{"gitId":"KeithPJX"},"content":".menu-bar {","lastModifiedDate":"2022-10-10"},{"lineNumber":196,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: derive(#ebebeb, 20%);","lastModifiedDate":"2022-10-11"},{"lineNumber":197,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":198,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":199,"author":{"gitId":"KeithPJX"},"content":".menu-bar .label {","lastModifiedDate":"2022-10-10"},{"lineNumber":200,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2022-10-10"},{"lineNumber":201,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-10"},{"lineNumber":202,"author":{"gitId":"KeithPJX"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-11"},{"lineNumber":203,"author":{"gitId":"KeithPJX"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2022-10-10"},{"lineNumber":204,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":205,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":206,"author":{"gitId":"KeithPJX"},"content":".menu .left-container {","lastModifiedDate":"2022-10-10"},{"lineNumber":207,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: black;","lastModifiedDate":"2022-10-10"},{"lineNumber":208,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":209,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":210,"author":{"gitId":"KeithPJX"},"content":"/*","lastModifiedDate":"2022-10-10"},{"lineNumber":211,"author":{"gitId":"KeithPJX"},"content":" * Metro style Push Button","lastModifiedDate":"2022-10-10"},{"lineNumber":212,"author":{"gitId":"KeithPJX"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2022-10-10"},{"lineNumber":213,"author":{"gitId":"KeithPJX"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2022-10-10"},{"lineNumber":214,"author":{"gitId":"KeithPJX"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":215,"author":{"gitId":"KeithPJX"},"content":".button {","lastModifiedDate":"2022-10-10"},{"lineNumber":216,"author":{"gitId":"KeithPJX"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2022-10-10"},{"lineNumber":217,"author":{"gitId":"KeithPJX"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2022-10-10"},{"lineNumber":218,"author":{"gitId":"KeithPJX"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2022-10-10"},{"lineNumber":219,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-10-10"},{"lineNumber":220,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: #ebebeb;","lastModifiedDate":"2022-10-11"},{"lineNumber":221,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-10-10"},{"lineNumber":222,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-10-10"},{"lineNumber":223,"author":{"gitId":"KeithPJX"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2022-10-10"},{"lineNumber":224,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2022-10-10"},{"lineNumber":225,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":226,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":227,"author":{"gitId":"KeithPJX"},"content":".button:hover {","lastModifiedDate":"2022-10-10"},{"lineNumber":228,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2022-10-10"},{"lineNumber":229,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":230,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":231,"author":{"gitId":"KeithPJX"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2022-10-10"},{"lineNumber":232,"author":{"gitId":"KeithPJX"},"content":"  -fx-background-color: black;","lastModifiedDate":"2022-10-11"},{"lineNumber":233,"author":{"gitId":"KeithPJX"},"content":"  -fx-text-fill: #ebebeb;","lastModifiedDate":"2022-10-11"},{"lineNumber":234,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":235,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":236,"author":{"gitId":"KeithPJX"},"content":".button:focused {","lastModifiedDate":"2022-10-10"},{"lineNumber":237,"author":{"gitId":"KeithPJX"},"content":"    -fx-border-color: black, black;","lastModifiedDate":"2022-10-11"},{"lineNumber":238,"author":{"gitId":"KeithPJX"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2022-10-10"},{"lineNumber":239,"author":{"gitId":"KeithPJX"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2022-10-10"},{"lineNumber":240,"author":{"gitId":"KeithPJX"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2022-10-10"},{"lineNumber":241,"author":{"gitId":"KeithPJX"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2022-10-10"},{"lineNumber":242,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":243,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":244,"author":{"gitId":"KeithPJX"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2022-10-10"},{"lineNumber":245,"author":{"gitId":"KeithPJX"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2022-10-10"},{"lineNumber":246,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: #ebebeb;","lastModifiedDate":"2022-10-11"},{"lineNumber":247,"author":{"gitId":"KeithPJX"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-11"},{"lineNumber":248,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":249,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":250,"author":{"gitId":"KeithPJX"},"content":".button:default {","lastModifiedDate":"2022-10-10"},{"lineNumber":251,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2022-10-10"},{"lineNumber":252,"author":{"gitId":"KeithPJX"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2022-10-11"},{"lineNumber":253,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":254,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":255,"author":{"gitId":"KeithPJX"},"content":".button:default:hover {","lastModifiedDate":"2022-10-10"},{"lineNumber":256,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2022-10-10"},{"lineNumber":257,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":258,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":259,"author":{"gitId":"KeithPJX"},"content":".dialog-pane {","lastModifiedDate":"2022-10-10"},{"lineNumber":260,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: #ebebeb;","lastModifiedDate":"2022-10-11"},{"lineNumber":261,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":262,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":263,"author":{"gitId":"KeithPJX"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2022-10-10"},{"lineNumber":264,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: #ebebeb;","lastModifiedDate":"2022-10-11"},{"lineNumber":265,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":266,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":267,"author":{"gitId":"KeithPJX"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2022-10-10"},{"lineNumber":268,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2022-10-10"},{"lineNumber":269,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2022-10-10"},{"lineNumber":270,"author":{"gitId":"KeithPJX"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-11"},{"lineNumber":271,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":272,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":273,"author":{"gitId":"KeithPJX"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2022-10-10"},{"lineNumber":274,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: derive(#ebebeb, 25%);","lastModifiedDate":"2022-10-11"},{"lineNumber":275,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":276,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":277,"author":{"gitId":"KeithPJX"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2022-10-10"},{"lineNumber":278,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2022-10-10"},{"lineNumber":279,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2022-10-10"},{"lineNumber":280,"author":{"gitId":"KeithPJX"},"content":"    -fx-fill: black;","lastModifiedDate":"2022-10-11"},{"lineNumber":281,"author":{"gitId":"KeithPJX"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-11"},{"lineNumber":282,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":283,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":284,"author":{"gitId":"KeithPJX"},"content":".scroll-bar {","lastModifiedDate":"2022-10-10"},{"lineNumber":285,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: derive(#ebebeb, 20%);","lastModifiedDate":"2022-10-20"},{"lineNumber":286,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":287,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":288,"author":{"gitId":"KeithPJX"},"content":".scroll-bar .thumb {","lastModifiedDate":"2022-10-10"},{"lineNumber":289,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: derive(#999999, 50%);","lastModifiedDate":"2022-10-11"},{"lineNumber":290,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2022-10-10"},{"lineNumber":291,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":292,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":293,"author":{"gitId":"KeithPJX"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2022-10-10"},{"lineNumber":294,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-10"},{"lineNumber":295,"author":{"gitId":"KeithPJX"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-10-10"},{"lineNumber":296,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":297,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":298,"author":{"gitId":"KeithPJX"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2022-10-10"},{"lineNumber":299,"author":{"gitId":"KeithPJX"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2022-10-10"},{"lineNumber":300,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":301,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":302,"author":{"gitId":"KeithPJX"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2022-10-10"},{"lineNumber":303,"author":{"gitId":"KeithPJX"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2022-10-10"},{"lineNumber":304,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":305,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":306,"author":{"gitId":"KeithPJX"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2022-10-10"},{"lineNumber":307,"author":{"gitId":"KeithPJX"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2022-10-10"},{"lineNumber":308,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":309,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":310,"author":{"gitId":"KeithPJX"},"content":"#cardPane {","lastModifiedDate":"2022-10-10"},{"lineNumber":311,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-10"},{"lineNumber":312,"author":{"gitId":"KeithPJX"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2022-10-10"},{"lineNumber":313,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":314,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":315,"author":{"gitId":"KeithPJX"},"content":"#commandTypeLabel {","lastModifiedDate":"2022-10-10"},{"lineNumber":316,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2022-10-10"},{"lineNumber":317,"author":{"gitId":"KeithPJX"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2022-10-10"},{"lineNumber":318,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":319,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":320,"author":{"gitId":"KeithPJX"},"content":"#commandTextField {","lastModifiedDate":"2022-10-10"},{"lineNumber":321,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: transparent #ebebeb transparent #ebebeb;","lastModifiedDate":"2022-10-11"},{"lineNumber":322,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-10-10"},{"lineNumber":323,"author":{"gitId":"KeithPJX"},"content":"    -fx-border-color: #ebebeb #ebebeb #000000 #ebebeb;","lastModifiedDate":"2022-10-11"},{"lineNumber":324,"author":{"gitId":"KeithPJX"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2022-10-10"},{"lineNumber":325,"author":{"gitId":"KeithPJX"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-10-10"},{"lineNumber":326,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-10"},{"lineNumber":327,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2022-10-10"},{"lineNumber":328,"author":{"gitId":"KeithPJX"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-11"},{"lineNumber":329,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":330,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":331,"author":{"gitId":"KeithPJX"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2022-10-10"},{"lineNumber":332,"author":{"gitId":"KeithPJX"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2022-10-10"},{"lineNumber":333,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":334,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":335,"author":{"gitId":"KeithPJX"},"content":"#resultDisplay .content {","lastModifiedDate":"2022-10-10"},{"lineNumber":336,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: #edeeee;","lastModifiedDate":"2022-10-20"},{"lineNumber":337,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-10-10"},{"lineNumber":338,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":339,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":340,"author":{"gitId":"KeithPJX"},"content":"#tags {","lastModifiedDate":"2022-10-10"},{"lineNumber":341,"author":{"gitId":"KeithPJX"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-10-10"},{"lineNumber":342,"author":{"gitId":"KeithPJX"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-10-10"},{"lineNumber":343,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":344,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":345,"author":{"gitId":"KeithPJX"},"content":"#tags .label {","lastModifiedDate":"2022-10-10"},{"lineNumber":346,"author":{"gitId":"KeithPJX"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-11"},{"lineNumber":347,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: #fafd9b;","lastModifiedDate":"2022-10-18"},{"lineNumber":348,"author":{"gitId":"KeithPJX"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-10-10"},{"lineNumber":349,"author":{"gitId":"KeithPJX"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-10-10"},{"lineNumber":350,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-10-10"},{"lineNumber":351,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-10-10"},{"lineNumber":352,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":353,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":354,"author":{"gitId":"ryanlml"},"content":"#surveys {","lastModifiedDate":"2022-10-18"},{"lineNumber":355,"author":{"gitId":"ryanlml"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-10-18"},{"lineNumber":356,"author":{"gitId":"ryanlml"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-10-18"},{"lineNumber":357,"author":{"gitId":"ryanlml"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":358,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":359,"author":{"gitId":"ryanlml"},"content":"#surveys .label {","lastModifiedDate":"2022-10-18"},{"lineNumber":360,"author":{"gitId":"ryanlml"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-18"},{"lineNumber":361,"author":{"gitId":"KeithPJX"},"content":"    -fx-padding: 2 5 2 5;","lastModifiedDate":"2022-10-18"},{"lineNumber":362,"author":{"gitId":"ryanlml"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-10-18"},{"lineNumber":363,"author":{"gitId":"ryanlml"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-10-18"},{"lineNumber":364,"author":{"gitId":"KeithPJX"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2022-10-18"},{"lineNumber":365,"author":{"gitId":"ryanlml"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":366,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":367,"author":{"gitId":"KeithPJX"},"content":"#surveys #done {","lastModifiedDate":"2022-10-25"},{"lineNumber":368,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: #3e9144;","lastModifiedDate":"2022-10-25"},{"lineNumber":369,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-25"},{"lineNumber":370,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":371,"author":{"gitId":"KeithPJX"},"content":"#surveys #notDone {","lastModifiedDate":"2022-10-25"},{"lineNumber":372,"author":{"gitId":"KeithPJX"},"content":"    -fx-background-color: #eb4034;","lastModifiedDate":"2022-10-25"},{"lineNumber":373,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"KeithPJX":362,"ryanlml":11}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"         title\u003d\"Survin\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"    \u003cImage url\u003d\"@/images/survin_logo.png\" /\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"        \u003cURL value\u003d\"@LightTheme.css\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"        \u003cURL value\u003d\"@ExtensionsLight.css\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Appearance\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"KeithPJX"},"content":"            \u003cMenuItem fx:id\u003d\"lightDarkThemeItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleLightDarkTheme\" text\u003d\"Light/Dark Theme\"/\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"            \u003cMenuItem fx:id\u003d\"compactExpandItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleCompactExpand\" text\u003d\"Compacted/Expanded Cards\"/\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"KeithPJX"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"KeithPJX":8,"-":55}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" onMouseClicked\u003d\"#handleMouseClicked\"\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":29,"author":{"gitId":"ryanlml"},"content":"        \u003cFlowPane fx:id\u003d\"surveys\" /\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":33,"author":{"gitId":"KeithPJX"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":34,"author":{"gitId":"KeithPJX"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":35,"author":{"gitId":"KeithPJX"},"content":"      \u003cLabel fx:id\u003d\"gender\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$gender\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":36,"author":{"gitId":"KeithPJX"},"content":"      \u003cLabel fx:id\u003d\"birthdate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$birthdate\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"      \u003cLabel fx:id\u003d\"race\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$race\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":38,"author":{"gitId":"KeithPJX"},"content":"      \u003cLabel fx:id\u003d\"religion\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$religion\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"KeithPJX":9,"ryanlml":1,"-":31}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDATE_DESC_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RACE_DESC_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RELIGION_DESC_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SURVEY_DESC_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.ReadOnlySurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"ryanlml"},"content":"import seedu.address.storage.JsonSurvinStorage;","lastModifiedDate":"2022-11-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"ryanlml"},"content":"        JsonSurvinStorage survinStorage \u003d","lastModifiedDate":"2022-11-04"},{"lineNumber":52,"author":{"gitId":"ryanlml"},"content":"                new JsonSurvinStorage(temporaryFolder.resolve(\"survin.json\"));","lastModifiedDate":"2022-11-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"ryanlml"},"content":"        StorageManager storage \u003d new StorageManager(survinStorage, userPrefsStorage);","lastModifiedDate":"2022-11-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"ryanlml"},"content":"        // Setup LogicManager with JsonSurvinIoExceptionThrowingStub","lastModifiedDate":"2022-11-04"},{"lineNumber":79,"author":{"gitId":"ryanlml"},"content":"        JsonSurvinStorage survinStorage \u003d","lastModifiedDate":"2022-11-04"},{"lineNumber":80,"author":{"gitId":"ryanlml"},"content":"                new JsonSurvinIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionSurvin.json\"));","lastModifiedDate":"2022-11-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"ryanlml"},"content":"        StorageManager storage \u003d new StorageManager(survinStorage, userPrefsStorage);","lastModifiedDate":"2022-11-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"KeithPJX"},"content":"                + ADDRESS_DESC_AMY + GENDER_DESC_AMY + BIRTHDATE_DESC_AMY","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"KeithPJX"},"content":"                + RACE_DESC_AMY + RELIGION_DESC_AMY + SURVEY_DESC_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"ryanlml"},"content":"        expectedModel.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"ryanlml"},"content":"        Model expectedModel \u003d new ModelManager(model.getSurvin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"ryanlml"},"content":"    private static class JsonSurvinIoExceptionThrowingStub extends JsonSurvinStorage {","lastModifiedDate":"2022-11-04"},{"lineNumber":160,"author":{"gitId":"ryanlml"},"content":"        private JsonSurvinIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-11-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"ryanlml"},"content":"        public void saveSurvin(ReadOnlySurvin survin, Path filePath) throws IOException {","lastModifiedDate":"2022-11-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"KeithPJX":7,"ryanlml":14,"-":148}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalSurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"ryanlml"},"content":"        model \u003d new ModelManager(getTypicalSurvin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"ryanlml"},"content":"        Model expectedModel \u003d new ModelManager(model.getSurvin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"ryanlml"},"content":"        expectedModel.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"ryanlml"},"content":"        Person personInList \u003d model.getSurvin().getPersonList().get(0);","lastModifiedDate":"2022-11-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"ryanlml":5,"-":41}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"deepimpactmir"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.ReadOnlySurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.Survin;","lastModifiedDate":"2022-11-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"ryanlml"},"content":"        public Path getSurvinFilePath() {","lastModifiedDate":"2022-11-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"ryanlml"},"content":"        public void setSurvinFilePath(Path survinFilePath) {","lastModifiedDate":"2022-11-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"ryanlml"},"content":"        public void setSurvin(ReadOnlySurvin newData) {","lastModifiedDate":"2022-11-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"ryanlml"},"content":"        public ReadOnlySurvin getSurvin() {","lastModifiedDate":"2022-11-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"deepimpactmir"},"content":"        @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":133,"author":{"gitId":"deepimpactmir"},"content":"        public Optional\u003cPerson\u003e getPerson(Person person) {","lastModifiedDate":"2022-10-24"},{"lineNumber":134,"author":{"gitId":"deepimpactmir"},"content":"            throw new AssertionError(\"This methoud should not be called\");","lastModifiedDate":"2022-10-24"},{"lineNumber":135,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":136,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"deepimpactmir"},"content":"        @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":148,"author":{"gitId":"ryanlml"},"content":"        public void commitSurvin() {","lastModifiedDate":"2022-11-04"},{"lineNumber":149,"author":{"gitId":"deepimpactmir"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-14"},{"lineNumber":150,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":151,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":152,"author":{"gitId":"deepimpactmir"},"content":"        @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":153,"author":{"gitId":"ryanlml"},"content":"        public void undoSurvin() {","lastModifiedDate":"2022-11-04"},{"lineNumber":154,"author":{"gitId":"deepimpactmir"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-14"},{"lineNumber":155,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":156,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":157,"author":{"gitId":"deepimpactmir"},"content":"        @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":158,"author":{"gitId":"ryanlml"},"content":"        public boolean canUndoSurvin() {","lastModifiedDate":"2022-11-04"},{"lineNumber":159,"author":{"gitId":"deepimpactmir"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-14"},{"lineNumber":160,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":161,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":190,"author":{"gitId":"deepimpactmir"},"content":"        @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":191,"author":{"gitId":"deepimpactmir"},"content":"        public Optional\u003cPerson\u003e getPerson(Person person) {","lastModifiedDate":"2022-10-24"},{"lineNumber":192,"author":{"gitId":"deepimpactmir"},"content":"            return Optional.of(person);","lastModifiedDate":"2022-10-24"},{"lineNumber":193,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":215,"author":{"gitId":"ryanlml"},"content":"        public void commitSurvin() {","lastModifiedDate":"2022-11-04"},{"lineNumber":216,"author":{"gitId":"deepimpactmir"},"content":"            // for the personAcceptedByModel test","lastModifiedDate":"2022-10-17"},{"lineNumber":217,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":218,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"ryanlml"},"content":"        public ReadOnlySurvin getSurvin() {","lastModifiedDate":"2022-11-04"},{"lineNumber":221,"author":{"gitId":"ryanlml"},"content":"            return new Survin();","lastModifiedDate":"2022-11-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"ryanlml":12,"-":187,"deepimpactmir":26}},{"path":"src/test/java/seedu/address/logic/commands/AppendCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-31"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-31"},{"lineNumber":7,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalSurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-31"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.Survin;","lastModifiedDate":"2022-11-05"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-31"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"public class AppendCommandTest {","lastModifiedDate":"2022-10-31"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":27,"author":{"gitId":"ryanlml"},"content":"    private Model model \u003d new ModelManager(getTypicalSurvin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-31"},{"lineNumber":31,"author":{"gitId":"KeithPJX"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"                new AppendCommand(null, Collections.emptySet(), Collections.emptySet()));","lastModifiedDate":"2022-11-01"},{"lineNumber":33,"author":{"gitId":"KeithPJX"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":34,"author":{"gitId":"KeithPJX"},"content":"                new AppendCommand(Index.fromZeroBased(0), null, Collections.emptySet()));","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"KeithPJX"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":36,"author":{"gitId":"KeithPJX"},"content":"                new AppendCommand(Index.fromZeroBased(0), Collections.emptySet(), null));","lastModifiedDate":"2022-11-01"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":38,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":39,"author":{"gitId":"KeithPJX"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":40,"author":{"gitId":"KeithPJX"},"content":"    public void execute_singleSurveyAppended_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":41,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cSurvey\u003e surveys \u003d new HashSet\u003cSurvey\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":42,"author":{"gitId":"KeithPJX"},"content":"        surveys.add(new Survey(\"Environment Survey\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":43,"author":{"gitId":"KeithPJX"},"content":"        surveys.add(new Survey(\"Appended Survey\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":44,"author":{"gitId":"KeithPJX"},"content":"        Person appendedPerson \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-31"},{"lineNumber":45,"author":{"gitId":"KeithPJX"},"content":"                .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-10-31"},{"lineNumber":46,"author":{"gitId":"KeithPJX"},"content":"                .withPhone(\"94351253\").withGender(\"female\").withBirthdate(\"1998-12-28\")","lastModifiedDate":"2022-10-31"},{"lineNumber":47,"author":{"gitId":"KeithPJX"},"content":"                .withRace(\"White American\").withReligion(\"Christian\").withSurveys(surveys)","lastModifiedDate":"2022-10-31"},{"lineNumber":48,"author":{"gitId":"KeithPJX"},"content":"                .withTags(\"friends\").build();","lastModifiedDate":"2022-10-31"},{"lineNumber":49,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cSurvey\u003e newSurveys \u003d new HashSet\u003cSurvey\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":50,"author":{"gitId":"KeithPJX"},"content":"        newSurveys.add(new Survey(\"Appended Survey\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":51,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cTag\u003e newTags \u003d Collections.emptySet();","lastModifiedDate":"2022-10-31"},{"lineNumber":52,"author":{"gitId":"KeithPJX"},"content":"        AppendCommand appendCommand \u003d new AppendCommand(INDEX_FIRST_PERSON, newSurveys, newTags);","lastModifiedDate":"2022-10-31"},{"lineNumber":53,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":54,"author":{"gitId":"KeithPJX"},"content":"        String expectedMessage \u003d String.format(AppendCommand.MESSAGE_APPEND_SUCCESS, appendedPerson);","lastModifiedDate":"2022-10-31"},{"lineNumber":55,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":56,"author":{"gitId":"ryanlml"},"content":"        Model expectedModel \u003d new ModelManager(new Survin(model.getSurvin()), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":57,"author":{"gitId":"KeithPJX"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), appendedPerson);","lastModifiedDate":"2022-10-31"},{"lineNumber":58,"author":{"gitId":"ryanlml"},"content":"        expectedModel.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":59,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":60,"author":{"gitId":"KeithPJX"},"content":"        assertCommandSuccess(appendCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":61,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":62,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":63,"author":{"gitId":"KeithPJX"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":64,"author":{"gitId":"KeithPJX"},"content":"    public void execute_multipleSurveysAppended_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":65,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cSurvey\u003e surveys \u003d new HashSet\u003cSurvey\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":66,"author":{"gitId":"KeithPJX"},"content":"        surveys.add(new Survey(\"Environment Survey\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":67,"author":{"gitId":"KeithPJX"},"content":"        surveys.add(new Survey(\"Appended Survey\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":68,"author":{"gitId":"KeithPJX"},"content":"        surveys.add(new Survey(\"Appended Survey2\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":69,"author":{"gitId":"KeithPJX"},"content":"        Person appendedPerson \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-31"},{"lineNumber":70,"author":{"gitId":"KeithPJX"},"content":"                .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-10-31"},{"lineNumber":71,"author":{"gitId":"KeithPJX"},"content":"                .withPhone(\"94351253\").withGender(\"female\").withBirthdate(\"1998-12-28\")","lastModifiedDate":"2022-10-31"},{"lineNumber":72,"author":{"gitId":"KeithPJX"},"content":"                .withRace(\"White American\").withReligion(\"Christian\").withSurveys(surveys)","lastModifiedDate":"2022-10-31"},{"lineNumber":73,"author":{"gitId":"KeithPJX"},"content":"                .withTags(\"friends\").build();","lastModifiedDate":"2022-10-31"},{"lineNumber":74,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cSurvey\u003e newSurveys \u003d new HashSet\u003cSurvey\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":75,"author":{"gitId":"KeithPJX"},"content":"        newSurveys.add(new Survey(\"Appended Survey\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":76,"author":{"gitId":"KeithPJX"},"content":"        newSurveys.add(new Survey(\"Appended Survey2\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":77,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cTag\u003e newTags \u003d Collections.emptySet();","lastModifiedDate":"2022-10-31"},{"lineNumber":78,"author":{"gitId":"KeithPJX"},"content":"        AppendCommand appendCommand \u003d new AppendCommand(INDEX_FIRST_PERSON, newSurveys, newTags);","lastModifiedDate":"2022-10-31"},{"lineNumber":79,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":80,"author":{"gitId":"KeithPJX"},"content":"        String expectedMessage \u003d String.format(AppendCommand.MESSAGE_APPEND_SUCCESS, appendedPerson);","lastModifiedDate":"2022-10-31"},{"lineNumber":81,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":82,"author":{"gitId":"ryanlml"},"content":"        Model expectedModel \u003d new ModelManager(new Survin(model.getSurvin()), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":83,"author":{"gitId":"KeithPJX"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), appendedPerson);","lastModifiedDate":"2022-10-31"},{"lineNumber":84,"author":{"gitId":"ryanlml"},"content":"        expectedModel.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":85,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":86,"author":{"gitId":"KeithPJX"},"content":"        assertCommandSuccess(appendCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":87,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":88,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":89,"author":{"gitId":"KeithPJX"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":90,"author":{"gitId":"KeithPJX"},"content":"    public void execute_multipleSurveysAndTagsAppended_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":91,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cSurvey\u003e surveys \u003d new HashSet\u003cSurvey\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":92,"author":{"gitId":"KeithPJX"},"content":"        surveys.add(new Survey(\"Environment Survey\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":93,"author":{"gitId":"KeithPJX"},"content":"        surveys.add(new Survey(\"Appended Survey\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":94,"author":{"gitId":"KeithPJX"},"content":"        surveys.add(new Survey(\"Appended Survey2\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":95,"author":{"gitId":"KeithPJX"},"content":"        Person appendedPerson \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-31"},{"lineNumber":96,"author":{"gitId":"KeithPJX"},"content":"                .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-10-31"},{"lineNumber":97,"author":{"gitId":"KeithPJX"},"content":"                .withPhone(\"94351253\").withGender(\"female\").withBirthdate(\"1998-12-28\")","lastModifiedDate":"2022-10-31"},{"lineNumber":98,"author":{"gitId":"KeithPJX"},"content":"                .withRace(\"White American\").withReligion(\"Christian\").withSurveys(surveys)","lastModifiedDate":"2022-10-31"},{"lineNumber":99,"author":{"gitId":"KeithPJX"},"content":"                .withTags(\"friends\", \"neighbours\", \"student\").build();","lastModifiedDate":"2022-10-31"},{"lineNumber":100,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cSurvey\u003e newSurveys \u003d new HashSet\u003cSurvey\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":101,"author":{"gitId":"KeithPJX"},"content":"        newSurveys.add(new Survey(\"Appended Survey\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":102,"author":{"gitId":"KeithPJX"},"content":"        newSurveys.add(new Survey(\"Appended Survey2\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":103,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cTag\u003e newTags \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":104,"author":{"gitId":"KeithPJX"},"content":"        newTags.add(new Tag(\"neighbours\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":105,"author":{"gitId":"KeithPJX"},"content":"        newTags.add(new Tag(\"student\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":106,"author":{"gitId":"KeithPJX"},"content":"        AppendCommand appendCommand \u003d new AppendCommand(INDEX_FIRST_PERSON, newSurveys, newTags);","lastModifiedDate":"2022-10-31"},{"lineNumber":107,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":108,"author":{"gitId":"KeithPJX"},"content":"        String expectedMessage \u003d String.format(AppendCommand.MESSAGE_APPEND_SUCCESS, appendedPerson);","lastModifiedDate":"2022-10-31"},{"lineNumber":109,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":110,"author":{"gitId":"ryanlml"},"content":"        Model expectedModel \u003d new ModelManager(new Survin(model.getSurvin()), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":111,"author":{"gitId":"KeithPJX"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), appendedPerson);","lastModifiedDate":"2022-10-31"},{"lineNumber":112,"author":{"gitId":"ryanlml"},"content":"        expectedModel.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":113,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":114,"author":{"gitId":"KeithPJX"},"content":"        assertCommandSuccess(appendCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":115,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":116,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":117,"author":{"gitId":"KeithPJX"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":118,"author":{"gitId":"KeithPJX"},"content":"    public void execute_existingSurveyAppended_failure() {","lastModifiedDate":"2022-10-31"},{"lineNumber":119,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cSurvey\u003e newSurveys \u003d new HashSet\u003cSurvey\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":120,"author":{"gitId":"KeithPJX"},"content":"        newSurveys.add(new Survey(\"Environment Survey\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":121,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cTag\u003e newTags \u003d Collections.emptySet();","lastModifiedDate":"2022-10-31"},{"lineNumber":122,"author":{"gitId":"KeithPJX"},"content":"        AppendCommand appendCommand \u003d new AppendCommand(INDEX_FIRST_PERSON, newSurveys, newTags);","lastModifiedDate":"2022-10-31"},{"lineNumber":123,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":124,"author":{"gitId":"KeithPJX"},"content":"        String expectedMessage \u003d String.format(AppendCommand.MESSAGE_SURVEY_FOUND);","lastModifiedDate":"2022-10-31"},{"lineNumber":125,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":126,"author":{"gitId":"KeithPJX"},"content":"        assertCommandFailure(appendCommand, model, expectedMessage);","lastModifiedDate":"2022-10-31"},{"lineNumber":127,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":128,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":129,"author":{"gitId":"KeithPJX"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":130,"author":{"gitId":"KeithPJX"},"content":"    public void execute_existingTagAppended_failure() {","lastModifiedDate":"2022-10-31"},{"lineNumber":131,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cSurvey\u003e newSurveys \u003d Collections.emptySet();","lastModifiedDate":"2022-10-31"},{"lineNumber":132,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cTag\u003e newTags \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":133,"author":{"gitId":"KeithPJX"},"content":"        newTags.add(new Tag(\"friends\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":134,"author":{"gitId":"KeithPJX"},"content":"        AppendCommand appendCommand \u003d new AppendCommand(INDEX_FIRST_PERSON, newSurveys, newTags);","lastModifiedDate":"2022-10-31"},{"lineNumber":135,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":136,"author":{"gitId":"KeithPJX"},"content":"        String expectedMessage \u003d String.format(AppendCommand.MESSAGE_TAG_FOUND);","lastModifiedDate":"2022-10-31"},{"lineNumber":137,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":138,"author":{"gitId":"KeithPJX"},"content":"        assertCommandFailure(appendCommand, model, expectedMessage);","lastModifiedDate":"2022-10-31"},{"lineNumber":139,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":140,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":141,"author":{"gitId":"KeithPJX"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":142,"author":{"gitId":"KeithPJX"},"content":"    public void execute_existingSurveyAndTagAppended_failure() {","lastModifiedDate":"2022-10-31"},{"lineNumber":143,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cSurvey\u003e newSurveys \u003d new HashSet\u003cSurvey\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":144,"author":{"gitId":"KeithPJX"},"content":"        newSurveys.add(new Survey(\"Environment Survey\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":145,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cTag\u003e newTags \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":146,"author":{"gitId":"KeithPJX"},"content":"        newTags.add(new Tag(\"friends\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":147,"author":{"gitId":"KeithPJX"},"content":"        AppendCommand appendCommand \u003d new AppendCommand(INDEX_FIRST_PERSON, newSurveys, newTags);","lastModifiedDate":"2022-10-31"},{"lineNumber":148,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":149,"author":{"gitId":"KeithPJX"},"content":"        // NOTE: Survey error message takes priority.","lastModifiedDate":"2022-10-31"},{"lineNumber":150,"author":{"gitId":"KeithPJX"},"content":"        String expectedMessage \u003d String.format(AppendCommand.MESSAGE_SURVEY_FOUND);","lastModifiedDate":"2022-10-31"},{"lineNumber":151,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":152,"author":{"gitId":"KeithPJX"},"content":"        assertCommandFailure(appendCommand, model, expectedMessage);","lastModifiedDate":"2022-10-31"},{"lineNumber":153,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":154,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-31"}],"authorContributionMap":{"KeithPJX":145,"ryanlml":9}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalSurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.Survin;","lastModifiedDate":"2022-11-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"ryanlml"},"content":"    public void execute_emptySurvin_success() {","lastModifiedDate":"2022-11-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"ryanlml"},"content":"    public void execute_nonEmptySurvin_success() {","lastModifiedDate":"2022-11-04"},{"lineNumber":25,"author":{"gitId":"ryanlml"},"content":"        Model model \u003d new ModelManager(getTypicalSurvin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":26,"author":{"gitId":"ryanlml"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalSurvin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":27,"author":{"gitId":"ryanlml"},"content":"        expectedModel.setSurvin(new Survin());","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"ryanlml":7,"-":25}},{"path":"src/test/java/seedu/address/logic/commands/CloneCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NUSDG"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"NUSDG"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"NUSDG"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.C_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.C_DESC_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalSurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":17,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"NUSDG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"NUSDG"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"NUSDG"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"NUSDG"},"content":"import seedu.address.logic.commands.CloneCommand.ClonePersonDescriptor;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.Survin;","lastModifiedDate":"2022-11-05"},{"lineNumber":26,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"NUSDG"},"content":"import seedu.address.testutil.ClonePersonDescriptorBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"NUSDG"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"NUSDG"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"NUSDG"},"content":" * Contains integration tests (interaction with the Model) and unit tests for CloneCommand.","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"NUSDG"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"NUSDG"},"content":"public class CloneCommandTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"ryanlml"},"content":"    private Model model \u003d new ModelManager(getTypicalSurvin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":37,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"NUSDG"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"NUSDG"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"NUSDG"},"content":"        Person clonedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"NUSDG"},"content":"        ClonePersonDescriptor descriptor \u003d new ClonePersonDescriptorBuilder(clonedPerson).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"NUSDG"},"content":"        CloneCommand cloneCommand \u003d new CloneCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"NUSDG"},"content":"        String expectedMessage \u003d String.format(CloneCommand.MESSAGE_CLONE_PERSON_SUCCESS, clonedPerson);","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"ryanlml"},"content":"        Model expectedModel \u003d new ModelManager(new Survin(model.getSurvin()), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":47,"author":{"gitId":"NUSDG"},"content":"        expectedModel.addPerson(clonedPerson);","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"ryanlml"},"content":"        expectedModel.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":49,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"NUSDG"},"content":"        assertCommandSuccess(cloneCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"NUSDG"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"NUSDG"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"NUSDG"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"NUSDG"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"NUSDG"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"NUSDG"},"content":"        Person clonedPerson \u003d personInList.withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"NUSDG"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"NUSDG"},"content":"        ClonePersonDescriptor descriptor \u003d new ClonePersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"NUSDG"},"content":"                .withPhone(VALID_PHONE_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"NUSDG"},"content":"        CloneCommand cloneCommand \u003d new CloneCommand(indexLastPerson, descriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"NUSDG"},"content":"        String expectedMessage \u003d String.format(CloneCommand.MESSAGE_CLONE_PERSON_SUCCESS, clonedPerson);","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"ryanlml"},"content":"        Model expectedModel \u003d new ModelManager(new Survin(model.getSurvin()), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":69,"author":{"gitId":"NUSDG"},"content":"        expectedModel.addPerson(clonedPerson);","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"ryanlml"},"content":"        expectedModel.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":71,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"NUSDG"},"content":"        assertCommandSuccess(cloneCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"NUSDG"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"NUSDG"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"NUSDG"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"NUSDG"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"NUSDG"},"content":"        Person clonedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"NUSDG"},"content":"        CloneCommand cloneCommand \u003d new CloneCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"NUSDG"},"content":"                new ClonePersonDescriptorBuilder().withName(VALID_NAME_AMY).build());","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"NUSDG"},"content":"        String expectedMessage \u003d String.format(CloneCommand.MESSAGE_CLONE_PERSON_SUCCESS, clonedPerson);","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"ryanlml"},"content":"        Model expectedModel \u003d new ModelManager(new Survin(model.getSurvin()), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":87,"author":{"gitId":"NUSDG"},"content":"        expectedModel.addPerson(clonedPerson);","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"ryanlml"},"content":"        expectedModel.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":89,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"NUSDG"},"content":"        assertCommandSuccess(cloneCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"NUSDG"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"NUSDG"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"NUSDG"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"NUSDG"},"content":"        ClonePersonDescriptor descriptor \u003d new ClonePersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"NUSDG"},"content":"        CloneCommand cloneCommand \u003d new CloneCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-10-31"},{"lineNumber":98,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"NUSDG"},"content":"        assertCommandFailure(cloneCommand, model, CloneCommand.MESSAGE_DUPLICATE_CLONED_PERSON);","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"NUSDG"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"NUSDG"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"NUSDG"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"ryanlml"},"content":"        // clone person in filtered list into a duplicate in Survin","lastModifiedDate":"2022-11-04"},{"lineNumber":107,"author":{"gitId":"ryanlml"},"content":"        Person personInList \u003d model.getSurvin().getPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-11-04"},{"lineNumber":108,"author":{"gitId":"NUSDG"},"content":"        CloneCommand cloneCommand \u003d new CloneCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"NUSDG"},"content":"                new ClonePersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"NUSDG"},"content":"        assertCommandFailure(cloneCommand, model, CloneCommand.MESSAGE_DUPLICATE_CLONED_PERSON);","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"NUSDG"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"NUSDG"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"NUSDG"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"NUSDG"},"content":"        ClonePersonDescriptor descriptor \u003d new ClonePersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":118,"author":{"gitId":"NUSDG"},"content":"        CloneCommand cloneCommand \u003d new CloneCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":119,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":120,"author":{"gitId":"NUSDG"},"content":"        assertCommandFailure(cloneCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"NUSDG"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":124,"author":{"gitId":"NUSDG"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2022-10-20"},{"lineNumber":125,"author":{"gitId":"NUSDG"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-20"},{"lineNumber":126,"author":{"gitId":"NUSDG"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"ryanlml"},"content":"        // ensures that outOfBoundIndex is still in bounds of Survin list","lastModifiedDate":"2022-11-04"},{"lineNumber":128,"author":{"gitId":"ryanlml"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSurvin().getPersonList().size());","lastModifiedDate":"2022-11-04"},{"lineNumber":129,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":130,"author":{"gitId":"NUSDG"},"content":"        CloneCommand cloneCommand \u003d new CloneCommand(outOfBoundIndex,","lastModifiedDate":"2022-10-20"},{"lineNumber":131,"author":{"gitId":"NUSDG"},"content":"                new ClonePersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2022-10-20"},{"lineNumber":132,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":133,"author":{"gitId":"NUSDG"},"content":"        assertCommandFailure(cloneCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-20"},{"lineNumber":134,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":135,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":136,"author":{"gitId":"NUSDG"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":137,"author":{"gitId":"NUSDG"},"content":"    public void equals() {","lastModifiedDate":"2022-10-20"},{"lineNumber":138,"author":{"gitId":"NUSDG"},"content":"        final CloneCommand standardCommand \u003d new CloneCommand(INDEX_FIRST_PERSON, C_DESC_AMY);","lastModifiedDate":"2022-10-20"},{"lineNumber":139,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":140,"author":{"gitId":"NUSDG"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-20"},{"lineNumber":141,"author":{"gitId":"NUSDG"},"content":"        ClonePersonDescriptor copyDescriptor \u003d new ClonePersonDescriptor(C_DESC_AMY);","lastModifiedDate":"2022-10-20"},{"lineNumber":142,"author":{"gitId":"NUSDG"},"content":"        CloneCommand commandWithSameValues \u003d new CloneCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":143,"author":{"gitId":"NUSDG"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-10-20"},{"lineNumber":144,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":145,"author":{"gitId":"NUSDG"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-20"},{"lineNumber":146,"author":{"gitId":"NUSDG"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-10-20"},{"lineNumber":147,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":148,"author":{"gitId":"NUSDG"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":149,"author":{"gitId":"NUSDG"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-10-20"},{"lineNumber":150,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":151,"author":{"gitId":"NUSDG"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":152,"author":{"gitId":"NUSDG"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-10-20"},{"lineNumber":153,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":154,"author":{"gitId":"NUSDG"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":155,"author":{"gitId":"NUSDG"},"content":"        assertFalse(standardCommand.equals(new CloneCommand(INDEX_SECOND_PERSON, C_DESC_AMY)));","lastModifiedDate":"2022-10-20"},{"lineNumber":156,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":157,"author":{"gitId":"NUSDG"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":158,"author":{"gitId":"NUSDG"},"content":"        assertFalse(standardCommand.equals(new CloneCommand(INDEX_FIRST_PERSON, C_DESC_BOB)));","lastModifiedDate":"2022-10-20"},{"lineNumber":159,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":160,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":161,"author":{"gitId":"NUSDG"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"NUSDG":148,"ryanlml":13}},{"path":"src/test/java/seedu/address/logic/commands/ClonePersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NUSDG"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"NUSDG"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"NUSDG"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.C_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.C_DESC_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"NUSDG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"NUSDG"},"content":"import seedu.address.logic.commands.CloneCommand.ClonePersonDescriptor;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"NUSDG"},"content":"import seedu.address.testutil.ClonePersonDescriptorBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"NUSDG"},"content":"public class ClonePersonDescriptorTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"NUSDG"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"NUSDG"},"content":"    public void equals() {","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"NUSDG"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"NUSDG"},"content":"        ClonePersonDescriptor descriptorWithSameValues \u003d new ClonePersonDescriptor(C_DESC_AMY);","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"NUSDG"},"content":"        assertTrue(C_DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"NUSDG"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"NUSDG"},"content":"        assertTrue(C_DESC_AMY.equals(C_DESC_AMY));","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"NUSDG"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"NUSDG"},"content":"        assertFalse(C_DESC_AMY.equals(null));","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"NUSDG"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"NUSDG"},"content":"        assertFalse(C_DESC_AMY.equals(5));","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"NUSDG"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"NUSDG"},"content":"        assertFalse(C_DESC_AMY.equals(C_DESC_BOB));","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"NUSDG"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"NUSDG"},"content":"        ClonePersonDescriptor clonedAmy \u003d new ClonePersonDescriptorBuilder(C_DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"NUSDG"},"content":"        assertFalse(C_DESC_AMY.equals(clonedAmy));","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"NUSDG"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"NUSDG"},"content":"        clonedAmy \u003d new ClonePersonDescriptorBuilder(C_DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"NUSDG"},"content":"        assertFalse(C_DESC_AMY.equals(clonedAmy));","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"NUSDG"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"NUSDG"},"content":"        clonedAmy \u003d new ClonePersonDescriptorBuilder(C_DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"NUSDG"},"content":"        assertFalse(C_DESC_AMY.equals(clonedAmy));","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"NUSDG"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"NUSDG"},"content":"        clonedAmy \u003d new ClonePersonDescriptorBuilder(C_DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"NUSDG"},"content":"        assertFalse(C_DESC_AMY.equals(clonedAmy));","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"NUSDG"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"NUSDG"},"content":"        clonedAmy \u003d new ClonePersonDescriptorBuilder(C_DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"NUSDG"},"content":"        assertFalse(C_DESC_AMY.equals(clonedAmy));","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"NUSDG"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"NUSDG":58}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false)));","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false)));","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"KeithPJX"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false)));","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"KeithPJX"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false).hashCode());","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"KeithPJX"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, false).hashCode());","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"KeithPJX":5,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RACE;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RELIGION;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SURVEY;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":19,"author":{"gitId":"deepimpactmir"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-11-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"deepimpactmir"},"content":"import java.util.Set;","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.Survin;","lastModifiedDate":"2022-11-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"NUSDG"},"content":"import seedu.address.testutil.ClonePersonDescriptorBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"KeithPJX"},"content":"    public static final String VALID_GENDER_AMY \u003d \"female\";","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"KeithPJX"},"content":"    public static final String VALID_GENDER_BOB \u003d \"male\";","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"KeithPJX"},"content":"    public static final String VALID_BIRTHDATE_AMY \u003d \"1981-11-12\";","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"KeithPJX"},"content":"    public static final String VALID_BIRTHDATE_BOB \u003d \"2001-01-01\";","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"KeithPJX"},"content":"    public static final String VALID_RACE_AMY \u003d \"Chinese\";","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"KeithPJX"},"content":"    public static final String VALID_RACE_BOB \u003d \"Malay\";","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"KeithPJX"},"content":"    public static final String VALID_RELIGION_AMY \u003d \"Christian\";","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"KeithPJX"},"content":"    public static final String VALID_RELIGION_BOB \u003d \"Muslim\";","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"KeithPJX"},"content":"    public static final String VALID_SURVEY_AMY \u003d \"Environment Survey\";","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"KeithPJX"},"content":"    public static final String VALID_SURVEY_BOB \u003d \"Shopping Survey\";","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"KeithPJX"},"content":"    public static final String GENDER_DESC_AMY \u003d \" \" + PREFIX_GENDER + VALID_GENDER_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"KeithPJX"},"content":"    public static final String GENDER_DESC_BOB \u003d \" \" + PREFIX_GENDER + VALID_GENDER_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"KeithPJX"},"content":"    public static final String BIRTHDATE_DESC_AMY \u003d \" \" + PREFIX_BIRTHDATE + VALID_BIRTHDATE_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"KeithPJX"},"content":"    public static final String BIRTHDATE_DESC_BOB \u003d \" \" + PREFIX_BIRTHDATE + VALID_BIRTHDATE_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"KeithPJX"},"content":"    public static final String RACE_DESC_AMY \u003d \" \" + PREFIX_RACE + VALID_RACE_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"KeithPJX"},"content":"    public static final String RACE_DESC_BOB \u003d \" \" + PREFIX_RACE + VALID_RACE_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"KeithPJX"},"content":"    public static final String RELIGION_DESC_AMY \u003d \" \" + PREFIX_RELIGION + VALID_RELIGION_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"KeithPJX"},"content":"    public static final String RELIGION_DESC_BOB \u003d \" \" + PREFIX_RELIGION + VALID_RELIGION_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"KeithPJX"},"content":"    public static final String SURVEY_DESC_AMY \u003d \" \" + PREFIX_SURVEY + VALID_SURVEY_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"KeithPJX"},"content":"    public static final String SURVEY_DESC_BOB \u003d \" \" + PREFIX_SURVEY + VALID_SURVEY_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"NUSDG"},"content":"    public static final CloneCommand.ClonePersonDescriptor C_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"NUSDG"},"content":"    public static final CloneCommand.ClonePersonDescriptor C_DESC_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"deepimpactmir"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-10-17"},{"lineNumber":97,"author":{"gitId":"deepimpactmir"},"content":"                .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":98,"author":{"gitId":"deepimpactmir"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-17"},{"lineNumber":99,"author":{"gitId":"deepimpactmir"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-17"},{"lineNumber":100,"author":{"gitId":"deepimpactmir"},"content":"                .build();","lastModifiedDate":"2022-10-17"},{"lineNumber":101,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"NUSDG"},"content":"        C_DESC_AMY \u003d new ClonePersonDescriptorBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"NUSDG"},"content":"                .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"NUSDG"},"content":"        C_DESC_BOB \u003d new ClonePersonDescriptorBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"NUSDG"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"NUSDG"},"content":"                .build();","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"deepimpactmir"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult}","lastModifiedDate":"2022-10-17"},{"lineNumber":112,"author":{"gitId":"deepimpactmir"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"deepimpactmir"},"content":"     * Convenience wrapper to","lastModifiedDate":"2022-10-17"},{"lineNumber":128,"author":{"gitId":"deepimpactmir"},"content":"     * {@link #assertCommandSuccess(Command, Model, CommandResult, Model)} that","lastModifiedDate":"2022-10-17"},{"lineNumber":129,"author":{"gitId":"deepimpactmir"},"content":"     * takes a string {@code expectedMessage}.","lastModifiedDate":"2022-10-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"ryanlml"},"content":"     * - Survin, filtered person list and selected person in","lastModifiedDate":"2022-11-04"},{"lineNumber":142,"author":{"gitId":"deepimpactmir"},"content":"     * {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"ryanlml"},"content":"        Survin expectedSurvin \u003d new Survin(actualModel.getSurvin());","lastModifiedDate":"2022-11-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":151,"author":{"gitId":"ryanlml"},"content":"        assertEquals(expectedSurvin, actualModel.getSurvin());","lastModifiedDate":"2022-11-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"deepimpactmir"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given","lastModifiedDate":"2022-10-17"},{"lineNumber":157,"author":{"gitId":"ryanlml"},"content":"     * {@code targetIndex} in the {@code model}\u0027s Survin.","lastModifiedDate":"2022-11-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"deepimpactmir"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":170,"author":{"gitId":"deepimpactmir"},"content":"     * Deletes person at a specified index.","lastModifiedDate":"2022-10-17"},{"lineNumber":171,"author":{"gitId":"deepimpactmir"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":172,"author":{"gitId":"deepimpactmir"},"content":"     * @param model","lastModifiedDate":"2022-10-17"},{"lineNumber":173,"author":{"gitId":"deepimpactmir"},"content":"     * @param targetIndex","lastModifiedDate":"2022-10-17"},{"lineNumber":174,"author":{"gitId":"deepimpactmir"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":175,"author":{"gitId":"deepimpactmir"},"content":"    public static void deletePersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-17"},{"lineNumber":176,"author":{"gitId":"deepimpactmir"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2022-10-17"},{"lineNumber":177,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":178,"author":{"gitId":"deepimpactmir"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-17"},{"lineNumber":179,"author":{"gitId":"deepimpactmir"},"content":"        model.deletePerson(person);","lastModifiedDate":"2022-10-17"},{"lineNumber":180,"author":{"gitId":"ryanlml"},"content":"        model.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":181,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":182,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":183,"author":{"gitId":"deepimpactmir"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":184,"author":{"gitId":"deepimpactmir"},"content":"     * Marks person at a specified index and survey with the provided boolean.","lastModifiedDate":"2022-11-01"},{"lineNumber":185,"author":{"gitId":"deepimpactmir"},"content":"     *","lastModifiedDate":"2022-11-01"},{"lineNumber":186,"author":{"gitId":"deepimpactmir"},"content":"     * @param model","lastModifiedDate":"2022-11-01"},{"lineNumber":187,"author":{"gitId":"deepimpactmir"},"content":"     * @param targetIndex","lastModifiedDate":"2022-11-01"},{"lineNumber":188,"author":{"gitId":"deepimpactmir"},"content":"     * @param targetSurvey","lastModifiedDate":"2022-11-01"},{"lineNumber":189,"author":{"gitId":"deepimpactmir"},"content":"     * @param isDone","lastModifiedDate":"2022-11-01"},{"lineNumber":190,"author":{"gitId":"deepimpactmir"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":191,"author":{"gitId":"deepimpactmir"},"content":"    public static Person markPersonAtIndex(Model model, Index targetIndex, Survey targetSurvey, boolean isDone) {","lastModifiedDate":"2022-11-01"},{"lineNumber":192,"author":{"gitId":"deepimpactmir"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2022-11-01"},{"lineNumber":193,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":194,"author":{"gitId":"deepimpactmir"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-11-01"},{"lineNumber":195,"author":{"gitId":"deepimpactmir"},"content":"        Set\u003cSurvey\u003e surveySet \u003d person.getSurveys();","lastModifiedDate":"2022-11-01"},{"lineNumber":196,"author":{"gitId":"deepimpactmir"},"content":"        Set\u003cSurvey\u003e newSurveySet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-11-01"},{"lineNumber":197,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":198,"author":{"gitId":"deepimpactmir"},"content":"        for (Survey s : surveySet) {","lastModifiedDate":"2022-11-01"},{"lineNumber":199,"author":{"gitId":"deepimpactmir"},"content":"            if (s.survey.equals(targetSurvey.survey)) {","lastModifiedDate":"2022-11-01"},{"lineNumber":200,"author":{"gitId":"deepimpactmir"},"content":"                Survey newSurvey \u003d new Survey(targetSurvey.survey, isDone);","lastModifiedDate":"2022-11-01"},{"lineNumber":201,"author":{"gitId":"deepimpactmir"},"content":"                newSurveySet.add(newSurvey);","lastModifiedDate":"2022-11-01"},{"lineNumber":202,"author":{"gitId":"deepimpactmir"},"content":"            } else {","lastModifiedDate":"2022-11-01"},{"lineNumber":203,"author":{"gitId":"deepimpactmir"},"content":"                newSurveySet.add(s);","lastModifiedDate":"2022-11-01"},{"lineNumber":204,"author":{"gitId":"deepimpactmir"},"content":"            }","lastModifiedDate":"2022-11-01"},{"lineNumber":205,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":206,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":207,"author":{"gitId":"deepimpactmir"},"content":"        Person editedPerson \u003d new Person(person.getName(), person.getPhone(), person.getEmail(), person.getAddress(),","lastModifiedDate":"2022-11-01"},{"lineNumber":208,"author":{"gitId":"deepimpactmir"},"content":"                person.getGender(), person.getBirthdate(), person.getRace(), person.getReligion(), newSurveySet,","lastModifiedDate":"2022-11-01"},{"lineNumber":209,"author":{"gitId":"deepimpactmir"},"content":"                person.getTags());","lastModifiedDate":"2022-11-01"},{"lineNumber":210,"author":{"gitId":"deepimpactmir"},"content":"        model.setPerson(person, editedPerson);","lastModifiedDate":"2022-11-01"},{"lineNumber":211,"author":{"gitId":"ryanlml"},"content":"        model.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":212,"author":{"gitId":"deepimpactmir"},"content":"        return editedPerson;","lastModifiedDate":"2022-11-01"},{"lineNumber":213,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"KeithPJX":26,"NUSDG":9,"ryanlml":7,"-":113,"deepimpactmir":59}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.logic.commands.CommandTestUtil.deletePersonAtIndex;","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalSurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"deepimpactmir"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"deepimpactmir"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-31"},{"lineNumber":15,"author":{"gitId":"deepimpactmir"},"content":"import java.util.List;","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"deepimpactmir"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-31"},{"lineNumber":17,"author":{"gitId":"deepimpactmir"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"deepimpactmir"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.person.Race;","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.person.Religion;","lastModifiedDate":"2022-10-31"},{"lineNumber":30,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-10-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"ryanlml"},"content":"    private Model model \u003d new ModelManager(getTypicalSurvin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"deepimpactmir"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(Optional.of(INDEX_FIRST_PERSON), Optional.empty(),","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"deepimpactmir"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"ryanlml"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSurvin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":49,"author":{"gitId":"deepimpactmir"},"content":"        deletePersonAtIndex(expectedModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-11-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"deepimpactmir"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(Optional.of(outOfBoundIndex), Optional.empty(),","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"deepimpactmir"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"deepimpactmir"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(Optional.of(INDEX_FIRST_PERSON), Optional.empty(),","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"deepimpactmir"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"ryanlml"},"content":"        Model expectedModel \u003d new ModelManager(model.getSurvin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"ryanlml"},"content":"        expectedModel.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"ryanlml"},"content":"        // ensures that outOfBoundIndex is still in bounds of Survin list","lastModifiedDate":"2022-11-04"},{"lineNumber":87,"author":{"gitId":"ryanlml"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSurvin().getPersonList().size());","lastModifiedDate":"2022-11-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"deepimpactmir"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(Optional.of(outOfBoundIndex), Optional.empty(),","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"deepimpactmir"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"deepimpactmir"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":96,"author":{"gitId":"deepimpactmir"},"content":"    public void execute_validRaceUnfilteredList_success() {","lastModifiedDate":"2022-10-07"},{"lineNumber":97,"author":{"gitId":"deepimpactmir"},"content":"        Race race \u003d new Race(\"White American\");","lastModifiedDate":"2022-10-30"},{"lineNumber":98,"author":{"gitId":"deepimpactmir"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(Optional.empty(), Optional.of(race), Optional.empty(),","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"deepimpactmir"},"content":"                Optional.empty());","lastModifiedDate":"2022-10-07"},{"lineNumber":100,"author":{"gitId":"deepimpactmir"},"content":"        model.updateFilteredPersonList(p -\u003e p.getRace().equals(race));","lastModifiedDate":"2022-10-30"},{"lineNumber":101,"author":{"gitId":"deepimpactmir"},"content":"        List\u003cPerson\u003e personList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-30"},{"lineNumber":102,"author":{"gitId":"deepimpactmir"},"content":"        personList.addAll(model.getFilteredPersonList());","lastModifiedDate":"2022-10-30"},{"lineNumber":103,"author":{"gitId":"deepimpactmir"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personList.toString());","lastModifiedDate":"2022-10-07"},{"lineNumber":104,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":105,"author":{"gitId":"ryanlml"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSurvin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":106,"author":{"gitId":"deepimpactmir"},"content":"        deletePersons(expectedModel, p -\u003e p.getRace().equals(race));","lastModifiedDate":"2022-10-30"},{"lineNumber":107,"author":{"gitId":"ryanlml"},"content":"        expectedModel.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":108,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":109,"author":{"gitId":"deepimpactmir"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-07"},{"lineNumber":110,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":111,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":112,"author":{"gitId":"deepimpactmir"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":113,"author":{"gitId":"deepimpactmir"},"content":"    public void execute_invalidRaceUnfilteredList_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":114,"author":{"gitId":"deepimpactmir"},"content":"        Race race \u003d new Race(\"asdoasmdsomda\");","lastModifiedDate":"2022-10-31"},{"lineNumber":115,"author":{"gitId":"deepimpactmir"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(Optional.empty(), Optional.of(race), Optional.empty(),","lastModifiedDate":"2022-10-31"},{"lineNumber":116,"author":{"gitId":"deepimpactmir"},"content":"                Optional.empty());","lastModifiedDate":"2022-10-31"},{"lineNumber":117,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":118,"author":{"gitId":"deepimpactmir"},"content":"        assertCommandFailure(deleteCommand, model,","lastModifiedDate":"2022-10-31"},{"lineNumber":119,"author":{"gitId":"deepimpactmir"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-31"},{"lineNumber":120,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":121,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":122,"author":{"gitId":"deepimpactmir"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":123,"author":{"gitId":"deepimpactmir"},"content":"    public void execute_validReligionUnfilteredList_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":124,"author":{"gitId":"deepimpactmir"},"content":"        Religion religion \u003d new Religion(\"Christian\");","lastModifiedDate":"2022-10-31"},{"lineNumber":125,"author":{"gitId":"deepimpactmir"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(Optional.empty(), Optional.empty(), Optional.of(religion),","lastModifiedDate":"2022-10-31"},{"lineNumber":126,"author":{"gitId":"deepimpactmir"},"content":"                Optional.empty());","lastModifiedDate":"2022-10-31"},{"lineNumber":127,"author":{"gitId":"deepimpactmir"},"content":"        model.updateFilteredPersonList(p -\u003e p.getReligion().equals(religion));","lastModifiedDate":"2022-10-31"},{"lineNumber":128,"author":{"gitId":"deepimpactmir"},"content":"        List\u003cPerson\u003e personList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":129,"author":{"gitId":"deepimpactmir"},"content":"        personList.addAll(model.getFilteredPersonList());","lastModifiedDate":"2022-10-31"},{"lineNumber":130,"author":{"gitId":"deepimpactmir"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personList.toString());","lastModifiedDate":"2022-10-31"},{"lineNumber":131,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":132,"author":{"gitId":"ryanlml"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSurvin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":133,"author":{"gitId":"deepimpactmir"},"content":"        deletePersons(expectedModel, p -\u003e p.getReligion().equals(religion));","lastModifiedDate":"2022-10-31"},{"lineNumber":134,"author":{"gitId":"ryanlml"},"content":"        expectedModel.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":135,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":136,"author":{"gitId":"deepimpactmir"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":137,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":138,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":139,"author":{"gitId":"deepimpactmir"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":140,"author":{"gitId":"deepimpactmir"},"content":"    public void execute_invalidReligionUnfilteredList_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":141,"author":{"gitId":"deepimpactmir"},"content":"        Religion religion \u003d new Religion(\"qweqeqeqe\");","lastModifiedDate":"2022-10-31"},{"lineNumber":142,"author":{"gitId":"deepimpactmir"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(Optional.empty(), Optional.empty(), Optional.of(religion),","lastModifiedDate":"2022-10-31"},{"lineNumber":143,"author":{"gitId":"deepimpactmir"},"content":"                Optional.empty());","lastModifiedDate":"2022-10-31"},{"lineNumber":144,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":145,"author":{"gitId":"deepimpactmir"},"content":"        assertCommandFailure(deleteCommand, model,","lastModifiedDate":"2022-10-31"},{"lineNumber":146,"author":{"gitId":"deepimpactmir"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-31"},{"lineNumber":147,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":148,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":149,"author":{"gitId":"deepimpactmir"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":150,"author":{"gitId":"deepimpactmir"},"content":"    public void execute_validSurveyUnfilteredList_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":151,"author":{"gitId":"deepimpactmir"},"content":"        Survey survey \u003d new Survey(\"Shopping Survey\");","lastModifiedDate":"2022-10-31"},{"lineNumber":152,"author":{"gitId":"deepimpactmir"},"content":"        Set\u003cSurvey\u003e setSurvey \u003d new HashSet\u003cSurvey\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":153,"author":{"gitId":"deepimpactmir"},"content":"        setSurvey.add(survey);","lastModifiedDate":"2022-10-31"},{"lineNumber":154,"author":{"gitId":"deepimpactmir"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2022-10-31"},{"lineNumber":155,"author":{"gitId":"deepimpactmir"},"content":"                Optional.of(survey));","lastModifiedDate":"2022-10-31"},{"lineNumber":156,"author":{"gitId":"deepimpactmir"},"content":"        model.updateFilteredPersonList(p -\u003e p.getSurveys().equals(setSurvey));","lastModifiedDate":"2022-10-31"},{"lineNumber":157,"author":{"gitId":"deepimpactmir"},"content":"        List\u003cPerson\u003e personList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":158,"author":{"gitId":"deepimpactmir"},"content":"        personList.addAll(model.getFilteredPersonList());","lastModifiedDate":"2022-10-31"},{"lineNumber":159,"author":{"gitId":"deepimpactmir"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personList.toString());","lastModifiedDate":"2022-10-31"},{"lineNumber":160,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":161,"author":{"gitId":"ryanlml"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSurvin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":162,"author":{"gitId":"deepimpactmir"},"content":"        deletePersons(expectedModel, p -\u003e p.getSurveys().equals(setSurvey));","lastModifiedDate":"2022-10-31"},{"lineNumber":163,"author":{"gitId":"ryanlml"},"content":"        expectedModel.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":164,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":165,"author":{"gitId":"deepimpactmir"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":166,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":167,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":168,"author":{"gitId":"deepimpactmir"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":169,"author":{"gitId":"deepimpactmir"},"content":"    public void execute_invalidSurveyUnfilteredList_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":170,"author":{"gitId":"deepimpactmir"},"content":"        Survey survey \u003d new Survey(\"zxcasdb\");","lastModifiedDate":"2022-10-31"},{"lineNumber":171,"author":{"gitId":"deepimpactmir"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(Optional.empty(), Optional.empty(), Optional.empty(),","lastModifiedDate":"2022-10-31"},{"lineNumber":172,"author":{"gitId":"deepimpactmir"},"content":"                Optional.of(survey));","lastModifiedDate":"2022-10-31"},{"lineNumber":173,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":174,"author":{"gitId":"deepimpactmir"},"content":"        assertCommandFailure(deleteCommand, model,","lastModifiedDate":"2022-10-31"},{"lineNumber":175,"author":{"gitId":"deepimpactmir"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-31"},{"lineNumber":176,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":177,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":180,"author":{"gitId":"deepimpactmir"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(Optional.of(INDEX_FIRST_PERSON), Optional.empty(),","lastModifiedDate":"2022-10-05"},{"lineNumber":181,"author":{"gitId":"deepimpactmir"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2022-10-05"},{"lineNumber":182,"author":{"gitId":"deepimpactmir"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(Optional.of(INDEX_SECOND_PERSON), Optional.empty(),","lastModifiedDate":"2022-10-05"},{"lineNumber":183,"author":{"gitId":"deepimpactmir"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2022-10-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":189,"author":{"gitId":"deepimpactmir"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(Optional.of(INDEX_FIRST_PERSON), Optional.empty(),","lastModifiedDate":"2022-10-05"},{"lineNumber":190,"author":{"gitId":"deepimpactmir"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2022-10-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":211,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":212,"author":{"gitId":"deepimpactmir"},"content":"    private void deletePersons(Model model, Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2022-10-19"},{"lineNumber":213,"author":{"gitId":"deepimpactmir"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-19"},{"lineNumber":214,"author":{"gitId":"deepimpactmir"},"content":"        List\u003cPerson\u003e personList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-19"},{"lineNumber":215,"author":{"gitId":"deepimpactmir"},"content":"        personList.addAll(model.getFilteredPersonList());","lastModifiedDate":"2022-10-19"},{"lineNumber":216,"author":{"gitId":"deepimpactmir"},"content":"        for (Person p : personList) {","lastModifiedDate":"2022-10-19"},{"lineNumber":217,"author":{"gitId":"deepimpactmir"},"content":"            model.deletePerson(p);","lastModifiedDate":"2022-10-19"},{"lineNumber":218,"author":{"gitId":"deepimpactmir"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":219,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"ryanlml":13,"-":96,"deepimpactmir":111}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalSurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.Survin;","lastModifiedDate":"2022-11-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"ryanlml"},"content":"    private Model model \u003d new ModelManager(getTypicalSurvin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"ryanlml"},"content":"        Model expectedModel \u003d new ModelManager(new Survin(model.getSurvin()), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"ryanlml"},"content":"        expectedModel.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"ryanlml"},"content":"        Model expectedModel \u003d new ModelManager(new Survin(model.getSurvin()), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":69,"author":{"gitId":"ryanlml"},"content":"        expectedModel.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"ryanlml"},"content":"        Model expectedModel \u003d new ModelManager(new Survin(model.getSurvin()), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":82,"author":{"gitId":"ryanlml"},"content":"        expectedModel.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"ryanlml"},"content":"        Model expectedModel \u003d new ModelManager(new Survin(model.getSurvin()), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":100,"author":{"gitId":"ryanlml"},"content":"        expectedModel.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"ryanlml"},"content":"        // edit person in filtered list into a duplicate in Survin","lastModifiedDate":"2022-11-04"},{"lineNumber":119,"author":{"gitId":"ryanlml"},"content":"        Person personInList \u003d model.getSurvin().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-11-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"ryanlml"},"content":"     * but smaller than size of Survin","lastModifiedDate":"2022-11-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"ryanlml"},"content":"        // ensures that outOfBoundIndex is still in bounds of Survin list","lastModifiedDate":"2022-11-04"},{"lineNumber":144,"author":{"gitId":"ryanlml"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSurvin().getPersonList().size());","lastModifiedDate":"2022-11-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"ryanlml":16,"-":161}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"KeithPJX":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"ryanlml"},"content":"        assertCommandSuccess(new HelpCommand(\"\"), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"KeithPJX":1,"ryanlml":1,"-":18}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalSurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"ryanlml"},"content":"        model \u003d new ModelManager(getTypicalSurvin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":26,"author":{"gitId":"ryanlml"},"content":"        expectedModel \u003d new ModelManager(model.getSurvin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"ryanlml":3,"-":36}},{"path":"src/test/java/seedu/address/logic/commands/MarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"deepimpactmir"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-11-01"},{"lineNumber":2,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"deepimpactmir"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"deepimpactmir"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.logic.commands.CommandTestUtil.markPersonAtIndex;","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalSurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"deepimpactmir"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-11-01"},{"lineNumber":16,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-11-01"},{"lineNumber":17,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-11-01"},{"lineNumber":18,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-11-01"},{"lineNumber":19,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-11-01"},{"lineNumber":20,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"deepimpactmir"},"content":"class MarkCommandTest {","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"ryanlml"},"content":"    private Model model \u003d new ModelManager(getTypicalSurvin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":25,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"deepimpactmir"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"deepimpactmir"},"content":"    public void execute_validArgs_success() {","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"deepimpactmir"},"content":"        MarkCommand markCommand \u003d new MarkCommand(INDEX_FIRST_PERSON, new Survey(\"Environment Survey\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"ryanlml"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSurvin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":31,"author":{"gitId":"deepimpactmir"},"content":"        Person markedPerson \u003d markPersonAtIndex(expectedModel, INDEX_FIRST_PERSON, new Survey(\"Environment Survey\"),","lastModifiedDate":"2022-11-01"},{"lineNumber":32,"author":{"gitId":"deepimpactmir"},"content":"                true);","lastModifiedDate":"2022-11-01"},{"lineNumber":33,"author":{"gitId":"deepimpactmir"},"content":"        String expectedMessage \u003d String.format(MarkCommand.MESSAGE_MARK_PERSON_SUCCESS, markedPerson);","lastModifiedDate":"2022-11-01"},{"lineNumber":34,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"deepimpactmir"},"content":"        assertCommandSuccess(markCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-01"},{"lineNumber":36,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":37,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":38,"author":{"gitId":"deepimpactmir"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"deepimpactmir"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2022-11-01"},{"lineNumber":40,"author":{"gitId":"deepimpactmir"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-11-01"},{"lineNumber":41,"author":{"gitId":"deepimpactmir"},"content":"        MarkCommand markCommand \u003d new MarkCommand(outOfBoundIndex, new Survey(\"Environment Survey\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":42,"author":{"gitId":"deepimpactmir"},"content":"        assertCommandFailure(markCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-01"},{"lineNumber":43,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":45,"author":{"gitId":"deepimpactmir"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":46,"author":{"gitId":"deepimpactmir"},"content":"    public void execute_invalidSurvey_throwsCommandException() {","lastModifiedDate":"2022-11-01"},{"lineNumber":47,"author":{"gitId":"deepimpactmir"},"content":"        MarkCommand markCommand \u003d new MarkCommand(INDEX_FIRST_PERSON, new Survey(\"asdsad\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":48,"author":{"gitId":"deepimpactmir"},"content":"        assertCommandFailure(markCommand, model, MarkCommand.MESSAGE_INVALID_SURVEY);","lastModifiedDate":"2022-11-01"},{"lineNumber":49,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":50,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":51,"author":{"gitId":"deepimpactmir"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":52,"author":{"gitId":"deepimpactmir"},"content":"    public void equals() {","lastModifiedDate":"2022-11-01"},{"lineNumber":53,"author":{"gitId":"deepimpactmir"},"content":"        MarkCommand markFirstCommand \u003d new MarkCommand(INDEX_FIRST_PERSON, new Survey(\"Environment Survey\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":54,"author":{"gitId":"deepimpactmir"},"content":"        MarkCommand markSecondCommand \u003d new MarkCommand(INDEX_SECOND_PERSON, new Survey(\"Environment Survey\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":55,"author":{"gitId":"deepimpactmir"},"content":"        MarkCommand markThirdCommand \u003d new MarkCommand(INDEX_SECOND_PERSON, new Survey(\"Academic Survey\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":56,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":57,"author":{"gitId":"deepimpactmir"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-01"},{"lineNumber":58,"author":{"gitId":"deepimpactmir"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommand));","lastModifiedDate":"2022-11-01"},{"lineNumber":59,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":60,"author":{"gitId":"deepimpactmir"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-11-01"},{"lineNumber":61,"author":{"gitId":"deepimpactmir"},"content":"        MarkCommand markFirstCommandCopy \u003d new MarkCommand(INDEX_FIRST_PERSON, new Survey(\"Environment Survey\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":62,"author":{"gitId":"deepimpactmir"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommandCopy));","lastModifiedDate":"2022-11-01"},{"lineNumber":63,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":64,"author":{"gitId":"deepimpactmir"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-11-01"},{"lineNumber":65,"author":{"gitId":"deepimpactmir"},"content":"        assertFalse(markFirstCommand.equals(1));","lastModifiedDate":"2022-11-01"},{"lineNumber":66,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":67,"author":{"gitId":"deepimpactmir"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-01"},{"lineNumber":68,"author":{"gitId":"deepimpactmir"},"content":"        assertFalse(markFirstCommand.equals(null));","lastModifiedDate":"2022-11-01"},{"lineNumber":69,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":70,"author":{"gitId":"deepimpactmir"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-11-01"},{"lineNumber":71,"author":{"gitId":"deepimpactmir"},"content":"        assertFalse(markFirstCommand.equals(markSecondCommand));","lastModifiedDate":"2022-11-01"},{"lineNumber":72,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":73,"author":{"gitId":"deepimpactmir"},"content":"        // different survey -\u003e returns false","lastModifiedDate":"2022-11-01"},{"lineNumber":74,"author":{"gitId":"deepimpactmir"},"content":"        assertFalse(markFirstCommand.equals(markThirdCommand));","lastModifiedDate":"2022-11-01"},{"lineNumber":75,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":76,"author":{"gitId":"deepimpactmir"},"content":"}","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"ryanlml":3,"deepimpactmir":73}},{"path":"src/test/java/seedu/address/logic/commands/UnappendCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-31"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-31"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-31"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-31"},{"lineNumber":6,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalSurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-31"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-31"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-31"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-31"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.Survin;","lastModifiedDate":"2022-11-05"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-31"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-31"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-10-31"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-31"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"public class UnappendCommandTest {","lastModifiedDate":"2022-10-31"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"ryanlml"},"content":"    private Model model \u003d new ModelManager(getTypicalSurvin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"    public void execute_singleSurveyUnappended_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"        Person unappendedPerson \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-31"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"                .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-10-31"},{"lineNumber":31,"author":{"gitId":"KeithPJX"},"content":"                .withPhone(\"94351253\").withGender(\"female\").withBirthdate(\"1998-12-28\")","lastModifiedDate":"2022-10-31"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"                .withRace(\"White American\").withSurveys(Collections.emptySet())","lastModifiedDate":"2022-10-31"},{"lineNumber":33,"author":{"gitId":"KeithPJX"},"content":"                .withReligion(\"Christian\").withTags(\"friends\").build();","lastModifiedDate":"2022-10-31"},{"lineNumber":34,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cSurvey\u003e surveysToRemove \u003d new HashSet\u003cSurvey\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":35,"author":{"gitId":"KeithPJX"},"content":"        surveysToRemove.add(new Survey(\"Environment Survey\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":36,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cTag\u003e tagsToRemove \u003d Collections.emptySet();","lastModifiedDate":"2022-10-31"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"        UnappendCommand unappendCommand \u003d new UnappendCommand(INDEX_FIRST_PERSON, surveysToRemove, tagsToRemove);","lastModifiedDate":"2022-10-31"},{"lineNumber":38,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":39,"author":{"gitId":"KeithPJX"},"content":"        String expectedMessage \u003d String.format(UnappendCommand.MESSAGE_UNAPPEND_SUCCESS, unappendedPerson);","lastModifiedDate":"2022-10-31"},{"lineNumber":40,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":41,"author":{"gitId":"ryanlml"},"content":"        Model expectedModel \u003d new ModelManager(new Survin(model.getSurvin()), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":42,"author":{"gitId":"KeithPJX"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), unappendedPerson);","lastModifiedDate":"2022-10-31"},{"lineNumber":43,"author":{"gitId":"ryanlml"},"content":"        expectedModel.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":44,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":45,"author":{"gitId":"KeithPJX"},"content":"        assertCommandSuccess(unappendCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":46,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":47,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":48,"author":{"gitId":"KeithPJX"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":49,"author":{"gitId":"KeithPJX"},"content":"    public void execute_singleTagUnappended_success() {","lastModifiedDate":"2022-10-31"},{"lineNumber":50,"author":{"gitId":"KeithPJX"},"content":"        Person unappendedPerson \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-31"},{"lineNumber":51,"author":{"gitId":"KeithPJX"},"content":"                .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2022-10-31"},{"lineNumber":52,"author":{"gitId":"KeithPJX"},"content":"                .withPhone(\"94351253\").withGender(\"female\").withBirthdate(\"1998-12-28\")","lastModifiedDate":"2022-10-31"},{"lineNumber":53,"author":{"gitId":"KeithPJX"},"content":"                .withRace(\"White American\").withSurvey(\"Environment Survey\", false)","lastModifiedDate":"2022-11-01"},{"lineNumber":54,"author":{"gitId":"KeithPJX"},"content":"                .withTags(Collections.emptySet()).withReligion(\"Christian\").build();","lastModifiedDate":"2022-10-31"},{"lineNumber":55,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cSurvey\u003e surveysToRemove \u003d Collections.emptySet();","lastModifiedDate":"2022-10-31"},{"lineNumber":56,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cTag\u003e tagsToRemove \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":57,"author":{"gitId":"KeithPJX"},"content":"        tagsToRemove.add(new Tag(\"friends\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":58,"author":{"gitId":"KeithPJX"},"content":"        UnappendCommand unappendCommand \u003d new UnappendCommand(INDEX_FIRST_PERSON, surveysToRemove, tagsToRemove);","lastModifiedDate":"2022-10-31"},{"lineNumber":59,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":60,"author":{"gitId":"KeithPJX"},"content":"        String expectedMessage \u003d String.format(UnappendCommand.MESSAGE_UNAPPEND_SUCCESS, unappendedPerson);","lastModifiedDate":"2022-10-31"},{"lineNumber":61,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":62,"author":{"gitId":"ryanlml"},"content":"        Model expectedModel \u003d new ModelManager(new Survin(model.getSurvin()), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":63,"author":{"gitId":"KeithPJX"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), unappendedPerson);","lastModifiedDate":"2022-10-31"},{"lineNumber":64,"author":{"gitId":"ryanlml"},"content":"        expectedModel.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":65,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":66,"author":{"gitId":"KeithPJX"},"content":"        assertCommandSuccess(unappendCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-31"},{"lineNumber":67,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":68,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":69,"author":{"gitId":"KeithPJX"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":70,"author":{"gitId":"KeithPJX"},"content":"    public void execute_missingSurveyUnappended_failure() {","lastModifiedDate":"2022-10-31"},{"lineNumber":71,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cSurvey\u003e surveysToRemove \u003d new HashSet\u003cSurvey\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":72,"author":{"gitId":"KeithPJX"},"content":"        surveysToRemove.add(new Survey(\"Random Survey\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":73,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cTag\u003e tagsToRemove \u003d Collections.emptySet();","lastModifiedDate":"2022-10-31"},{"lineNumber":74,"author":{"gitId":"KeithPJX"},"content":"        UnappendCommand unappendCommand \u003d new UnappendCommand(INDEX_FIRST_PERSON, surveysToRemove, tagsToRemove);","lastModifiedDate":"2022-10-31"},{"lineNumber":75,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":76,"author":{"gitId":"KeithPJX"},"content":"        String expectedMessage \u003d String.format(UnappendCommand.MESSAGE_SURVEY_TAG_NOT_FOUND);","lastModifiedDate":"2022-10-31"},{"lineNumber":77,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":78,"author":{"gitId":"KeithPJX"},"content":"        assertCommandFailure(unappendCommand, model, expectedMessage);","lastModifiedDate":"2022-10-31"},{"lineNumber":79,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":80,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":81,"author":{"gitId":"KeithPJX"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":82,"author":{"gitId":"KeithPJX"},"content":"    public void execute_missingTagUnappended_failure() {","lastModifiedDate":"2022-10-31"},{"lineNumber":83,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cSurvey\u003e surveysToRemove \u003d Collections.emptySet();","lastModifiedDate":"2022-10-31"},{"lineNumber":84,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cTag\u003e tagsToRemove \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":85,"author":{"gitId":"KeithPJX"},"content":"        tagsToRemove.add(new Tag(\"RandomTag\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":86,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":87,"author":{"gitId":"KeithPJX"},"content":"        UnappendCommand unappendCommand \u003d new UnappendCommand(INDEX_FIRST_PERSON, surveysToRemove, tagsToRemove);","lastModifiedDate":"2022-10-31"},{"lineNumber":88,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":89,"author":{"gitId":"KeithPJX"},"content":"        String expectedMessage \u003d String.format(UnappendCommand.MESSAGE_SURVEY_TAG_NOT_FOUND);","lastModifiedDate":"2022-10-31"},{"lineNumber":90,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":91,"author":{"gitId":"KeithPJX"},"content":"        assertCommandFailure(unappendCommand, model, expectedMessage);","lastModifiedDate":"2022-10-31"},{"lineNumber":92,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":93,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":94,"author":{"gitId":"KeithPJX"},"content":"    @Test","lastModifiedDate":"2022-10-31"},{"lineNumber":95,"author":{"gitId":"KeithPJX"},"content":"    public void execute_missingSurveysTagsUnappended_failure() {","lastModifiedDate":"2022-10-31"},{"lineNumber":96,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cSurvey\u003e surveysToRemove \u003d new HashSet\u003cSurvey\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":97,"author":{"gitId":"KeithPJX"},"content":"        surveysToRemove.add(new Survey(\"Random Survey1\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":98,"author":{"gitId":"KeithPJX"},"content":"        surveysToRemove.add(new Survey(\"Random Survey2\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":99,"author":{"gitId":"KeithPJX"},"content":"        Set\u003cTag\u003e tagsToRemove \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2022-10-31"},{"lineNumber":100,"author":{"gitId":"KeithPJX"},"content":"        tagsToRemove.add(new Tag(\"RandomTag1\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":101,"author":{"gitId":"KeithPJX"},"content":"        tagsToRemove.add(new Tag(\"RandomTag2\"));","lastModifiedDate":"2022-10-31"},{"lineNumber":102,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":103,"author":{"gitId":"KeithPJX"},"content":"        UnappendCommand unappendCommand \u003d new UnappendCommand(INDEX_FIRST_PERSON, surveysToRemove, tagsToRemove);","lastModifiedDate":"2022-10-31"},{"lineNumber":104,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":105,"author":{"gitId":"KeithPJX"},"content":"        String expectedMessage \u003d String.format(UnappendCommand.MESSAGE_SURVEY_TAG_NOT_FOUND);","lastModifiedDate":"2022-10-31"},{"lineNumber":106,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":107,"author":{"gitId":"KeithPJX"},"content":"        assertCommandFailure(unappendCommand, model, expectedMessage);","lastModifiedDate":"2022-10-31"},{"lineNumber":108,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":109,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-31"}],"authorContributionMap":{"KeithPJX":102,"ryanlml":7}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"deepimpactmir"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.logic.commands.CommandTestUtil.deletePersonAtIndex;","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalSurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"deepimpactmir"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"deepimpactmir"},"content":"public class UndoCommandTest {","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"deepimpactmir"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"deepimpactmir"},"content":"    public void execute_undoAfterDelete() {","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"ryanlml"},"content":"        Model model \u003d new ModelManager(getTypicalSurvin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":22,"author":{"gitId":"ryanlml"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalSurvin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":23,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"deepimpactmir"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"deepimpactmir"},"content":"        deletePersonAtIndex(model, index);","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"deepimpactmir"},"content":"        deletePersonAtIndex(expectedModel, index);","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"ryanlml"},"content":"        expectedModel.undoSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":30,"author":{"gitId":"deepimpactmir"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"deepimpactmir"},"content":"        assertCommandFailure(new UndoCommand(), model, UndoCommand.MESSAGE_CANNOT_UNDO);","lastModifiedDate":"2022-10-17"},{"lineNumber":33,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"deepimpactmir"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"deepimpactmir"},"content":"    public void execute_undoAfterAdd() {","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"ryanlml"},"content":"        Model model \u003d new ModelManager(getTypicalSurvin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":38,"author":{"gitId":"ryanlml"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalSurvin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":39,"author":{"gitId":"deepimpactmir"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"deepimpactmir"},"content":"        model.addPerson(validPerson);","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"ryanlml"},"content":"        model.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":43,"author":{"gitId":"deepimpactmir"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"ryanlml"},"content":"        expectedModel.commitSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":45,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"ryanlml"},"content":"        expectedModel.undoSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":47,"author":{"gitId":"deepimpactmir"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"deepimpactmir"},"content":"        assertCommandFailure(new UndoCommand(), model, UndoCommand.MESSAGE_CANNOT_UNDO);","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"deepimpactmir"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"ryanlml":9,"deepimpactmir":43}},{"path":"src/test/java/seedu/address/logic/commands/UnmarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"deepimpactmir"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-11-01"},{"lineNumber":2,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"deepimpactmir"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"deepimpactmir"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.logic.commands.CommandTestUtil.markPersonAtIndex;","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalSurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"deepimpactmir"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-11-01"},{"lineNumber":16,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-11-01"},{"lineNumber":17,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-11-01"},{"lineNumber":18,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-11-01"},{"lineNumber":19,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-11-01"},{"lineNumber":20,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"deepimpactmir"},"content":"class UnmarkCommandTest {","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"ryanlml"},"content":"    private Model model \u003d new ModelManager(getTypicalSurvin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":25,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"deepimpactmir"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"deepimpactmir"},"content":"    public void execute_validArgs_success() {","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"deepimpactmir"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(INDEX_SECOND_PERSON, new Survey(\"Shopping Survey\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"ryanlml"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSurvin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":31,"author":{"gitId":"deepimpactmir"},"content":"        Person unmarkedPerson \u003d markPersonAtIndex(expectedModel, INDEX_SECOND_PERSON, new Survey(\"Shopping Survey\"),","lastModifiedDate":"2022-11-01"},{"lineNumber":32,"author":{"gitId":"deepimpactmir"},"content":"                false);","lastModifiedDate":"2022-11-01"},{"lineNumber":33,"author":{"gitId":"deepimpactmir"},"content":"        String expectedMessage \u003d String.format(UnmarkCommand.MESSAGE_MARK_PERSON_SUCCESS, unmarkedPerson);","lastModifiedDate":"2022-11-01"},{"lineNumber":34,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"deepimpactmir"},"content":"        assertCommandSuccess(unmarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-01"},{"lineNumber":36,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":37,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":38,"author":{"gitId":"deepimpactmir"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"deepimpactmir"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2022-11-01"},{"lineNumber":40,"author":{"gitId":"deepimpactmir"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2022-11-01"},{"lineNumber":41,"author":{"gitId":"deepimpactmir"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(outOfBoundIndex, new Survey(\"Environment Survey\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":42,"author":{"gitId":"deepimpactmir"},"content":"        assertCommandFailure(unmarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-11-01"},{"lineNumber":43,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":45,"author":{"gitId":"deepimpactmir"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":46,"author":{"gitId":"deepimpactmir"},"content":"    public void execute_invalidSurvey_throwsCommandException() {","lastModifiedDate":"2022-11-01"},{"lineNumber":47,"author":{"gitId":"deepimpactmir"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(INDEX_FIRST_PERSON, new Survey(\"asdsad\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":48,"author":{"gitId":"deepimpactmir"},"content":"        assertCommandFailure(unmarkCommand, model, UnmarkCommand.MESSAGE_INVALID_SURVEY);","lastModifiedDate":"2022-11-01"},{"lineNumber":49,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":50,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":51,"author":{"gitId":"deepimpactmir"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":52,"author":{"gitId":"deepimpactmir"},"content":"    public void equals() {","lastModifiedDate":"2022-11-01"},{"lineNumber":53,"author":{"gitId":"deepimpactmir"},"content":"        UnmarkCommand unmarkFirstCommand \u003d new UnmarkCommand(INDEX_FIRST_PERSON, new Survey(\"Environment Survey\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":54,"author":{"gitId":"deepimpactmir"},"content":"        UnmarkCommand unmarkSecondCommand \u003d new UnmarkCommand(INDEX_SECOND_PERSON, new Survey(\"Environment Survey\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":55,"author":{"gitId":"deepimpactmir"},"content":"        UnmarkCommand unmarkThirdCommand \u003d new UnmarkCommand(INDEX_SECOND_PERSON, new Survey(\"Academic Survey\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":56,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":57,"author":{"gitId":"deepimpactmir"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-11-01"},{"lineNumber":58,"author":{"gitId":"deepimpactmir"},"content":"        assertTrue(unmarkFirstCommand.equals(unmarkFirstCommand));","lastModifiedDate":"2022-11-01"},{"lineNumber":59,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":60,"author":{"gitId":"deepimpactmir"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-11-01"},{"lineNumber":61,"author":{"gitId":"deepimpactmir"},"content":"        UnmarkCommand unmarkFirstCommandCopy \u003d new UnmarkCommand(INDEX_FIRST_PERSON, new Survey(\"Environment Survey\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":62,"author":{"gitId":"deepimpactmir"},"content":"        assertTrue(unmarkFirstCommand.equals(unmarkFirstCommandCopy));","lastModifiedDate":"2022-11-01"},{"lineNumber":63,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":64,"author":{"gitId":"deepimpactmir"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-11-01"},{"lineNumber":65,"author":{"gitId":"deepimpactmir"},"content":"        assertFalse(unmarkFirstCommand.equals(1));","lastModifiedDate":"2022-11-01"},{"lineNumber":66,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":67,"author":{"gitId":"deepimpactmir"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-11-01"},{"lineNumber":68,"author":{"gitId":"deepimpactmir"},"content":"        assertFalse(unmarkFirstCommand.equals(null));","lastModifiedDate":"2022-11-01"},{"lineNumber":69,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":70,"author":{"gitId":"deepimpactmir"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-11-01"},{"lineNumber":71,"author":{"gitId":"deepimpactmir"},"content":"        assertFalse(unmarkFirstCommand.equals(unmarkSecondCommand));","lastModifiedDate":"2022-11-01"},{"lineNumber":72,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":73,"author":{"gitId":"deepimpactmir"},"content":"        // different survey -\u003e returns false","lastModifiedDate":"2022-11-01"},{"lineNumber":74,"author":{"gitId":"deepimpactmir"},"content":"        assertFalse(unmarkFirstCommand.equals(unmarkThirdCommand));","lastModifiedDate":"2022-11-01"},{"lineNumber":75,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":76,"author":{"gitId":"deepimpactmir"},"content":"}","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"ryanlml":3,"deepimpactmir":73}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlml"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"ryanlml"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"ryanlml"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"ryanlml"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalSurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"ryanlml"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"ryanlml"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"ryanlml"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"ryanlml"},"content":"import java.util.List;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"ryanlml"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.person.PersonContainsAttributePredicate;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"ryanlml"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"ryanlml"},"content":" * Contains integration tests (interaction with the Model) for {@code ViewCommand}.","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"ryanlml"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"ryanlml"},"content":"public class ViewCommandTest {","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"ryanlml"},"content":"    private Model model \u003d new ModelManager(getTypicalSurvin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":29,"author":{"gitId":"ryanlml"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalSurvin(), new UserPrefs());","lastModifiedDate":"2022-11-04"},{"lineNumber":30,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"ryanlml"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"ryanlml"},"content":"    public void equals() {","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"ryanlml"},"content":"        PersonContainsAttributePredicate firstPredicate \u003d","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"ryanlml"},"content":"                new PersonContainsAttributePredicate(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), List.of(\"male\"), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"ryanlml"},"content":"        PersonContainsAttributePredicate secondPredicate \u003d","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"ryanlml"},"content":"                new PersonContainsAttributePredicate(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), List.of(\"female\"), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"ryanlml"},"content":"        ViewCommand viewFirstCommand \u003d new ViewCommand(firstPredicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"ryanlml"},"content":"        ViewCommand viewSecondCommand \u003d new ViewCommand(secondPredicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"ryanlml"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"ryanlml"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommand));","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"ryanlml"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"ryanlml"},"content":"        ViewCommand viewFirstCommandCopy \u003d new ViewCommand(firstPredicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"ryanlml"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommandCopy));","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"ryanlml"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"ryanlml"},"content":"        assertFalse(viewFirstCommand.equals(1));","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"ryanlml"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"ryanlml"},"content":"        assertFalse(viewFirstCommand.equals(null));","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"ryanlml"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"ryanlml"},"content":"        assertFalse(viewFirstCommand.equals(viewSecondCommand));","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"ryanlml"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"ryanlml"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"ryanlml"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"ryanlml"},"content":"        PersonContainsAttributePredicate testPredicate \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"ryanlml"},"content":"                new PersonContainsAttributePredicate(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), List.of(\"r4nd0m_inV4l1d_g3nd3r\"), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"ryanlml"},"content":"        ViewCommand command \u003d new ViewCommand(testPredicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"ryanlml"},"content":"        expectedModel.updateFilteredPersonList(testPredicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"ryanlml"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"ryanlml"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":80,"author":{"gitId":"ryanlml"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":81,"author":{"gitId":"ryanlml"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2022-10-08"},{"lineNumber":82,"author":{"gitId":"ryanlml"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-10-08"},{"lineNumber":83,"author":{"gitId":"ryanlml"},"content":"        PersonContainsAttributePredicate testPredicate \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"ryanlml"},"content":"                new PersonContainsAttributePredicate(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), List.of(\"female\"), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e(), List.of(\"christian\"), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"ryanlml"},"content":"        ViewCommand command \u003d new ViewCommand(testPredicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"ryanlml"},"content":"        expectedModel.updateFilteredPersonList(testPredicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"ryanlml"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-08"},{"lineNumber":91,"author":{"gitId":"ryanlml"},"content":"        assertEquals(Arrays.asList(ALICE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2022-10-08"},{"lineNumber":92,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":93,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":94,"author":{"gitId":"ryanlml"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"ryanlml":94}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDATE_DESC_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.BIRTHDATE_DESC_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RACE_DESC_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RACE_DESC_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RELIGION_DESC_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RELIGION_DESC_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SURVEY_DESC_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SURVEY_DESC_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDATE_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RACE_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RELIGION_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SURVEY_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"KeithPJX"},"content":"                + ADDRESS_DESC_BOB + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + RACE_DESC_BOB + RELIGION_DESC_BOB","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"KeithPJX"},"content":"                + SURVEY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"KeithPJX"},"content":"                + ADDRESS_DESC_BOB + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + RACE_DESC_BOB + RELIGION_DESC_BOB","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"KeithPJX"},"content":"                + SURVEY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"KeithPJX"},"content":"                + ADDRESS_DESC_BOB + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + RACE_DESC_BOB + RELIGION_DESC_BOB","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"KeithPJX"},"content":"                + SURVEY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"KeithPJX"},"content":"                + ADDRESS_DESC_BOB + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + RACE_DESC_BOB + RELIGION_DESC_BOB","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"KeithPJX"},"content":"                + SURVEY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"KeithPJX"},"content":"                + ADDRESS_DESC_BOB + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + RACE_DESC_BOB + RELIGION_DESC_BOB","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"KeithPJX"},"content":"                + SURVEY_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"KeithPJX"},"content":"                + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + RACE_DESC_BOB + RELIGION_DESC_BOB + SURVEY_DESC_BOB","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":102,"author":{"gitId":"KeithPJX"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"KeithPJX"},"content":"                + GENDER_DESC_AMY + BIRTHDATE_DESC_AMY + RACE_DESC_AMY + RELIGION_DESC_AMY + SURVEY_DESC_AMY,","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"KeithPJX"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"KeithPJX"},"content":"                + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + RACE_DESC_BOB + RELIGION_DESC_BOB + SURVEY_DESC_BOB,","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"KeithPJX"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"KeithPJX"},"content":"                + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + RACE_DESC_BOB + RELIGION_DESC_BOB + SURVEY_DESC_BOB,","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"KeithPJX"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"KeithPJX"},"content":"                + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + RACE_DESC_BOB + RELIGION_DESC_BOB + SURVEY_DESC_BOB,","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"KeithPJX"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"KeithPJX"},"content":"                + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + RACE_DESC_BOB + RELIGION_DESC_BOB + SURVEY_DESC_BOB,","lastModifiedDate":"2022-10-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"KeithPJX"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"KeithPJX"},"content":"                + VALID_GENDER_BOB + VALID_BIRTHDATE_BOB + VALID_RACE_BOB + VALID_RELIGION_BOB + VALID_SURVEY_BOB,","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":141,"author":{"gitId":"KeithPJX"},"content":"                + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + RACE_DESC_BOB + RELIGION_DESC_BOB + SURVEY_DESC_BOB","lastModifiedDate":"2022-10-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":146,"author":{"gitId":"KeithPJX"},"content":"                + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + RACE_DESC_BOB + RELIGION_DESC_BOB + SURVEY_DESC_BOB","lastModifiedDate":"2022-10-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":151,"author":{"gitId":"KeithPJX"},"content":"                + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + RACE_DESC_BOB + RELIGION_DESC_BOB + SURVEY_DESC_BOB","lastModifiedDate":"2022-10-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":156,"author":{"gitId":"KeithPJX"},"content":"                + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + RACE_DESC_BOB + RELIGION_DESC_BOB + SURVEY_DESC_BOB","lastModifiedDate":"2022-10-03"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":161,"author":{"gitId":"KeithPJX"},"content":"                + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + RACE_DESC_BOB + RELIGION_DESC_BOB + SURVEY_DESC_BOB","lastModifiedDate":"2022-10-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"KeithPJX"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2022-10-03"},{"lineNumber":166,"author":{"gitId":"KeithPJX"},"content":"                + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + RACE_DESC_BOB + RELIGION_DESC_BOB + SURVEY_DESC_BOB,","lastModifiedDate":"2022-10-03"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-03"},{"lineNumber":171,"author":{"gitId":"KeithPJX"},"content":"                + ADDRESS_DESC_BOB + GENDER_DESC_BOB + BIRTHDATE_DESC_BOB + RACE_DESC_BOB + RELIGION_DESC_BOB","lastModifiedDate":"2022-10-03"},{"lineNumber":172,"author":{"gitId":"KeithPJX"},"content":"                + SURVEY_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-03"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"KeithPJX":47,"-":128}},{"path":"src/test/java/seedu/address/logic/parser/CloneCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NUSDG"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SURVEY;","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"NUSDG"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"NUSDG"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"NUSDG"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"NUSDG"},"content":"import seedu.address.logic.commands.CloneCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"NUSDG"},"content":"import seedu.address.logic.commands.CloneCommand.ClonePersonDescriptor;","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"NUSDG"},"content":"import seedu.address.testutil.ClonePersonDescriptorBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"NUSDG"},"content":"public class CloneCommandParserTest {","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"NUSDG"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"NUSDG"},"content":"    private static final String SURVEY_EMPTY \u003d \" \" + PREFIX_SURVEY;","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"NUSDG"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"NUSDG"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, CloneCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"NUSDG"},"content":"    private CloneCommandParser parser \u003d new CloneCommandParser();","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"NUSDG"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"NUSDG"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"NUSDG"},"content":"        // no index specified","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"NUSDG"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"NUSDG"},"content":"        // no field specified","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"NUSDG"},"content":"        assertParseFailure(parser, \"1\", CloneCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"NUSDG"},"content":"        // no index and no field specified","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"NUSDG"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"NUSDG"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"NUSDG"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"NUSDG"},"content":"        // negative index","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"NUSDG"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"NUSDG"},"content":"        // zero index","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"NUSDG"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"NUSDG"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"NUSDG"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"NUSDG"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"NUSDG"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"NUSDG"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"NUSDG"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"NUSDG"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"NUSDG"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"NUSDG"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"NUSDG"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"NUSDG"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"NUSDG"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"NUSDG"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"NUSDG"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"NUSDG"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"NUSDG"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"NUSDG"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being cloned,","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"NUSDG"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"NUSDG"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"NUSDG"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"NUSDG"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"NUSDG"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"NUSDG"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"NUSDG"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"NUSDG"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"NUSDG"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"NUSDG"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"NUSDG"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"NUSDG"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"NUSDG"},"content":"        ClonePersonDescriptor descriptor \u003d new ClonePersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"NUSDG"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-10-20"},{"lineNumber":118,"author":{"gitId":"NUSDG"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":119,"author":{"gitId":"NUSDG"},"content":"        CloneCommand expectedCommand \u003d new CloneCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":120,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"NUSDG"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":124,"author":{"gitId":"NUSDG"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":125,"author":{"gitId":"NUSDG"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":126,"author":{"gitId":"NUSDG"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"NUSDG"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":128,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":129,"author":{"gitId":"NUSDG"},"content":"        ClonePersonDescriptor descriptor \u003d new ClonePersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-20"},{"lineNumber":130,"author":{"gitId":"NUSDG"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":131,"author":{"gitId":"NUSDG"},"content":"        CloneCommand expectedCommand \u003d new CloneCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":132,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":133,"author":{"gitId":"NUSDG"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-20"},{"lineNumber":134,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":135,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":136,"author":{"gitId":"NUSDG"},"content":"    @Test","lastModifiedDate":"2022-10-14"},{"lineNumber":137,"author":{"gitId":"NUSDG"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":138,"author":{"gitId":"NUSDG"},"content":"        // name","lastModifiedDate":"2022-10-20"},{"lineNumber":139,"author":{"gitId":"NUSDG"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":140,"author":{"gitId":"NUSDG"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":141,"author":{"gitId":"NUSDG"},"content":"        ClonePersonDescriptor descriptor \u003d new ClonePersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":142,"author":{"gitId":"NUSDG"},"content":"        CloneCommand expectedCommand \u003d new CloneCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":143,"author":{"gitId":"NUSDG"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-20"},{"lineNumber":144,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":145,"author":{"gitId":"NUSDG"},"content":"        // phone","lastModifiedDate":"2022-10-20"},{"lineNumber":146,"author":{"gitId":"NUSDG"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":147,"author":{"gitId":"NUSDG"},"content":"        descriptor \u003d new ClonePersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":148,"author":{"gitId":"NUSDG"},"content":"        expectedCommand \u003d new CloneCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":149,"author":{"gitId":"NUSDG"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-20"},{"lineNumber":150,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":151,"author":{"gitId":"NUSDG"},"content":"        // email","lastModifiedDate":"2022-10-20"},{"lineNumber":152,"author":{"gitId":"NUSDG"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":153,"author":{"gitId":"NUSDG"},"content":"        descriptor \u003d new ClonePersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":154,"author":{"gitId":"NUSDG"},"content":"        expectedCommand \u003d new CloneCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":155,"author":{"gitId":"NUSDG"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-20"},{"lineNumber":156,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":157,"author":{"gitId":"NUSDG"},"content":"        // address","lastModifiedDate":"2022-10-20"},{"lineNumber":158,"author":{"gitId":"NUSDG"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":159,"author":{"gitId":"NUSDG"},"content":"        descriptor \u003d new ClonePersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":160,"author":{"gitId":"NUSDG"},"content":"        expectedCommand \u003d new CloneCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":161,"author":{"gitId":"NUSDG"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-20"},{"lineNumber":162,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":163,"author":{"gitId":"NUSDG"},"content":"        // tags","lastModifiedDate":"2022-10-20"},{"lineNumber":164,"author":{"gitId":"NUSDG"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-20"},{"lineNumber":165,"author":{"gitId":"NUSDG"},"content":"        descriptor \u003d new ClonePersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":166,"author":{"gitId":"NUSDG"},"content":"        expectedCommand \u003d new CloneCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":167,"author":{"gitId":"NUSDG"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-20"},{"lineNumber":168,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":169,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":170,"author":{"gitId":"NUSDG"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":171,"author":{"gitId":"NUSDG"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-10-20"},{"lineNumber":172,"author":{"gitId":"NUSDG"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":173,"author":{"gitId":"NUSDG"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-20"},{"lineNumber":174,"author":{"gitId":"NUSDG"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2022-10-20"},{"lineNumber":175,"author":{"gitId":"NUSDG"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-20"},{"lineNumber":176,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":177,"author":{"gitId":"NUSDG"},"content":"        ClonePersonDescriptor descriptor \u003d new ClonePersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-20"},{"lineNumber":178,"author":{"gitId":"NUSDG"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-20"},{"lineNumber":179,"author":{"gitId":"NUSDG"},"content":"                .build();","lastModifiedDate":"2022-10-20"},{"lineNumber":180,"author":{"gitId":"NUSDG"},"content":"        CloneCommand expectedCommand \u003d new CloneCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":181,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":182,"author":{"gitId":"NUSDG"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-20"},{"lineNumber":183,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":184,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":185,"author":{"gitId":"NUSDG"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":186,"author":{"gitId":"NUSDG"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":187,"author":{"gitId":"NUSDG"},"content":"        // no other valid values specified","lastModifiedDate":"2022-10-20"},{"lineNumber":188,"author":{"gitId":"NUSDG"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":189,"author":{"gitId":"NUSDG"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":190,"author":{"gitId":"NUSDG"},"content":"        ClonePersonDescriptor descriptor \u003d new ClonePersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":191,"author":{"gitId":"NUSDG"},"content":"        CloneCommand expectedCommand \u003d new CloneCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":192,"author":{"gitId":"NUSDG"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-20"},{"lineNumber":193,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":194,"author":{"gitId":"NUSDG"},"content":"        // other valid values specified","lastModifiedDate":"2022-10-20"},{"lineNumber":195,"author":{"gitId":"NUSDG"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2022-10-20"},{"lineNumber":196,"author":{"gitId":"NUSDG"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":197,"author":{"gitId":"NUSDG"},"content":"        descriptor \u003d new ClonePersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-20"},{"lineNumber":198,"author":{"gitId":"NUSDG"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":199,"author":{"gitId":"NUSDG"},"content":"        expectedCommand \u003d new CloneCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":200,"author":{"gitId":"NUSDG"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-20"},{"lineNumber":201,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":202,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":203,"author":{"gitId":"NUSDG"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":204,"author":{"gitId":"NUSDG"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":205,"author":{"gitId":"NUSDG"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":206,"author":{"gitId":"NUSDG"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2022-10-20"},{"lineNumber":207,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":208,"author":{"gitId":"NUSDG"},"content":"        ClonePersonDescriptor descriptor \u003d new ClonePersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2022-10-20"},{"lineNumber":209,"author":{"gitId":"NUSDG"},"content":"        CloneCommand expectedCommand \u003d new CloneCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":210,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":211,"author":{"gitId":"NUSDG"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-20"},{"lineNumber":212,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":213,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":214,"author":{"gitId":"NUSDG"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":215,"author":{"gitId":"NUSDG"},"content":"    public void parse_resetSurveys_success() {","lastModifiedDate":"2022-10-20"},{"lineNumber":216,"author":{"gitId":"NUSDG"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":217,"author":{"gitId":"NUSDG"},"content":"        String userInput \u003d targetIndex.getOneBased() + SURVEY_EMPTY;","lastModifiedDate":"2022-10-20"},{"lineNumber":218,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":219,"author":{"gitId":"NUSDG"},"content":"        ClonePersonDescriptor descriptor \u003d new ClonePersonDescriptorBuilder().withSurveys().build();","lastModifiedDate":"2022-10-20"},{"lineNumber":220,"author":{"gitId":"NUSDG"},"content":"        CloneCommand expectedCommand \u003d new CloneCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":221,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":222,"author":{"gitId":"NUSDG"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-20"},{"lineNumber":223,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":224,"author":{"gitId":"NUSDG"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"NUSDG":224}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RACE_AMY;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RELIGION_BOB;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SURVEY_AMY;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"deepimpactmir"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.person.Race;","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.person.Religion;","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"deepimpactmir"},"content":" * As we are only doing white-box testing, our test cases do not cover path","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"deepimpactmir"},"content":" * variations outside of the DeleteCommand code. For example, inputs \"1\" and \"1","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"deepimpactmir"},"content":" * abc\" take the same path through the DeleteCommand, and therefore we test only","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"deepimpactmir"},"content":" * one of them. The path variation for those two cases occur inside the","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"deepimpactmir"},"content":" * ParserUtil, and therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"deepimpactmir"},"content":"    public void parse_validArgsIndex_returnsDeleteCommand() {","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"deepimpactmir"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(Optional.of(INDEX_FIRST_PERSON), Optional.empty(),","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"deepimpactmir"},"content":"                Optional.empty(), Optional.empty()));","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"deepimpactmir"},"content":"    public void parse_invalidArgsIndex_throwsParseException() {","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"deepimpactmir"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"deepimpactmir"},"content":"    public void parse_validArgsRace_returnsDeleteCommand() {","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"deepimpactmir"},"content":"        Race race \u003d new Race(VALID_RACE_AMY);","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"deepimpactmir"},"content":"        assertParseSuccess(parser, \" ra/Chinese\",","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"deepimpactmir"},"content":"                new DeleteCommand(Optional.empty(), Optional.of(race), Optional.empty(), Optional.empty()));","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":50,"author":{"gitId":"deepimpactmir"},"content":"    public void parse_invalidArgsRace_throwsParseException() {","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"deepimpactmir"},"content":"        assertParseFailure(parser, \" ra/123\", Race.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"deepimpactmir"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"deepimpactmir"},"content":"    public void parse_validArgsReligion_returnsDeleteCommand() {","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"deepimpactmir"},"content":"        Religion religion \u003d new Religion(VALID_RELIGION_BOB);","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"deepimpactmir"},"content":"        assertParseSuccess(parser, \" re/Muslim\",","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"deepimpactmir"},"content":"                new DeleteCommand(Optional.empty(), Optional.empty(), Optional.of(religion), Optional.empty()));","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"deepimpactmir"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"deepimpactmir"},"content":"    public void parse_invalidArgsReligion_throwsParseException() {","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"deepimpactmir"},"content":"        assertParseFailure(parser, \" re/75575\", Religion.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"deepimpactmir"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"deepimpactmir"},"content":"    public void parse_validArgsSurvey_returnsDeleteCommand() {","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"deepimpactmir"},"content":"        Survey survey \u003d new Survey(VALID_SURVEY_AMY);","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"deepimpactmir"},"content":"        assertParseSuccess(parser, \" s/Environment Survey\",","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"deepimpactmir"},"content":"                new DeleteCommand(Optional.empty(), Optional.empty(), Optional.empty(), Optional.of(survey)));","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"-":28,"deepimpactmir":44}},{"path":"src/test/java/seedu/address/logic/parser/MarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"deepimpactmir"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-11-01"},{"lineNumber":2,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"deepimpactmir"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2022-11-01"},{"lineNumber":11,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"deepimpactmir"},"content":"class MarkCommandParserTest {","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"deepimpactmir"},"content":"    private MarkCommandParser parser \u003d new MarkCommandParser();","lastModifiedDate":"2022-11-01"},{"lineNumber":16,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":17,"author":{"gitId":"deepimpactmir"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":18,"author":{"gitId":"deepimpactmir"},"content":"    public void parse_validArgs_returnsMarkCommand() {","lastModifiedDate":"2022-11-01"},{"lineNumber":19,"author":{"gitId":"deepimpactmir"},"content":"        assertParseSuccess(parser, \"1 s/Environmental Survey\",","lastModifiedDate":"2022-11-01"},{"lineNumber":20,"author":{"gitId":"deepimpactmir"},"content":"                new MarkCommand(INDEX_FIRST_PERSON, new Survey(\"Environmental Survey\")));","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"deepimpactmir"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"deepimpactmir"},"content":"    public void parse_invalidArgs_returnsMarkCommand() {","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"deepimpactmir"},"content":"        assertParseFailure(parser, \"asdasdaczx\",","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"deepimpactmir"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"deepimpactmir"},"content":"}","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"deepimpactmir":28}},{"path":"src/test/java/seedu/address/logic/parser/SurvinParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"deepimpactmir"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"ryanlml"},"content":"public class SurvinParserTest {","lastModifiedDate":"2022-11-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"ryanlml"},"content":"    private final SurvinParser parser \u003d new SurvinParser();","lastModifiedDate":"2022-11-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"deepimpactmir"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"deepimpactmir"},"content":"                .parseCommand(DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"deepimpactmir"},"content":"        assertEquals(new DeleteCommand(Optional.of(INDEX_FIRST_PERSON), Optional.empty(), Optional.empty(),","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"deepimpactmir"},"content":"                Optional.empty()), command);","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"ryanlml"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \"   \") instanceof HelpCommand);","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"ryanlml":3,"-":82,"deepimpactmir":5}},{"path":"src/test/java/seedu/address/logic/parser/UndoCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"deepimpactmir"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"deepimpactmir"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"deepimpactmir"},"content":"public class UndoCommandParserTest {","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"deepimpactmir"},"content":"    private UndoCommandParser parser \u003d new UndoCommandParser();","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"deepimpactmir"},"content":"    @Test","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"deepimpactmir"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"deepimpactmir"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, UndoCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"deepimpactmir"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"deepimpactmir":19}},{"path":"src/test/java/seedu/address/logic/parser/UnmarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"deepimpactmir"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-11-01"},{"lineNumber":2,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"deepimpactmir"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"deepimpactmir"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.logic.commands.UnmarkCommand;","lastModifiedDate":"2022-11-01"},{"lineNumber":11,"author":{"gitId":"deepimpactmir"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"deepimpactmir"},"content":"class UnmarkCommandParserTest {","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"deepimpactmir"},"content":"    private UnmarkCommandParser parser \u003d new UnmarkCommandParser();","lastModifiedDate":"2022-11-01"},{"lineNumber":16,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":17,"author":{"gitId":"deepimpactmir"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":18,"author":{"gitId":"deepimpactmir"},"content":"    public void parse_validArgs_returnsUnmarkCommand() {","lastModifiedDate":"2022-11-01"},{"lineNumber":19,"author":{"gitId":"deepimpactmir"},"content":"        assertParseSuccess(parser, \"1 s/Academic Survey\",","lastModifiedDate":"2022-11-01"},{"lineNumber":20,"author":{"gitId":"deepimpactmir"},"content":"                new UnmarkCommand(INDEX_FIRST_PERSON, new Survey(\"Academic Survey\")));","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"deepimpactmir"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"deepimpactmir"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"deepimpactmir"},"content":"    public void parse_invalidArgs_returnsUnmarkCommand() {","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"deepimpactmir"},"content":"        assertParseFailure(parser, \"vwqrrqsa\",","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"deepimpactmir"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"deepimpactmir"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"deepimpactmir"},"content":"}","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"deepimpactmir":28}},{"path":"src/test/java/seedu/address/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlml"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"ryanlml"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"ryanlml"},"content":"import java.util.List;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.person.PersonContainsAttributePredicate;","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"ryanlml"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"ryanlml"},"content":"    private ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"ryanlml"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"ryanlml"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"ryanlml"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"ryanlml"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"ryanlml"},"content":"    public void parse_invalidArgsIndex_throwsParseException() {","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"ryanlml"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"ryanlml"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"ryanlml"},"content":"    public void parse_validArgs_returnsViewCommand() {","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"ryanlml"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"ryanlml"},"content":"        PersonContainsAttributePredicate testPredicate \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"ryanlml"},"content":"                new PersonContainsAttributePredicate(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), List.of(\"male\"), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"ryanlml"},"content":"                        List.of(\"chinese\"), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"ryanlml"},"content":"        ViewCommand expectedViewCommand \u003d new ViewCommand(testPredicate);","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"ryanlml"},"content":"        assertParseSuccess(parser, \" g/male ra/chinese\", expectedViewCommand);","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"ryanlml"},"content":"        // repeated prefixes","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"ryanlml"},"content":"        assertParseSuccess(parser, \" g/female g/male ra/italian ra/chinese\", expectedViewCommand);","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"ryanlml"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"ryanlml":48}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"ryanlml"},"content":"import seedu.address.testutil.SurvinBuilder;","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"ryanlml"},"content":"        assertEquals(new Survin(), new Survin(modelManager.getSurvin()));","lastModifiedDate":"2022-11-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"ryanlml"},"content":"        userPrefs.setSurvinFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2022-11-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"ryanlml"},"content":"        userPrefs.setSurvinFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2022-11-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"ryanlml"},"content":"    public void setSurvinFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-11-04"},{"lineNumber":65,"author":{"gitId":"ryanlml"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setSurvinFilePath(null));","lastModifiedDate":"2022-11-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"ryanlml"},"content":"    public void setSurvinFilePath_validPath_setsSurvinFilePath() {","lastModifiedDate":"2022-11-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"ryanlml"},"content":"        modelManager.setSurvinFilePath(path);","lastModifiedDate":"2022-11-04"},{"lineNumber":72,"author":{"gitId":"ryanlml"},"content":"        assertEquals(path, modelManager.getSurvinFilePath());","lastModifiedDate":"2022-11-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"ryanlml"},"content":"    public void hasPerson_personNotInSurvin_returnsFalse() {","lastModifiedDate":"2022-11-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"ryanlml"},"content":"    public void hasPerson_personInSurvin_returnsTrue() {","lastModifiedDate":"2022-11-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"ryanlml"},"content":"        Survin survin \u003d new SurvinBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2022-11-04"},{"lineNumber":99,"author":{"gitId":"ryanlml"},"content":"        Survin differentSurvin \u003d new Survin();","lastModifiedDate":"2022-11-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"ryanlml"},"content":"        modelManager \u003d new ModelManager(survin, userPrefs);","lastModifiedDate":"2022-11-04"},{"lineNumber":104,"author":{"gitId":"ryanlml"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(survin, userPrefs);","lastModifiedDate":"2022-11-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"ryanlml"},"content":"        // different survin -\u003e returns false","lastModifiedDate":"2022-11-04"},{"lineNumber":117,"author":{"gitId":"ryanlml"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentSurvin, userPrefs)));","lastModifiedDate":"2022-11-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"ryanlml"},"content":"        assertFalse(modelManager.equals(new ModelManager(survin, userPrefs)));","lastModifiedDate":"2022-11-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"ryanlml"},"content":"        differentUserPrefs.setSurvinFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-11-04"},{"lineNumber":130,"author":{"gitId":"ryanlml"},"content":"        assertFalse(modelManager.equals(new ModelManager(survin, differentUserPrefs)));","lastModifiedDate":"2022-11-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"ryanlml":20,"-":112}},{"path":"src/test/java/seedu/address/model/SurvinTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalSurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"ryanlml"},"content":"public class SurvinTest {","lastModifiedDate":"2022-11-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"ryanlml"},"content":"    private final Survin survin \u003d new Survin();","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"ryanlml"},"content":"        assertEquals(Collections.emptyList(), survin.getPersonList());","lastModifiedDate":"2022-11-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"ryanlml"},"content":"        assertThrows(NullPointerException.class, () -\u003e survin.resetData(null));","lastModifiedDate":"2022-11-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"ryanlml"},"content":"    public void resetData_withValidReadOnlySurvin_replacesData() {","lastModifiedDate":"2022-11-04"},{"lineNumber":41,"author":{"gitId":"ryanlml"},"content":"        Survin newData \u003d getTypicalSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":42,"author":{"gitId":"ryanlml"},"content":"        survin.resetData(newData);","lastModifiedDate":"2022-11-04"},{"lineNumber":43,"author":{"gitId":"ryanlml"},"content":"        assertEquals(newData, survin);","lastModifiedDate":"2022-11-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"ryanlml"},"content":"        SurvinStub newData \u003d new SurvinStub(newPersons);","lastModifiedDate":"2022-11-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"ryanlml"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e survin.resetData(newData));","lastModifiedDate":"2022-11-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"ryanlml"},"content":"        assertThrows(NullPointerException.class, () -\u003e survin.hasPerson(null));","lastModifiedDate":"2022-11-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"ryanlml"},"content":"    public void hasPerson_personNotInSurvin_returnsFalse() {","lastModifiedDate":"2022-11-04"},{"lineNumber":64,"author":{"gitId":"ryanlml"},"content":"        assertFalse(survin.hasPerson(ALICE));","lastModifiedDate":"2022-11-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"ryanlml"},"content":"    public void hasPerson_personInSurvin_returnsTrue() {","lastModifiedDate":"2022-11-04"},{"lineNumber":69,"author":{"gitId":"ryanlml"},"content":"        survin.addPerson(ALICE);","lastModifiedDate":"2022-11-04"},{"lineNumber":70,"author":{"gitId":"ryanlml"},"content":"        assertTrue(survin.hasPerson(ALICE));","lastModifiedDate":"2022-11-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"ryanlml"},"content":"    public void hasPerson_personWithSameIdentityFieldsInSurvin_returnsTrue() {","lastModifiedDate":"2022-11-04"},{"lineNumber":75,"author":{"gitId":"ryanlml"},"content":"        survin.addPerson(ALICE);","lastModifiedDate":"2022-11-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"ryanlml"},"content":"        assertTrue(survin.hasPerson(editedAlice));","lastModifiedDate":"2022-11-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"ryanlml"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e survin.getPersonList().remove(0));","lastModifiedDate":"2022-11-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"ryanlml"},"content":"     * A stub ReadOnlySurvin whose persons list can violate interface constraints.","lastModifiedDate":"2022-11-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"ryanlml"},"content":"    private static class SurvinStub implements ReadOnlySurvin {","lastModifiedDate":"2022-11-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"ryanlml"},"content":"        SurvinStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2022-11-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"ryanlml":24,"-":78}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"ryanlml"},"content":"    public void setSurvinFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-11-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"ryanlml"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setSurvinFilePath(null));","lastModifiedDate":"2022-11-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"ryanlml":2,"-":19}},{"path":"src/test/java/seedu/address/model/person/BirthdateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"public class BirthdateTest {","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"    public void isValidBirthdate() {","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"        // null birthdate","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"        // Totally incorrect format","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"        assertFalse(Birthdate.isValidBirthdate(\"\"));","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"        assertFalse(Birthdate.isValidBirthdate(\" \"));","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"        assertFalse(Birthdate.isValidBirthdate(\"abcdef\"));","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"        assertFalse(Birthdate.isValidBirthdate(\"abc def\"));","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"        // Slightly incorrect format","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"        assertFalse(Birthdate.isValidBirthdate(\"2020-31-12\"));","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"        assertFalse(Birthdate.isValidBirthdate(\"12-12-2020\"));","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"        // Correct format","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"        assertTrue(Birthdate.isValidBirthdate(\"2020-12-31\"));","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"        assertTrue(Birthdate.isValidBirthdate(\"1999-1-1\"));","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"KeithPJX":29}},{"path":"src/test/java/seedu/address/model/person/GenderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"public class GenderTest {","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"    public void isValidGender() {","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"        // null birthdate","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"        // Incorrect","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"        assertFalse(Gender.isValidGender(\"\"));","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"        assertFalse(Gender.isValidGender(\" \"));","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"        assertFalse(Gender.isValidGender(\"abcdef\"));","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"        assertFalse(Gender.isValidGender(\"abc def\"));","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"        assertFalse(Gender.isValidGender(\"Male\"));","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"        assertFalse(Gender.isValidGender(\"Female\"));","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"        assertFalse(Gender.isValidGender(\"OTHERS\"));","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"        // Correct","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"        assertTrue(Gender.isValidGender(\"male\"));","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"        assertTrue(Gender.isValidGender(\"female\"));","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"        assertTrue(Gender.isValidGender(\"others\"));","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"KeithPJX":29}},{"path":"src/test/java/seedu/address/model/person/PersonContainsAttributePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlml"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"ryanlml"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"ryanlml"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"ryanlml"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"ryanlml"},"content":"import java.util.List;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"ryanlml"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"ryanlml"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"ryanlml"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"ryanlml"},"content":"public class PersonContainsAttributePredicateTest {","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"ryanlml"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"ryanlml"},"content":"    public void equals() {","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"ryanlml"},"content":"        PersonContainsAttributePredicate firstPredicate \u003d","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"ryanlml"},"content":"                new PersonContainsAttributePredicate(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), List.of(\"male\"), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"ryanlml"},"content":"        PersonContainsAttributePredicate secondPredicate \u003d","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"ryanlml"},"content":"                new PersonContainsAttributePredicate(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), List.of(\"female\"), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"ryanlml"},"content":"        ViewCommand viewFirstCommand \u003d new ViewCommand(firstPredicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"ryanlml"},"content":"        ViewCommand viewSecondCommand \u003d new ViewCommand(secondPredicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"ryanlml"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"ryanlml"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommand));","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"ryanlml"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"ryanlml"},"content":"        ViewCommand viewFirstCommandCopy \u003d new ViewCommand(firstPredicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"ryanlml"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommandCopy));","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"ryanlml"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"ryanlml"},"content":"        assertFalse(viewFirstCommand.equals(1));","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"ryanlml"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"ryanlml"},"content":"        assertFalse(viewFirstCommand.equals(null));","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"ryanlml"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"ryanlml"},"content":"        assertFalse(viewFirstCommand.equals(viewSecondCommand));","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"ryanlml"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"ryanlml"},"content":"    public void test_attributeContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"ryanlml"},"content":"        // One keyword","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"ryanlml"},"content":"        PersonContainsAttributePredicate predicate \u003d","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"ryanlml"},"content":"                new PersonContainsAttributePredicate(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), List.of(\"male\"), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"ryanlml"},"content":"        assertTrue(predicate.test(new PersonBuilder().withGender(\"male\").build()));","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"ryanlml"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"ryanlml"},"content":"        predicate \u003d","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"ryanlml"},"content":"                new PersonContainsAttributePredicate(List.of(\"Alice\", \"Bob\"), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"ryanlml"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"ryanlml"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"ryanlml"},"content":"        predicate \u003d","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"ryanlml"},"content":"                new PersonContainsAttributePredicate(List.of(\"Bob\", \"Carol\"), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"ryanlml"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"ryanlml"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"ryanlml"},"content":"        predicate \u003d","lastModifiedDate":"2022-10-18"},{"lineNumber":78,"author":{"gitId":"ryanlml"},"content":"                new PersonContainsAttributePredicate(List.of(\"aLiCe\", \"bOb\"), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-08"},{"lineNumber":80,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"ryanlml"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-08"},{"lineNumber":83,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":84,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"ryanlml"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"ryanlml"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-08"},{"lineNumber":87,"author":{"gitId":"ryanlml"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-08"},{"lineNumber":88,"author":{"gitId":"ryanlml"},"content":"        PersonContainsAttributePredicate predicate \u003d","lastModifiedDate":"2022-10-08"},{"lineNumber":89,"author":{"gitId":"ryanlml"},"content":"                new PersonContainsAttributePredicate(new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-08"},{"lineNumber":90,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), List.of(\"r4nd0m_inV4l1d_g3nd3r\"), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-08"},{"lineNumber":91,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"ryanlml"},"content":"                        new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"ryanlml"},"content":"        assertFalse(predicate.test(new PersonBuilder().withGender(\"female\").build()));","lastModifiedDate":"2022-10-08"},{"lineNumber":94,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":95,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":96,"author":{"gitId":"ryanlml"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"ryanlml":96}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SURVEY_BOB;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"ryanlml"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"ryanlml"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"ryanlml"},"content":"        // same name, phone, email and survey -\u003e returns true","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"ryanlml"},"content":"        editedAlice \u003d new PersonBuilder().withName(ALICE.getName().fullName)","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"ryanlml"},"content":"                .withEmail(ALICE.getEmail().value).withPhone(ALICE.getPhone().value)","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"ryanlml"},"content":"                .withSurveys(ALICE.getSurveys()).build();","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"ryanlml"},"content":"        // same name, phone and email, different survey -\u003e returns false","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"ryanlml"},"content":"        editedAlice \u003d new PersonBuilder().withName(ALICE.getName().fullName)","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"ryanlml"},"content":"                .withEmail(ALICE.getEmail().value).withPhone(ALICE.getPhone().value)","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"deepimpactmir"},"content":"                .withSurvey(VALID_SURVEY_BOB, false).build();","lastModifiedDate":"2022-11-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"ryanlml":11,"-":92,"deepimpactmir":1}},{"path":"src/test/java/seedu/address/model/person/ReligionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"KeithPJX"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"KeithPJX"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"public class ReligionTest {","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"    @Test","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"    public void isValidReligion() {","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"KeithPJX"},"content":"        // null religion","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"        assertThrows(NullPointerException.class, () -\u003e Religion.isValidReligion(null));","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"        // invalid religion","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"        assertFalse(Religion.isValidReligion(\"\"));","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"        assertFalse(Religion.isValidReligion(\" \"));","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"        assertFalse(Religion.isValidReligion(\"^\"));","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"        assertFalse(Religion.isValidReligion(\"123\"));","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"        assertFalse(Religion.isValidReligion(\"Buddhist123\"));","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"KeithPJX"},"content":"        assertFalse(Religion.isValidReligion(\"Buddhist^\"));","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"KeithPJX"},"content":"        // valid name","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"KeithPJX"},"content":"        assertTrue(Religion.isValidReligion(\"Buddhist\")); // alphabets only","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"        assertTrue(Religion.isValidReligion(\"Budd hist\")); // alphabets only","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"KeithPJX"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"KeithPJX":27}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"KeithPJX"},"content":"    private static final String INVALID_GENDER \u003d \"random\";","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"    private static final String INVALID_BIRTHDATE \u003d \"12-12-1999\";","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"KeithPJX"},"content":"    private static final String VALID_GENDER \u003d BENSON.getGender().toString();","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"KeithPJX"},"content":"    private static final String VALID_BIRTHDATE \u003d BENSON.getBirthdate().toString();","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"KeithPJX"},"content":"    private static final String VALID_RACE \u003d BENSON.getRace().toString();","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"KeithPJX"},"content":"    private static final String VALID_RELIGION \u003d BENSON.getReligion().toString();","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"ryanlml"},"content":"    private static final List\u003cJsonAdaptedSurvey\u003e VALID_SURVEY \u003d BENSON.getSurveys().stream()","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"ryanlml"},"content":"            .map(JsonAdaptedSurvey::new)","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"ryanlml"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"KeithPJX"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"KeithPJX"},"content":"                        VALID_GENDER, VALID_BIRTHDATE, VALID_RACE, VALID_RELIGION, VALID_SURVEY, VALID_TAGS);","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"KeithPJX"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"KeithPJX"},"content":"                VALID_GENDER, VALID_BIRTHDATE, VALID_RACE, VALID_RELIGION, VALID_SURVEY, VALID_TAGS);","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"KeithPJX"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"KeithPJX"},"content":"                        VALID_GENDER, VALID_BIRTHDATE, VALID_RACE, VALID_RELIGION, VALID_SURVEY, VALID_TAGS);","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"KeithPJX"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"KeithPJX"},"content":"                VALID_GENDER, VALID_BIRTHDATE, VALID_RACE, VALID_RELIGION, VALID_SURVEY, VALID_TAGS);","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"KeithPJX"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"KeithPJX"},"content":"                VALID_GENDER, VALID_BIRTHDATE, VALID_RACE, VALID_RELIGION, VALID_SURVEY, VALID_TAGS);","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"KeithPJX"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"KeithPJX"},"content":"                VALID_GENDER, VALID_BIRTHDATE, VALID_RACE, VALID_RELIGION, VALID_SURVEY, VALID_TAGS);","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"KeithPJX"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"KeithPJX"},"content":"                VALID_GENDER, VALID_BIRTHDATE, VALID_RACE, VALID_RELIGION, VALID_SURVEY, VALID_TAGS);","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"KeithPJX"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"KeithPJX"},"content":"                VALID_GENDER, VALID_BIRTHDATE, VALID_RACE, VALID_RELIGION, VALID_SURVEY, VALID_TAGS);","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"KeithPJX"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"KeithPJX"},"content":"                VALID_GENDER, VALID_BIRTHDATE, VALID_RACE, VALID_RELIGION, VALID_SURVEY, invalidTags);","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"KeithPJX"},"content":"    @Test","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"KeithPJX"},"content":"    public void toModelType_invalidGender_throwsIllegalValueException() {","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"KeithPJX"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"KeithPJX"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2022-10-03"},{"lineNumber":129,"author":{"gitId":"KeithPJX"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"KeithPJX"},"content":"                INVALID_GENDER, VALID_BIRTHDATE, VALID_RACE, VALID_RELIGION, VALID_SURVEY, VALID_TAGS);","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"KeithPJX"},"content":"    @Test","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"KeithPJX"},"content":"    public void toModelType_invalidBirthdate_throwsIllegalValueException() {","lastModifiedDate":"2022-10-03"},{"lineNumber":136,"author":{"gitId":"KeithPJX"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"KeithPJX"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2022-10-03"},{"lineNumber":138,"author":{"gitId":"KeithPJX"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2022-10-03"},{"lineNumber":139,"author":{"gitId":"KeithPJX"},"content":"                VALID_GENDER, INVALID_BIRTHDATE, VALID_RACE, VALID_RELIGION, VALID_SURVEY, VALID_TAGS);","lastModifiedDate":"2022-10-03"},{"lineNumber":140,"author":{"gitId":"KeithPJX"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2022-10-03"},{"lineNumber":141,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"KeithPJX":38,"ryanlml":3,"-":101}},{"path":"src/test/java/seedu/address/storage/JsonSerializableSurvinTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.Survin;","lastModifiedDate":"2022-11-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"ryanlml"},"content":"public class JsonSerializableSurvinTest {","lastModifiedDate":"2022-11-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"ryanlml"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableSurvinTest\");","lastModifiedDate":"2022-11-04"},{"lineNumber":19,"author":{"gitId":"ryanlml"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsSurvin.json\");","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"ryanlml"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonSurvin.json\");","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"ryanlml"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonSurvin.json\");","lastModifiedDate":"2022-11-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"ryanlml"},"content":"        JsonSerializableSurvin dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2022-11-04"},{"lineNumber":26,"author":{"gitId":"ryanlml"},"content":"                JsonSerializableSurvin.class).get();","lastModifiedDate":"2022-11-04"},{"lineNumber":27,"author":{"gitId":"ryanlml"},"content":"        Survin survinFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"ryanlml"},"content":"        Survin typicalPersonsSurvin \u003d TypicalPersons.getTypicalSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":29,"author":{"gitId":"ryanlml"},"content":"        assertEquals(survinFromFile, typicalPersonsSurvin);","lastModifiedDate":"2022-11-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"ryanlml"},"content":"        JsonSerializableSurvin dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2022-11-04"},{"lineNumber":35,"author":{"gitId":"ryanlml"},"content":"                JsonSerializableSurvin.class).get();","lastModifiedDate":"2022-11-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"ryanlml"},"content":"        JsonSerializableSurvin dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2022-11-04"},{"lineNumber":42,"author":{"gitId":"ryanlml"},"content":"                JsonSerializableSurvin.class).get();","lastModifiedDate":"2022-11-04"},{"lineNumber":43,"author":{"gitId":"ryanlml"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableSurvin.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-11-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ryanlml":16,"-":31}},{"path":"src/test/java/seedu/address/storage/JsonSurvinStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalSurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.ReadOnlySurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.Survin;","lastModifiedDate":"2022-11-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"ryanlml"},"content":"public class JsonSurvinStorageTest {","lastModifiedDate":"2022-11-04"},{"lineNumber":23,"author":{"gitId":"ryanlml"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSurvinStorageTest\");","lastModifiedDate":"2022-11-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"ryanlml"},"content":"    public void readSurvin_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-11-04"},{"lineNumber":30,"author":{"gitId":"ryanlml"},"content":"        assertThrows(NullPointerException.class, () -\u003e readSurvin(null));","lastModifiedDate":"2022-11-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"ryanlml"},"content":"    private java.util.Optional\u003cReadOnlySurvin\u003e readSurvin(String filePath) throws Exception {","lastModifiedDate":"2022-11-04"},{"lineNumber":34,"author":{"gitId":"ryanlml"},"content":"        return new JsonSurvinStorage(Paths.get(filePath)).readSurvin(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-11-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"ryanlml"},"content":"        assertFalse(readSurvin(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-11-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"ryanlml"},"content":"        assertThrows(DataConversionException.class, () -\u003e readSurvin(\"notJsonFormatSurvin.json\"));","lastModifiedDate":"2022-11-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"ryanlml"},"content":"    public void readSurvin_invalidPersonSurvin_throwDataConversionException() {","lastModifiedDate":"2022-11-04"},{"lineNumber":55,"author":{"gitId":"ryanlml"},"content":"        assertThrows(DataConversionException.class, () -\u003e readSurvin(\"invalidPersonSurvin.json\"));","lastModifiedDate":"2022-11-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"ryanlml"},"content":"    public void readSurvin_invalidAndValidPersonSurvin_throwDataConversionException() {","lastModifiedDate":"2022-11-04"},{"lineNumber":60,"author":{"gitId":"ryanlml"},"content":"        assertThrows(DataConversionException.class, () -\u003e readSurvin(\"invalidAndValidPersonSurvin.json\"));","lastModifiedDate":"2022-11-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"ryanlml"},"content":"    public void readAndSaveSurvin_allInOrder_success() throws Exception {","lastModifiedDate":"2022-11-04"},{"lineNumber":65,"author":{"gitId":"ryanlml"},"content":"        Path filePath \u003d testFolder.resolve(\"TempSurvin.json\");","lastModifiedDate":"2022-11-04"},{"lineNumber":66,"author":{"gitId":"ryanlml"},"content":"        Survin original \u003d getTypicalSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":67,"author":{"gitId":"ryanlml"},"content":"        JsonSurvinStorage jsonSurvinStorage \u003d new JsonSurvinStorage(filePath);","lastModifiedDate":"2022-11-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"ryanlml"},"content":"        jsonSurvinStorage.saveSurvin(original, filePath);","lastModifiedDate":"2022-11-04"},{"lineNumber":71,"author":{"gitId":"ryanlml"},"content":"        ReadOnlySurvin readBack \u003d jsonSurvinStorage.readSurvin(filePath).get();","lastModifiedDate":"2022-11-04"},{"lineNumber":72,"author":{"gitId":"ryanlml"},"content":"        assertEquals(original, new Survin(readBack));","lastModifiedDate":"2022-11-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"ryanlml"},"content":"        jsonSurvinStorage.saveSurvin(original, filePath);","lastModifiedDate":"2022-11-04"},{"lineNumber":78,"author":{"gitId":"ryanlml"},"content":"        readBack \u003d jsonSurvinStorage.readSurvin(filePath).get();","lastModifiedDate":"2022-11-04"},{"lineNumber":79,"author":{"gitId":"ryanlml"},"content":"        assertEquals(original, new Survin(readBack));","lastModifiedDate":"2022-11-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"ryanlml"},"content":"        jsonSurvinStorage.saveSurvin(original); // file path not specified","lastModifiedDate":"2022-11-04"},{"lineNumber":84,"author":{"gitId":"ryanlml"},"content":"        readBack \u003d jsonSurvinStorage.readSurvin().get(); // file path not specified","lastModifiedDate":"2022-11-04"},{"lineNumber":85,"author":{"gitId":"ryanlml"},"content":"        assertEquals(original, new Survin(readBack));","lastModifiedDate":"2022-11-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"ryanlml"},"content":"    public void saveSurvin_nullSurvin_throwsNullPointerException() {","lastModifiedDate":"2022-11-04"},{"lineNumber":91,"author":{"gitId":"ryanlml"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveSurvin(null, \"SomeFile.json\"));","lastModifiedDate":"2022-11-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"ryanlml"},"content":"     * Saves {@code survin} at the specified {@code filePath}.","lastModifiedDate":"2022-11-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"ryanlml"},"content":"    private void saveSurvin(ReadOnlySurvin survin, String filePath) {","lastModifiedDate":"2022-11-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"ryanlml"},"content":"            new JsonSurvinStorage(Paths.get(filePath))","lastModifiedDate":"2022-11-04"},{"lineNumber":100,"author":{"gitId":"ryanlml"},"content":"                    .saveSurvin(survin, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-11-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"ryanlml"},"content":"    public void saveSurvin_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-11-04"},{"lineNumber":108,"author":{"gitId":"ryanlml"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveSurvin(new Survin(), null));","lastModifiedDate":"2022-11-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ryanlml":36,"-":74}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"ryanlml"},"content":"        userPrefs.setSurvinFilePath(Paths.get(\"survin.json\"));","lastModifiedDate":"2022-11-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"ryanlml":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ryanlml"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalSurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.ReadOnlySurvin;","lastModifiedDate":"2022-11-04"},{"lineNumber":15,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.Survin;","lastModifiedDate":"2022-11-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"ryanlml"},"content":"        JsonSurvinStorage survinStorage \u003d new JsonSurvinStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"ryanlml"},"content":"        storageManager \u003d new StorageManager(survinStorage, userPrefsStorage);","lastModifiedDate":"2022-11-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"ryanlml"},"content":"    public void survinReadSave() throws Exception {","lastModifiedDate":"2022-11-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"ryanlml"},"content":"         * {@link JsonSurvinStorage} class.","lastModifiedDate":"2022-11-04"},{"lineNumber":55,"author":{"gitId":"ryanlml"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonSurvinStorageTest} class.","lastModifiedDate":"2022-11-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"ryanlml"},"content":"        Survin original \u003d getTypicalSurvin();","lastModifiedDate":"2022-11-04"},{"lineNumber":58,"author":{"gitId":"ryanlml"},"content":"        storageManager.saveSurvin(original);","lastModifiedDate":"2022-11-04"},{"lineNumber":59,"author":{"gitId":"ryanlml"},"content":"        ReadOnlySurvin retrieved \u003d storageManager.readSurvin().get();","lastModifiedDate":"2022-11-04"},{"lineNumber":60,"author":{"gitId":"ryanlml"},"content":"        assertEquals(original, new Survin(retrieved));","lastModifiedDate":"2022-11-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"ryanlml"},"content":"    public void getSurvinFilePath() {","lastModifiedDate":"2022-11-04"},{"lineNumber":65,"author":{"gitId":"ryanlml"},"content":"        assertNotNull(storageManager.getSurvinFilePath());","lastModifiedDate":"2022-11-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ryanlml":14,"-":54}},{"path":"src/test/java/seedu/address/testutil/ClonePersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"NUSDG"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"NUSDG"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"NUSDG"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"NUSDG"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"NUSDG"},"content":"import seedu.address.logic.commands.CloneCommand.ClonePersonDescriptor;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"NUSDG"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"NUSDG"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"NUSDG"},"content":" * A utility class to help with building ClonePersonDescriptor objects.","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"NUSDG"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"NUSDG"},"content":"public class ClonePersonDescriptorBuilder {","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"NUSDG"},"content":"    private ClonePersonDescriptor descriptor;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"NUSDG"},"content":"    public ClonePersonDescriptorBuilder() {","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"NUSDG"},"content":"        descriptor \u003d new ClonePersonDescriptor();","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"NUSDG"},"content":"    public ClonePersonDescriptorBuilder(ClonePersonDescriptor descriptor) {","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"NUSDG"},"content":"        this.descriptor \u003d new ClonePersonDescriptor(descriptor);","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"NUSDG"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"NUSDG"},"content":"     * Returns an {@code ClonePersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"NUSDG"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"NUSDG"},"content":"    public ClonePersonDescriptorBuilder(Person person) {","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"NUSDG"},"content":"        descriptor \u003d new ClonePersonDescriptor();","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"NUSDG"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"NUSDG"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"NUSDG"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"NUSDG"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"NUSDG"},"content":"        descriptor.setGender(person.getGender());","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"NUSDG"},"content":"        descriptor.setBirthdate(person.getBirthdate());","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"NUSDG"},"content":"        descriptor.setRace(person.getRace());","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"NUSDG"},"content":"        descriptor.setReligion(person.getReligion());","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"NUSDG"},"content":"        descriptor.setSurveys(person.getSurveys());","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"NUSDG"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"NUSDG"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"NUSDG"},"content":"     * Sets the {@code Name} of the {@code ClonePersonDescriptor} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"NUSDG"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"NUSDG"},"content":"    public ClonePersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"NUSDG"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"NUSDG"},"content":"        return this;","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"NUSDG"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"NUSDG"},"content":"     * Sets the {@code Phone} of the {@code ClonePersonDescriptor} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"NUSDG"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"NUSDG"},"content":"    public ClonePersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"NUSDG"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"NUSDG"},"content":"        return this;","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"NUSDG"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"NUSDG"},"content":"     * Sets the {@code Email} of the {@code ClonePersonDescriptor} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"NUSDG"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"NUSDG"},"content":"    public ClonePersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"NUSDG"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"NUSDG"},"content":"        return this;","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"NUSDG"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"NUSDG"},"content":"     * Sets the {@code Address} of the {@code ClonePersonDescriptor} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"NUSDG"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"NUSDG"},"content":"    public ClonePersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"NUSDG"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"NUSDG"},"content":"        return this;","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"NUSDG"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"NUSDG"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code ClonePersonDescriptor}","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"NUSDG"},"content":"     * that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"NUSDG"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"NUSDG"},"content":"    public ClonePersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"NUSDG"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"NUSDG"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"NUSDG"},"content":"        return this;","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"NUSDG"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"NUSDG"},"content":"     * Parses the {@code surveys} into a {@code Set\u003cSurvey\u003e} and set it to the {@code ClonePersonDescriptor}","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"NUSDG"},"content":"     * that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"NUSDG"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"NUSDG"},"content":"    public ClonePersonDescriptorBuilder withSurveys(String... surveys) {","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"NUSDG"},"content":"        Set\u003cSurvey\u003e surveySet \u003d Stream.of(surveys).map(Survey::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"NUSDG"},"content":"        descriptor.setSurveys(surveySet);","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"NUSDG"},"content":"        return this;","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"NUSDG"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"NUSDG"},"content":"    public ClonePersonDescriptor build() {","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"NUSDG"},"content":"        return descriptor;","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"NUSDG"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"NUSDG"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"NUSDG":103}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"KeithPJX"},"content":"        descriptor.setGender(person.getGender());","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"KeithPJX"},"content":"        descriptor.setBirthdate(person.getBirthdate());","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"KeithPJX"},"content":"        descriptor.setRace(person.getRace());","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"KeithPJX"},"content":"        descriptor.setReligion(person.getReligion());","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"ryanlml"},"content":"        descriptor.setSurveys(person.getSurveys());","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"KeithPJX":4,"ryanlml":1,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Birthdate;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Race;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Religion;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"import seedu.address.model.person.Survey;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"KeithPJX"},"content":"    public static final String DEFAULT_GENDER \u003d \"female\";","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"KeithPJX"},"content":"    public static final String DEFAULT_BIRTHDATE \u003d \"1989-09-11\";","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"KeithPJX"},"content":"    public static final String DEFAULT_RACE \u003d \"Chinese\";","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"KeithPJX"},"content":"    public static final String DEFAULT_RELIGION \u003d \"Christian\";","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"KeithPJX"},"content":"    public static final String DEFAULT_SURVEY \u003d \"Environmental Survey\";","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"KeithPJX"},"content":"    private Gender gender;","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"KeithPJX"},"content":"    private Birthdate birthdate;","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"KeithPJX"},"content":"    private Race race;","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"KeithPJX"},"content":"    private Religion religion;","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"ryanlml"},"content":"    private Set\u003cSurvey\u003e surveys;","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"KeithPJX"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"KeithPJX"},"content":"        birthdate \u003d new Birthdate(DEFAULT_BIRTHDATE);","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"KeithPJX"},"content":"        race \u003d new Race(DEFAULT_RACE);","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"KeithPJX"},"content":"        religion \u003d new Religion(DEFAULT_RELIGION);","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"ryanlml"},"content":"        surveys \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"ryanlml"},"content":"        surveys.add(new Survey(DEFAULT_SURVEY));","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"KeithPJX"},"content":"        gender \u003d personToCopy.getGender();","lastModifiedDate":"2022-10-02"},{"lineNumber":71,"author":{"gitId":"KeithPJX"},"content":"        birthdate \u003d personToCopy.getBirthdate();","lastModifiedDate":"2022-10-02"},{"lineNumber":72,"author":{"gitId":"KeithPJX"},"content":"        race \u003d personToCopy.getRace();","lastModifiedDate":"2022-10-02"},{"lineNumber":73,"author":{"gitId":"KeithPJX"},"content":"        religion \u003d personToCopy.getReligion();","lastModifiedDate":"2022-10-02"},{"lineNumber":74,"author":{"gitId":"ryanlml"},"content":"        surveys \u003d new HashSet\u003c\u003e(personToCopy.getSurveys());","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-31"},{"lineNumber":95,"author":{"gitId":"KeithPJX"},"content":"     * Sets the {@code Set\u003cTag\u003e} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-31"},{"lineNumber":96,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-31"},{"lineNumber":97,"author":{"gitId":"KeithPJX"},"content":"    public PersonBuilder withTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-31"},{"lineNumber":98,"author":{"gitId":"KeithPJX"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2022-10-31"},{"lineNumber":99,"author":{"gitId":"KeithPJX"},"content":"        return this;","lastModifiedDate":"2022-10-31"},{"lineNumber":100,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-31"},{"lineNumber":101,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":126,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":127,"author":{"gitId":"KeithPJX"},"content":"     * Sets the {@code Gender} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-02"},{"lineNumber":128,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":129,"author":{"gitId":"KeithPJX"},"content":"    public PersonBuilder withGender(String gender) {","lastModifiedDate":"2022-10-02"},{"lineNumber":130,"author":{"gitId":"KeithPJX"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2022-10-02"},{"lineNumber":131,"author":{"gitId":"KeithPJX"},"content":"        return this;","lastModifiedDate":"2022-10-02"},{"lineNumber":132,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":133,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":134,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":135,"author":{"gitId":"KeithPJX"},"content":"     * Sets the {@code Birthdate} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-02"},{"lineNumber":136,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":137,"author":{"gitId":"KeithPJX"},"content":"    public PersonBuilder withBirthdate(String birthdate) {","lastModifiedDate":"2022-10-02"},{"lineNumber":138,"author":{"gitId":"KeithPJX"},"content":"        this.birthdate \u003d new Birthdate(birthdate);","lastModifiedDate":"2022-10-02"},{"lineNumber":139,"author":{"gitId":"KeithPJX"},"content":"        return this;","lastModifiedDate":"2022-10-02"},{"lineNumber":140,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":141,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":142,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":143,"author":{"gitId":"KeithPJX"},"content":"     * Sets the {@code Race} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-02"},{"lineNumber":144,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":145,"author":{"gitId":"KeithPJX"},"content":"    public PersonBuilder withRace(String race) {","lastModifiedDate":"2022-10-02"},{"lineNumber":146,"author":{"gitId":"KeithPJX"},"content":"        this.race \u003d new Race(race);","lastModifiedDate":"2022-10-02"},{"lineNumber":147,"author":{"gitId":"KeithPJX"},"content":"        return this;","lastModifiedDate":"2022-10-02"},{"lineNumber":148,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":149,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":150,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":151,"author":{"gitId":"KeithPJX"},"content":"     * Sets the {@code Religion} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-02"},{"lineNumber":152,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":153,"author":{"gitId":"KeithPJX"},"content":"    public PersonBuilder withReligion(String religion) {","lastModifiedDate":"2022-10-02"},{"lineNumber":154,"author":{"gitId":"KeithPJX"},"content":"        this.religion \u003d new Religion(religion);","lastModifiedDate":"2022-10-02"},{"lineNumber":155,"author":{"gitId":"KeithPJX"},"content":"        return this;","lastModifiedDate":"2022-10-02"},{"lineNumber":156,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":157,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":158,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":159,"author":{"gitId":"KeithPJX"},"content":"     * Sets the {@code Survey} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-02"},{"lineNumber":160,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":161,"author":{"gitId":"deepimpactmir"},"content":"    public PersonBuilder withSurvey(String survey, boolean isDone) {","lastModifiedDate":"2022-11-01"},{"lineNumber":162,"author":{"gitId":"ryanlml"},"content":"        Set\u003cSurvey\u003e surveyToAdd \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-18"},{"lineNumber":163,"author":{"gitId":"deepimpactmir"},"content":"        surveyToAdd.add(new Survey(survey, isDone));","lastModifiedDate":"2022-11-01"},{"lineNumber":164,"author":{"gitId":"ryanlml"},"content":"        this.surveys \u003d surveyToAdd;","lastModifiedDate":"2022-10-18"},{"lineNumber":165,"author":{"gitId":"KeithPJX"},"content":"        return this;","lastModifiedDate":"2022-10-02"},{"lineNumber":166,"author":{"gitId":"KeithPJX"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":167,"author":{"gitId":"KeithPJX"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":168,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":169,"author":{"gitId":"ryanlml"},"content":"     * Sets the {@code Set\u003cSurvey\u003e} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-18"},{"lineNumber":170,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":171,"author":{"gitId":"ryanlml"},"content":"    public PersonBuilder withSurveys(Set\u003cSurvey\u003e surveys) {","lastModifiedDate":"2022-10-18"},{"lineNumber":172,"author":{"gitId":"ryanlml"},"content":"        this.surveys \u003d surveys;","lastModifiedDate":"2022-10-18"},{"lineNumber":173,"author":{"gitId":"ryanlml"},"content":"        return this;","lastModifiedDate":"2022-10-18"},{"lineNumber":174,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":175,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":176,"author":{"gitId":"KeithPJX"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":177,"author":{"gitId":"KeithPJX"},"content":"     * Builds a new Person with default parameters or given parameters.","lastModifiedDate":"2022-10-03"},{"lineNumber":178,"author":{"gitId":"KeithPJX"},"content":"     * @return a Person with stated parameters","lastModifiedDate":"2022-10-03"},{"lineNumber":179,"author":{"gitId":"KeithPJX"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":181,"author":{"gitId":"KeithPJX"},"content":"        return new Person(name, phone, email, address, gender,","lastModifiedDate":"2022-10-02"},{"lineNumber":182,"author":{"gitId":"ryanlml"},"content":"                birthdate, race, religion, surveys, tags);","lastModifiedDate":"2022-10-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"KeithPJX":73,"ryanlml":15,"-":95,"deepimpactmir":2}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_BIRTHDATE;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RACE;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RELIGION;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SURVEY;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"KeithPJX"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"KeithPJX"},"content":"    private static final String DATE_FORMAT \u003d \"y-M-d\";","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"KeithPJX"},"content":"        sb.append(PREFIX_GENDER + person.getGender().gender + \" \");","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"KeithPJX"},"content":"        sb.append(PREFIX_BIRTHDATE","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"KeithPJX"},"content":"                + person.getBirthdate().birthdate.format(DateTimeFormatter.ofPattern(DATE_FORMAT)) + \" \");","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"KeithPJX"},"content":"        sb.append(PREFIX_RACE + person.getRace().race + \" \");","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"KeithPJX"},"content":"        sb.append(PREFIX_RELIGION + person.getReligion().religion + \" \");","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"ryanlml"},"content":"        person.getSurveys().stream().forEach(","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"ryanlml"},"content":"                s -\u003e sb.append(PREFIX_SURVEY + s.survey + \" \")","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"ryanlml"},"content":"        );","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"KeithPJX":12,"ryanlml":3,"-":62}},{"path":"src/test/java/seedu/address/testutil/SurvinBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanlml"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-11-04"},{"lineNumber":2,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":3,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.Survin;","lastModifiedDate":"2022-11-04"},{"lineNumber":4,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-11-04"},{"lineNumber":5,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":6,"author":{"gitId":"ryanlml"},"content":"/**","lastModifiedDate":"2022-11-04"},{"lineNumber":7,"author":{"gitId":"ryanlml"},"content":" * A utility class to help with building Survin objects.","lastModifiedDate":"2022-11-04"},{"lineNumber":8,"author":{"gitId":"ryanlml"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":9,"author":{"gitId":"ryanlml"},"content":" *     {@code Survin ab \u003d new SurvinBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-11-04"},{"lineNumber":10,"author":{"gitId":"ryanlml"},"content":" */","lastModifiedDate":"2022-11-04"},{"lineNumber":11,"author":{"gitId":"ryanlml"},"content":"public class SurvinBuilder {","lastModifiedDate":"2022-11-04"},{"lineNumber":12,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":13,"author":{"gitId":"ryanlml"},"content":"    private Survin survin;","lastModifiedDate":"2022-11-04"},{"lineNumber":14,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":15,"author":{"gitId":"ryanlml"},"content":"    public SurvinBuilder() {","lastModifiedDate":"2022-11-04"},{"lineNumber":16,"author":{"gitId":"ryanlml"},"content":"        survin \u003d new Survin();","lastModifiedDate":"2022-11-04"},{"lineNumber":17,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":18,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":19,"author":{"gitId":"ryanlml"},"content":"    public SurvinBuilder(Survin survin) {","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"ryanlml"},"content":"        this.survin \u003d survin;","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":22,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":23,"author":{"gitId":"ryanlml"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":24,"author":{"gitId":"ryanlml"},"content":"     * Adds a new {@code Person} to the {@code Survin} that we are building.","lastModifiedDate":"2022-11-04"},{"lineNumber":25,"author":{"gitId":"ryanlml"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":26,"author":{"gitId":"ryanlml"},"content":"    public SurvinBuilder withPerson(Person person) {","lastModifiedDate":"2022-11-04"},{"lineNumber":27,"author":{"gitId":"ryanlml"},"content":"        survin.addPerson(person);","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"ryanlml"},"content":"        return this;","lastModifiedDate":"2022-11-04"},{"lineNumber":29,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":30,"author":{"gitId":"ryanlml"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":31,"author":{"gitId":"ryanlml"},"content":"    public Survin build() {","lastModifiedDate":"2022-11-04"},{"lineNumber":32,"author":{"gitId":"ryanlml"},"content":"        return survin;","lastModifiedDate":"2022-11-04"},{"lineNumber":33,"author":{"gitId":"ryanlml"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":34,"author":{"gitId":"ryanlml"},"content":"}","lastModifiedDate":"2022-11-04"}],"authorContributionMap":{"ryanlml":34}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDATE_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_BIRTHDATE_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RACE_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RACE_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RELIGION_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RELIGION_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SURVEY_AMY;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"KeithPJX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SURVEY_BOB;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":27,"author":{"gitId":"ryanlml"},"content":"import seedu.address.model.Survin;","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"KeithPJX"},"content":"            .withPhone(\"94351253\").withGender(\"female\").withBirthdate(\"1998-12-28\")","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"deepimpactmir"},"content":"            .withRace(\"White American\").withReligion(\"Christian\").withSurvey(\"Environment Survey\", false)","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"KeithPJX"},"content":"            .withGender(\"male\").withBirthdate(\"1981-1-23\")","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"deepimpactmir"},"content":"            .withRace(\"African American\").withReligion(\"Christian\").withSurvey(\"Shopping Survey\", true)","lastModifiedDate":"2022-11-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"KeithPJX"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"KeithPJX"},"content":"            .withGender(\"others\").withBirthdate(\"1991-1-15\")","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"deepimpactmir"},"content":"            .withRace(\"White American\").withReligion(\"Buddhist\").withSurvey(\"Touring Survey\", false)","lastModifiedDate":"2022-11-01"},{"lineNumber":50,"author":{"gitId":"KeithPJX"},"content":"            .build();","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"KeithPJX"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"KeithPJX"},"content":"            .withGender(\"male\").withBirthdate(\"2001-11-23\")","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"deepimpactmir"},"content":"            .withRace(\"Hispanic\").withReligion(\"Christian\").withSurvey(\"Shopping Survey\", false)","lastModifiedDate":"2022-11-01"},{"lineNumber":55,"author":{"gitId":"KeithPJX"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"KeithPJX"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"KeithPJX"},"content":"            .withGender(\"female\").withBirthdate(\"1993-11-1\")","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"deepimpactmir"},"content":"            .withRace(\"White American\").withReligion(\"Free Thinker\").withSurvey(\"Touring Survey\", false)","lastModifiedDate":"2022-11-01"},{"lineNumber":60,"author":{"gitId":"KeithPJX"},"content":"            .build();","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"KeithPJX"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"KeithPJX"},"content":"            .withGender(\"female\").withBirthdate(\"1991-8-13\")","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"deepimpactmir"},"content":"            .withRace(\"White American\").withReligion(\"Christian\").withSurvey(\"Food Survey\", false)","lastModifiedDate":"2022-11-01"},{"lineNumber":65,"author":{"gitId":"KeithPJX"},"content":"            .build();","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"KeithPJX"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"KeithPJX"},"content":"            .withGender(\"male\").withBirthdate(\"1991-12-28\")","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"deepimpactmir"},"content":"            .withRace(\"White American\").withReligion(\"Christian\").withSurvey(\"Environment Survey\", false)","lastModifiedDate":"2022-11-01"},{"lineNumber":70,"author":{"gitId":"KeithPJX"},"content":"            .build();","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"KeithPJX"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withGender(VALID_GENDER_AMY)","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"KeithPJX"},"content":"            .withBirthdate(VALID_BIRTHDATE_AMY).withRace(VALID_RACE_AMY).withReligion(VALID_RELIGION_AMY)","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"deepimpactmir"},"content":"            .withSurvey(VALID_SURVEY_AMY, false).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-11-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"KeithPJX"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withGender(VALID_GENDER_BOB)","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"KeithPJX"},"content":"            .withBirthdate(VALID_BIRTHDATE_BOB).withRace(VALID_RACE_BOB).withReligion(VALID_RELIGION_BOB)","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"deepimpactmir"},"content":"            .withSurvey(VALID_SURVEY_BOB, false).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-11-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"ryanlml"},"content":"     * Returns an {@code Survin} with all the typical persons.","lastModifiedDate":"2022-11-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"ryanlml"},"content":"    public static Survin getTypicalSurvin() {","lastModifiedDate":"2022-11-04"},{"lineNumber":96,"author":{"gitId":"ryanlml"},"content":"        Survin ab \u003d new Survin();","lastModifiedDate":"2022-11-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"KeithPJX":31,"ryanlml":4,"-":62,"deepimpactmir":9}}]
