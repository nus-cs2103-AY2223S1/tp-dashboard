[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"# `CLIMods` [![Java CI](https://github.com/AY2223S1-CS2103-F14-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103-F14-1/tp/actions/workflows/gradle.yml) [![pages-build-deployment](https://github.com/AY2223S1-CS2103-F14-1/tp/actions/workflows/pages/pages-build-deployment/badge.svg)](https://github.com/AY2223S1-CS2103-F14-1/tp/actions/workflows/pages/pages-build-deployment)","lastModifiedDate":"2022-09-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103-F14-1/tp/branch/master/graph/badge.svg?token\u003dRICOOYUUM4)](https://codecov.io/gh/AY2223S1-CS2103-F14-1/tp)","lastModifiedDate":"2022-09-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":"![UI Mockup](docs/images/Ui.png)","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"`CLIMods` is a native desktop application for NUS students to explore, manage and plan academic","lastModifiedDate":"2022-09-17"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"modules that they are interested in taking. It is primarily optimised for the use via a Command Line","lastModifiedDate":"2022-09-17"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"Interface (CLI) while still providing the benefits of a Graphical User Interface (GUI). Power users","lastModifiedDate":"2022-09-17"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"of the command line/terminal will be able to plan and manage their modules much faster than doing it","lastModifiedDate":"2022-09-17"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"on [nusmods.com](https://nusmods.com).","lastModifiedDate":"2022-09-17"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"\u003e This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"-":2,"shenyih0ng":11}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"mainClassName \u003d \u0027nus.climods.Main\u0027","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"checkstyleMain {","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"    exclude(\"**/org/openapitools/client/**\")","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"    String jacksonVersion \u003d \u00272.13.0\u0027","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"zupey"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"zupey"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"zupey"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"zupey"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"zupey"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"zupey"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":71,"author":{"gitId":"shenyih0ng"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-core\u0027, version: jacksonVersion","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"shenyih0ng"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: jacksonVersion","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"shenyih0ng"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-annotations\u0027, version: jacksonVersion","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"shenyih0ng"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: jacksonVersion","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"shenyih0ng"},"content":"    implementation group: \u0027com.google.code.findbugs\u0027, name: \u0027jsr305\u0027, version: \u00273.0.2\u0027","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"shenyih0ng"},"content":"    implementation group: \u0027io.swagger\u0027, name: \u0027swagger-annotations\u0027, version: \u00271.5.22\u0027","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"shenyih0ng"},"content":"    implementation group: \u0027jakarta.annotation\u0027, name: \u0027jakarta.annotation-api\u0027, version: \u00271.3.5\u0027","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"shenyih0ng"},"content":"    implementation group: \u0027org.openapitools\u0027, name: \u0027jackson-databind-nullable\u0027, version: \u00270.2.1\u0027","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"huzaifa1712"},"content":"    implementation group: \u0027commons-cli\u0027, name: \u0027commons-cli\u0027, version: \u00271.5.0\u0027","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":89,"author":{"gitId":"shenyih0ng"},"content":"    archiveFileName \u003d \u0027climods.jar\u0027","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"huzaifa1712":1,"zupey":6,"-":69,"shenyih0ng":16}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"You can reach us at the email `climods[at]comp.nus.edu.sg`","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"huzaifa1712"},"content":"### Huzaifa Raghav","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"huzaifa1712"},"content":"\u003cimg src\u003d\"images/huzaifa1712.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"huzaifa1712"},"content":"[[github](https://github.com/huzaifa1712)]","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"huzaifa1712"},"content":"[[portfolio](team/huzaifa1712.md)]","lastModifiedDate":"2022-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"huzaifa1712"},"content":"* Role: Developer","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"huzaifa1712"},"content":"* Responsibilities: ","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"### Linus Lee","lastModifiedDate":"2022-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"\u003cimg src\u003d\"images/zupey.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"[[github](http://github.com/zupey)]","lastModifiedDate":"2022-09-21"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"[[portfolio](team/zupey.md)]","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"* Role: Developer","lastModifiedDate":"2022-09-21"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"* Responsibilities: Coder","lastModifiedDate":"2022-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"SeekSaveServe"},"content":"### Pei Cheng Yi  ","lastModifiedDate":"2022-09-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"huzaifa1712"},"content":"\u003cimg src\u003d\"images/seeksaveserve.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"SeekSaveServe"},"content":"[[github](http://github.com/SeekSaveServe)] [[portfolio](team/seeksaveserve.md)]","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"### Shen Yi Hong","lastModifiedDate":"2022-09-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"\u003cimg src\u003d\"images/shenyih0ng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"[[github](http://github.com/shenyih0ng)]","lastModifiedDate":"2022-09-20"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"[[portfolio](team/shenyih0ng.md)]","lastModifiedDate":"2022-09-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"* Responsibilities:","lastModifiedDate":"2022-09-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"sarrrdin"},"content":"### Chew Hong Jin","lastModifiedDate":"2022-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"sarrrdin"},"content":"\u003cimg src\u003d\"images/sarrrdin.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"sarrrdin"},"content":"[[github](https://github.com/sarrrdin]","lastModifiedDate":"2022-09-21"},{"lineNumber":56,"author":{"gitId":"sarrrdin"},"content":"[[portfolio](team/ChewHongJin.md)]","lastModifiedDate":"2022-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"sarrrdin"},"content":"* Responsibilities: UX","lastModifiedDate":"2022-09-21"}],"authorContributionMap":{"SeekSaveServe":2,"sarrrdin":5,"huzaifa1712":7,"zupey":6,"-":33,"shenyih0ng":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"sarrrdin"},"content":"**Product scope**","lastModifiedDate":"2022-09-29"},{"lineNumber":258,"author":{"gitId":"sarrrdin"},"content":"* Provides updated information and data based on curriculum and module schedule based on NUSMods.","lastModifiedDate":"2022-09-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"sarrrdin"},"content":"* has a plan to map, plan and organize a timetable that has over 1000 potential modules to fill up with.","lastModifiedDate":"2022-09-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"sarrrdin"},"content":"Link to Most Updated User Stories:","lastModifiedDate":"2022-09-30"},{"lineNumber":273,"author":{"gitId":"sarrrdin"},"content":"[Click here](https://github.com/orgs/AY2223S1-CS2103-F14-1/projects/2)","lastModifiedDate":"2022-09-30"},{"lineNumber":274,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":275,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"| Priority | As a …​                                                  | I want to …​                                                               | So that I can…​                                                           |","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"sarrrdin"},"content":"| -------- |----------------------------------------------------------|----------------------------------------------------------------------------|---------------------------------------------------------------------------|","lastModifiedDate":"2022-09-29"},{"lineNumber":279,"author":{"gitId":"sarrrdin"},"content":"| `* * *`  | student                                                  | see usage instructions                                                     | refer to instructions when I forget the commands                          |","lastModifiedDate":"2022-09-29"},{"lineNumber":280,"author":{"gitId":"sarrrdin"},"content":"| `* * *`  | student                                                  | add modules to my timetable                                                | edit and organize my timetable                                            |","lastModifiedDate":"2022-09-29"},{"lineNumber":281,"author":{"gitId":"sarrrdin"},"content":"| `* * *`  | NUS student who is not too proficient in CLI             | easily adapt and learn the functions and commands the application has      | use the application efficiently                                           |","lastModifiedDate":"2022-09-29"},{"lineNumber":282,"author":{"gitId":"sarrrdin"},"content":"| `* * *`  | student                                                  | delete a module                                                            | remove modules that I no longer need                                      |","lastModifiedDate":"2022-09-29"},{"lineNumber":283,"author":{"gitId":"sarrrdin"},"content":"| `* * *`  | student                                                  | search a module by name                                                    | locate details of the module without having to go through the entire list |","lastModifiedDate":"2022-09-29"},{"lineNumber":284,"author":{"gitId":"sarrrdin"},"content":"| `* * *`  | student                                                  | view pre-requisites for a class, and what class is a pre-requisite         | plan my studies appropriately                                             |","lastModifiedDate":"2022-09-29"},{"lineNumber":285,"author":{"gitId":"sarrrdin"},"content":"| `* * *`  | student                                                  | search for and add classes from NUSMods to my schedule                     | have the most up to date information on my schedule                       |","lastModifiedDate":"2022-09-29"},{"lineNumber":286,"author":{"gitId":"sarrrdin"},"content":"| `* * *`  | student interested in CLI apps                           | have most/all key features to be accessible by just the keyboard           | harness the full potential of CLI apps                                    |","lastModifiedDate":"2022-09-29"},{"lineNumber":287,"author":{"gitId":"sarrrdin"},"content":"| `* * *`  | forgetful student                                        | easily access my weekly/daily schedule (time, venue and details of lesson) | attend my lessons punctually                                              |","lastModifiedDate":"2022-09-29"},{"lineNumber":288,"author":{"gitId":"sarrrdin"},"content":"| `* * *`  | student that work in areas with poor internet connection | access the features in CLIMods                                             | still use CLIMods                                                         |","lastModifiedDate":"2022-09-29"},{"lineNumber":289,"author":{"gitId":"sarrrdin"},"content":"| `* * *`  | student (non freshman)                                   | track and add modules I have taken                                         | keep track of my progress in University                                   |","lastModifiedDate":"2022-09-29"},{"lineNumber":290,"author":{"gitId":"sarrrdin"},"content":"| `* * *`  | student                                                  | know what modules are offered in NUS                                       | find modules to do to fulfill my graduation requirement                   |","lastModifiedDate":"2022-09-29"},{"lineNumber":291,"author":{"gitId":"sarrrdin"},"content":"| `* *`    | potential user exploring CLIMods                         | have a tutorial or detailed documentation on features of app               | easily adapt and use the app proficiently                                 |","lastModifiedDate":"2022-09-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"sarrrdin"},"content":"(For all use cases below, the **System** is the `CLIMods` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-30"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"sarrrdin"},"content":"**Use case: Find a module**","lastModifiedDate":"2022-09-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"sarrrdin"},"content":"1.  User requests to find a module","lastModifiedDate":"2022-09-29"},{"lineNumber":304,"author":{"gitId":"sarrrdin"},"content":"2.  CLIMods requests for details of the module to find","lastModifiedDate":"2022-09-30"},{"lineNumber":305,"author":{"gitId":"sarrrdin"},"content":"3.  User enters the requested details","lastModifiedDate":"2022-09-29"},{"lineNumber":306,"author":{"gitId":"sarrrdin"},"content":"4.  CLIMods finds and display details of the module","lastModifiedDate":"2022-09-30"},{"lineNumber":307,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":308,"author":{"gitId":"sarrrdin"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":309,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":310,"author":{"gitId":"sarrrdin"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":311,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":312,"author":{"gitId":"sarrrdin"},"content":"* 3a. The given module request is invalid.","lastModifiedDate":"2022-09-29"},{"lineNumber":313,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":314,"author":{"gitId":"sarrrdin"},"content":"    * 3a1. CLIMods shows an error message where module does not exist.","lastModifiedDate":"2022-09-30"},{"lineNumber":315,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":316,"author":{"gitId":"sarrrdin"},"content":"* 3b. The user\u0027s command is invalid.","lastModifiedDate":"2022-09-29"},{"lineNumber":317,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":318,"author":{"gitId":"sarrrdin"},"content":"    * 3a1. CLIMods shows an error message where command is non-existent.","lastModifiedDate":"2022-09-30"},{"lineNumber":319,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":320,"author":{"gitId":"sarrrdin"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":322,"author":{"gitId":"sarrrdin"},"content":"**Use case: Add a module**","lastModifiedDate":"2022-09-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":326,"author":{"gitId":"sarrrdin"},"content":"1.  User requests to add a module","lastModifiedDate":"2022-09-29"},{"lineNumber":327,"author":{"gitId":"sarrrdin"},"content":"2.  CLIMods requests for details of the module to add","lastModifiedDate":"2022-09-30"},{"lineNumber":328,"author":{"gitId":"sarrrdin"},"content":"3.  User enters the requested details","lastModifiedDate":"2022-09-29"},{"lineNumber":329,"author":{"gitId":"sarrrdin"},"content":"4.  CLIMods adds the module","lastModifiedDate":"2022-09-30"},{"lineNumber":330,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":331,"author":{"gitId":"sarrrdin"},"content":"    Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":332,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":333,"author":{"gitId":"sarrrdin"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":334,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":335,"author":{"gitId":"sarrrdin"},"content":"* 3a. The given module request is invalid.","lastModifiedDate":"2022-09-29"},{"lineNumber":336,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":337,"author":{"gitId":"sarrrdin"},"content":"    * 3a1. CLIMods shows an error message where module does not exist.","lastModifiedDate":"2022-09-30"},{"lineNumber":338,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":339,"author":{"gitId":"sarrrdin"},"content":"* 3b. The user\u0027s command is invalid.","lastModifiedDate":"2022-09-29"},{"lineNumber":340,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":341,"author":{"gitId":"sarrrdin"},"content":"    * 3a1. CLIMods shows an error message where command is non-existent.","lastModifiedDate":"2022-09-30"},{"lineNumber":342,"author":{"gitId":"sarrrdin"},"content":"  ","lastModifiedDate":"2022-09-29"},{"lineNumber":343,"author":{"gitId":"sarrrdin"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-29"},{"lineNumber":344,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":345,"author":{"gitId":"sarrrdin"},"content":"**Use case: Delete a module**","lastModifiedDate":"2022-09-29"},{"lineNumber":346,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":347,"author":{"gitId":"sarrrdin"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":348,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":349,"author":{"gitId":"sarrrdin"},"content":"1.  User requests to list modules","lastModifiedDate":"2022-09-29"},{"lineNumber":350,"author":{"gitId":"sarrrdin"},"content":"2.  CLIMods shows a list of modules","lastModifiedDate":"2022-09-30"},{"lineNumber":351,"author":{"gitId":"sarrrdin"},"content":"3.  User requests to delete a specific module in the list","lastModifiedDate":"2022-09-29"},{"lineNumber":352,"author":{"gitId":"sarrrdin"},"content":"4.  CLIMods deletes the module","lastModifiedDate":"2022-09-30"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"sarrrdin"},"content":"* 3a. The given name is invalid.","lastModifiedDate":"2022-09-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"sarrrdin"},"content":"    * 3a1. CLIMods shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"sarrrdin"},"content":"2.  Should be able to hold up to 1000 modules without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-09-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"sarrrdin"},"content":"* **Student**: The person who uses the app","lastModifiedDate":"2022-09-29"},{"lineNumber":379,"author":{"gitId":"sarrrdin"},"content":"* **Module(s)**: The modules/class to be taken by the students","lastModifiedDate":"2022-09-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"sarrrdin"},"content":"*{More to be added}*","lastModifiedDate":"2022-09-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"sarrrdin":74,"-":360}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":"layout: page ","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"`CLIMods` is a native desktop application for NUS students to explore, manage and plan academic","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"modules that they are interested in taking. It is primarily optimised for the use via a Command Line","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"Interface (CLI) while still providing the benefits of a Graphical User Interface (GUI). Power users","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"of the command line/terminal will be able to plan and manage their modules much faster than doing it","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"on [nusmods.com](https://www.nusmods.com).","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"* Table of Contents ","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"2. Download the latest `climods.jar`","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"   from [here](https://github.com/AY2223S1-CS2103-F14-1/tp/releases).","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your `CLIMods`.","lastModifiedDate":"2022-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few","lastModifiedDate":"2022-09-26"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"   seconds.\u003cbr\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"   pressing Enter will open the help window.","lastModifiedDate":"2022-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-09-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"### User Manual: `help`","lastModifiedDate":"2022-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"Format: `help [COMMAND-NAME]`","lastModifiedDate":"2022-09-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"Optional Arguments:","lastModifiedDate":"2022-09-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"- `COMMAND-NAME`","lastModifiedDate":"2022-09-26"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"    - If not supplied, `help` returns the list of all commands available","lastModifiedDate":"2022-09-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"Provides the user manual for the given command and an explanation on the associated faculty/module","lastModifiedDate":"2022-09-26"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"prefix and optional arguments.","lastModifiedDate":"2022-09-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"### Listing modules: `ls`","lastModifiedDate":"2022-09-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"Format: `ls [FACULTY-PREFIX] [--user]`","lastModifiedDate":"2022-09-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"Optional Arguments:","lastModifiedDate":"2022-09-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"- `FACULTY-PREFIX`","lastModifiedDate":"2022-09-26"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"  - e.g. `CS`, `CEG`","lastModifiedDate":"2022-09-26"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"- `--user`","lastModifiedDate":"2022-09-26"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"  - A flag that narrows the list of modules to user\u0027s own list of chosen modules","lastModifiedDate":"2022-09-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"Shows the entire list of modules offered by NUS with the option to also filter it by faculty (via","lastModifiedDate":"2022-09-26"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"module prefix e.g. CS, CEG).","lastModifiedDate":"2022-09-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"### Searching for modules: `find`","lastModifiedDate":"2022-09-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2022-09-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"shenyih0ng"},"content":"Required Arguments:","lastModifiedDate":"2022-09-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"shenyih0ng"},"content":"- `KEYWORD`","lastModifiedDate":"2022-09-26"},{"lineNumber":72,"author":{"gitId":"shenyih0ng"},"content":"  - Any keyword to search against the list of modules","lastModifiedDate":"2022-09-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"shenyih0ng"},"content":"Search for a (list of) module in the entire list of modules offered by NUS.","lastModifiedDate":"2022-09-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"shenyih0ng"},"content":"### View module details: `view`","lastModifiedDate":"2022-09-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"shenyih0ng"},"content":"Format: `view MODULE-CODE`","lastModifiedDate":"2022-09-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"shenyih0ng"},"content":"Required Arguments:","lastModifiedDate":"2022-09-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"shenyih0ng"},"content":"- `MODULE-CODE`","lastModifiedDate":"2022-09-26"},{"lineNumber":83,"author":{"gitId":"shenyih0ng"},"content":"  - e.g. `CS2103`","lastModifiedDate":"2022-09-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"shenyih0ng"},"content":"View full details (e.g. description, workload) of a module via its module code.","lastModifiedDate":"2022-09-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"shenyih0ng"},"content":"### Add modules to user list: `add`","lastModifiedDate":"2022-09-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"shenyih0ng"},"content":"Format: `add MODULE-CODE`","lastModifiedDate":"2022-09-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"shenyih0ng"},"content":"Required Arguments:","lastModifiedDate":"2022-09-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"shenyih0ng"},"content":"- `MODULE-CODE`","lastModifiedDate":"2022-09-26"},{"lineNumber":94,"author":{"gitId":"shenyih0ng"},"content":"    - e.g. `CS2103`","lastModifiedDate":"2022-09-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"shenyih0ng"},"content":"Add a module to the user\u0027s own list of modules.","lastModifiedDate":"2022-09-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"shenyih0ng"},"content":"### Delete a module from user list: `rm`","lastModifiedDate":"2022-09-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"shenyih0ng"},"content":"Format: `rm MODULE-CODE`","lastModifiedDate":"2022-09-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"shenyih0ng"},"content":"Required Arguments:","lastModifiedDate":"2022-09-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"shenyih0ng"},"content":"- `MODULE-CODE`","lastModifiedDate":"2022-09-26"},{"lineNumber":105,"author":{"gitId":"shenyih0ng"},"content":"    - e.g. `CS2103`","lastModifiedDate":"2022-09-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"shenyih0ng"},"content":"Delete a module to the user\u0027s own list of modules.","lastModifiedDate":"2022-09-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"### Exiting the program: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"shenyih0ng"},"content":"Exits the program","lastModifiedDate":"2022-09-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"shenyih0ng"},"content":"**help** | `help [COMMAND-NAME]`\u003cbr\u003e e.g. `help find`","lastModifiedDate":"2022-09-26"},{"lineNumber":122,"author":{"gitId":"shenyih0ng"},"content":"**ls** | `ls [FACULTY-PREFIX] [--user]`\u003cbr\u003e e.g. `ls`, `ls CS`, `ls MA --user`","lastModifiedDate":"2022-09-26"},{"lineNumber":123,"author":{"gitId":"shenyih0ng"},"content":"**find** | `find KEYWORD`\u003cbr\u003e e.g. `find compilers`","lastModifiedDate":"2022-09-26"},{"lineNumber":124,"author":{"gitId":"shenyih0ng"},"content":"**view** | `view MODULE-CODE`\u003cbr\u003e e.g. `view CS2103`","lastModifiedDate":"2022-09-26"},{"lineNumber":125,"author":{"gitId":"shenyih0ng"},"content":"**add** | `add MODULE-CODE`\u003cbr\u003e e.g. `add CS2103`","lastModifiedDate":"2022-09-26"},{"lineNumber":126,"author":{"gitId":"shenyih0ng"},"content":"**rm** | `rm MODULE-CODE`\u003cbr\u003e e.g. `rm CS2103`","lastModifiedDate":"2022-09-26"},{"lineNumber":127,"author":{"gitId":"shenyih0ng"},"content":"**exit** | `exit`","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"-":64,"shenyih0ng":63}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"shenyih0ng"},"content":"    content: \"CLIMods\";","lastModifiedDate":"2022-09-25"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"shenyih0ng":1}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"title: CLIMods","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103-F14-1/tp/branch/master/graph/badge.svg?token\u003dRICOOYUUM4)](https://codecov.io/gh/AY2223S1-CS2103-F14-1/tp)","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"[![Java CI](https://github.com/AY2223S1-CS2103-F14-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103-F14-1/tp/actions/workflows/gradle.yml) ","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"[![pages-build-deployment](https://github.com/AY2223S1-CS2103-F14-1/tp/actions/workflows/pages/pages-build-deployment/badge.svg)](https://github.com/AY2223S1-CS2103-F14-1/tp/actions/workflows/pages/pages-build-deployment)","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"**`CLIMods` is a desktop application for exploring and managing your NUS academic modules.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"* If you are interested in using `CLIMods`, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"* If you are interested about developing `CLIMods`, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"-":8,"shenyih0ng":7}},{"path":"docs/team/huzaifa1712.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"huzaifa1712"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"huzaifa1712"},"content":"layout: page","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"huzaifa1712"},"content":"title: Huzaifa Raghav\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"huzaifa1712"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"huzaifa1712"},"content":"### Project: `CLIMods`","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"huzaifa1712"},"content":"`CLIMods` is a native desktop application for NUS students to explore, manage and plan academic","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"huzaifa1712"},"content":"modules that they are interested in taking. Power users of the command line/terminal will be able to","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"huzaifa1712"},"content":"plan and manage their modules much faster than doing it on [nusmods.com](https://nusmods.com).","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"huzaifa1712"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"huzaifa1712"},"content":"_To be added soon_","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"huzaifa1712":14}},{"path":"docs/team/sarrrdin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sarrrdin"},"content":"---","lastModifiedDate":"2022-09-21"},{"lineNumber":2,"author":{"gitId":"sarrrdin"},"content":"layout: page","lastModifiedDate":"2022-09-21"},{"lineNumber":3,"author":{"gitId":"sarrrdin"},"content":"title: Chew Hong Jin\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-21"},{"lineNumber":4,"author":{"gitId":"sarrrdin"},"content":"---","lastModifiedDate":"2022-09-21"},{"lineNumber":5,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":6,"author":{"gitId":"sarrrdin"},"content":"### Project: `CLIMods`","lastModifiedDate":"2022-09-21"},{"lineNumber":7,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":8,"author":{"gitId":"sarrrdin"},"content":"`CLIMods` is a desktop application that allows students to plan out their timetable with the use of a Command Line","lastModifiedDate":"2022-09-21"},{"lineNumber":9,"author":{"gitId":"sarrrdin"},"content":"Interface. `CLIMods` allows users to manage their modules much faster than doing it on the common website","lastModifiedDate":"2022-09-21"},{"lineNumber":10,"author":{"gitId":"sarrrdin"},"content":"that most NUS students use [nusmods.com](https://nusmods.com).","lastModifiedDate":"2022-09-21"},{"lineNumber":11,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":12,"author":{"gitId":"sarrrdin"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-21"}],"authorContributionMap":{"sarrrdin":12}},{"path":"docs/team/seeksaveserve.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SeekSaveServe"},"content":"---","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"SeekSaveServe"},"content":"layout: page","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"SeekSaveServe"},"content":"title: Pei Cheng Yi\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"SeekSaveServe"},"content":"---","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"SeekSaveServe"},"content":"### Project: CLIMods","lastModifiedDate":"2022-10-01"},{"lineNumber":7,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":9,"author":{"gitId":"SeekSaveServe"},"content":"`CLIMods` is a native desktop application for NUS students to explore, manage and plan academic","lastModifiedDate":"2022-10-01"},{"lineNumber":10,"author":{"gitId":"SeekSaveServe"},"content":"modules that they are interested in taking. Power users of the command line/terminal will be able to","lastModifiedDate":"2022-10-01"},{"lineNumber":11,"author":{"gitId":"SeekSaveServe"},"content":"plan and manage their modules much faster than doing it on [nusmods.com](https://nusmods.com).","lastModifiedDate":"2022-10-01"},{"lineNumber":12,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"SeekSaveServe"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":15,"author":{"gitId":"SeekSaveServe"},"content":"_To be updated soon_","lastModifiedDate":"2022-10-01"},{"lineNumber":16,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":17,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":18,"author":{"gitId":"SeekSaveServe"},"content":"* **New Feature**: ","lastModifiedDate":"2022-10-01"},{"lineNumber":19,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":20,"author":{"gitId":"SeekSaveServe"},"content":"  * What it does: ","lastModifiedDate":"2022-10-01"},{"lineNumber":21,"author":{"gitId":"SeekSaveServe"},"content":"  * Justification: ","lastModifiedDate":"2022-10-01"},{"lineNumber":22,"author":{"gitId":"SeekSaveServe"},"content":"  * Highlights:","lastModifiedDate":"2022-10-01"},{"lineNumber":23,"author":{"gitId":"SeekSaveServe"},"content":"  * Credits: ","lastModifiedDate":"2022-10-01"},{"lineNumber":24,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":25,"author":{"gitId":"SeekSaveServe"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2022-09-20"},{"lineNumber":26,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":27,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":28,"author":{"gitId":"SeekSaveServe"},"content":"* **Project management**:","lastModifiedDate":"2022-09-20"},{"lineNumber":29,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":30,"author":{"gitId":"SeekSaveServe"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2022-09-20"},{"lineNumber":31,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":32,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":33,"author":{"gitId":"SeekSaveServe"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-20"},{"lineNumber":34,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":35,"author":{"gitId":"SeekSaveServe"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2022-09-20"},{"lineNumber":36,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":37,"author":{"gitId":"SeekSaveServe"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2022-09-20"},{"lineNumber":38,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":39,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":40,"author":{"gitId":"SeekSaveServe"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-20"},{"lineNumber":41,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":42,"author":{"gitId":"SeekSaveServe"},"content":"  * User Guide:","lastModifiedDate":"2022-09-20"},{"lineNumber":43,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":44,"author":{"gitId":"SeekSaveServe"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2022-09-20"},{"lineNumber":45,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":46,"author":{"gitId":"SeekSaveServe"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2022-09-20"},{"lineNumber":47,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":48,"author":{"gitId":"SeekSaveServe"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-20"},{"lineNumber":49,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":50,"author":{"gitId":"SeekSaveServe"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-09-20"},{"lineNumber":51,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":52,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":53,"author":{"gitId":"SeekSaveServe"},"content":"* **Community**:","lastModifiedDate":"2022-09-20"},{"lineNumber":54,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":55,"author":{"gitId":"SeekSaveServe"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2022-09-20"},{"lineNumber":56,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":57,"author":{"gitId":"SeekSaveServe"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2022-09-20"},{"lineNumber":58,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":59,"author":{"gitId":"SeekSaveServe"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2022-09-20"},{"lineNumber":60,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":61,"author":{"gitId":"SeekSaveServe"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2022-09-20"},{"lineNumber":62,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":63,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":64,"author":{"gitId":"SeekSaveServe"},"content":"* **Tools**:","lastModifiedDate":"2022-09-20"},{"lineNumber":65,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":66,"author":{"gitId":"SeekSaveServe"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2022-09-20"},{"lineNumber":67,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":68,"author":{"gitId":"SeekSaveServe"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2022-09-20"},{"lineNumber":69,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":70,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-01"},{"lineNumber":71,"author":{"gitId":"SeekSaveServe"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"SeekSaveServe":71}},{"path":"docs/team/shenyih0ng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"---","lastModifiedDate":"2022-09-20"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":"layout: page","lastModifiedDate":"2022-09-20"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"title: Shen Yi Hong\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-20"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"---","lastModifiedDate":"2022-09-20"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"### Project: `CLIMods`","lastModifiedDate":"2022-09-20"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"`CLIMods` is a native desktop application for NUS students to explore, manage and plan academic","lastModifiedDate":"2022-09-20"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"modules that they are interested in taking. Power users of the command line/terminal will be able to","lastModifiedDate":"2022-09-20"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"plan and manage their modules much faster than doing it on [nusmods.com](https://nusmods.com).","lastModifiedDate":"2022-09-20"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-20"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-09-20"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"_To be added soon_","lastModifiedDate":"2022-09-20"}],"authorContributionMap":{"shenyih0ng":14}},{"path":"docs/team/zupey.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"---","lastModifiedDate":"2022-09-21"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"layout: page","lastModifiedDate":"2022-09-21"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"title: Linus Lee\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-21"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"---","lastModifiedDate":"2022-09-21"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"### Project: `CLIMods`","lastModifiedDate":"2022-09-21"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"`CLIMods` is a native desktop application for NUS students to explore, manage and plan academic","lastModifiedDate":"2022-09-21"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":"modules that they are interested in taking. Power users of the command line/terminal will be able to","lastModifiedDate":"2022-09-21"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"plan and manage their modules much faster than doing it on [nusmods.com](https://nusmods.com).","lastModifiedDate":"2022-09-21"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-21"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-09-21"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"_To be added soon_","lastModifiedDate":"2022-09-21"}],"authorContributionMap":{"zupey":14}},{"path":"src/main/java/nus/climods/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.core.LogsCenter;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.util.FileUtil;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"        return configPath;","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"-":53,"shenyih0ng":12}},{"path":"src/main/java/nus/climods/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":" * The main entry point to the application.","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * This is a workaround for the following error when MainApp is made the entry point of the application:","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":" * Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":" * The reason is that MainApp extends Application. In that case, the LauncherHelper will check for the javafx.graphics","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":" * module to be present as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t find the","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":" * javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application to be the entry point of the application, we","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":" * avoid this issue.","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"public class Main {","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"shenyih0ng":23}},{"path":"src/main/java/nus/climods/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.core.Config;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.core.LogsCenter;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.core.Version;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.util.ConfigUtil;","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.util.StringUtil;","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.Logic;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.LogicManager;","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.Model;","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.ModelManager;","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.UserPrefs;","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.module.ModuleList;","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.module.ReadOnlyModuleList;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.model.module.UniqueUserModuleList;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.storage.Storage;","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.storage.StorageManager;","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.storage.UserPrefsStorage;","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.storage.module.JsonModuleListStorage;","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.storage.module.ModuleListStorage;","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.storage.module.user.JsonUserModuleListStorage;","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.storage.module.user.UserModuleListStorage;","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.ui.Ui;","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.ui.UiManager;","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing CliMods ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"        // TODO Change userPref file path getters","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"        UserModuleListStorage userModuleListStorage \u003d new JsonUserModuleListStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"        ModuleListStorage moduleListStorage \u003d new JsonModuleListStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"        storage \u003d new StorageManager(moduleListStorage, userModuleListStorage, userPrefsStorage);","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"shenyih0ng"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e The","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"shenyih0ng"},"content":"     * data from the sample address book will be used instead if {@code storage}\u0027s address book is not found, or an","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"shenyih0ng"},"content":"     * empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":80,"author":{"gitId":"shenyih0ng"},"content":"        Optional\u003cReadOnlyModuleList\u003e moduleListOptional;","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"shenyih0ng"},"content":"        ReadOnlyModuleList initialModuleList;","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"huzaifa1712"},"content":"        // TODO: load from storage","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"huzaifa1712"},"content":"        UniqueUserModuleList initialUserModuleList \u003d new UniqueUserModuleList();","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"shenyih0ng"},"content":"        String academicYear \u003d userPrefs.getAcademicYear();","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"shenyih0ng"},"content":"            moduleListOptional \u003d storage.readModuleList(academicYear);","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"shenyih0ng"},"content":"            if (moduleListOptional.isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"shenyih0ng"},"content":"                logger.info(\"Data file not found!\");","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"shenyih0ng"},"content":"            initialModuleList \u003d moduleListOptional.orElseGet(() -\u003e new ModuleList(academicYear));","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"shenyih0ng"},"content":"            logger.warning(\"Data file not in the correct format!\");","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"shenyih0ng"},"content":"            initialModuleList \u003d new ModuleList(academicYear);","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"huzaifa1712"},"content":"        return new ModelManager(initialModuleList, initialUserModuleList, userPrefs);","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"shenyih0ng"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e The default file path {@code","lastModifiedDate":"2022-10-07"},{"lineNumber":107,"author":{"gitId":"shenyih0ng"},"content":"     * Config#DEFAULT_CONFIG_FILE} will be used instead if {@code configFilePath} is null.","lastModifiedDate":"2022-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"shenyih0ng"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path, or a new {@code UserPrefs}","lastModifiedDate":"2022-10-07"},{"lineNumber":142,"author":{"gitId":"shenyih0ng"},"content":"     * with default configuration if errors occur when reading from the file.","lastModifiedDate":"2022-10-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"shenyih0ng"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping CliMods ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"huzaifa1712":6,"-":132,"shenyih0ng":48}},{"path":"src/main/java/nus/climods/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.commons.core;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"            \u0026\u0026 Objects.equals(userPrefsFilePath.toAbsolutePath(), o.userPrefsFilePath.toAbsolutePath());","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":61,"shenyih0ng":2}},{"path":"src/main/java/nus/climods/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.commons.core;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * A Serializable class that contains the GUI settings. Guarantees: immutable.","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":76,"shenyih0ng":2}},{"path":"src/main/java/nus/climods/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.commons.core;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":" * Configures and manages loggers and handlers, including their logging level Named {@link Logger}s can be obtained from","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":" * this class\u003cbr\u003e These loggers have been configured to output messages to the console and a {@code .log} file by","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":" * default, at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log file","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":" * reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"     * Initializes with a custom log level (specified in the {@code config} object) Loggers obtained *AFTER* this","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"     * initialization will have their logging level changed\u003cbr\u003e Logging levels for existing loggers will only be updated","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"     * if the logger with the same name is requested again from the LogsCenter.","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"shenyih0ng"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e Creates {@code fileHandler} if it is null.","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":95,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":97,"shenyih0ng":13}},{"path":"src/main/java/nus/climods/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.commons.core;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"    public static final String MESSAGE_MODULES_LISTED_OVERVIEW \u003d \"%1$d modules listed!\";","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"    public static final String MESSAGE_SHOW_HELP \u003d \"Opened help window.\";","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zupey":1,"-":11,"shenyih0ng":2}},{"path":"src/main/java/nus/climods/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.commons.core;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"    public int getMajor() {","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"        return major;","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"    public int getMinor() {","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"        return minor;","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"    public int getPatch() {","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"        return patch;","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"        return isEarlyAccess;","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":101,"shenyih0ng":16}},{"path":"src/main/java/nus/climods/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.commons.core.index;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what base","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * the other component is using for its index. However, after receiving the {@code Index}, that component can convert it","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":" * back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or {@link Index#fromOneBased(int)}.","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"    public int getZeroBased() {","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"    public int getOneBased() {","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":39,"shenyih0ng":15}},{"path":"src/main/java/nus/climods/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.commons.exceptions;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":10,"shenyih0ng":2}},{"path":"src/main/java/nus/climods/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.commons.exceptions;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @param cause   of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"shenyih0ng":2}},{"path":"src/main/java/nus/climods/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.commons.util;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.MainApp;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":40,"shenyih0ng":2}},{"path":"src/main/java/nus/climods/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.commons.util;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"     * @see #requireAllNonNull(Collection)","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":33,"shenyih0ng":4}},{"path":"src/main/java/nus/climods/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.commons.util;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.core.Config;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":20,"shenyih0ng":3}},{"path":"src/main/java/nus/climods/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.commons.util;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)}, otherwise","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"     * returns false.","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"shenyih0ng"},"content":"     * Writes given string to a file. Will create the file if it does not exist yet.","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":78,"shenyih0ng":6}},{"path":"src/main/java/nus/climods/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.commons.util;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.core.LogsCenter;","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found. If any","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"     * values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath                   cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"shenyih0ng"},"content":"     * Saves the Json object to the specified file. Overwrites existing file if it exists, creates a new file if it","lastModifiedDate":"2022-10-07"},{"lineNumber":82,"author":{"gitId":"shenyih0ng"},"content":"     * doesn\u0027t.","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e      The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":135,"shenyih0ng":11}},{"path":"src/main/java/nus/climods/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.commons.util;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"     * Returns true if the {@code sentence} contains the {@code word}. Ignores case, but a full word match is required.","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param word     cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"        AppUtil.checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"        AppUtil.checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE}","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"     * \u003cbr\u003e Will return false for any other non-null string input e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \"","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"     * (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":58,"shenyih0ng":9}},{"path":"src/main/java/nus/climods/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.logic;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.core.GuiSettings;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.commands.CommandResult;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.module.ReadOnlyModuleList;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.model.module.UserModule;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"    ReadOnlyModuleList getModuleList();","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"huzaifa1712"},"content":"    ObservableList\u003cUserModule\u003e getFilteredUserModuleList();","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"    ObservableList\u003cModule\u003e getFilteredModuleList();","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"SeekSaveServe":1,"huzaifa1712":2,"-":25,"shenyih0ng":11}},{"path":"src/main/java/nus/climods/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.logic;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.core.GuiSettings;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.core.LogsCenter;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.commands.Command;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.commands.CommandResult;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.parser.CliModsParser;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.Model;","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.module.ReadOnlyModuleList;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.model.module.UserModule;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.storage.Storage;","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"        logger.info(\"[User Command] \" + commandText);","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"        Command command \u003d CliModsParser.parseCommand(commandText);","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"    public ReadOnlyModuleList getModuleList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"        return model.getModuleList();","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"    public ObservableList\u003cModule\u003e getFilteredModuleList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"        return model.getFilteredModuleList();","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"huzaifa1712"},"content":"    public ObservableList\u003cUserModule\u003e getFilteredUserModuleList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"        // TODO Add implementation for user module list","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"huzaifa1712"},"content":"        return model.getFilteredUserModuleList();","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"sarrrdin":1,"huzaifa1712":3,"-":49,"shenyih0ng":22}},{"path":"src/main/java/nus/climods/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huzaifa1712"},"content":"package nus.climods.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"huzaifa1712"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.model.module.UserModule;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"huzaifa1712"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"huzaifa1712"},"content":" * Adds a person to the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"huzaifa1712"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"huzaifa1712"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"huzaifa1712"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"huzaifa1712"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \u003cModule Code\u003e : Adds a module to module record. \";","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"huzaifa1712"},"content":"    /*","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"huzaifa1712"},"content":"        + \"Parameters: \"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"huzaifa1712"},"content":"        + CliSyntax.PREFIX_CODE + \"CODE \"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"huzaifa1712"},"content":"        + CliSyntax.PREFIX_TUTORIAL + \"TUTORIAL \"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"huzaifa1712"},"content":"        + \"[\" + CliSyntax.PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"huzaifa1712"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"huzaifa1712"},"content":"        + CliSyntax.PREFIX_CODE + \"CS2103 \"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"huzaifa1712"},"content":"        + CliSyntax.PREFIX_TUTORIAL + \"Monday 2pm \"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"huzaifa1712"},"content":"        + CliSyntax.PREFIX_TAG + \"4 MC\";","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"huzaifa1712"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"huzaifa1712"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New module added: %1$s\";","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"huzaifa1712"},"content":"    public static final String MESSAGE_DUPLICATE_MODULE \u003d \"This module already exists in your list of modules\";","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"huzaifa1712"},"content":"    private final String toAdd;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"huzaifa1712"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"huzaifa1712"},"content":"     * Creates an AddCommand to add the specified {@code Module}","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"huzaifa1712"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"huzaifa1712"},"content":"    public AddCommand(String moduleCode) {","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"huzaifa1712"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"huzaifa1712"},"content":"        toAdd \u003d moduleCode;","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"huzaifa1712"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"huzaifa1712"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"huzaifa1712"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"huzaifa1712"},"content":"        UserModule moduleToAdd \u003d new UserModule(toAdd, model);","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"huzaifa1712"},"content":"        if (model.hasUserModule(moduleToAdd)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"huzaifa1712"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MODULE);","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"huzaifa1712"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"huzaifa1712"},"content":"        model.addUserModule(moduleToAdd);","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"huzaifa1712"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"huzaifa1712"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"huzaifa1712"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"huzaifa1712"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"huzaifa1712"},"content":"            || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"huzaifa1712"},"content":"            \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"huzaifa1712"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"huzaifa1712":60}},{"path":"src/main/java/nus/climods/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.logic.commands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.Model;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":17,"shenyih0ng":3}},{"path":"src/main/java/nus/climods/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.logic.commands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"     * Help information should be shown to the user.","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"     * The application should exit.","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser}, and other fields set to their","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"     * default value.","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":66,"shenyih0ng":9}},{"path":"src/main/java/nus/climods/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huzaifa1712"},"content":"package nus.climods.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"huzaifa1712"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.model.module.UserModule;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"huzaifa1712"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"huzaifa1712"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"huzaifa1712"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"huzaifa1712"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"huzaifa1712"},"content":"    public static final String COMMAND_WORD \u003d \"rm\";","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"huzaifa1712"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"huzaifa1712"},"content":"        + \" \u003cModule Code\u003e : Deletes the Module as indicated by the user. \";","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"huzaifa1712"},"content":"    public static final String MESSAGE_DELETE_MODULE_SUCCESS \u003d \"Deleted Module: %1$s\";","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"huzaifa1712"},"content":"    public static final String MESSAGE_DELETE_MODULE_FAILED \u003d \"Module does not exist in your modules: %1$s\";","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"huzaifa1712"},"content":"    private final String targetCode;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"huzaifa1712"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"huzaifa1712"},"content":"     * Creates a DeleteCommand with the given UserModule","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"huzaifa1712"},"content":"     * @param target UserModule to delete","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"huzaifa1712"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"huzaifa1712"},"content":"    public DeleteCommand(String targetCode) {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"huzaifa1712"},"content":"        requireNonNull(targetCode);","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"huzaifa1712"},"content":"        this.targetCode \u003d targetCode;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"huzaifa1712"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"huzaifa1712"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"huzaifa1712"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"huzaifa1712"},"content":"        UserModule toDelete \u003d new UserModule(targetCode, model);","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"huzaifa1712"},"content":"        if (!model.filteredListhasUserModule(toDelete)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"huzaifa1712"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_MODULE_FAILED, targetCode));","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"huzaifa1712"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"huzaifa1712"},"content":"        model.deleteUserModule(toDelete);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"huzaifa1712"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_MODULE_SUCCESS, targetCode));","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"huzaifa1712"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"huzaifa1712"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"huzaifa1712"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"huzaifa1712"},"content":"            || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"huzaifa1712"},"content":"            \u0026\u0026 targetCode.equals(((DeleteCommand) other).targetCode)); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"huzaifa1712"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"huzaifa1712":53}},{"path":"src/main/java/nus/climods/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sarrrdin"},"content":"package nus.climods.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"sarrrdin"},"content":"import nus.climods.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"sarrrdin"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exit the program.\\n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"sarrrdin"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"sarrrdin"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting from CLIMods... \\nBye bye!\";","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"sarrrdin"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"sarrrdin"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"sarrrdin"},"content":"        return obj instanceof ExitCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"sarrrdin":11,"-":15}},{"path":"src/main/java/nus/climods/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.core.Messages;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.module.predicate.ModuleContainsKeywordsPredicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":" * Find a module using a search phrase","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Find a module using a search phrase.\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"        + \"Parameters: KEYWORD [KEYWORD...]\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"        + \"KEYWORD can be a String or a valid RegEx\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"        + \"Example: \" + COMMAND_WORD + \" \" + \"Software Engineering\";","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"    private final List\u003cPattern\u003e searchRegexes;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"     * Constructor for FindCommand class","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"    public FindCommand(List\u003cPattern\u003e searchRegexes) {","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"        this.searchRegexes \u003d searchRegexes;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"        model.setFilteredModuleList(new ModuleContainsKeywordsPredicate(searchRegexes));","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"            String.format(Messages.MESSAGE_MODULES_LISTED_OVERVIEW, model.getFilteredModuleList().size()));","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"            || (other instanceof FindCommand","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"            \u0026\u0026 searchRegexes.stream().map(Pattern::toString).collect(Collectors.toList())","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"            .equals(((FindCommand) other).searchRegexes.stream().map(Pattern::toString).collect(Collectors.toList())));","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"shenyih0ng":50}},{"path":"src/main/java/nus/climods/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package nus.climods.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import static nus.climods.commons.core.Messages.MESSAGE_SHOW_HELP;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"import nus.climods.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"        + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"        return new CommandResult(MESSAGE_SHOW_HELP, true, false);","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"        return other instanceof HelpCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"zupey":27}},{"path":"src/main/java/nus/climods/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.logic.commands;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"SeekSaveServe"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"SeekSaveServe"},"content":"import static nus.climods.commons.core.Messages.MESSAGE_MODULES_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"SeekSaveServe"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"SeekSaveServe"},"content":"import nus.climods.logic.parser.parameters.FacultyCodeParameter;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"SeekSaveServe"},"content":"import nus.climods.logic.parser.parameters.UserFlagParameter;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"SeekSaveServe"},"content":"import nus.climods.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"SeekSaveServe"},"content":" * Lists all modules in NUS to the user.","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"SeekSaveServe"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"SeekSaveServe"},"content":"    public static final String COMMAND_WORD \u003d \"ls\";","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"SeekSaveServe"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all modules with module code containing any of \"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"SeekSaveServe"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list.\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"SeekSaveServe"},"content":"            + \"Parameters: [faculty code] [--user]...\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"SeekSaveServe"},"content":"            + \"Example: \" + COMMAND_WORD + \"CS --user\";","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"SeekSaveServe"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all relevant modules\";","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"SeekSaveServe"},"content":"    private final Optional\u003cString\u003e facultyCode;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"SeekSaveServe"},"content":"    private final Optional\u003cBoolean\u003e hasUser;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"SeekSaveServe"},"content":"     * Used for list command containing predicates","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"SeekSaveServe"},"content":"     * @param faculty optional argument to specify the faculty","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"SeekSaveServe"},"content":"     * @param faculty","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"SeekSaveServe"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"SeekSaveServe"},"content":"    public ListCommand(FacultyCodeParameter faculty, UserFlagParameter hasUser) {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"SeekSaveServe"},"content":"        this.facultyCode \u003d faculty.getOptionalArgValue();","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"SeekSaveServe"},"content":"        this.hasUser \u003d hasUser.getOptionalArgValue();","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"SeekSaveServe"},"content":"        model.updateFilteredModuleList(facultyCode, hasUser);","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"SeekSaveServe"},"content":"        return new CommandResult(String.format(MESSAGE_MODULES_LISTED_OVERVIEW,","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"SeekSaveServe"},"content":"                model.getFilteredModuleList().size()));","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SeekSaveServe":31,"-":12,"shenyih0ng":1}},{"path":"src/main/java/nus/climods/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.logic.commands.exceptions;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":16,"shenyih0ng":2}},{"path":"src/main/java/nus/climods/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huzaifa1712"},"content":"package nus.climods.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.logic.commands.AddCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.logic.parser.parameters.ModuleCodeParameter;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"huzaifa1712"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"huzaifa1712"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"huzaifa1712"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"huzaifa1712"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"huzaifa1712"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"huzaifa1712"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand and returns an AddCommand object","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"huzaifa1712"},"content":"     * for execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"huzaifa1712"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"huzaifa1712"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"huzaifa1712"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"huzaifa1712"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"huzaifa1712"},"content":"        ModuleCodeParameter mcp \u003d new ModuleCodeParameter(args);","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"huzaifa1712"},"content":"        String mc \u003d mcp.getArgValue();","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"huzaifa1712"},"content":"        return new AddCommand(mc);","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"huzaifa1712"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"huzaifa1712":25}},{"path":"src/main/java/nus/climods/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.logic.parser;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":" * Stores mapping of prefixes to their respective arguments. Each key may be associated with multiple argument values.","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained. Keys are unique, but the list","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":" * of argument values may contain duplicate argument values, i.e. the same argument value can be inserted multiple times","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":" * for the same prefix.","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"     * Prefixes mapped to their respective arguments","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"     * Associates the specified argument value with {@code prefix} key in this map. If the map previously contained a","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"     * mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"     * Returns all values of {@code prefix}. If the prefix does not exist or has no values, this will return an empty","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"     * list. Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"-":48,"shenyih0ng":12}},{"path":"src/main/java/nus/climods/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.logic.parser;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e e.g. {@code some","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":" * preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e 1. An argument\u0027s value can be an","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":" * empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e 2. Leading and trailing whitespaces of an","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":" * argument value will be discarded.\u003cbr\u003e 3. An argument may be repeated and all its values will be accumulated e.g. the","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":" * value of {@code t/} in the above example.\u003cbr\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"     * Returns the index of the first occurrence of {@code prefix} in {@code argsString} starting from index {@code","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"     * fromIndex}. An occurrence is valid if there is a whitespace before {@code prefix}. Returns -1 if no such","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"     * occurrence can be found.","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and {@code fromIndex} \u003d 0, this method returns -1","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"     * as there are no valid occurrences of \"p/\" with whitespace before it. However, if {@code argsString} \u003d \"e/hi","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"     * p/900\", {@code prefix} \u003d \"p/\" and {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"shenyih0ng"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}. The","lastModifiedDate":"2022-10-07"},{"lineNumber":110,"author":{"gitId":"shenyih0ng"},"content":"     * end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2022-10-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":127,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":129,"author":{"gitId":"shenyih0ng"},"content":"        private int startPosition;","lastModifiedDate":"2022-10-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":128,"shenyih0ng":17}},{"path":"src/main/java/nus/climods/logic/parser/CliModsParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sarrrdin"},"content":"package nus.climods.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"sarrrdin"},"content":"import static nus.climods.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"huzaifa1712"},"content":"import static nus.climods.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"sarrrdin"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"sarrrdin"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.logic.commands.AddCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"sarrrdin"},"content":"import nus.climods.logic.commands.Command;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"sarrrdin"},"content":"import nus.climods.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.commands.FindCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"import nus.climods.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"SeekSaveServe"},"content":"import nus.climods.logic.commands.ListCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"sarrrdin"},"content":"import nus.climods.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"sarrrdin"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"sarrrdin"},"content":" * Parses user input.","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"sarrrdin"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"sarrrdin"},"content":"public class CliModsParser {","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"sarrrdin"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"sarrrdin"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"sarrrdin"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"sarrrdin"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"sarrrdin"},"content":"     * @param userInput full user input string","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"sarrrdin"},"content":"     * @return the command based on the user input","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"sarrrdin"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"sarrrdin"},"content":"    public static Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"sarrrdin"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"sarrrdin"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"sarrrdin"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, \"Invalid command\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"sarrrdin"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"sarrrdin"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"sarrrdin"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"huzaifa1712"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"sarrrdin"},"content":"        case (AddCommand.COMMAND_WORD):","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"huzaifa1712"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"sarrrdin"},"content":"        case (DeleteCommand.COMMAND_WORD):","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"huzaifa1712"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"sarrrdin"},"content":"        case (ExitCommand.COMMAND_WORD):","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"sarrrdin"},"content":"            return new ExitCommandParser().parse(arguments);","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"sarrrdin"},"content":"        case (ListCommand.COMMAND_WORD):","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"SeekSaveServe"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"        case (FindCommand.COMMAND_WORD):","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"zupey"},"content":"        case (HelpCommand.COMMAND_WORD):","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"zupey"},"content":"            return new HelpCommandParser().parse(arguments);","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"huzaifa1712"},"content":"        default:","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"huzaifa1712"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"huzaifa1712"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"sarrrdin"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"SeekSaveServe":2,"sarrrdin":44,"huzaifa1712":9,"zupey":3,"shenyih0ng":3}},{"path":"src/main/java/nus/climods/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huzaifa1712"},"content":"package nus.climods.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.logic.parser.parameters.ModuleCodeParameter;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"huzaifa1712"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"huzaifa1712"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"huzaifa1712"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"huzaifa1712"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"huzaifa1712"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"huzaifa1712"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand and returns a DeleteCommand","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"huzaifa1712"},"content":"     * object for execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"huzaifa1712"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"huzaifa1712"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"huzaifa1712"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"huzaifa1712"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"huzaifa1712"},"content":"        ModuleCodeParameter mcp \u003d new ModuleCodeParameter(args);","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"huzaifa1712"},"content":"        String mc \u003d mcp.getArgValue();","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"huzaifa1712"},"content":"        return new DeleteCommand(mc);","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"huzaifa1712"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"huzaifa1712":23}},{"path":"src/main/java/nus/climods/logic/parser/ExitCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sarrrdin"},"content":"package nus.climods.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"sarrrdin"},"content":"import static nus.climods.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"sarrrdin"},"content":"import nus.climods.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"sarrrdin"},"content":"import nus.climods.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"sarrrdin"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"sarrrdin"},"content":" * Parser that parses the exit command from user.","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"sarrrdin"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"sarrrdin"},"content":"public class ExitCommandParser implements Parser\u003cExitCommand\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"sarrrdin"},"content":"    private static final String DEFAULT_ERROR_MESSAGE \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"sarrrdin"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, ExitCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"sarrrdin"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand and returns an AddCommand object","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"sarrrdin"},"content":"     * for execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"sarrrdin"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"sarrrdin"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"sarrrdin"},"content":"    public ExitCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"sarrrdin"},"content":"        return new ExitCommand();","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"sarrrdin"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"sarrrdin":25}},{"path":"src/main/java/nus/climods/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"import static nus.climods.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"import java.util.regex.PatternSyntaxException;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.commands.FindCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"    private static final String DEFAULT_ERROR_MESSAGE \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"        String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"    private static List\u003cPattern\u003e generateSearchRegexes(List\u003cString\u003e searchTokens) throws PatternSyntaxException {","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"        return searchTokens.stream().map(token -\u003e Pattern.compile(token, Pattern.CASE_INSENSITIVE))","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"    public FindCommand parse(String searchPhrase) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"        String trimmedSearchPhrase \u003d searchPhrase.trim();","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"        if (trimmedSearchPhrase.isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"            throw new ParseException(DEFAULT_ERROR_MESSAGE);","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"        List\u003cPattern\u003e searchRegexes;","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"        List\u003cString\u003e searchTokens \u003d Arrays.asList(trimmedSearchPhrase.split(\"\\\\s+\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"            searchRegexes \u003d generateSearchRegexes(searchTokens);","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"        } catch (PatternSyntaxException patternSyntaxException) {","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"            throw new ParseException(DEFAULT_ERROR_MESSAGE);","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"        requireNonNull(searchRegexes);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"        return new FindCommand(searchRegexes);","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"shenyih0ng":46}},{"path":"src/main/java/nus/climods/logic/parser/HelpCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package nus.climods.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import static nus.climods.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"import nus.climods.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"import nus.climods.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":" * Parses input arguments and creates a new HelpCommand object","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"public class HelpCommandParser implements Parser\u003cHelpCommand\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"    private static final String DEFAULT_ERROR_MESSAGE \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"        String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"    public HelpCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"        String trimmedSearchPhrase \u003d args.trim();","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"        if (!trimmedSearchPhrase.isEmpty()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"            throw new ParseException(DEFAULT_ERROR_MESSAGE);","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"        return new HelpCommand();","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"zupey":23}},{"path":"src/main/java/nus/climods/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeekSaveServe"},"content":"package nus.climods.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"SeekSaveServe"},"content":"import nus.climods.logic.commands.ListCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"SeekSaveServe"},"content":"import nus.climods.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"SeekSaveServe"},"content":"import nus.climods.logic.parser.parameters.FacultyCodeParameter;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"SeekSaveServe"},"content":"import nus.climods.logic.parser.parameters.UserFlagParameter;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"SeekSaveServe"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"SeekSaveServe"},"content":" * Parses input arguments and creates a new ListCommand object","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"SeekSaveServe"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"SeekSaveServe"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"SeekSaveServe"},"content":"     * Parses the given {@code String} of arguments in the context of the ListCommand and returns a ListCommand object","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"SeekSaveServe"},"content":"     * for execution.","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"SeekSaveServe"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"SeekSaveServe"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"SeekSaveServe"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"SeekSaveServe"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"SeekSaveServe"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"SeekSaveServe"},"content":"        return new ListCommand(new FacultyCodeParameter(trimmedArgs), new UserFlagParameter(trimmedArgs));","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"SeekSaveServe":24}},{"path":"src/main/java/nus/climods/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.logic.parser;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.commands.Command;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":13,"shenyih0ng":4}},{"path":"src/main/java/nus/climods/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.logic.parser;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"huzaifa1712"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"huzaifa1712"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"huzaifa1712"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"huzaifa1712"},"content":"    // Validates user entered module codes at parsing stage.","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"huzaifa1712"},"content":"    public static final Pattern MODULE_CODE_PATTERN \u003d Pattern.compile(\"[A-Z]{0,3}\\\\d{4}\");","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"SeekSaveServe"},"content":"    // Validates user flag, case insensitive","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"SeekSaveServe"},"content":"    public static final Pattern USER_FLAG_PATTERN \u003d Pattern.compile(\"(?i)--user(?-i)\");","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"SeekSaveServe"},"content":"    // Validates faculty code, case insensitive and matches between 2-3 chars","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"SeekSaveServe"},"content":"    public static final Pattern FACULTY_CODE_PATTERN \u003d Pattern.compile(\"^[A-Za-z]{2,3}$\");","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"SeekSaveServe"},"content":"    // TODO: Change this to a less hacky solution","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"SeekSaveServe"},"content":"    public static final String FAULTY_FACULTY_CODE \u003d \"zzz\";","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"huzaifa1712"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"huzaifa1712"},"content":"     * Returns List of whitespace-delimited arguments given arguments string supplied by the user","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"huzaifa1712"},"content":"     * @param arguments String supplied by user as arguments after preamble","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"huzaifa1712"},"content":"     * @return List of arguments provided","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"huzaifa1712"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"huzaifa1712"},"content":"    public static List\u003cString\u003e convertArgumentStringToList(String arguments) {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"huzaifa1712"},"content":"        List\u003cString\u003e res \u003d ArgumentTokenizer","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"huzaifa1712"},"content":"            .tokenize(arguments.trim(), new Prefix(\"\"))","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"huzaifa1712"},"content":"            .getAllValues(new Prefix(\"\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"huzaifa1712"},"content":"        // When arguments is empty string once trimmed, res is a List with just one empty string","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"huzaifa1712"},"content":"        // Return empty list to demarcate this case clearly","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"huzaifa1712"},"content":"        if (res.size() \u003d\u003d 1 \u0026\u0026 res.get(0).trim().equals(\"\")) {","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"huzaifa1712"},"content":"            return List.of();","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"huzaifa1712"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"huzaifa1712"},"content":"        return res;","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"huzaifa1712"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"     * Returns String array of whitespace-delimited arguments given arguments string supplied by the user. This function","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"     * makes it more convenient to work with commons.cli which accepts a String array of arguments to parse","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"huzaifa1712"},"content":"     * @param arguments String supplied by user as arguments after preamble","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"huzaifa1712"},"content":"     * @return String array of arguments provided","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"huzaifa1712"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"huzaifa1712"},"content":"    public static String[] convertArgumentStringToArray(String arguments) {","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"huzaifa1712"},"content":"        return convertArgumentStringToList(arguments).toArray(new String[] {});","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"huzaifa1712"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"huzaifa1712"},"content":"     * Parses module code according to user input","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"huzaifa1712"},"content":"     * @param input Input string from user representing a module code","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"     * @return Empty Optional if input string does not pass initial validation check, else Optional of the entered","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"     *               String","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"huzaifa1712"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"huzaifa1712"},"content":"    public static Optional\u003cString\u003e parseModuleCode(String input) {","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"huzaifa1712"},"content":"        if (!MODULE_CODE_PATTERN.matcher(input.trim()).find()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"huzaifa1712"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"huzaifa1712"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"huzaifa1712"},"content":"        return Optional.of(input);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"SeekSaveServe"},"content":"     * Parse user flag according to user input","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"SeekSaveServe"},"content":"     * @param input Input string from user containing --user. Case insensitive","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"SeekSaveServe"},"content":"     * @return Empty optional if input string does not contain --user, else Optional of --user flag","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"SeekSaveServe"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"SeekSaveServe"},"content":"    public static Optional\u003cBoolean\u003e parseUserFlag(String input) {","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"SeekSaveServe"},"content":"        if (!USER_FLAG_PATTERN.matcher(input.trim()).find()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"SeekSaveServe"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"SeekSaveServe"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"SeekSaveServe"},"content":"        return Optional.of(Boolean.TRUE);","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"SeekSaveServe"},"content":"     * Parse faculty code according to user input","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"SeekSaveServe"},"content":"     * @param input Input string from user containing faculty code","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"SeekSaveServe"},"content":"     * @return","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"SeekSaveServe"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"SeekSaveServe"},"content":"    public static Optional\u003cString\u003e parseFacultyCode(String input) {","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"SeekSaveServe"},"content":"        if (input.length() \u003d\u003d 0) {","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"SeekSaveServe"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"SeekSaveServe"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"SeekSaveServe"},"content":"        input \u003d !FACULTY_CODE_PATTERN.matcher(input.trim()).find() ? FAULTY_FACULTY_CODE : input;","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"SeekSaveServe"},"content":"        return Optional.of(input);","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"SeekSaveServe":29,"sarrrdin":1,"huzaifa1712":45,"-":9,"shenyih0ng":7}},{"path":"src/main/java/nus/climods/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.logic.parser;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":" * A prefix that marks the beginning of an argument in an arguments string. E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"-":36,"shenyih0ng":3}},{"path":"src/main/java/nus/climods/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.logic.parser.exceptions;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"-":15,"shenyih0ng":2}},{"path":"src/main/java/nus/climods/logic/parser/parameters/FacultyCodeParameter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeekSaveServe"},"content":"package nus.climods.logic.parser.parameters;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"SeekSaveServe"},"content":"import nus.climods.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"SeekSaveServe"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"SeekSaveServe"},"content":" * Represents a User Flag parameter","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"SeekSaveServe"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"SeekSaveServe"},"content":"public class FacultyCodeParameter extends OptionalPositionalParameter\u003cString\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"SeekSaveServe"},"content":"    public static final int FACULTY_CODE_INDEX \u003d 0;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"SeekSaveServe"},"content":"    public static final String PARSE_EXCEPTION_MESSAGE \u003d \"Invalid faculty code: %s\";","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"SeekSaveServe"},"content":"     * Creates a faculty code parameter with","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"SeekSaveServe"},"content":"     * @param argumentString","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"SeekSaveServe"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"SeekSaveServe"},"content":"    public FacultyCodeParameter(String argumentString) {","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"SeekSaveServe"},"content":"        super(FACULTY_CODE_INDEX, argumentString, ParserUtil::parseFacultyCode, PARSE_EXCEPTION_MESSAGE);","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"SeekSaveServe":21}},{"path":"src/main/java/nus/climods/logic/parser/parameters/ModuleCodeParameter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huzaifa1712"},"content":"package nus.climods.logic.parser.parameters;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"huzaifa1712"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"huzaifa1712"},"content":" * Represents a positional ModuleCode parameter","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"huzaifa1712"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"huzaifa1712"},"content":"public class ModuleCodeParameter extends PositionalParameter\u003cString\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"huzaifa1712"},"content":"    public static final String INVALID_INPUT_MESSAGE \u003d \"Module code should not be empty!\";","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"huzaifa1712"},"content":"    public static final String PARSE_EXCEPTION_MESSAGE \u003d \"Invalid module code: %s\";","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"huzaifa1712"},"content":"    private static final int MODULE_CODE_INDEX \u003d 0;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"huzaifa1712"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"huzaifa1712"},"content":"     * Creates a ModuleCodeParameter with argumentsString","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"huzaifa1712"},"content":"     * @param argumentsString Arguments string to parse module code from","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"huzaifa1712"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"huzaifa1712"},"content":"    public ModuleCodeParameter(String argumentsString) {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"huzaifa1712"},"content":"        super(MODULE_CODE_INDEX, argumentsString, ParserUtil::parseModuleCode, PARSE_EXCEPTION_MESSAGE);","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"huzaifa1712"},"content":"        this.setEmptyInputMessage(INVALID_INPUT_MESSAGE);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"huzaifa1712"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"huzaifa1712":23,"shenyih0ng":2}},{"path":"src/main/java/nus/climods/logic/parser/parameters/OptionalPositionalParameter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeekSaveServe"},"content":"package nus.climods.logic.parser.parameters;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"SeekSaveServe"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"SeekSaveServe"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"SeekSaveServe"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"SeekSaveServe"},"content":" * Represents a positional parameter yielding a value of type T.","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"SeekSaveServe"},"content":" *","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"SeekSaveServe"},"content":" * @param \u003cT\u003e The expected type from the parameter","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"SeekSaveServe"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"SeekSaveServe"},"content":"public class OptionalPositionalParameter\u003cT\u003e extends PositionalParameter {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"SeekSaveServe"},"content":"     * Creates an OptionalPositionalParameter given argumentsString","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"SeekSaveServe"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"SeekSaveServe"},"content":"     * @param index                 Expected index for the parameter (\u003e\u003d 0)","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"SeekSaveServe"},"content":"     * @param argumentsString       A string of all arguments, without command name","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"SeekSaveServe"},"content":"     * @param conversionFunction    A function to convert the argument string into an Optional of type T","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"SeekSaveServe"},"content":"     * @param parseExceptionMessage ParseException message to show upon unsuccessful parse","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"SeekSaveServe"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"SeekSaveServe"},"content":"    public OptionalPositionalParameter(int index, String argumentsString, Function\u003cString,","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"SeekSaveServe"},"content":"            Optional\u003cT\u003e\u003e conversionFunction, String parseExceptionMessage) {","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"SeekSaveServe"},"content":"        super(index, argumentsString, conversionFunction, parseExceptionMessage);","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"SeekSaveServe"},"content":"     * Get Optional argument that is either empty or has the relevant arg value","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"SeekSaveServe"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"SeekSaveServe"},"content":"    public Optional\u003cT\u003e getOptionalArgValue() {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"SeekSaveServe"},"content":"        if (index \u003e\u003d arguments.size()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"SeekSaveServe"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"SeekSaveServe"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"SeekSaveServe"},"content":"        optionalArg \u003d (Optional) conversionFunction.apply(arguments.get(index));","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"SeekSaveServe"},"content":"        return optionalArg;","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"SeekSaveServe":37}},{"path":"src/main/java/nus/climods/logic/parser/parameters/PositionalParameter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huzaifa1712"},"content":"package nus.climods.logic.parser.parameters;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"huzaifa1712"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"huzaifa1712"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"huzaifa1712"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"huzaifa1712"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"huzaifa1712"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"huzaifa1712"},"content":" * Represents a positional parameter yielding a value of type T.","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"huzaifa1712"},"content":" * @param \u003cT\u003e The expected type from the parameter","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"huzaifa1712"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"huzaifa1712"},"content":"public class PositionalParameter\u003cT\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"huzaifa1712"},"content":"    private static final String MESSAGE_INVALID_INPUT \u003d \"Not enough arguments to process parameter\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"     * Index of the parameter in delimiter-separated list of arguments","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"huzaifa1712"},"content":"    protected final int index;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"huzaifa1712"},"content":"    protected final List\u003cString\u003e arguments;","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"    protected String invalidInputMessage \u003d MESSAGE_INVALID_INPUT;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"     * ParseException message to show when invalid argument provided","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"    protected String parseExceptionMessage;","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"     * Returns non-empty Optional if valid T, else empty Optional","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"huzaifa1712"},"content":"    protected Function\u003cString, Optional\u003cT\u003e\u003e conversionFunction;","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"huzaifa1712"},"content":"    protected Optional\u003cT\u003e optionalArg;","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"huzaifa1712"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"huzaifa1712"},"content":"     * Creates a PositionalParameter given argumentsString","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"huzaifa1712"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"huzaifa1712"},"content":"     * @param index                 Expected index for the parameter (\u003e\u003d 0)","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"huzaifa1712"},"content":"     * @param argumentsString       A string of all arguments, without command name","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"huzaifa1712"},"content":"     * @param conversionFunction    A function to convert the argument string into an Optional of type T","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"huzaifa1712"},"content":"     * @param parseExceptionMessage ParseException message to show upon unsuccessful parse","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"huzaifa1712"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"huzaifa1712"},"content":"    public PositionalParameter(int index, String argumentsString, Function\u003cString, Optional\u003cT\u003e\u003e conversionFunction,","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"huzaifa1712"},"content":"        String parseExceptionMessage) {","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"huzaifa1712"},"content":"        this(index, ParserUtil.convertArgumentStringToList(argumentsString), conversionFunction, parseExceptionMessage);","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"huzaifa1712"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"huzaifa1712"},"content":"     * Creates a PositionalParameter given List of String arguments","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"huzaifa1712"},"content":"     * @param index                 Expected index for the parameter (\u003e\u003d 0)","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"huzaifa1712"},"content":"     * @param arguments             A list of argument strings representing all arguments, without command name","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"huzaifa1712"},"content":"     * @param conversionFunction    A function to convert the argument string into an Optional of type T","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"huzaifa1712"},"content":"     * @param parseExceptionMessage ParseException message to show upon unsuccessful parse","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"huzaifa1712"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"huzaifa1712"},"content":"    public PositionalParameter(int index, List\u003cString\u003e arguments, Function\u003cString, Optional\u003cT\u003e\u003e conversionFunction,","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"huzaifa1712"},"content":"        String parseExceptionMessage) {","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"huzaifa1712"},"content":"        assert index \u003e\u003d 0;","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"huzaifa1712"},"content":"        Objects.requireNonNull(arguments);","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"huzaifa1712"},"content":"        Objects.requireNonNull(conversionFunction);","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"huzaifa1712"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"huzaifa1712"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"huzaifa1712"},"content":"        this.conversionFunction \u003d conversionFunction;","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"huzaifa1712"},"content":"        this.parseExceptionMessage \u003d parseExceptionMessage;","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"huzaifa1712"},"content":"    protected void setEmptyInputMessage(String message) {","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"huzaifa1712"},"content":"        this.invalidInputMessage \u003d message;","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"huzaifa1712"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"huzaifa1712"},"content":"     * Returns argument value parsed according to index and conversion function","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"huzaifa1712"},"content":"     * @return Return argument value","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"huzaifa1712"},"content":"     * @throws ParseException if the input for this parameter was invalid or doesn\u0027t exist","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"huzaifa1712"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"huzaifa1712"},"content":"    public T getArgValue() throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"huzaifa1712"},"content":"        if (index \u003e\u003d arguments.size()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"huzaifa1712"},"content":"            throw new ParseException(invalidInputMessage);","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"huzaifa1712"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"huzaifa1712"},"content":"        optionalArg \u003d conversionFunction.apply(arguments.get(index));","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"huzaifa1712"},"content":"        if (optionalArg.isEmpty()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"huzaifa1712"},"content":"            throw new ParseException(String.format(parseExceptionMessage, arguments.get(index)));","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"huzaifa1712"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"huzaifa1712"},"content":"        return optionalArg.get();","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"huzaifa1712"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"huzaifa1712":73,"shenyih0ng":16}},{"path":"src/main/java/nus/climods/logic/parser/parameters/RelaxedParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huzaifa1712"},"content":"package nus.climods.logic.parser.parameters;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"huzaifa1712"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"huzaifa1712"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"huzaifa1712"},"content":"import org.apache.commons.cli.CommandLine;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"huzaifa1712"},"content":"import org.apache.commons.cli.DefaultParser;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"huzaifa1712"},"content":"import org.apache.commons.cli.Options;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"huzaifa1712"},"content":"import org.apache.commons.cli.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"huzaifa1712"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"huzaifa1712"},"content":" * A RelaxedParser for use with commons.cli that ignores unrecognised options","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"huzaifa1712"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"//@@author huzaifa1712-reused","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"// Re-used from https://stackoverflow.com/questions/33874902/apache-commons-cli-1-3-1-how-to-ignore-unknown-arguments","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class RelaxedParser extends DefaultParser {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandLine parse(final Options options, final String[] arguments) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        final List\u003cString\u003e knownArgs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c arguments.length; i++) {","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            if (options.hasOption(arguments[i])) {","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                knownArgs.add(arguments[i]);","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                if (i + 1 \u003c arguments.length \u0026\u0026 options.getOption(arguments[i]).hasArg()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    knownArgs.add(arguments[i + 1]);","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return super.parse(options, knownArgs.toArray(new String[0]));","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"huzaifa1712":14,"-":19}},{"path":"src/main/java/nus/climods/logic/parser/parameters/UserFlagParameter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeekSaveServe"},"content":"package nus.climods.logic.parser.parameters;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"SeekSaveServe"},"content":"import nus.climods.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"SeekSaveServe"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"SeekSaveServe"},"content":" * Represents a User Flag parameter","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"SeekSaveServe"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"SeekSaveServe"},"content":"public class UserFlagParameter extends OptionalPositionalParameter\u003cBoolean\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"SeekSaveServe"},"content":"    public static final int USER_FLAG_INDEX \u003d 1;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"SeekSaveServe"},"content":"    public static final String PARSE_EXCEPTION_MESSAGE \u003d \"Invalid user flag: %s\";","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"SeekSaveServe"},"content":"     * Creates a user flag parameter with","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"SeekSaveServe"},"content":"     * @param argumentString","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"SeekSaveServe"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"SeekSaveServe"},"content":"    public UserFlagParameter(String argumentString) {","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"SeekSaveServe"},"content":"        super(USER_FLAG_INDEX, argumentString, ParserUtil::parseUserFlag, PARSE_EXCEPTION_MESSAGE);","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"SeekSaveServe":21}},{"path":"src/main/java/nus/climods/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.model;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.model.module.UniqueUserModuleList;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"sarrrdin"},"content":"import nus.climods.model.module.UserModule;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.person.Person;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.person.UniquePersonList;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":" * Wraps all data at the address-book level Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"sarrrdin"},"content":"    private final UniqueUserModuleList modules;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"    {","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":31,"author":{"gitId":"sarrrdin"},"content":"        modules \u003d new UniqueUserModuleList();","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"    public AddressBook() {","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"     * Replaces the contents of the person list with {@code persons}. {@code persons} must not contain duplicate","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"     * persons.","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"shenyih0ng"},"content":"     * Adds a person to the address book. The person must not already exist in the address book.","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"shenyih0ng"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}. {@code target} must exist in the","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"shenyih0ng"},"content":"     * address book. The person identity of {@code editedPerson} must not be the same as another existing person in the","lastModifiedDate":"2022-10-07"},{"lineNumber":84,"author":{"gitId":"shenyih0ng"},"content":"     * address book.","lastModifiedDate":"2022-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"shenyih0ng"},"content":"     * Removes {@code key} from this {@code AddressBook}. {@code key} must exist in the address book.","lastModifiedDate":"2022-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"sarrrdin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"sarrrdin"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"sarrrdin"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"sarrrdin"},"content":"    //-------------------------UserModule --------------------------------------------------------","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"sarrrdin"},"content":"     * Returns true if a module with the same identity as {@code module} exists in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"sarrrdin"},"content":"    public boolean hasUserModule(UserModule module) {","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"sarrrdin"},"content":"        requireNonNull(module);","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"sarrrdin"},"content":"        return modules.contains(module);","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"sarrrdin"},"content":"     * Adds a module to the address book. The module must not already exist in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"sarrrdin"},"content":"    public void addUserModule(UserModule p) {","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"sarrrdin"},"content":"        modules.add(p);","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"huzaifa1712"},"content":"     * Replaces the given module {@code target} in the list with {@code editedUserModule}. {@code target} must exist","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"huzaifa1712"},"content":"     * in the address book. The module identity of {@code editedUserModule} must not be the same as another existing","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"huzaifa1712"},"content":"     * module in the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"sarrrdin"},"content":"    public void setUserModule(UserModule target, UserModule editedUserModule) {","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"sarrrdin"},"content":"        requireNonNull(editedUserModule);","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"sarrrdin"},"content":"        modules.setUserModule(target, editedUserModule);","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"sarrrdin"},"content":"     * Removes {@code key} from this {@code AddressBook}. {@code key} must exist in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"sarrrdin"},"content":"    public void removeUserModule(UserModule key) {","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"sarrrdin"},"content":"        modules.remove(key);","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"sarrrdin"},"content":"    //// util methods","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"sarrrdin"},"content":"        return modules.asUnmodifiableObservableList().size() + \" modules\";","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"sarrrdin"},"content":"    public ObservableList\u003cUserModule\u003e getUserModuleList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"sarrrdin"},"content":"        return modules.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"sarrrdin"},"content":"            \u0026\u0026 modules.equals(((AddressBook) other).modules));","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"sarrrdin"},"content":"        return modules.hashCode();","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":165,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sarrrdin":48,"huzaifa1712":5,"-":98,"shenyih0ng":15}},{"path":"src/main/java/nus/climods/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.model;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"SeekSaveServe"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"huzaifa1712"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.core.GuiSettings;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"SeekSaveServe"},"content":"import nus.climods.model.module.Module;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.module.ReadOnlyModuleList;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"sarrrdin"},"content":"import nus.climods.model.module.UserModule;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"sarrrdin"},"content":"    Predicate\u003cUserModule\u003e PREDICATE_SHOW_ALL_MODULES \u003d unused -\u003e true;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"    ReadOnlyModuleList getModuleList();","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"huzaifa1712"},"content":"    /* USER MODULE */","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"huzaifa1712"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"huzaifa1712"},"content":"     * Returns true if a module with the same identity as {@code module} exists in the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"huzaifa1712"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"huzaifa1712"},"content":"    boolean hasUserModule(UserModule module);","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"huzaifa1712"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"huzaifa1712"},"content":"     * Returns true if a module with the same identity as {@code module} exists in the filtered user module list","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"huzaifa1712"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"huzaifa1712"},"content":"    boolean filteredListhasUserModule(UserModule module);","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"huzaifa1712"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"huzaifa1712"},"content":"     * Deletes the given module. The module must exist in the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"huzaifa1712"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"huzaifa1712"},"content":"    void deleteUserModule(UserModule target);","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"huzaifa1712"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"huzaifa1712"},"content":"     * Adds the given module. {@code module} must not already exist in the address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"huzaifa1712"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"huzaifa1712"},"content":"    void addUserModule(UserModule module);","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"huzaifa1712"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"huzaifa1712"},"content":"     * Returns an unmodifiable view of the filtered module list","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"huzaifa1712"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"huzaifa1712"},"content":"    ObservableList\u003cUserModule\u003e getFilteredUserModuleList();","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"huzaifa1712"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"huzaifa1712"},"content":"     * Updates the filter of the filtered module list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"huzaifa1712"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"huzaifa1712"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"huzaifa1712"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"huzaifa1712"},"content":"    void updateFilteredUserModuleList(Predicate\u003cUserModule\u003e predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"SeekSaveServe"},"content":"    void updateFilteredModuleList(Optional\u003cString\u003e facultyCode, Optional\u003cBoolean\u003e hasUser);","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"shenyih0ng"},"content":"    ObservableList\u003cModule\u003e getFilteredModuleList();","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"shenyih0ng"},"content":"    void setFilteredModuleList(Predicate\u003cModule\u003e predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"SeekSaveServe":4,"sarrrdin":2,"huzaifa1712":36,"-":26,"shenyih0ng":13}},{"path":"src/main/java/nus/climods/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.model;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"import static nus.climods.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"SeekSaveServe"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"huzaifa1712"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"huzaifa1712"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"huzaifa1712"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.core.GuiSettings;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.core.LogsCenter;","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"SeekSaveServe"},"content":"import nus.climods.model.module.CodeContainsKeywordsPredicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"SeekSaveServe"},"content":"import nus.climods.model.module.Module;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.module.ModuleList;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.module.ReadOnlyModuleList;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.model.module.UniqueUserModuleList;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.model.module.UserModule;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":" * Represents the in-memory model of module list data.","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"    private final ModuleList moduleList;","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"huzaifa1712"},"content":"    private final UniqueUserModuleList uniqueUserModuleList;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"huzaifa1712"},"content":"    private final FilteredList\u003cUserModule\u003e filteredUserModules;","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"    private final FilteredList\u003cModule\u003e filteredModuleList;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"huzaifa1712"},"content":"     * Initializes a ModelManager with the given moduleList and userPrefs.","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"huzaifa1712"},"content":"    public ModelManager(ReadOnlyModuleList moduleList, UniqueUserModuleList uniqueUserModuleList,","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"huzaifa1712"},"content":"                        ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"        requireAllNonNull(moduleList, userPrefs);","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"SeekSaveServe"},"content":"        logger.fine(\"Initializing with module list: \" + moduleList + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"        this.moduleList \u003d new ModuleList(moduleList);","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"huzaifa1712"},"content":"        this.uniqueUserModuleList \u003d uniqueUserModuleList;","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"SeekSaveServe"},"content":"        this.filteredModuleList \u003d new FilteredList\u003c\u003e(moduleList.getModules());","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"huzaifa1712"},"content":"        filteredUserModules \u003d new FilteredList\u003cUserModule\u003e(uniqueUserModuleList.asUnmodifiableObservableList());","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"huzaifa1712"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserModule \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"huzaifa1712"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"huzaifa1712"},"content":"    public boolean hasUserModule(UserModule module) {","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"huzaifa1712"},"content":"        requireNonNull(module);","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"huzaifa1712"},"content":"        return uniqueUserModuleList.contains(module);","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"huzaifa1712"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"huzaifa1712"},"content":"    public boolean filteredListhasUserModule(UserModule module) {","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"huzaifa1712"},"content":"        return this.getFilteredUserModuleList().contains(module);","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"huzaifa1712"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"huzaifa1712"},"content":"    public void deleteUserModule(UserModule target) {","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"huzaifa1712"},"content":"        requireNonNull(target);","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"huzaifa1712"},"content":"        uniqueUserModuleList.remove(target);","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"huzaifa1712"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"huzaifa1712"},"content":"    public void addUserModule(UserModule module) {","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"huzaifa1712"},"content":"        uniqueUserModuleList.add(module);","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"huzaifa1712"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"huzaifa1712"},"content":"    public ObservableList\u003cUserModule\u003e getFilteredUserModuleList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"huzaifa1712"},"content":"        return filteredUserModules;","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"huzaifa1712"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"huzaifa1712"},"content":"    public void updateFilteredUserModuleList(Predicate\u003cUserModule\u003e predicate) {","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"huzaifa1712"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"huzaifa1712"},"content":"        filteredUserModules.setPredicate(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"shenyih0ng"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-07"},{"lineNumber":87,"author":{"gitId":"shenyih0ng"},"content":"        return userPrefs;","lastModifiedDate":"2022-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"shenyih0ng"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-07"},{"lineNumber":92,"author":{"gitId":"shenyih0ng"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2022-10-07"},{"lineNumber":93,"author":{"gitId":"shenyih0ng"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2022-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"SeekSaveServe"},"content":"     * Filter the list by faculty Code","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"SeekSaveServe"},"content":"     *","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"SeekSaveServe"},"content":"     * @return","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"SeekSaveServe"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"SeekSaveServe"},"content":"    public void updateFilteredModuleList(Optional\u003cString\u003e facultyCode, Optional\u003cBoolean\u003e hasUser) {","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"SeekSaveServe"},"content":"        // TODO: Implement filtering for saved modules","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"SeekSaveServe"},"content":"        CodeContainsKeywordsPredicate predicate \u003d new CodeContainsKeywordsPredicate(facultyCode);","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"SeekSaveServe"},"content":"        filteredModuleList.setPredicate(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"shenyih0ng"},"content":"    public ReadOnlyModuleList getModuleList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"shenyih0ng"},"content":"        return moduleList;","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"SeekSaveServe"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"SeekSaveServe"},"content":"    public ObservableList\u003cModule\u003e getFilteredModuleList() {","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"SeekSaveServe"},"content":"        return filteredModuleList;","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"shenyih0ng"},"content":"    public void setFilteredModuleList(Predicate\u003cModule\u003e predicate) {","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"shenyih0ng"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"shenyih0ng"},"content":"        this.filteredModuleList.setPredicate(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SeekSaveServe":23,"sarrrdin":1,"huzaifa1712":49,"-":38,"shenyih0ng":23}},{"path":"src/main/java/nus/climods/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.model;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"sarrrdin"},"content":"import nus.climods.model.module.UserModule;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.model.person.Person;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"     * Returns an unmodifiable view of the persons list. This list will not contain any duplicate persons.","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"sarrrdin"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"sarrrdin"},"content":"     * can be deleted later.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"sarrrdin"},"content":"     * Returns an unmodifiable view of the module list. This list will not contain any duplicate modules.","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"sarrrdin"},"content":"    ObservableList\u003cUserModule\u003e getUserModuleList();","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sarrrdin":7,"huzaifa1712":2,"-":13,"shenyih0ng":2}},{"path":"src/main/java/nus/climods/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.model;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.core.GuiSettings;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"    String getAcademicYear();","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":14,"shenyih0ng":3}},{"path":"src/main/java/nus/climods/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.model;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.core.GuiSettings;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\", \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"    private String academicYear \u003d \"2022-2023\";","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"    public UserPrefs() {","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"    public String getAcademicYear() {","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"        return academicYear;","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"    public void setAcademicYear(String academicYear) {","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"        this.academicYear \u003d academicYear;","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"shenyih0ng"},"content":"            \u0026\u0026 Objects.equals(addressBookFilePath.toAbsolutePath(), o.addressBookFilePath.toAbsolutePath());","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":83,"shenyih0ng":14}},{"path":"src/main/java/nus/climods/model/module/CodeContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeekSaveServe"},"content":"package nus.climods.model.module;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"SeekSaveServe"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"SeekSaveServe"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"SeekSaveServe"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"SeekSaveServe"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"SeekSaveServe"},"content":" * Tests that a {@code Module}\u0027s {@code Module Code} matches any of the keywords given.","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"SeekSaveServe"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"SeekSaveServe"},"content":"public class CodeContainsKeywordsPredicate implements Predicate\u003cModule\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"SeekSaveServe"},"content":"    private final Optional\u003cString\u003e facultyCode;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"SeekSaveServe"},"content":"     * Makes a predicate testing {@code Module} for","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"SeekSaveServe"},"content":"     * @param facultyCode","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"SeekSaveServe"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"SeekSaveServe"},"content":"    public CodeContainsKeywordsPredicate(Optional\u003cString\u003e facultyCode) {","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"SeekSaveServe"},"content":"        this.facultyCode \u003d facultyCode;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"SeekSaveServe"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"SeekSaveServe"},"content":"    public boolean test(Module module) {","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"SeekSaveServe"},"content":"        if (facultyCode.isPresent()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"SeekSaveServe"},"content":"            Pattern facultyCodeRegex \u003d Pattern.compile(String.format(\"^(?i)%s\\\\d{4}$\", facultyCode.get()));","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"SeekSaveServe"},"content":"            return facultyCodeRegex.matcher(module.getCode()).find();","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"SeekSaveServe"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"SeekSaveServe"},"content":"        return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"SeekSaveServe"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"SeekSaveServe"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"SeekSaveServe"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"SeekSaveServe"},"content":"            || (other instanceof CodeContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"SeekSaveServe"},"content":"            \u0026\u0026 facultyCode.equals(((CodeContainsKeywordsPredicate) other).facultyCode)); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"SeekSaveServe":38}},{"path":"src/main/java/nus/climods/model/module/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sarrrdin"},"content":"package nus.climods.model.module;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"sarrrdin"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"sarrrdin"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"sarrrdin"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"sarrrdin"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"sarrrdin"},"content":"import org.openapitools.client.model.ModuleInformationSemesterDataInner;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"sarrrdin"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"sarrrdin"},"content":" * A wrapper class for \u003ccode\u003eModuleInformation\u003c/code\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"sarrrdin"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"sarrrdin"},"content":"public class Module {","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"sarrrdin"},"content":"    private final org.openapitools.client.model.ModuleInformation apiModuleInfo;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"sarrrdin"},"content":"    public Module(org.openapitools.client.model.ModuleInformation apiModuleInfo) {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"sarrrdin"},"content":"        this.apiModuleInfo \u003d apiModuleInfo;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"sarrrdin"},"content":"     * Returns the number of modular credits.","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"sarrrdin"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"sarrrdin"},"content":"     * String is used as the return type as there module credits may not be a integer. Example: YSC2251 2.5 MCs Since","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"sarrrdin"},"content":"     * there are no calculations needed as of yet, we will preserve the String representation","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"sarrrdin"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"sarrrdin"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"sarrrdin"},"content":"     * @return module credits","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"sarrrdin"},"content":"    public String getModuleCredit() {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"sarrrdin"},"content":"        return apiModuleInfo.getModuleCredit();","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"sarrrdin"},"content":"     * Returns the module title.","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"sarrrdin"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"sarrrdin"},"content":"     * @return module title","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"sarrrdin"},"content":"    public String getTitle() {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"sarrrdin"},"content":"        return apiModuleInfo.getTitle();","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"sarrrdin"},"content":"     * Returns the module code.","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"sarrrdin"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"sarrrdin"},"content":"     * @return module code","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"sarrrdin"},"content":"    public String getCode() {","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"sarrrdin"},"content":"        return apiModuleInfo.getModuleCode();","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"sarrrdin"},"content":"     * Returns the department that offers this module.","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"sarrrdin"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"sarrrdin"},"content":"     * @return module department","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"sarrrdin"},"content":"    public String getDepartment() {","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"sarrrdin"},"content":"        return apiModuleInfo.getDepartment();","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"sarrrdin"},"content":"     * Returns the semesters that this module is offered.","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"sarrrdin"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"sarrrdin"},"content":"     * @return list of integers representing semesters","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"sarrrdin"},"content":"    public List\u003cInteger\u003e getSemesters() {","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"sarrrdin"},"content":"        List\u003cModuleInformationSemesterDataInner\u003e apiSemesterData \u003d apiModuleInfo.getSemesterData();","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"sarrrdin"},"content":"        return apiSemesterData.stream().map(ModuleInformationSemesterDataInner::getSemester).filter(Objects::nonNull)","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"sarrrdin"},"content":"                .map(BigDecimal::intValue).collect(Collectors.toList());","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"shenyih0ng"},"content":"     * Check if module contains keyword","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"shenyih0ng"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"shenyih0ng"},"content":"     * A keyword is searched against a search range which includes the module\u0027s title and code","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"shenyih0ng"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"shenyih0ng"},"content":"     * @param keywordPattern keyword regex pattern","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"shenyih0ng"},"content":"     * @return whether module contains keyword in its stated information","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"shenyih0ng"},"content":"    public boolean containsKeyword(Pattern keywordPattern) {","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"shenyih0ng"},"content":"        List\u003cString\u003e searchRange \u003d Arrays.asList(getCode(), getTitle());","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"shenyih0ng"},"content":"        return searchRange.stream().anyMatch(range -\u003e keywordPattern.asPredicate().test(range));","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"sarrrdin"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"sarrrdin":71,"huzaifa1712":1,"shenyih0ng":17}},{"path":"src/main/java/nus/climods/model/module/ModuleCode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sarrrdin"},"content":"package nus.climods.model.module;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"sarrrdin"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"sarrrdin"},"content":" * Represents a Module\u0027s Code in the List of Modules. Guarantees: immutable","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"sarrrdin"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"sarrrdin"},"content":"public class ModuleCode {","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"sarrrdin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"sarrrdin"},"content":"            \"Modules should be in the format example CS2103, and it should not be blank\";","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"sarrrdin"},"content":"    /*","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"sarrrdin"},"content":"     * The first character of the module code must not be a whitespace,","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"sarrrdin"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"sarrrdin"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"sarrrdin"},"content":"    public final String moduleCode;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"sarrrdin"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"sarrrdin"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"sarrrdin"},"content":"     * @param moduleCode A valid moduleCode.","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"sarrrdin"},"content":"    public ModuleCode(String moduleCode) {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"sarrrdin"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"sarrrdin"},"content":"     * Returns true if a given string is a valid moduleCode.","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"sarrrdin"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"sarrrdin"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"sarrrdin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"sarrrdin"},"content":"    public String toString() {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"sarrrdin"},"content":"        return moduleCode;","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"sarrrdin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"sarrrdin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"sarrrdin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"sarrrdin"},"content":"                || (other instanceof ModuleCode // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"sarrrdin"},"content":"                \u0026\u0026 moduleCode.equals(((ModuleCode) other).moduleCode)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"sarrrdin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"sarrrdin"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"sarrrdin"},"content":"        return moduleCode.hashCode();","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"sarrrdin"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"sarrrdin":54}},{"path":"src/main/java/nus/climods/model/module/ModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.model.module;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"huzaifa1712"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"import org.openapitools.client.ApiException;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"import org.openapitools.client.api.ModulesApi;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":" * A list of modules.","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"public class ModuleList implements ReadOnlyModuleList {","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"    private static final ModulesApi modulesApi \u003d new ModulesApi();","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"    private final ObservableList\u003cModule\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"    private final ObservableList\u003cModule\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"     * Constructor for ModuleList class.","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"     * @param academicYear academic year of modules","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleList(String academicYear) {","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"            internalList.setAll(","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"                modulesApi.acadYearModuleInfoJsonGet(academicYear).stream().map(Module::new)","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"                    .collect(Collectors.toList()));","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"        } catch (ApiException e) {","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"     * Constructor for ModuleList class.","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"     * @param modules list of modules","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleList(List\u003cModule\u003e modules) {","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"        requireNonNull(modules);","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"        internalList.setAll(modules);","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleList(ReadOnlyModuleList toBeCopied) {","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"        this.internalList.setAll(toBeCopied.getModules());","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"    public ObservableList\u003cModule\u003e getModules() {","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"huzaifa1712"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"huzaifa1712"},"content":"    public Optional\u003cModule\u003e getListModule(String moduleCode) {","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"huzaifa1712"},"content":"        return internalUnmodifiableList.stream()","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"huzaifa1712"},"content":"                .filter(mod -\u003e mod.getCode().equalsIgnoreCase(moduleCode))","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"huzaifa1712"},"content":"                .findFirst();","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"    public String toString() {","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"shenyih0ng"},"content":"        return String.format(\"ModulesList\u003c%s\u003e\", internalList.size());","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"huzaifa1712":8,"shenyih0ng":63}},{"path":"src/main/java/nus/climods/model/module/ModuleSummaryList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package nus.climods.model.module;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"import java.util.List;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"import org.openapitools.client.model.ModuleCondensed;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":" * All the module codes to allow for searching for modules.","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"public class ModuleSummaryList implements ReadOnlyModuleSummaryList {","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"    private final List\u003cModuleCondensed\u003e condensedModules;","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"    public ModuleSummaryList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"        this.condensedModules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"    public ModuleSummaryList(List\u003cModuleCondensed\u003e acadYearModuleList) {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"        this.condensedModules \u003d acadYearModuleList;","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"    public String toString() {","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"        return condensedModules.size() + \" modules\";","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"    public List\u003cModuleCondensed\u003e getModuleList() {","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"        return this.condensedModules;","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"zupey"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"zupey"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"zupey"},"content":"            || (other instanceof ModuleSummaryList // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"zupey"},"content":"            \u0026\u0026 this.condensedModules.equals(((ModuleSummaryList) other).condensedModules));","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"zupey"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"zupey"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"zupey"},"content":"        return this.condensedModules.hashCode();","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"zupey":44}},{"path":"src/main/java/nus/climods/model/module/ReadOnlyModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sarrrdin"},"content":"package nus.climods.model.module;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"huzaifa1712"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"sarrrdin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"sarrrdin"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"sarrrdin"},"content":" * Unmodifiable view of a module list","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"sarrrdin"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"sarrrdin"},"content":"public interface ReadOnlyModuleList {","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"sarrrdin"},"content":"     * Returns an unmodifiable view of the module list.","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"sarrrdin"},"content":"    ObservableList\u003cModule\u003e getModules();","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"huzaifa1712"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"huzaifa1712"},"content":"     * Get reference to list module in module list","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"huzaifa1712"},"content":"     * @param moduleCode Module code to check for","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"huzaifa1712"},"content":"     * @return Optional of corresponding Module in list if it exists, else empty Optional","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"huzaifa1712"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"huzaifa1712"},"content":"    Optional\u003cModule\u003e getListModule(String moduleCode);","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"sarrrdin"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"sarrrdin":14,"huzaifa1712":11}},{"path":"src/main/java/nus/climods/model/module/ReadOnlyModuleSummaryList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package nus.climods.model.module;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import java.util.List;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"import org.openapitools.client.model.ModuleCondensed;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":" * Unmodifiable view of Acad Year Module List received via API call.","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"public interface ReadOnlyModuleSummaryList {","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"    List\u003cModuleCondensed\u003e getModuleList();","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"zupey":12,"shenyih0ng":1}},{"path":"src/main/java/nus/climods/model/module/Tutorial.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sarrrdin"},"content":"package nus.climods.model.module;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"sarrrdin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"sarrrdin"},"content":"import static nus.climods.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"sarrrdin"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"sarrrdin"},"content":" * Represents a Module\u0027s Tutorial in the List of Modules. Guarantees: immutable","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"sarrrdin"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"sarrrdin"},"content":"public class Tutorial {","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"sarrrdin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"sarrrdin"},"content":"            \"Tutorial should be in the format example Monday 2pm, and it should not be blank\"; //TBC!","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"sarrrdin"},"content":"    /*","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"sarrrdin"},"content":"     * The first character of the module tutorial must not be a whitespace,","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"sarrrdin"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"sarrrdin"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"sarrrdin"},"content":"    public final String tutorial;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"sarrrdin"},"content":"     * Constructs a {@tutorial Name}.","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"sarrrdin"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"sarrrdin"},"content":"     * @param tutorial A valid tutorial.","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"sarrrdin"},"content":"    public Tutorial(String tutorial) {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"sarrrdin"},"content":"        requireNonNull(tutorial);","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"sarrrdin"},"content":"        checkArgument(isValidName(tutorial), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"sarrrdin"},"content":"        this.tutorial \u003d tutorial;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"sarrrdin"},"content":"     * Returns true if a given string is a valid tutorial.","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"sarrrdin"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"sarrrdin"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"sarrrdin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"sarrrdin"},"content":"    public String toString() {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"sarrrdin"},"content":"        return tutorial;","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"sarrrdin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"sarrrdin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"sarrrdin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"sarrrdin"},"content":"                || (other instanceof Tutorial // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"sarrrdin"},"content":"                \u0026\u0026 tutorial.equals(((Tutorial) other).tutorial)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"sarrrdin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"sarrrdin"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"sarrrdin"},"content":"        return tutorial.hashCode();","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"sarrrdin"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"sarrrdin":57}},{"path":"src/main/java/nus/climods/model/module/UniqueUserModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sarrrdin"},"content":"package nus.climods.model.module;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"sarrrdin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"sarrrdin"},"content":"import static nus.climods.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"sarrrdin"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"sarrrdin"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"sarrrdin"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"sarrrdin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"sarrrdin"},"content":"import nus.climods.model.module.exceptions.DuplicateUserModuleException;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"sarrrdin"},"content":"import nus.climods.model.module.exceptions.UserModuleNotFoundException;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"sarrrdin"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"sarrrdin"},"content":" * A list of modules that enforces uniqueness between its elements and does not allow nulls. A module is considered","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"sarrrdin"},"content":" * unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of modules uses","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"sarrrdin"},"content":" * Person#isSamePerson(Person) for equality so as to ensure that the module being added or updated is unique in terms of","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"sarrrdin"},"content":" * identity in the UniquePersonList. However, the removal of a module uses Person#equals(Object) so as to ensure that","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"sarrrdin"},"content":" * the module with exactly the same fields will be removed.","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"sarrrdin"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"sarrrdin"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"sarrrdin"},"content":" *","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"sarrrdin"},"content":" * @see UserModule#isSameUserModule(UserModule)","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"sarrrdin"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"sarrrdin"},"content":"public class UniqueUserModuleList implements Iterable\u003cUserModule\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"sarrrdin"},"content":"    private final ObservableList\u003cUserModule\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"sarrrdin"},"content":"    private final ObservableList\u003cUserModule\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"sarrrdin"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"sarrrdin"},"content":"     * Returns true if the list contains an equivalent module as the given argument.","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"sarrrdin"},"content":"    public boolean contains(UserModule toCheck) {","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"sarrrdin"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"sarrrdin"},"content":"        return internalList.stream().anyMatch(toCheck::isSameUserModule);","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"sarrrdin"},"content":"     * Adds a module to the list. The module must not already exist in the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"sarrrdin"},"content":"    public void add(UserModule toAdd) {","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"sarrrdin"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"sarrrdin"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"sarrrdin"},"content":"            throw new DuplicateUserModuleException();","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"sarrrdin"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"sarrrdin"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"huzaifa1712"},"content":"     * Replaces the module {@code target} in the list with {@code editedUserModule}. {@code target} must exist in the","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"huzaifa1712"},"content":"     * list.","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"sarrrdin"},"content":"     * The module identity of {@code editedUserModule} must not be the same as another existing module in the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"sarrrdin"},"content":"    public void setUserModule(UserModule target, UserModule editedUserModule) {","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"sarrrdin"},"content":"        requireAllNonNull(target, editedUserModule);","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"sarrrdin"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"sarrrdin"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"sarrrdin"},"content":"            throw new UserModuleNotFoundException();","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"sarrrdin"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"sarrrdin"},"content":"        if (!target.isSameUserModule(editedUserModule) \u0026\u0026 contains(editedUserModule)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"sarrrdin"},"content":"            throw new DuplicateUserModuleException();","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"sarrrdin"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"sarrrdin"},"content":"        internalList.set(index, editedUserModule);","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"sarrrdin"},"content":"     * Removes the equivalent module from the list. The module must exist in the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"sarrrdin"},"content":"    public void remove(UserModule toRemove) {","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"sarrrdin"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"sarrrdin"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"sarrrdin"},"content":"            throw new UserModuleNotFoundException();","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"sarrrdin"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"sarrrdin"},"content":"    public void setUserModules(nus.climods.model.module.UniqueUserModuleList replacement) {","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"sarrrdin"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"sarrrdin"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"sarrrdin"},"content":"     * Replaces the contents of this list with {@code modules}. {@code modules} must not contain duplicate modules.","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"sarrrdin"},"content":"    public void setUserModules(List\u003cUserModule\u003e modules) {","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"sarrrdin"},"content":"        requireAllNonNull(modules);","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"sarrrdin"},"content":"        if (!modulesAreUnique(modules)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"sarrrdin"},"content":"            throw new DuplicateUserModuleException();","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"sarrrdin"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"sarrrdin"},"content":"        internalList.setAll(modules);","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"sarrrdin"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"sarrrdin"},"content":"    public ObservableList\u003cUserModule\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"sarrrdin"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"sarrrdin"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"sarrrdin"},"content":"    public Iterator\u003cUserModule\u003e iterator() {","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"sarrrdin"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"sarrrdin"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"sarrrdin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"sarrrdin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"sarrrdin"},"content":"                || (other instanceof nus.climods.model.module.UniqueUserModuleList // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"sarrrdin"},"content":"                \u0026\u0026 internalList.equals(((nus.climods.model.module.UniqueUserModuleList) other).internalList));","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"sarrrdin"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"sarrrdin"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"sarrrdin"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"sarrrdin"},"content":"     * Returns true if {@code modules} contains only unique modules.","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"sarrrdin"},"content":"    private boolean modulesAreUnique(List\u003cUserModule\u003e modules) {","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"sarrrdin"},"content":"        for (int i \u003d 0; i \u003c modules.size() - 1; i++) {","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"sarrrdin"},"content":"            for (int j \u003d i + 1; j \u003c modules.size(); j++) {","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"sarrrdin"},"content":"                if (modules.get(i).isSameUserModule(modules.get(j))) {","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"sarrrdin"},"content":"                    return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"sarrrdin"},"content":"                }","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"sarrrdin"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"sarrrdin"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"sarrrdin"},"content":"        return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"sarrrdin"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"sarrrdin":132,"huzaifa1712":2}},{"path":"src/main/java/nus/climods/model/module/UserModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sarrrdin"},"content":"package nus.climods.model.module;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"huzaifa1712"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"sarrrdin"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"huzaifa1712"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"huzaifa1712"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"huzaifa1712"},"content":" * Class representing module a User has in their My Modules list","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"huzaifa1712"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"sarrrdin"},"content":"public class UserModule {","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"huzaifa1712"},"content":"    public static final String MESSAGE_MODULE_NOT_FOUND \u003d \"Module not in current NUS curriculum\";","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"sarrrdin"},"content":"    // Identity fields","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"sarrrdin"},"content":"    private final Module listModule;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"sarrrdin"},"content":"    //TODO: Remove when implement tutorial/lecture support","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"sarrrdin"},"content":"    private String tutorial \u003d \"Tutorial: Monday, 1400-1500\";","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"sarrrdin"},"content":"    private String lecture \u003d \"Lecture: Friday, 1600-1800\";","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"huzaifa1712"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"huzaifa1712"},"content":"     * Creates a UserModule","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"huzaifa1712"},"content":"     * @param moduleCode String for the module code","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"huzaifa1712"},"content":"     * @throws ParseException if module code is not a valid module in current NUS curriculum","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"huzaifa1712"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"huzaifa1712"},"content":"    public UserModule(String moduleCode, Model model) throws CommandException {","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"huzaifa1712"},"content":"        Optional\u003cModule\u003e optionalModule \u003d model.getModuleList().getListModule(moduleCode);","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"huzaifa1712"},"content":"        if (optionalModule.isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"huzaifa1712"},"content":"            throw new CommandException(MESSAGE_MODULE_NOT_FOUND);","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"sarrrdin"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"sarrrdin"},"content":"        listModule \u003d optionalModule.get();","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"huzaifa1712"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"huzaifa1712"},"content":"     * Constructor for use purely in testing stub classes.","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"huzaifa1712"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"huzaifa1712"},"content":"    protected UserModule() {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"sarrrdin"},"content":"        this.listModule \u003d null;","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"huzaifa1712"},"content":"    public Module getApiModule() {","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"sarrrdin"},"content":"        return this.listModule;","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"sarrrdin"},"content":"    public String getUserModuleCode() {","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"sarrrdin"},"content":"        return this.listModule.getCode();","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"huzaifa1712"},"content":"    public String getUserModuleTitle() {","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"sarrrdin"},"content":"        return this.listModule.getTitle();","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"sarrrdin"},"content":"    public String getDepartment() {","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"sarrrdin"},"content":"        return listModule.getDepartment();","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"sarrrdin"},"content":"    //TODO: fix getWorkload from API","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"sarrrdin"},"content":"    public String getWorkload() {","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"sarrrdin"},"content":"        return listModule.getModuleCredit();","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"sarrrdin"},"content":"    //TODO: add Tutorial method","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"sarrrdin"},"content":"    public String getTutorial() {","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"sarrrdin"},"content":"        return this.tutorial;","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"sarrrdin"},"content":"    public void setTutorial(String tutorial) {","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"sarrrdin"},"content":"        this.tutorial \u003d tutorial;","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"sarrrdin"},"content":"    public String getLecture() {","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"sarrrdin"},"content":"        return this.lecture;","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"sarrrdin"},"content":"    public void setLecture(String lecture) {","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"sarrrdin"},"content":"        this.lecture \u003d lecture;","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"huzaifa1712"},"content":"    private List\u003cInteger\u003e getAvailableSemesters() {","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"sarrrdin"},"content":"        return listModule.getSemesters();","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"huzaifa1712"},"content":"    // TODO: update with user\u0027s selected semester","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"huzaifa1712"},"content":"    public String getSelectedSemester() {","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"huzaifa1712"},"content":"        return getAvailableSemesters().contains(1) ? \"Semester 1\" : \"Semester 2\";","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"sarrrdin"},"content":"     * Returns true if both modules have the same name. This defines a weaker notion of equality between two modules.","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"sarrrdin"},"content":"    public boolean isSameUserModule(UserModule otherModule) {","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"sarrrdin"},"content":"        if (otherModule \u003d\u003d this) {","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"sarrrdin"},"content":"            return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"sarrrdin"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"sarrrdin"},"content":"        return otherModule !\u003d null","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"sarrrdin"},"content":"                \u0026\u0026 otherModule.getUserModuleCode().equals(getUserModuleCode());","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"sarrrdin"},"content":"     * Returns true if both modules have the same identity and data fields. This defines a stronger notion of equality","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"sarrrdin"},"content":"     * between two modules.","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"sarrrdin"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"sarrrdin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"sarrrdin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"sarrrdin"},"content":"            return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"sarrrdin"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"sarrrdin"},"content":"        if (!(other instanceof nus.climods.model.module.UserModule)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"sarrrdin"},"content":"            return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"sarrrdin"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"sarrrdin"},"content":"        nus.climods.model.module.UserModule otherModule \u003d (nus.climods.model.module.UserModule) other;","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"sarrrdin"},"content":"        return otherModule.getUserModuleCode().equals(getUserModuleCode());","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"sarrrdin"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"sarrrdin"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"sarrrdin"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"sarrrdin"},"content":"        return Objects.hash(listModule);","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"sarrrdin"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"sarrrdin"},"content":"    public String toString() {","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"sarrrdin"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"sarrrdin"},"content":"        builder.append(getUserModuleCode());","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"sarrrdin"},"content":"        //TODO: add string builder for other module details","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"sarrrdin"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"sarrrdin"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"sarrrdin":98,"huzaifa1712":40}},{"path":"src/main/java/nus/climods/model/module/exceptions/DuplicateUserModuleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sarrrdin"},"content":"package nus.climods.model.module.exceptions;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"sarrrdin"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"sarrrdin"},"content":" * Signals that the operation will result in duplicate Modules (Modules are considered duplicates if they have the same","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"sarrrdin"},"content":" * code).","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"sarrrdin"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"sarrrdin"},"content":"public class DuplicateUserModuleException extends RuntimeException {","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"sarrrdin"},"content":"    public DuplicateUserModuleException() {","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"sarrrdin"},"content":"        super(\"Operation would result in duplicate modules\");","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"sarrrdin"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"sarrrdin":11}},{"path":"src/main/java/nus/climods/model/module/exceptions/UserModuleNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sarrrdin"},"content":"package nus.climods.model.module.exceptions;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"sarrrdin"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"sarrrdin"},"content":" * Signals that the operation is unable to find the specified module.","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"sarrrdin"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"sarrrdin"},"content":"public class UserModuleNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"sarrrdin"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"sarrrdin":7}},{"path":"src/main/java/nus/climods/model/module/predicate/ModuleContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.model.module.predicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.module.Module;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":" * Tests that a {@code Module}\u0027s given information matches any of the keywords given.","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"public class ModuleContainsKeywordsPredicate implements Predicate\u003cModule\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"    private final List\u003cPattern\u003e searchRegexes;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleContainsKeywordsPredicate(List\u003cPattern\u003e searchRegexes) {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"        this.searchRegexes \u003d searchRegexes;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"    public boolean test(Module module) {","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"        return searchRegexes.stream().anyMatch(module::containsKeyword);","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"            || (other instanceof ModuleContainsKeywordsPredicate","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"            \u0026\u0026 searchRegexes.equals(((ModuleContainsKeywordsPredicate) other).searchRegexes));","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"shenyih0ng":31}},{"path":"src/main/java/nus/climods/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.model.person;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"import static nus.climods.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" * Represents a Person\u0027s address in the address book. Guarantees: immutable; is valid as declared in {@link","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * #isValidAddress(String)}","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":53,"shenyih0ng":4}},{"path":"src/main/java/nus/climods/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.model.person;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"import static nus.climods.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" * Represents a Person\u0027s email in the address book. Guarantees: immutable; is valid as declared in {@link","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * #isValidEmail(String)}","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":67,"shenyih0ng":4}},{"path":"src/main/java/nus/climods/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.model.person;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"import static nus.climods.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" * Represents a Person\u0027s name in the address book. Guarantees: immutable; is valid as declared in {@link","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * #isValidName(String)}","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":55,"shenyih0ng":4}},{"path":"src/main/java/nus/climods/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.model.person;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.util.StringUtil;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":29,"shenyih0ng":3}},{"path":"src/main/java/nus/climods/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.model.person;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import static nus.climods.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.tag.Tag;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":" * Represents a Person in the address book. Guarantees: details are present and not null, field values are validated,","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":" * immutable.","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException} if modification is attempted.","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"     * Returns true if both persons have the same name. This defines a weaker notion of equality between two persons.","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"shenyih0ng"},"content":"     * Returns true if both persons have the same identity and data fields. This defines a stronger notion of equality","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"shenyih0ng"},"content":"     * between two persons.","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":112,"shenyih0ng":9}},{"path":"src/main/java/nus/climods/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.model.person;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"import static nus.climods.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" * Represents a Person\u0027s phone number in the address book. Guarantees: immutable; is valid as declared in {@link","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * #isValidPhone(String)}","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":49,"shenyih0ng":4}},{"path":"src/main/java/nus/climods/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.model.person;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"import static nus.climods.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls. A person is considered","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":" * unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of persons uses","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":" * Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is unique in terms of","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":" * identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so as to ensure that","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":" * the person with exactly the same fields will be removed.","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"     * Adds a person to the list. The person must not already exist in the list.","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}. {@code target} must exist in the list.","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"shenyih0ng"},"content":"     * Removes the equivalent person from the list. The person must exist in the list.","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"shenyih0ng"},"content":"     * Replaces the contents of this list with {@code persons}. {@code persons} must not contain duplicate persons.","lastModifiedDate":"2022-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":119,"shenyih0ng":14}},{"path":"src/main/java/nus/climods/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.model.person.exceptions;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"-":10,"shenyih0ng":2}},{"path":"src/main/java/nus/climods/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.model.person.exceptions;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"public class PersonNotFoundException extends RuntimeException {","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"shenyih0ng":8}},{"path":"src/main/java/nus/climods/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.model.tag;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"import static nus.climods.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" * Represents a Tag in the address book. Guarantees: immutable; name is valid as declared in {@link","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * #isValidTagName(String)}","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":50,"shenyih0ng":4}},{"path":"src/main/java/nus/climods/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.model.util;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.AddressBook;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.person.Address;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.person.Email;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.person.Name;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.person.Person;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.person.Phone;","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.tag.Tag;","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"-":51,"shenyih0ng":10}},{"path":"src/main/java/nus/climods/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.storage;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.AddressBook;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":" * Represents a storage for {@link AddressBook}.","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}. Returns {@code Optional.empty()} if storage file is","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"     * not found.","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":39,"shenyih0ng":9}},{"path":"src/main/java/nus/climods/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.storage;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.person.Address;","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.person.Email;","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.person.Name;","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.person.Person;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.person.Phone;","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.tag.Tag;","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":101,"shenyih0ng":8}},{"path":"src/main/java/nus/climods/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.storage;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.tag.Tag;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"public class JsonAdaptedTag {","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"zupey":1,"-":44,"shenyih0ng":3}},{"path":"src/main/java/nus/climods/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.storage;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.core.LogsCenter;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.util.FileUtil;","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.util.JsonUtil;","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":73,"shenyih0ng":7}},{"path":"src/main/java/nus/climods/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.storage;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.AddressBook;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.person.Person;","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":55,"shenyih0ng":5}},{"path":"src/main/java/nus/climods/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.storage;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.util.JsonUtil;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.UserPrefs;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":42,"shenyih0ng":6}},{"path":"src/main/java/nus/climods/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.storage;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.UserPrefs;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.storage.module.ModuleListStorage;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"public interface Storage extends UserPrefsStorage, ModuleListStorage {","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":15,"shenyih0ng":6}},{"path":"src/main/java/nus/climods/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.storage;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.core.LogsCenter;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.UserPrefs;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.module.ReadOnlyModuleList;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.storage.module.ModuleListStorage;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.storage.module.user.UserModuleListStorage;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"    private ModuleListStorage moduleListStorage;","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"    private UserModuleListStorage userModuleListStorage;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"    public StorageManager(ModuleListStorage moduleListStorage, UserModuleListStorage userModuleListStorage,","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"        UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"        this.moduleListStorage \u003d moduleListStorage;","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"        this.userModuleListStorage \u003d userModuleListStorage;","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"    public Path getModuleListFilePath() {","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"        return null;","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"    public Optional\u003cReadOnlyModuleList\u003e readModuleList(String academicYear) throws DataConversionException {","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"        return Optional.empty();","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"    public Optional\u003cReadOnlyModuleList\u003e readModuleList(String academicYear, Path filePath)","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"shenyih0ng"},"content":"            throws DataConversionException {","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"shenyih0ng"},"content":"        return Optional.empty();","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"shenyih0ng"},"content":"    public void saveModuleList(List\u003cModule\u003e modules) throws IOException {","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"shenyih0ng"},"content":"    public void saveModuleList(List\u003cModule\u003e modules, Path filePath) throws IOException {","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"-":53,"shenyih0ng":29}},{"path":"src/main/java/nus/climods/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.storage;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.UserPrefs;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"     * Returns UserPrefs data from storage. Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":28,"shenyih0ng":9}},{"path":"src/main/java/nus/climods/storage/module/JsonModuleListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.storage.module;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.core.LogsCenter;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.util.JsonUtil;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.module.ReadOnlyModuleList;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":" * A class to access ModuleList data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"public class JsonModuleListStorage implements ModuleListStorage {","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonModuleListStorage.class);","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"    private final Path filePath;","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"    public JsonModuleListStorage(Path filePath) {","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"    public Path getModuleListFilePath() {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"        return filePath;","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"    public Optional\u003cReadOnlyModuleList\u003e readModuleList(String academicYear) throws DataConversionException {","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"        return readModuleList(academicYear, filePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"    public Optional\u003cReadOnlyModuleList\u003e readModuleList(String academicYear, Path filePath)","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"            throws DataConversionException {","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"        Optional\u003cJsonSerializableModuleList\u003e jsonModuleList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"            filePath, JsonSerializableModuleList.class);","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"        if (jsonModuleList.isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"            return Optional.of(jsonModuleList.get().toModelType());","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"    public void saveModuleList(List\u003cModule\u003e modules) throws IOException {","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"    public void saveModuleList(List\u003cModule\u003e modules, Path filePath) throws IOException {","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"shenyih0ng":70}},{"path":"src/main/java/nus/climods/storage/module/JsonSerializableModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sarrrdin"},"content":"package nus.climods.storage.module;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"sarrrdin"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"sarrrdin"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"sarrrdin"},"content":"import org.openapitools.client.model.ModuleInformation;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"sarrrdin"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"sarrrdin"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"sarrrdin"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"sarrrdin"},"content":"import nus.climods.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"sarrrdin"},"content":"import nus.climods.model.module.ModuleList;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"sarrrdin"},"content":"@JsonRootName(value \u003d \"moduleList\")","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"sarrrdin"},"content":"class JsonSerializableModuleList {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"sarrrdin"},"content":"    private final List\u003cModuleInformation\u003e modules;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"sarrrdin"},"content":"     * Constructs a {@code JsonSerializableModuleList} with the given modules.","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"sarrrdin"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"sarrrdin"},"content":"    public JsonSerializableModuleList(@JsonProperty(\"modules\") List\u003cModuleInformation\u003e modules) {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"sarrrdin"},"content":"        this.modules \u003d modules;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"sarrrdin"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"sarrrdin"},"content":"     * Converts this module list into the model\u0027s {@code ModuleList} object.","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"sarrrdin"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"sarrrdin"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"sarrrdin"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"sarrrdin"},"content":"    public ModuleList toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"sarrrdin"},"content":"        return new ModuleList(modules.stream().map(nus.climods.model.module.Module::new).collect(","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"sarrrdin"},"content":"                Collectors.toList()));","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"sarrrdin"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"sarrrdin":37}},{"path":"src/main/java/nus/climods/storage/module/ModuleListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.storage.module;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.module.ReadOnlyModuleList;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":" * Represents a storage for {@link nus.climods.model.module.ModuleList}.","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"public interface ModuleListStorage {","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"     * Returns the file path of the module list data file.","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"    Path getModuleListFilePath();","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"     * Returns module list data as a ReadOnlyModuleList. Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"    Optional\u003cReadOnlyModuleList\u003e readModuleList(String academicYear) throws DataConversionException;","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"    Optional\u003cReadOnlyModuleList\u003e readModuleList(String academicYear, Path filePath) throws DataConversionException;","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"    void saveModuleList(List\u003cModule\u003e modules) throws IOException;","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"    void saveModuleList(List\u003cModule\u003e modules, Path filePath) throws IOException;","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"shenyih0ng":35}},{"path":"src/main/java/nus/climods/storage/module/summary/JsonModuleSummaryListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.storage.module.summary;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"import java.util.List;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"import org.openapitools.client.model.ModuleCondensed;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"import nus.climods.commons.core.LogsCenter;","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"import nus.climods.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"import nus.climods.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"import nus.climods.commons.util.FileUtil;","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"import nus.climods.commons.util.JsonUtil;","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"import nus.climods.model.module.ReadOnlyModuleSummaryList;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":" * A class to access ModuleSummaryList data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"public class JsonModuleSummaryListStorage implements ModuleSummaryListStorage {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonModuleSummaryListStorage.class);","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"    private final Path filePath;","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"    public JsonModuleSummaryListStorage(Path filePath) {","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"zupey"},"content":"    public Path getModuleSummaryListFilePath() {","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"zupey"},"content":"        return filePath;","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"zupey"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"zupey"},"content":"    public Optional\u003cReadOnlyModuleSummaryList\u003e readModuleSummaryList() throws DataConversionException {","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"zupey"},"content":"        return readModuleSummaryList(filePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"zupey"},"content":"     * Similar to {@link #readModuleSummaryList()}.","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"zupey"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"zupey"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"zupey"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"zupey"},"content":"    public Optional\u003cReadOnlyModuleSummaryList\u003e readModuleSummaryList(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"zupey"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"zupey"},"content":"        Optional\u003cJsonSerializableModuleSummaryList\u003e jsonAcadYearModuleList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"zupey"},"content":"            filePath, JsonSerializableModuleSummaryList.class);","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"zupey"},"content":"        if (jsonAcadYearModuleList.isEmpty()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"zupey"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"zupey"},"content":"        try {","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"zupey"},"content":"            return Optional.of(jsonAcadYearModuleList.get().toModelType());","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"zupey"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"zupey"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"zupey"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"zupey"},"content":"    public void saveModuleSummaryList(List\u003cModuleCondensed\u003e moduleCondensedList) throws IOException {","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"zupey"},"content":"        saveModuleSummaryList(moduleCondensedList, filePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"zupey"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"zupey"},"content":"    public void saveModuleSummaryList(List\u003cModuleCondensed\u003e moduleCondensedList, Path filePath) throws IOException {","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"zupey"},"content":"        requireNonNull(moduleCondensedList);","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"zupey"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"zupey"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"zupey"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableModuleSummaryList(moduleCondensedList), filePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"zupey":78,"shenyih0ng":2}},{"path":"src/main/java/nus/climods/storage/module/summary/JsonSerializableModuleSummaryList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.storage.module.summary;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import java.util.List;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"import org.openapitools.client.model.ModuleCondensed;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"import nus.climods.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"import nus.climods.model.module.ModuleSummaryList;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":" * An Immutable acadYearModuleList that is serializable to JSON format.","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"@JsonRootName(value \u003d \"modules\")","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"class JsonSerializableModuleSummaryList {","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"    private final List\u003cModuleCondensed\u003e modules;","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"     * Constructs a {@code JsonSerializableModuleSummaryList} with the given modules.","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"    public JsonSerializableModuleSummaryList(@JsonProperty(\"modules\") List\u003cModuleCondensed\u003e modules) {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"        this.modules \u003d modules;","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"zupey"},"content":"     * Converts this module list into the model\u0027s {@code ModuleSummaryList} object.","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"zupey"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"zupey"},"content":"    public ModuleSummaryList toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"zupey"},"content":"        return new ModuleSummaryList(modules);","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"zupey":37,"shenyih0ng":2}},{"path":"src/main/java/nus/climods/storage/module/summary/ModuleSummaryListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.storage.module.summary;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"import java.util.List;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"import org.openapitools.client.model.ModuleCondensed;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"import nus.climods.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"import nus.climods.model.module.ModuleSummaryList;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"import nus.climods.model.module.ReadOnlyModuleSummaryList;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":" * Represents a storage for {@link ModuleSummaryList}.","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"public interface ModuleSummaryListStorage {","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"    Path getModuleSummaryListFilePath();","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"     * Returns user module list data as a {@link ReadOnlyModuleSummaryList}. Returns {@code Optional.empty()} if storage","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"     * file is not found.","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"    Optional\u003cReadOnlyModuleSummaryList\u003e readModuleSummaryList() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"zupey"},"content":"     * @see #getModuleSummaryListFilePath()","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"zupey"},"content":"    Optional\u003cReadOnlyModuleSummaryList\u003e readModuleSummaryList(Path filePath)","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"zupey"},"content":"            throws DataConversionException, IOException;","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"zupey"},"content":"    void saveModuleSummaryList(List\u003cModuleCondensed\u003e modules) throws IOException;","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"zupey"},"content":"    void saveModuleSummaryList(List\u003cModuleCondensed\u003e modules, Path filePath) throws IOException;","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"zupey":41,"shenyih0ng":3}},{"path":"src/main/java/nus/climods/storage/module/user/JsonAdaptedUserModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package nus.climods.storage.module.user;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"import java.util.List;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"import nus.climods.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"import nus.climods.model.person.Address;","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"import nus.climods.model.person.Email;","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"import nus.climods.model.person.Name;","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"import nus.climods.model.person.Person;","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"import nus.climods.model.person.Phone;","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"import nus.climods.model.tag.Tag;","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"import nus.climods.storage.JsonAdaptedTag;","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":" * Jackson-friendly version of {@link Module}.","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"class JsonAdaptedUserModule {","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Module\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"    // TODO: Replace with the variables of module.","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"    private final String name;","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"    private final String phone;","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"zupey"},"content":"    private final String email;","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"    private final String address;","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"zupey"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"zupey"},"content":"     * Constructs a {@code JsonAdaptedModule} with the given module\u0027s details.","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"zupey"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"    public JsonAdaptedUserModule(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"zupey"},"content":"        @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"zupey"},"content":"        @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"zupey"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"zupey"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"zupey"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"zupey"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"zupey"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"zupey"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"zupey"},"content":"     * Converts a given {@code Module} into this class for Jackson use.","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"    public JsonAdaptedUserModule(Person source) {","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"zupey"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"zupey"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"zupey"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"zupey"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"zupey"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"zupey"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"zupey"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"zupey"},"content":"     * Converts this Jackson-friendly adapted module object into the model\u0027s {@code Module} object.","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"zupey"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"zupey"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted module.","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"zupey"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"zupey"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"zupey"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"zupey"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"zupey"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"zupey"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"zupey"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"zupey"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"zupey"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2022-10-07"},{"lineNumber":82,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"zupey"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2022-10-07"},{"lineNumber":84,"author":{"gitId":"zupey"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2022-10-07"},{"lineNumber":85,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":86,"author":{"gitId":"zupey"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":87,"author":{"gitId":"zupey"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":88,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":89,"author":{"gitId":"zupey"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2022-10-07"},{"lineNumber":90,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":91,"author":{"gitId":"zupey"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2022-10-07"},{"lineNumber":92,"author":{"gitId":"zupey"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2022-10-07"},{"lineNumber":93,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":94,"author":{"gitId":"zupey"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":95,"author":{"gitId":"zupey"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":96,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":97,"author":{"gitId":"zupey"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2022-10-07"},{"lineNumber":98,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"zupey"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2022-10-07"},{"lineNumber":100,"author":{"gitId":"zupey"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2022-10-07"},{"lineNumber":101,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":102,"author":{"gitId":"zupey"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":103,"author":{"gitId":"zupey"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":104,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":105,"author":{"gitId":"zupey"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2022-10-07"},{"lineNumber":106,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":107,"author":{"gitId":"zupey"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2022-10-07"},{"lineNumber":108,"author":{"gitId":"zupey"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2022-10-07"},{"lineNumber":109,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":110,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":111,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"zupey":108,"shenyih0ng":3}},{"path":"src/main/java/nus/climods/storage/module/user/JsonSerializableUserModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package nus.climods.storage.module.user;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"import java.util.List;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"import nus.climods.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"import nus.climods.model.AddressBook;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"import nus.climods.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"import nus.climods.model.person.Person;","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":" * An Immutable userModuleList that is serializable to JSON format.","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"@JsonRootName(value \u003d \"usermodulelist\")","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"class JsonSerializableUserModuleList {","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"    // TODO: Change AddressBook model to UserModuleList after model has been created.","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"    public static final String MESSAGE_DUPLICATE_MODULE \u003d \"Modules list contains duplicate person(s).\";","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"    private final List\u003cJsonAdaptedUserModule\u003e modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"     * Constructs a {@code JsonSerializableUserModuleList} with the given modules.","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"    public JsonSerializableUserModuleList(@JsonProperty(\"persons\") List\u003cJsonAdaptedUserModule\u003e modules) {","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"        this.modules.addAll(modules);","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"zupey"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"zupey"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"zupey"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableUserModuleList}.","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"zupey"},"content":"    public JsonSerializableUserModuleList(ReadOnlyAddressBook source) {","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"        modules.addAll(source.getPersonList().stream().map(JsonAdaptedUserModule::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"zupey"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"zupey"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"zupey"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"zupey"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"zupey"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"        for (JsonAdaptedUserModule jsonAdaptedModule : modules) {","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"zupey"},"content":"            Person person \u003d jsonAdaptedModule.toModelType();","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"zupey"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"zupey"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_MODULE);","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"zupey"},"content":"            }","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"zupey"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"zupey"},"content":"        return addressBook;","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"zupey":57,"shenyih0ng":4}},{"path":"src/main/java/nus/climods/storage/module/user/JsonUserModuleListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package nus.climods.storage.module.user;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"import nus.climods.commons.core.LogsCenter;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"import nus.climods.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"import nus.climods.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"import nus.climods.commons.util.FileUtil;","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"import nus.climods.commons.util.JsonUtil;","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"import nus.climods.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":" * A class to access UserModuleList data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"public class JsonUserModuleListStorage implements UserModuleListStorage {","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUserModuleListStorage.class);","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"    private final Path filePath;","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"    public JsonUserModuleListStorage(Path filePath) {","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"    public Path getUserModuleListFilePath() {","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"zupey"},"content":"        return filePath;","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"zupey"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"zupey"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readUserModuleList() throws DataConversionException {","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"zupey"},"content":"        return readUserModuleList(filePath);","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"zupey"},"content":"     * Similar to {@link #readUserModuleList()}.","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"zupey"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"zupey"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"zupey"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"zupey"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readUserModuleList(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"zupey"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"zupey"},"content":"        Optional\u003cJsonSerializableUserModuleList\u003e jsonUserModuleList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"zupey"},"content":"            filePath, JsonSerializableUserModuleList.class);","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"zupey"},"content":"        if (jsonUserModuleList.isEmpty()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"zupey"},"content":"            return Optional.empty();","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"zupey"},"content":"        try {","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"zupey"},"content":"            return Optional.of(jsonUserModuleList.get().toModelType());","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"zupey"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"zupey"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"zupey"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"zupey"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"zupey"},"content":"    public void saveUserModuleList(ReadOnlyAddressBook userModuleList) throws IOException {","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"zupey"},"content":"        saveUserModuleList(userModuleList, filePath);","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"zupey"},"content":"     * Similar to {@link #saveUserModuleList(ReadOnlyAddressBook)}.","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"zupey"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"zupey"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"zupey"},"content":"    public void saveUserModuleList(ReadOnlyAddressBook userModuleList, Path filePath) throws IOException {","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"zupey"},"content":"        requireNonNull(userModuleList);","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"zupey"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"zupey"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"zupey"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableUserModuleList(userModuleList), filePath);","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"zupey":80}},{"path":"src/main/java/nus/climods/storage/module/user/UserModuleListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package nus.climods.storage.module.user;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"import nus.climods.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"import nus.climods.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"// TODO: Rename all \"ReadOnlyAddressBook\" to \"ReadOnlyUserModuleList\"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":" * Represents a storage for {@link nus.climods.model.AddressBook}.","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"public interface UserModuleListStorage {","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"    Path getUserModuleListFilePath();","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"     * Returns user module list data as a {@link ReadOnlyAddressBook}. Returns {@code Optional.empty()} if storage file","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"     * is not found.","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readUserModuleList() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"     * @see #getUserModuleListFilePath()","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"zupey"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readUserModuleList(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"zupey"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"zupey"},"content":"     * @param userModuleList cannot be null.","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"zupey"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"zupey"},"content":"    void saveUserModuleList(ReadOnlyAddressBook userModuleList) throws IOException;","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"zupey"},"content":"     * @see #saveUserModuleList(ReadOnlyAddressBook)","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"zupey"},"content":"    void saveUserModuleList(ReadOnlyAddressBook userModuleList, Path filePath) throws IOException;","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"zupey":45,"shenyih0ng":4}},{"path":"src/main/java/nus/climods/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.ui;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"sarrrdin"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"import javafx.scene.control.SplitPane;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"sarrrdin"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.core.GuiSettings;","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.core.LogsCenter;","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.Logic;","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.commands.CommandResult;","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.ui.common.CommandBox;","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.ui.common.HelpWindow;","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.ui.common.ResultDisplay;","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.ui.common.StatusBarFooter;","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.ui.module.ModuleListPanel;","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.ui.module.SavedModuleListPanel;","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":" * The Main Window. Provides the basic application layout containing a menu bar and space where other JavaFX elements","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":" * can be placed.","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"    private ModuleListPanel moduleListPanel;","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"    private SavedModuleListPanel savedModuleListPanel;","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"    @FXML","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"    private SplitPane modulesPane;","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"    private StackPane moduleListPanelPlaceholder;","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"    @FXML","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"    private StackPane savedModuleListPanelPlaceholder;","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"shenyih0ng"},"content":"        modulesPane \u003d new SplitPane();","lastModifiedDate":"2022-10-07"},{"lineNumber":133,"author":{"gitId":"shenyih0ng"},"content":"        ModuleListPanel moduleListPanel \u003d new ModuleListPanel(logic.getFilteredModuleList());","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"shenyih0ng"},"content":"        moduleListPanelPlaceholder.getChildren().add(moduleListPanel.getRoot());","lastModifiedDate":"2022-10-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"huzaifa1712"},"content":"        savedModuleListPanel \u003d new SavedModuleListPanel(logic.getFilteredUserModuleList());","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"shenyih0ng"},"content":"        savedModuleListPanelPlaceholder.getChildren().add(savedModuleListPanel.getRoot());","lastModifiedDate":"2022-10-07"},{"lineNumber":141,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":142,"author":{"gitId":"shenyih0ng"},"content":"        modulesPane.getItems().addAll(moduleListPanelPlaceholder, savedModuleListPanelPlaceholder);","lastModifiedDate":"2022-10-07"},{"lineNumber":143,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":144,"author":{"gitId":"shenyih0ng"},"content":"        // TODO: Resolve logic issue - null pointer exception","lastModifiedDate":"2022-10-07"},{"lineNumber":145,"author":{"gitId":"shenyih0ng"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(Path.of(\"\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"zupey"},"content":"            helpWindow.setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2022-10-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"sarrrdin"},"content":"        PauseTransition delay \u003d new PauseTransition(Duration.seconds(0.7));","lastModifiedDate":"2022-10-13"},{"lineNumber":190,"author":{"gitId":"sarrrdin"},"content":"        delay.setOnFinished(event -\u003e primaryStage.close());","lastModifiedDate":"2022-10-12"},{"lineNumber":191,"author":{"gitId":"sarrrdin"},"content":"        delay.play();","lastModifiedDate":"2022-10-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"shenyih0ng"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2022-10-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"sarrrdin":5,"huzaifa1712":1,"zupey":1,"-":175,"shenyih0ng":38}},{"path":"src/main/java/nus/climods/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.ui;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"     * Starts the UI (and the App).","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":11,"shenyih0ng":4}},{"path":"src/main/java/nus/climods/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.ui;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.MainApp;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.core.LogsCenter;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.util.StringUtil;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.Logic;","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"    private final Logic logic;","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters. This method only returns after the user has","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"     * closed the alert dialog.","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"        String contentText) {","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"        alert.setTitle(title);","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"        alert.showAndWait();","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"SeekSaveServe"},"content":"            mainWindow.getPrimaryStage().setMaximized(true);","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"shenyih0ng"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e}, and exits the application after the","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"shenyih0ng"},"content":"     * user has closed the alert dialog.","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"SeekSaveServe":1,"-":60,"shenyih0ng":28}},{"path":"src/main/java/nus/climods/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.ui;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.MainApp;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc. It contains a scene graph with","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":" * a root node of type {@code T}.","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"     * Resource folder where FXML files are stored.","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"     * Constructs a UiPart with the specified FXML file URL. The FXML file must not specify the {@code fx:controller}","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"     * attribute.","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object. The FXML file must not specify the {@code","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"     * fx:controller} attribute.","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @param root     Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":69,"shenyih0ng":24}},{"path":"src/main/java/nus/climods/ui/common/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.ui.common;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.Logic;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.commands.CommandResult;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.ui.UiPart;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"shenyih0ng"},"content":"         * @see Logic#execute(String)","lastModifiedDate":"2022-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"-":80,"shenyih0ng":8}},{"path":"src/main/java/nus/climods/ui/common/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.ui.common;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"import java.net.URL;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"import java.net.URLConnection;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"import javafx.scene.web.WebEngine;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"import javafx.scene.web.WebView;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"import nus.climods.commons.core.GuiSettings;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.core.LogsCenter;","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.ui.UiPart;","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"zupey"},"content":"    public static final String CLIMODS_BASE_URL \u003d \"https://ay2223s1-cs2103-f14-1.github.io/tp/\";","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"    public static final String USERGUIDE_URL \u003d CLIMODS_BASE_URL + \"UserGuide.html\";","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"zupey"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"zupey"},"content":"    private WebView webView;","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"     * @throws IllegalStateException \u003cul\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *                               if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *                               if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *                               if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *                               if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *                               \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":85,"author":{"gitId":"zupey"},"content":"        displayUserManual();","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"zupey"},"content":"    public void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"zupey"},"content":"        final double constantFactor \u003d 0.8;","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"zupey"},"content":"        getRoot().setHeight(guiSettings.getWindowHeight() * constantFactor);","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"zupey"},"content":"        getRoot().setWidth(guiSettings.getWindowWidth() * constantFactor);","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"zupey"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"zupey"},"content":"            getRoot().setX(guiSettings.getWindowCoordinates().getX() * constantFactor);","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"zupey"},"content":"            getRoot().setY(guiSettings.getWindowCoordinates().getY() * constantFactor);","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"zupey"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2022-10-13"},{"lineNumber":97,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"zupey"},"content":"     * Displays the UserManual that is hosted on the github website.","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"zupey"},"content":"     * If the connection is down, render the backup html file.","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"zupey"},"content":"    private void displayUserManual() {","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"zupey"},"content":"        WebEngine webEngine \u003d webView.getEngine();","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":106,"author":{"gitId":"zupey"},"content":"        if (isClimodsWebsiteUp()) {","lastModifiedDate":"2022-10-17"},{"lineNumber":107,"author":{"gitId":"zupey"},"content":"            preventRedirection(webEngine);","lastModifiedDate":"2022-10-16"},{"lineNumber":108,"author":{"gitId":"zupey"},"content":"            webEngine.load(USERGUIDE_URL);","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"zupey"},"content":"        } else {","lastModifiedDate":"2022-10-16"},{"lineNumber":110,"author":{"gitId":"zupey"},"content":"            loadLocalUserManual(webEngine);","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"zupey"},"content":"    private void loadLocalUserManual(WebEngine webEngine) {","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"zupey"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"zupey"},"content":"            Stream\u003cString\u003e lines \u003d Files.lines(","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"zupey"},"content":"                Paths.get(ClassLoader.getSystemResource(\"html/UserManual.html\").toURI())","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"zupey"},"content":"            );","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"zupey"},"content":"            webEngine.loadContent(lines.collect(Collectors.joining(\"\\n\")));","lastModifiedDate":"2022-10-13"},{"lineNumber":120,"author":{"gitId":"zupey"},"content":"        } catch (URISyntaxException | IOException e) {","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"zupey"},"content":"            logger.warning(\"User Manual not found!\");","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":125,"author":{"gitId":"zupey"},"content":"    private boolean isClimodsWebsiteUp() {","lastModifiedDate":"2022-10-17"},{"lineNumber":126,"author":{"gitId":"zupey"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"zupey"},"content":"            URL url \u003d new URL(USERGUIDE_URL);","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"zupey"},"content":"            URLConnection urlConnection \u003d url.openConnection();","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"zupey"},"content":"            urlConnection.connect();","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"zupey"},"content":"            return true;","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"zupey"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"zupey"},"content":"            return false;","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"zupey"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":136,"author":{"gitId":"zupey"},"content":"    private void preventRedirection(WebEngine webEngine) {","lastModifiedDate":"2022-10-16"},{"lineNumber":137,"author":{"gitId":"zupey"},"content":"        webEngine.locationProperty().addListener((obs, oldLocation, newLocation) -\u003e {","lastModifiedDate":"2022-10-16"},{"lineNumber":138,"author":{"gitId":"zupey"},"content":"            if (newLocation !\u003d null \u0026\u0026 !newLocation.startsWith(CLIMODS_BASE_URL)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":139,"author":{"gitId":"zupey"},"content":"                showWarningMessage(\"You are assessing a website outside of CLIMods.  \"","lastModifiedDate":"2022-10-16"},{"lineNumber":140,"author":{"gitId":"zupey"},"content":"                    + \"You will be redirected to our website.\");","lastModifiedDate":"2022-10-16"},{"lineNumber":141,"author":{"gitId":"zupey"},"content":"                if (oldLocation.contains(\"#\")) {","lastModifiedDate":"2022-10-16"},{"lineNumber":142,"author":{"gitId":"zupey"},"content":"                    webEngine.load(oldLocation.substring(0, oldLocation.indexOf(\"#\")));","lastModifiedDate":"2022-10-16"},{"lineNumber":143,"author":{"gitId":"zupey"},"content":"                } else {","lastModifiedDate":"2022-10-16"},{"lineNumber":144,"author":{"gitId":"zupey"},"content":"                    webEngine.load(oldLocation);","lastModifiedDate":"2022-10-16"},{"lineNumber":145,"author":{"gitId":"zupey"},"content":"                }","lastModifiedDate":"2022-10-16"},{"lineNumber":146,"author":{"gitId":"zupey"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"zupey"},"content":"        });","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"zupey"},"content":"    private void showWarningMessage(String message) {","lastModifiedDate":"2022-10-16"},{"lineNumber":151,"author":{"gitId":"zupey"},"content":"        Alert alert \u003d new Alert(Alert.AlertType.WARNING);","lastModifiedDate":"2022-10-16"},{"lineNumber":152,"author":{"gitId":"zupey"},"content":"        alert.setTitle(\"Warning\");","lastModifiedDate":"2022-10-16"},{"lineNumber":153,"author":{"gitId":"SeekSaveServe"},"content":"        Label warningMessage \u003d new Label(message);","lastModifiedDate":"2022-10-16"},{"lineNumber":154,"author":{"gitId":"SeekSaveServe"},"content":"        warningMessage.setWrapText(true);","lastModifiedDate":"2022-10-16"},{"lineNumber":155,"author":{"gitId":"SeekSaveServe"},"content":"        alert.getDialogPane().setContent(warningMessage);","lastModifiedDate":"2022-10-16"},{"lineNumber":156,"author":{"gitId":"zupey"},"content":"        alert.showAndWait();","lastModifiedDate":"2022-10-16"},{"lineNumber":157,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":158,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"SeekSaveServe":3,"zupey":86,"-":96,"shenyih0ng":5}},{"path":"src/main/java/nus/climods/ui/common/Pill.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.ui.common;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" * A button UI component in a shape of a pill.","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"public class Pill extends Button {","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"    private static final String DEFAULT_STYLE \u003d \"-fx-border-width:0;-fx-background-radius: 7px;-fx-padding: 3;\"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"        + \"-fx-font-size: 10;-fx-font-weight:bold\";","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"     * Constructor for Pill class.","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"     * @param text      button text","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"     * @param bgColor   background color","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"     * @param textColor text color","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"    public Pill(String text, String bgColor, String textColor) {","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"        setText(text);","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"        setStyle(String.format(\"%s;-fx-background-color:%s;-fx-text-fill:%s;\", DEFAULT_STYLE, bgColor, textColor));","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"     * Constructor for Pill class.","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"     * @param text      button text","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"     * @param bgColor   background color","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"     * @param textColor text color","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"     * @param fontSize  font size","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"    public Pill(String text, String bgColor, String textColor, int fontSize) {","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"        this(text, bgColor, textColor);","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"        setFont(new Font(getFont().getName(), fontSize));","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"shenyih0ng":38}},{"path":"src/main/java/nus/climods/ui/common/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.ui.common;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.ui.UiPart;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":27,"shenyih0ng":2}},{"path":"src/main/java/nus/climods/ui/common/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.ui.common;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.ui.UiPart;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":27,"shenyih0ng":2}},{"path":"src/main/java/nus/climods/ui/module/ModuleCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.ui.module;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"SeekSaveServe"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"SeekSaveServe"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"SeekSaveServe"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"SeekSaveServe"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"SeekSaveServe"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.ui.UiPart;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.ui.common.Pill;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"SeekSaveServe"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":" * A UI component that displays information of a {@code Module}.","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"SeekSaveServe"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"SeekSaveServe"},"content":"public class ModuleCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"SeekSaveServe"},"content":"    private static final String FXML \u003d \"ModuleListCard.fxml\";","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"    private static final String MODULE_CREDITS_BG_COLOR \u003d \"#61AFEF\";","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"    private static final String MODULE_CREDITS_TEXT_COLOR \u003d \"#FFFFFF\";","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"    private static final int MODULE_CREDITS_FONT_SIZE \u003d 13;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"    private static final String SEMESTER_BG_COLOR \u003d \"#C678DD\";","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"    private static final String SEMESTER_TEXT_COLOR \u003d \"#000000\";","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"    private static final int SEMESTER_FONT_SIZE \u003d 13;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX. As a consequence, UI","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"     * elements\u0027 variable names cannot be set to such keywords or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"SeekSaveServe"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"SeekSaveServe"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"SeekSaveServe"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"    public final Module module;","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"SeekSaveServe"},"content":"    @FXML","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"SeekSaveServe"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"SeekSaveServe"},"content":"    @FXML","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"SeekSaveServe"},"content":"    private Label title;","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"SeekSaveServe"},"content":"    @FXML","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"SeekSaveServe"},"content":"    private Label moduleCode;","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"SeekSaveServe"},"content":"    @FXML","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"SeekSaveServe"},"content":"    private Label department;","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"SeekSaveServe"},"content":"    @FXML","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"    private FlowPane moduleInfo;","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"SeekSaveServe"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"SeekSaveServe"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleCard(Module module) {","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"SeekSaveServe"},"content":"        super(FXML);","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"SeekSaveServe"},"content":"        this.module \u003d module;","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"        moduleCode.setText(module.getCode());","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"SeekSaveServe"},"content":"        title.setText(module.getTitle());","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"SeekSaveServe"},"content":"        department.setText(module.getDepartment());","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"        moduleInfo.getChildren()","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"            .addAll(module.getSemesters().stream().map(this::createSemesterPill).collect(Collectors.toList()));","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"        moduleInfo.getChildren().add(createModuleCreditsPill(module.getModuleCredit()));","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"    private Pill createSemesterPill(int semesterNum) {","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"        return new Pill(String.format(\"Semester %s\", semesterNum), SEMESTER_BG_COLOR, SEMESTER_TEXT_COLOR,","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"            SEMESTER_FONT_SIZE);","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"    private Pill createModuleCreditsPill(String moduleCredits) {","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"shenyih0ng"},"content":"        return new Pill(String.format(\"%s MCs\", moduleCredits), MODULE_CREDITS_BG_COLOR, MODULE_CREDITS_TEXT_COLOR,","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"shenyih0ng"},"content":"            MODULE_CREDITS_FONT_SIZE);","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":72,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":73,"author":{"gitId":"SeekSaveServe"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":74,"author":{"gitId":"SeekSaveServe"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":75,"author":{"gitId":"SeekSaveServe"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":76,"author":{"gitId":"SeekSaveServe"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-02"},{"lineNumber":77,"author":{"gitId":"SeekSaveServe"},"content":"            return true;","lastModifiedDate":"2022-10-02"},{"lineNumber":78,"author":{"gitId":"SeekSaveServe"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":79,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":80,"author":{"gitId":"SeekSaveServe"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-02"},{"lineNumber":81,"author":{"gitId":"SeekSaveServe"},"content":"        if (!(other instanceof ModuleCard)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":82,"author":{"gitId":"SeekSaveServe"},"content":"            return false;","lastModifiedDate":"2022-10-02"},{"lineNumber":83,"author":{"gitId":"SeekSaveServe"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":84,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":85,"author":{"gitId":"SeekSaveServe"},"content":"        // state check","lastModifiedDate":"2022-10-02"},{"lineNumber":86,"author":{"gitId":"SeekSaveServe"},"content":"        ModuleCard card \u003d (ModuleCard) other;","lastModifiedDate":"2022-10-02"},{"lineNumber":87,"author":{"gitId":"SeekSaveServe"},"content":"        return moduleCode.getText().equals(card.moduleCode.getText())","lastModifiedDate":"2022-10-02"},{"lineNumber":88,"author":{"gitId":"SeekSaveServe"},"content":"            \u0026\u0026 module.equals(card.module);","lastModifiedDate":"2022-10-02"},{"lineNumber":89,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":90,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"SeekSaveServe":56,"shenyih0ng":34}},{"path":"src/main/java/nus/climods/ui/module/ModuleListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.ui.module;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"SeekSaveServe"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"SeekSaveServe"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"SeekSaveServe"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"SeekSaveServe"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"SeekSaveServe"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"SeekSaveServe"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.core.LogsCenter;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.module.Module;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.ui.UiPart;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"SeekSaveServe"},"content":"/**","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"SeekSaveServe"},"content":" * Panel containing the list of modules.","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"SeekSaveServe"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"SeekSaveServe"},"content":"public class ModuleListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"SeekSaveServe"},"content":"    private static final String FXML \u003d \"ModuleListPanel.fxml\";","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"SeekSaveServe"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ModuleListPanel.class);","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"SeekSaveServe"},"content":"    @FXML","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"    private ListView\u003cModule\u003e moduleListView;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"SeekSaveServe"},"content":"     * Creates a {@code ModuleListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"sarrrdin"},"content":"     * @param moduleList","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"SeekSaveServe"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleListPanel(ObservableList\u003cModule\u003e moduleList) {","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"SeekSaveServe"},"content":"        super(FXML);","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"SeekSaveServe"},"content":"        moduleListView.setItems(moduleList);","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"SeekSaveServe"},"content":"        moduleListView.setCellFactory(listView -\u003e new ModuleListViewCell());","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"SeekSaveServe"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Module} using a {@code ModuleCard}.","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"SeekSaveServe"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"    class ModuleListViewCell extends ListCell\u003cModule\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"SeekSaveServe"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"        protected void updateItem(Module module, boolean empty) {","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"SeekSaveServe"},"content":"            super.updateItem(module, empty);","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"SeekSaveServe"},"content":"            if (empty || module \u003d\u003d null) {","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"SeekSaveServe"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"SeekSaveServe"},"content":"                setText(null);","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"SeekSaveServe"},"content":"            } else {","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"SeekSaveServe"},"content":"                setGraphic(new ModuleCard(module).getRoot());","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"SeekSaveServe"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"SeekSaveServe"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"SeekSaveServe":41,"sarrrdin":1,"shenyih0ng":10}},{"path":"src/main/java/nus/climods/ui/module/SavedModuleCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.ui.module;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"SeekSaveServe"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"SeekSaveServe"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"SeekSaveServe"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"SeekSaveServe"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"SeekSaveServe"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.model.module.UserModule;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.ui.UiPart;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.ui.common.Pill;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"SeekSaveServe"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"SeekSaveServe"},"content":" * An UI component that displays information of a {@code Module}.","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"SeekSaveServe"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"SeekSaveServe"},"content":"public class SavedModuleCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"SeekSaveServe"},"content":"    private static final String FXML \u003d \"SavedModuleListCard.fxml\";","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX. As a consequence, UI","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"     * elements\u0027 variable names cannot be set to such keywords or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"SeekSaveServe"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"SeekSaveServe"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"SeekSaveServe"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"SeekSaveServe"},"content":"    private static final String AY_SEMESTER_BG_COLOR \u003d \"#E5C07B\";","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"SeekSaveServe"},"content":"    private static final String AY_SEMESTER_TEXT_COLOR \u003d \"#2E333D\";","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"huzaifa1712"},"content":"    public final UserModule module;","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"SeekSaveServe"},"content":"    @FXML","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"SeekSaveServe"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"SeekSaveServe"},"content":"    @FXML","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"SeekSaveServe"},"content":"    private Label moduleCode;","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"SeekSaveServe"},"content":"    @FXML","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"SeekSaveServe"},"content":"    private Label tutorial;","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"SeekSaveServe"},"content":"    @FXML","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"SeekSaveServe"},"content":"    private Label lecture;","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"SeekSaveServe"},"content":"    @FXML","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"SeekSaveServe"},"content":"    private FlowPane ayData;","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"SeekSaveServe"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"SeekSaveServe"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"huzaifa1712"},"content":"    public SavedModuleCard(UserModule module) {","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"SeekSaveServe"},"content":"        super(FXML);","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"SeekSaveServe"},"content":"        this.module \u003d module;","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"huzaifa1712"},"content":"        moduleCode.setText(module.getUserModuleCode());","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"huzaifa1712"},"content":"        tutorial.setText(module.getTutorial());","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"huzaifa1712"},"content":"        lecture.setText(module.getLecture());","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"huzaifa1712"},"content":"        ayData.getChildren().add(new Pill(module.getSelectedSemester(), AY_SEMESTER_BG_COLOR, AY_SEMESTER_TEXT_COLOR));","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"SeekSaveServe"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"SeekSaveServe"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"SeekSaveServe"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"SeekSaveServe"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"SeekSaveServe"},"content":"            return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"SeekSaveServe"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"SeekSaveServe"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"SeekSaveServe"},"content":"        if (!(other instanceof SavedModuleCard)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"SeekSaveServe"},"content":"            return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"SeekSaveServe"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"SeekSaveServe"},"content":"        // state check","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"SeekSaveServe"},"content":"        SavedModuleCard card \u003d (SavedModuleCard) other;","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"SeekSaveServe"},"content":"        return moduleCode.getText().equals(card.moduleCode.getText())","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"SeekSaveServe"},"content":"            \u0026\u0026 module.equals(card.module);","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"SeekSaveServe":59,"huzaifa1712":7,"shenyih0ng":5}},{"path":"src/main/java/nus/climods/ui/module/SavedModuleListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.ui.module;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"SeekSaveServe"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"SeekSaveServe"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"SeekSaveServe"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"SeekSaveServe"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"SeekSaveServe"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"SeekSaveServe"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.core.LogsCenter;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.model.module.UserModule;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.ui.UiPart;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"SeekSaveServe"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"SeekSaveServe"},"content":" * Panel containing the list of modules.","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"SeekSaveServe"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"SeekSaveServe"},"content":"public class SavedModuleListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"    private static final String FXML \u003d \"SavedModuleListPanel.fxml\";","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"SeekSaveServe"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(SavedModuleListPanel.class);","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"SeekSaveServe"},"content":"    @FXML","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"huzaifa1712"},"content":"    private ListView\u003cUserModule\u003e moduleListView;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"SeekSaveServe"},"content":"     * Creates a {@code ModuleListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"SeekSaveServe"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"huzaifa1712"},"content":"    public SavedModuleListPanel(ObservableList\u003cUserModule\u003e moduleList) {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"SeekSaveServe"},"content":"        super(FXML);","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"SeekSaveServe"},"content":"        moduleListView.setItems(moduleList);","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"SeekSaveServe"},"content":"        moduleListView.setCellFactory(listView -\u003e new ModuleListViewCell());","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"SeekSaveServe"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Module} using a {@code ModuleCard}.","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"SeekSaveServe"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"huzaifa1712"},"content":"    class ModuleListViewCell extends ListCell\u003cUserModule\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"SeekSaveServe"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"huzaifa1712"},"content":"        protected void updateItem(UserModule module, boolean empty) {","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"SeekSaveServe"},"content":"            super.updateItem(module, empty);","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"SeekSaveServe"},"content":"            if (empty || module \u003d\u003d null) {","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"SeekSaveServe"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"SeekSaveServe"},"content":"                setText(null);","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"SeekSaveServe"},"content":"            } else {","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"SeekSaveServe"},"content":"                setGraphic(new SavedModuleCard(module).getRoot());","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"SeekSaveServe"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"SeekSaveServe"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"SeekSaveServe":41,"huzaifa1712":5,"shenyih0ng":6}},{"path":"src/main/java/org/openapitools/client/ApiClient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"/*","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API contains data used to render \u003chttps://nusmods.com\u003e. It includes data on modules offered by NUS and their timetables, as well as information on the locations the classes take place in. You are welcome to use and experiment with the data, which is extracted from official APIs provided by the Registrar\u0027s Office.  The API consists of static JSON files scraped daily from the school\u0027s APIs. This means it only partially follow REST conventions, and all resources are read only. All successful responses will return JSON, and all endpoints end in `.json`.  The shape of the data returned by these endpoints are designed for NUSMods in mind. If you have any questions or find that you need the data in other shapes for other purposes, feel free to reach out to us:  - **Telegram**: \u003chttps://telegram.me/nusmods\u003e - **Mailing list**: \u003cnusmods@googlegroups.com\u003e (for security related issues please email \u003cmods@nusmods.com\u003e instead)  ## Fetching data  Any HTTP client can be used to fetch data from the API. HTTPS is preferred, but the server will also respond to HTTP requests. The server supports HTTP 1.1 as well as HTTP 2 over HTTPS, and supports gzip compression.  The API has no authentication, and is not rate limited. While the server can respond to a large number of requests simultaneously, we request that you be polite with resource usage so as not to disrupt nusmods.com, which relies on the same API server. In general there is no need to fetch data from the API more than once per day, as that is the frequency at which we update the data.  [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) headers are enabled on all endpoints, so client-side JavaScript can use also use the API.  ## TypeScript types  Since the NUSMods is written in TypeScript, typings are available in the source for the scraper. These may be easier to read than the documentation generated by Swagger.  - Module types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/modules.ts\u003e - Venue types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/venues.ts\u003e  ## Data  Below are some notes about the data returned from the API. Feel free to talk to us or create an issue if any of it is not clear.  ### Module data  Module endpoints return information on modules offered by NUS. Most of the module data is self-explanatory, but some of the data are more complex and is explained here.  #### Lessons  Each lesson in a timetable has a lesson type `lessonType` and class number `ClassNo`. Every student must take one of each lesson type offered by the module. For example, this module offers two tutorials and one lecture. That means the student must attend the lecture, and can choose one of the two tutorials to attend.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"01\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1100\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"COM1-0207\\\"     },     {       \\\"classNo\\\": \\\"02\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Friday\\\",       \\\"startTime\\\": \\\"0900\\\",       \\\"endTime\\\": \\\"1000\\\",       \\\"venue\\\": \\\"COM1-0209\\\"     }   ] } ```  Each lesson has a `classNo` key. There can be multiple lessons of the same type and class number, in which case students must attend both. In this example, students can choose to attend either lecture group 1 on Tuesdays and Wednesdays, or lecture group 2 on Mondays and Wednesdays.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1400\\\",       \\\"endTime\\\": \\\"1500\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Monday\\\",       \\\"startTime\\\": \\\"1000\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1500\\\",       \\\"endTime\\\": \\\"1600\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     }   ] } ```  #### Lesson Weeks  The `weeks` key on lessons can return data in one of two forms.  Weeks is usually a sorted array of numbers. In this case it represents the school weeks the lesson occurs on, from 1 to 13.  Some classes have lessons outside of the school timetable. In this case a `WeekRange` object is returned. The object will always contain a `start` and `end` key representing the start and end date of lessons. The example below has classes every week from 17th Jan to 18th April.  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-04-18\\\" } ```  Optionally it can also include `weekInterval`, a positive integer describing the number of weeks between each lesson, and `weeks`, an array of positive integers describing the weeks on which the lesson will fall, with week 1 being the starting date. If these are not present you can assume lessons will occur every week.  The following example has lessons on 17th Jan (week 1), 24th Jan (week 2), 7th Feb (week 4) and 21st Feb (week 6).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-21\\\",   \\\"weeks\\\": [1, 2, 4, 6] } ```  The following example has lessons on 17th Jan (week 1), 31st Jan (week 3), 14th Feb (week 5) and 28th Feb (week 7).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-28\\\",   \\\"weekInterval\\\": 2 } ```  #### Workload  The `workload` key can return data in one of two forms.  Workload is usually a **5-tuple of numbers**, describing the estimated number of hours per week the student is expected to put in for the module for **lectures, tutorials, laboratory, projects/fieldwork, and preparatory work** respectively. For example, a workload of `[2, 1, 1, 3, 3]` means the student should spend every week  - 2 hours in lectures - 1 hour in tutorials - 1 hour at the lab - 3 hours doing project work - 3 hours preparing for classes  Each module credit represents 2.5 hours of work each week, so the standard 4 MC module represents 10 hours of work each week. Module credit may not be integers.  Note that this is only an estimate, and may be outdated or differ significantly in reality. Some modules also incorrectly lists the **total** workload hours instead of weekly, so very large values may show up.  This value is parsed from a string provided by the school, and occasionally this field will contain unusual values which cannot be parsed. In this case this field will contain the original **string** instead, which should be displayed as-is to the user.  #### Prerequisite, corequisite and preclusions  These three keys determine whether a student can take a module.  **Prerequisites** are requirements you have to meet before you can take a module. These are usually in the form of other modules (see prerequisite tree below for a machine readable format), but can also be things like \u0027taken A-level H2 math\u0027 or \u002770 MCs and above\u0027.  **Preclusions** refer to modules or requirements that cannot be taken if this module is taken, and vice versa. These are usually modules whose content overlaps significantly with this module, and can usually be used to replace each other to fulfill prerequisites.  **Corequisites** are modules that must be taken together with this module in the same semester. This usually refer to twined modules - modules which have linked syllabuses.  #### Prerequisite Tree  The `prereqTree` key is return on the individual module endpoint (`/modules/{moduleCode`). Not all modules have prerequisites, and some have prerequisites that cannot be properly represented as a tree, in which case this key will not appear.  This describes the prerequisites that need to be fulfilled before this module can be taken. The data structure is recursive and represents a tree.  ```json {   \\\"and\\\": [     \\\"CS1231\\\",     {       \\\"or\\\": [\\\"CS1010S\\\", \\\"CS1010X\\\"]     }   ] } ```  In the example, this module requires CS1231 and either CS1010S or CS1010X. This can be visualized as  ```            ┌ CS1231 ── all of ─┤            │         ┌ CS1010            └ one of ─┤                      └ CS1010X ```  The module information also contains the inverse of this, that is, modules whose requirements are fulfilled by this module (taking this module will allow you to take these modules in the following semester). The data is found on the `fulfillRequirements` key as an array of module codes.  ### Venue data  Venue data is simply the module timetable restructured to show the lessons happening at each classroom.  The venue list endpoint returns a list of all locations that are used in the semester. Note that this is not a comprehensive list of locations, but rather just a list of venues that appears in module lessons.  The venue information endpoint returns the full class and occupancy information about a venue. The `classes` key contains a list of lessons similar to the `timetable` key in module data, but without a `venue` key and with `moduleCode`.","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":" * The version of the OpenAPI document: 2.0.0","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":" * Contact: nusmods@googlegroups.com","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":" * https://openapi-generator.tech","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":" * Do not edit the class manually.","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"package org.openapitools.client;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"import static java.nio.charset.StandardCharsets.UTF_8;","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"import java.io.InputStream;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"import java.net.URI;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"import java.net.URLEncoder;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"import java.net.http.HttpClient;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"import java.net.http.HttpConnectTimeoutException;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"import java.net.http.HttpRequest;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"import java.net.http.HttpResponse;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"import java.time.Duration;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"import java.time.OffsetDateTime;","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"import java.util.List;","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"import org.openapitools.jackson.nullable.JsonNullableModule;","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonInclude;","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":" * Configuration and utility class for API clients.","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":" * \u003cp\u003eThis class can be constructed and modified, then used to instantiate the","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":" * various API classes. The API classes use the settings in this class to configure themselves, but otherwise do not","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":" * store a link to this class.\u003c/p\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":" * \u003cp\u003eThis class is mutable and not synchronized, so it is not thread-safe.","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":" * The API classes generated from this are immutable and thread-safe.\u003c/p\u003e","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":" * \u003cp\u003eThe setter methods of this class return the current object to facilitate","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":" * a fluent style of configuration.\u003c/p\u003e","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"@javax.annotation.processing.Generated(value \u003d \"org.openapitools.codegen.languages.JavaClientCodegen\", date \u003d \"2022-10-03T22:22:26.802458+08:00[Asia/Singapore]\")","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"public class ApiClient {","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"    private HttpClient.Builder builder;","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"    private ObjectMapper mapper;","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"    private String scheme;","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"    private String host;","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"    private int port;","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"    private String basePath;","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"    private Consumer\u003cHttpRequest.Builder\u003e interceptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"    private Consumer\u003cHttpResponse\u003cInputStream\u003e\u003e responseInterceptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"    private Consumer\u003cHttpResponse\u003cString\u003e\u003e asyncResponseInterceptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"    private Duration readTimeout;","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"    private Duration connectTimeout;","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"shenyih0ng"},"content":"     * Create an instance of ApiClient.","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"shenyih0ng"},"content":"    public ApiClient() {","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"shenyih0ng"},"content":"        this.builder \u003d createDefaultHttpClientBuilder();","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"shenyih0ng"},"content":"        this.mapper \u003d createDefaultObjectMapper();","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"shenyih0ng"},"content":"        updateBaseUri(getDefaultBaseUri());","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"shenyih0ng"},"content":"        interceptor \u003d null;","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"shenyih0ng"},"content":"        readTimeout \u003d null;","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"shenyih0ng"},"content":"        connectTimeout \u003d null;","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"shenyih0ng"},"content":"        responseInterceptor \u003d null;","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"shenyih0ng"},"content":"        asyncResponseInterceptor \u003d null;","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":82,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":84,"author":{"gitId":"shenyih0ng"},"content":"     * Create an instance of ApiClient.","lastModifiedDate":"2022-10-07"},{"lineNumber":85,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":86,"author":{"gitId":"shenyih0ng"},"content":"     * @param builder Http client builder.","lastModifiedDate":"2022-10-07"},{"lineNumber":87,"author":{"gitId":"shenyih0ng"},"content":"     * @param mapper  Object mapper.","lastModifiedDate":"2022-10-07"},{"lineNumber":88,"author":{"gitId":"shenyih0ng"},"content":"     * @param baseUri Base URI","lastModifiedDate":"2022-10-07"},{"lineNumber":89,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":90,"author":{"gitId":"shenyih0ng"},"content":"    public ApiClient(HttpClient.Builder builder, ObjectMapper mapper, String baseUri) {","lastModifiedDate":"2022-10-07"},{"lineNumber":91,"author":{"gitId":"shenyih0ng"},"content":"        this.builder \u003d builder;","lastModifiedDate":"2022-10-07"},{"lineNumber":92,"author":{"gitId":"shenyih0ng"},"content":"        this.mapper \u003d mapper;","lastModifiedDate":"2022-10-07"},{"lineNumber":93,"author":{"gitId":"shenyih0ng"},"content":"        updateBaseUri(baseUri !\u003d null ? baseUri : getDefaultBaseUri());","lastModifiedDate":"2022-10-07"},{"lineNumber":94,"author":{"gitId":"shenyih0ng"},"content":"        interceptor \u003d null;","lastModifiedDate":"2022-10-07"},{"lineNumber":95,"author":{"gitId":"shenyih0ng"},"content":"        readTimeout \u003d null;","lastModifiedDate":"2022-10-07"},{"lineNumber":96,"author":{"gitId":"shenyih0ng"},"content":"        connectTimeout \u003d null;","lastModifiedDate":"2022-10-07"},{"lineNumber":97,"author":{"gitId":"shenyih0ng"},"content":"        responseInterceptor \u003d null;","lastModifiedDate":"2022-10-07"},{"lineNumber":98,"author":{"gitId":"shenyih0ng"},"content":"        asyncResponseInterceptor \u003d null;","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":100,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":101,"author":{"gitId":"shenyih0ng"},"content":"    private static String valueToString(Object value) {","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"shenyih0ng"},"content":"        if (value \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"shenyih0ng"},"content":"            return \"\";","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"shenyih0ng"},"content":"        if (value instanceof OffsetDateTime) {","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"shenyih0ng"},"content":"            return ((OffsetDateTime) value).format(DateTimeFormatter.ISO_OFFSET_DATE_TIME);","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"shenyih0ng"},"content":"        return value.toString();","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"shenyih0ng"},"content":"     * URL encode a string in the UTF-8 encoding.","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"shenyih0ng"},"content":"     * @param s String to encode.","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"shenyih0ng"},"content":"     * @return URL-encoded representation of the input string.","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"shenyih0ng"},"content":"    public static String urlEncode(String s) {","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"shenyih0ng"},"content":"        return URLEncoder.encode(s, UTF_8).replaceAll(\"\\\\+\", \"%20\");","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"shenyih0ng"},"content":"     * Convert a URL query name/value parameter to a list of encoded {@link Pair} objects.","lastModifiedDate":"2022-10-07"},{"lineNumber":123,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"shenyih0ng"},"content":"     * \u003cp\u003eThe value can be null, in which case an empty list is returned.\u003c/p\u003e","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"shenyih0ng"},"content":"     * @param name  The query name parameter.","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"shenyih0ng"},"content":"     * @param value The query value, which may not be a collection but may be null.","lastModifiedDate":"2022-10-07"},{"lineNumber":128,"author":{"gitId":"shenyih0ng"},"content":"     * @return A singleton list of the {@link Pair} objects representing the input parameters, which is encoded for use","lastModifiedDate":"2022-10-07"},{"lineNumber":129,"author":{"gitId":"shenyih0ng"},"content":"     * in a URL. If the value is null, an empty list is returned.","lastModifiedDate":"2022-10-07"},{"lineNumber":130,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"shenyih0ng"},"content":"    public static List\u003cPair\u003e parameterToPairs(String name, Object value) {","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"shenyih0ng"},"content":"        if (name \u003d\u003d null || name.isEmpty() || value \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"shenyih0ng"},"content":"            return Collections.emptyList();","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"shenyih0ng"},"content":"        return Collections.singletonList(new Pair(urlEncode(name), urlEncode(valueToString(value))));","lastModifiedDate":"2022-10-03"},{"lineNumber":136,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":138,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":139,"author":{"gitId":"shenyih0ng"},"content":"     * Convert a URL query name/collection parameter to a list of encoded {@link Pair} objects.","lastModifiedDate":"2022-10-07"},{"lineNumber":140,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":141,"author":{"gitId":"shenyih0ng"},"content":"     * @param collectionFormat The swagger collectionFormat string (csv, tsv, etc).","lastModifiedDate":"2022-10-03"},{"lineNumber":142,"author":{"gitId":"shenyih0ng"},"content":"     * @param name             The query name parameter.","lastModifiedDate":"2022-10-03"},{"lineNumber":143,"author":{"gitId":"shenyih0ng"},"content":"     * @param values           A collection of values for the given query name, which may be null.","lastModifiedDate":"2022-10-07"},{"lineNumber":144,"author":{"gitId":"shenyih0ng"},"content":"     * @return A list of {@link Pair} objects representing the input parameters, which is encoded for use in a URL. If","lastModifiedDate":"2022-10-07"},{"lineNumber":145,"author":{"gitId":"shenyih0ng"},"content":"     * the values collection is null, an empty list is returned.","lastModifiedDate":"2022-10-07"},{"lineNumber":146,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":147,"author":{"gitId":"shenyih0ng"},"content":"    public static List\u003cPair\u003e parameterToPairs(","lastModifiedDate":"2022-10-03"},{"lineNumber":148,"author":{"gitId":"shenyih0ng"},"content":"        String collectionFormat, String name, Collection\u003c?\u003e values) {","lastModifiedDate":"2022-10-03"},{"lineNumber":149,"author":{"gitId":"shenyih0ng"},"content":"        if (name \u003d\u003d null || name.isEmpty() || values \u003d\u003d null || values.isEmpty()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":150,"author":{"gitId":"shenyih0ng"},"content":"            return Collections.emptyList();","lastModifiedDate":"2022-10-03"},{"lineNumber":151,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":152,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":153,"author":{"gitId":"shenyih0ng"},"content":"        // get the collection format (default: csv)","lastModifiedDate":"2022-10-03"},{"lineNumber":154,"author":{"gitId":"shenyih0ng"},"content":"        String format \u003d collectionFormat \u003d\u003d null || collectionFormat.isEmpty() ? \"csv\" : collectionFormat;","lastModifiedDate":"2022-10-03"},{"lineNumber":155,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":156,"author":{"gitId":"shenyih0ng"},"content":"        // create the params based on the collection format","lastModifiedDate":"2022-10-03"},{"lineNumber":157,"author":{"gitId":"shenyih0ng"},"content":"        if (\"multi\".equals(format)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":158,"author":{"gitId":"shenyih0ng"},"content":"            return values.stream()","lastModifiedDate":"2022-10-03"},{"lineNumber":159,"author":{"gitId":"shenyih0ng"},"content":"                .map(value -\u003e new Pair(urlEncode(name), urlEncode(valueToString(value))))","lastModifiedDate":"2022-10-03"},{"lineNumber":160,"author":{"gitId":"shenyih0ng"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-10-03"},{"lineNumber":161,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":162,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":163,"author":{"gitId":"shenyih0ng"},"content":"        String delimiter;","lastModifiedDate":"2022-10-03"},{"lineNumber":164,"author":{"gitId":"shenyih0ng"},"content":"        switch (format) {","lastModifiedDate":"2022-10-03"},{"lineNumber":165,"author":{"gitId":"shenyih0ng"},"content":"        case \"csv\":","lastModifiedDate":"2022-10-03"},{"lineNumber":166,"author":{"gitId":"shenyih0ng"},"content":"            delimiter \u003d urlEncode(\",\");","lastModifiedDate":"2022-10-03"},{"lineNumber":167,"author":{"gitId":"shenyih0ng"},"content":"            break;","lastModifiedDate":"2022-10-03"},{"lineNumber":168,"author":{"gitId":"shenyih0ng"},"content":"        case \"ssv\":","lastModifiedDate":"2022-10-03"},{"lineNumber":169,"author":{"gitId":"shenyih0ng"},"content":"            delimiter \u003d urlEncode(\" \");","lastModifiedDate":"2022-10-03"},{"lineNumber":170,"author":{"gitId":"shenyih0ng"},"content":"            break;","lastModifiedDate":"2022-10-03"},{"lineNumber":171,"author":{"gitId":"shenyih0ng"},"content":"        case \"tsv\":","lastModifiedDate":"2022-10-03"},{"lineNumber":172,"author":{"gitId":"shenyih0ng"},"content":"            delimiter \u003d urlEncode(\"\\t\");","lastModifiedDate":"2022-10-03"},{"lineNumber":173,"author":{"gitId":"shenyih0ng"},"content":"            break;","lastModifiedDate":"2022-10-03"},{"lineNumber":174,"author":{"gitId":"shenyih0ng"},"content":"        case \"pipes\":","lastModifiedDate":"2022-10-03"},{"lineNumber":175,"author":{"gitId":"shenyih0ng"},"content":"            delimiter \u003d urlEncode(\"|\");","lastModifiedDate":"2022-10-03"},{"lineNumber":176,"author":{"gitId":"shenyih0ng"},"content":"            break;","lastModifiedDate":"2022-10-03"},{"lineNumber":177,"author":{"gitId":"shenyih0ng"},"content":"        default:","lastModifiedDate":"2022-10-03"},{"lineNumber":178,"author":{"gitId":"shenyih0ng"},"content":"            throw new IllegalArgumentException(\"Illegal collection format: \" + collectionFormat);","lastModifiedDate":"2022-10-03"},{"lineNumber":179,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":180,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":181,"author":{"gitId":"shenyih0ng"},"content":"        StringJoiner joiner \u003d new StringJoiner(delimiter);","lastModifiedDate":"2022-10-03"},{"lineNumber":182,"author":{"gitId":"shenyih0ng"},"content":"        for (Object value : values) {","lastModifiedDate":"2022-10-03"},{"lineNumber":183,"author":{"gitId":"shenyih0ng"},"content":"            joiner.add(urlEncode(valueToString(value)));","lastModifiedDate":"2022-10-03"},{"lineNumber":184,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":185,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":186,"author":{"gitId":"shenyih0ng"},"content":"        return Collections.singletonList(new Pair(urlEncode(name), joiner.toString()));","lastModifiedDate":"2022-10-03"},{"lineNumber":187,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":188,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":189,"author":{"gitId":"shenyih0ng"},"content":"    protected ObjectMapper createDefaultObjectMapper() {","lastModifiedDate":"2022-10-03"},{"lineNumber":190,"author":{"gitId":"shenyih0ng"},"content":"        ObjectMapper mapper \u003d new ObjectMapper();","lastModifiedDate":"2022-10-03"},{"lineNumber":191,"author":{"gitId":"shenyih0ng"},"content":"        mapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);","lastModifiedDate":"2022-10-03"},{"lineNumber":192,"author":{"gitId":"shenyih0ng"},"content":"        mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);","lastModifiedDate":"2022-10-03"},{"lineNumber":193,"author":{"gitId":"shenyih0ng"},"content":"        mapper.configure(DeserializationFeature.FAIL_ON_INVALID_SUBTYPE, false);","lastModifiedDate":"2022-10-03"},{"lineNumber":194,"author":{"gitId":"shenyih0ng"},"content":"        mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);","lastModifiedDate":"2022-10-03"},{"lineNumber":195,"author":{"gitId":"shenyih0ng"},"content":"        mapper.enable(SerializationFeature.WRITE_ENUMS_USING_TO_STRING);","lastModifiedDate":"2022-10-03"},{"lineNumber":196,"author":{"gitId":"shenyih0ng"},"content":"        mapper.enable(DeserializationFeature.READ_ENUMS_USING_TO_STRING);","lastModifiedDate":"2022-10-03"},{"lineNumber":197,"author":{"gitId":"shenyih0ng"},"content":"        mapper.disable(DeserializationFeature.ADJUST_DATES_TO_CONTEXT_TIME_ZONE);","lastModifiedDate":"2022-10-03"},{"lineNumber":198,"author":{"gitId":"shenyih0ng"},"content":"        mapper.registerModule(new JavaTimeModule());","lastModifiedDate":"2022-10-03"},{"lineNumber":199,"author":{"gitId":"shenyih0ng"},"content":"        mapper.registerModule(new JsonNullableModule());","lastModifiedDate":"2022-10-03"},{"lineNumber":200,"author":{"gitId":"shenyih0ng"},"content":"        return mapper;","lastModifiedDate":"2022-10-03"},{"lineNumber":201,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":202,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":203,"author":{"gitId":"shenyih0ng"},"content":"    protected String getDefaultBaseUri() {","lastModifiedDate":"2022-10-03"},{"lineNumber":204,"author":{"gitId":"shenyih0ng"},"content":"        return \"https://api.nusmods.com/v2\";","lastModifiedDate":"2022-10-03"},{"lineNumber":205,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":206,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":207,"author":{"gitId":"shenyih0ng"},"content":"    protected HttpClient.Builder createDefaultHttpClientBuilder() {","lastModifiedDate":"2022-10-03"},{"lineNumber":208,"author":{"gitId":"shenyih0ng"},"content":"        return HttpClient.newBuilder();","lastModifiedDate":"2022-10-03"},{"lineNumber":209,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":210,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":211,"author":{"gitId":"shenyih0ng"},"content":"    public void updateBaseUri(String baseUri) {","lastModifiedDate":"2022-10-03"},{"lineNumber":212,"author":{"gitId":"shenyih0ng"},"content":"        URI uri \u003d URI.create(baseUri);","lastModifiedDate":"2022-10-03"},{"lineNumber":213,"author":{"gitId":"shenyih0ng"},"content":"        scheme \u003d uri.getScheme();","lastModifiedDate":"2022-10-03"},{"lineNumber":214,"author":{"gitId":"shenyih0ng"},"content":"        host \u003d uri.getHost();","lastModifiedDate":"2022-10-03"},{"lineNumber":215,"author":{"gitId":"shenyih0ng"},"content":"        port \u003d uri.getPort();","lastModifiedDate":"2022-10-03"},{"lineNumber":216,"author":{"gitId":"shenyih0ng"},"content":"        basePath \u003d uri.getRawPath();","lastModifiedDate":"2022-10-03"},{"lineNumber":217,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":218,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":219,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":220,"author":{"gitId":"shenyih0ng"},"content":"     * Set a custom {@link HttpClient.Builder} object to use when creating the {@link HttpClient} that is used by the","lastModifiedDate":"2022-10-07"},{"lineNumber":221,"author":{"gitId":"shenyih0ng"},"content":"     * API client.","lastModifiedDate":"2022-10-07"},{"lineNumber":222,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":223,"author":{"gitId":"shenyih0ng"},"content":"     * @param builder Custom client builder.","lastModifiedDate":"2022-10-03"},{"lineNumber":224,"author":{"gitId":"shenyih0ng"},"content":"     * @return This object.","lastModifiedDate":"2022-10-03"},{"lineNumber":225,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":226,"author":{"gitId":"shenyih0ng"},"content":"    public ApiClient setHttpClientBuilder(HttpClient.Builder builder) {","lastModifiedDate":"2022-10-03"},{"lineNumber":227,"author":{"gitId":"shenyih0ng"},"content":"        this.builder \u003d builder;","lastModifiedDate":"2022-10-03"},{"lineNumber":228,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":229,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":230,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":231,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":232,"author":{"gitId":"shenyih0ng"},"content":"     * Get an {@link HttpClient} based on the current {@link HttpClient.Builder}.","lastModifiedDate":"2022-10-03"},{"lineNumber":233,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":234,"author":{"gitId":"shenyih0ng"},"content":"     * \u003cp\u003eThe returned object is immutable and thread-safe.\u003c/p\u003e","lastModifiedDate":"2022-10-03"},{"lineNumber":235,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":236,"author":{"gitId":"shenyih0ng"},"content":"     * @return The HTTP client.","lastModifiedDate":"2022-10-03"},{"lineNumber":237,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":238,"author":{"gitId":"shenyih0ng"},"content":"    public HttpClient getHttpClient() {","lastModifiedDate":"2022-10-03"},{"lineNumber":239,"author":{"gitId":"shenyih0ng"},"content":"        return builder.build();","lastModifiedDate":"2022-10-03"},{"lineNumber":240,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":241,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":242,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":243,"author":{"gitId":"shenyih0ng"},"content":"     * Get a copy of the current {@link ObjectMapper}.","lastModifiedDate":"2022-10-07"},{"lineNumber":244,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":245,"author":{"gitId":"shenyih0ng"},"content":"     * @return A copy of the current object mapper.","lastModifiedDate":"2022-10-07"},{"lineNumber":246,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":247,"author":{"gitId":"shenyih0ng"},"content":"    public ObjectMapper getObjectMapper() {","lastModifiedDate":"2022-10-07"},{"lineNumber":248,"author":{"gitId":"shenyih0ng"},"content":"        return mapper.copy();","lastModifiedDate":"2022-10-07"},{"lineNumber":249,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":250,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":251,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":252,"author":{"gitId":"shenyih0ng"},"content":"     * Set a custom {@link ObjectMapper} to serialize and deserialize the request and response bodies.","lastModifiedDate":"2022-10-07"},{"lineNumber":253,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":254,"author":{"gitId":"shenyih0ng"},"content":"     * @param mapper Custom object mapper.","lastModifiedDate":"2022-10-07"},{"lineNumber":255,"author":{"gitId":"shenyih0ng"},"content":"     * @return This object.","lastModifiedDate":"2022-10-07"},{"lineNumber":256,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":257,"author":{"gitId":"shenyih0ng"},"content":"    public ApiClient setObjectMapper(ObjectMapper mapper) {","lastModifiedDate":"2022-10-07"},{"lineNumber":258,"author":{"gitId":"shenyih0ng"},"content":"        this.mapper \u003d mapper;","lastModifiedDate":"2022-10-07"},{"lineNumber":259,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-07"},{"lineNumber":260,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":261,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":262,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":263,"author":{"gitId":"shenyih0ng"},"content":"     * Set a custom host name for the target service.","lastModifiedDate":"2022-10-03"},{"lineNumber":264,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":265,"author":{"gitId":"shenyih0ng"},"content":"     * @param host The host name of the target service.","lastModifiedDate":"2022-10-03"},{"lineNumber":266,"author":{"gitId":"shenyih0ng"},"content":"     * @return This object.","lastModifiedDate":"2022-10-03"},{"lineNumber":267,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":268,"author":{"gitId":"shenyih0ng"},"content":"    public ApiClient setHost(String host) {","lastModifiedDate":"2022-10-03"},{"lineNumber":269,"author":{"gitId":"shenyih0ng"},"content":"        this.host \u003d host;","lastModifiedDate":"2022-10-03"},{"lineNumber":270,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":271,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":272,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":273,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":274,"author":{"gitId":"shenyih0ng"},"content":"     * Set a custom port number for the target service.","lastModifiedDate":"2022-10-03"},{"lineNumber":275,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":276,"author":{"gitId":"shenyih0ng"},"content":"     * @param port The port of the target service. Set this to -1 to reset the value to the default for the scheme.","lastModifiedDate":"2022-10-07"},{"lineNumber":277,"author":{"gitId":"shenyih0ng"},"content":"     * @return This object.","lastModifiedDate":"2022-10-03"},{"lineNumber":278,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":279,"author":{"gitId":"shenyih0ng"},"content":"    public ApiClient setPort(int port) {","lastModifiedDate":"2022-10-03"},{"lineNumber":280,"author":{"gitId":"shenyih0ng"},"content":"        this.port \u003d port;","lastModifiedDate":"2022-10-03"},{"lineNumber":281,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":282,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":283,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":284,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":285,"author":{"gitId":"shenyih0ng"},"content":"     * Set a custom base path for the target service, for example \u0027/v2\u0027.","lastModifiedDate":"2022-10-03"},{"lineNumber":286,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":287,"author":{"gitId":"shenyih0ng"},"content":"     * @param basePath The base path against which the rest of the path is resolved.","lastModifiedDate":"2022-10-07"},{"lineNumber":288,"author":{"gitId":"shenyih0ng"},"content":"     * @return This object.","lastModifiedDate":"2022-10-03"},{"lineNumber":289,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":290,"author":{"gitId":"shenyih0ng"},"content":"    public ApiClient setBasePath(String basePath) {","lastModifiedDate":"2022-10-03"},{"lineNumber":291,"author":{"gitId":"shenyih0ng"},"content":"        this.basePath \u003d basePath;","lastModifiedDate":"2022-10-03"},{"lineNumber":292,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":293,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":294,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":295,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":296,"author":{"gitId":"shenyih0ng"},"content":"     * Get the base URI to resolve the endpoint paths against.","lastModifiedDate":"2022-10-03"},{"lineNumber":297,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":298,"author":{"gitId":"shenyih0ng"},"content":"     * @return The complete base URI that the rest of the API parameters are resolved against.","lastModifiedDate":"2022-10-07"},{"lineNumber":299,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":300,"author":{"gitId":"shenyih0ng"},"content":"    public String getBaseUri() {","lastModifiedDate":"2022-10-03"},{"lineNumber":301,"author":{"gitId":"shenyih0ng"},"content":"        return scheme + \"://\" + host + (port \u003d\u003d -1 ? \"\" : \":\" + port) + basePath;","lastModifiedDate":"2022-10-03"},{"lineNumber":302,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":303,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":304,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":305,"author":{"gitId":"shenyih0ng"},"content":"     * Set a custom scheme for the target service, for example \u0027https\u0027.","lastModifiedDate":"2022-10-03"},{"lineNumber":306,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":307,"author":{"gitId":"shenyih0ng"},"content":"     * @param scheme The scheme of the target service","lastModifiedDate":"2022-10-03"},{"lineNumber":308,"author":{"gitId":"shenyih0ng"},"content":"     * @return This object.","lastModifiedDate":"2022-10-03"},{"lineNumber":309,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":310,"author":{"gitId":"shenyih0ng"},"content":"    public ApiClient setScheme(String scheme) {","lastModifiedDate":"2022-10-03"},{"lineNumber":311,"author":{"gitId":"shenyih0ng"},"content":"        this.scheme \u003d scheme;","lastModifiedDate":"2022-10-03"},{"lineNumber":312,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":313,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":314,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":315,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":316,"author":{"gitId":"shenyih0ng"},"content":"     * Get the custom interceptor.","lastModifiedDate":"2022-10-07"},{"lineNumber":317,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":318,"author":{"gitId":"shenyih0ng"},"content":"     * @return The custom interceptor that was set, or null if there isn\u0027t any.","lastModifiedDate":"2022-10-07"},{"lineNumber":319,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":320,"author":{"gitId":"shenyih0ng"},"content":"    public Consumer\u003cHttpRequest.Builder\u003e getRequestInterceptor() {","lastModifiedDate":"2022-10-07"},{"lineNumber":321,"author":{"gitId":"shenyih0ng"},"content":"        return interceptor;","lastModifiedDate":"2022-10-07"},{"lineNumber":322,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":323,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":324,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":325,"author":{"gitId":"shenyih0ng"},"content":"     * Set a custom request interceptor.","lastModifiedDate":"2022-10-03"},{"lineNumber":326,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":327,"author":{"gitId":"shenyih0ng"},"content":"     * \u003cp\u003eA request interceptor is a mechanism for altering each request before it","lastModifiedDate":"2022-10-03"},{"lineNumber":328,"author":{"gitId":"shenyih0ng"},"content":"     * is sent. After the request has been fully configured but not yet built, the request builder is passed into this","lastModifiedDate":"2022-10-07"},{"lineNumber":329,"author":{"gitId":"shenyih0ng"},"content":"     * function for further modification, after which it is sent out.\u003c/p\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":330,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":331,"author":{"gitId":"shenyih0ng"},"content":"     * \u003cp\u003eThis is useful for altering the requests in a custom manner, such as","lastModifiedDate":"2022-10-03"},{"lineNumber":332,"author":{"gitId":"shenyih0ng"},"content":"     * adding headers. It could also be used for logging and monitoring.\u003c/p\u003e","lastModifiedDate":"2022-10-03"},{"lineNumber":333,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":334,"author":{"gitId":"shenyih0ng"},"content":"     * @param interceptor A function invoked before creating each request. A value of null resets the interceptor to a","lastModifiedDate":"2022-10-07"},{"lineNumber":335,"author":{"gitId":"shenyih0ng"},"content":"     *                    no-op.","lastModifiedDate":"2022-10-07"},{"lineNumber":336,"author":{"gitId":"shenyih0ng"},"content":"     * @return This object.","lastModifiedDate":"2022-10-03"},{"lineNumber":337,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":338,"author":{"gitId":"shenyih0ng"},"content":"    public ApiClient setRequestInterceptor(Consumer\u003cHttpRequest.Builder\u003e interceptor) {","lastModifiedDate":"2022-10-03"},{"lineNumber":339,"author":{"gitId":"shenyih0ng"},"content":"        this.interceptor \u003d interceptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":340,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":341,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":342,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":343,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":344,"author":{"gitId":"shenyih0ng"},"content":"     * Get the custom response interceptor.","lastModifiedDate":"2022-10-07"},{"lineNumber":345,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":346,"author":{"gitId":"shenyih0ng"},"content":"     * @return The custom interceptor that was set, or null if there isn\u0027t any.","lastModifiedDate":"2022-10-03"},{"lineNumber":347,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":348,"author":{"gitId":"shenyih0ng"},"content":"    public Consumer\u003cHttpResponse\u003cInputStream\u003e\u003e getResponseInterceptor() {","lastModifiedDate":"2022-10-07"},{"lineNumber":349,"author":{"gitId":"shenyih0ng"},"content":"        return responseInterceptor;","lastModifiedDate":"2022-10-07"},{"lineNumber":350,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":351,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":352,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":353,"author":{"gitId":"shenyih0ng"},"content":"     * Set a custom response interceptor.","lastModifiedDate":"2022-10-03"},{"lineNumber":354,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":355,"author":{"gitId":"shenyih0ng"},"content":"     * \u003cp\u003eThis is useful for logging, monitoring or extraction of header variables\u003c/p\u003e","lastModifiedDate":"2022-10-03"},{"lineNumber":356,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":357,"author":{"gitId":"shenyih0ng"},"content":"     * @param interceptor A function invoked before creating each request. A value of null resets the interceptor to a","lastModifiedDate":"2022-10-07"},{"lineNumber":358,"author":{"gitId":"shenyih0ng"},"content":"     *                    no-op.","lastModifiedDate":"2022-10-07"},{"lineNumber":359,"author":{"gitId":"shenyih0ng"},"content":"     * @return This object.","lastModifiedDate":"2022-10-03"},{"lineNumber":360,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":361,"author":{"gitId":"shenyih0ng"},"content":"    public ApiClient setResponseInterceptor(Consumer\u003cHttpResponse\u003cInputStream\u003e\u003e interceptor) {","lastModifiedDate":"2022-10-03"},{"lineNumber":362,"author":{"gitId":"shenyih0ng"},"content":"        this.responseInterceptor \u003d interceptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":363,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":364,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":365,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":366,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":367,"author":{"gitId":"shenyih0ng"},"content":"     * Get the custom async response interceptor. Use this interceptor when asyncNative is set to \u0027true\u0027.","lastModifiedDate":"2022-10-07"},{"lineNumber":368,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":369,"author":{"gitId":"shenyih0ng"},"content":"     * @return The custom interceptor that was set, or null if there isn\u0027t any.","lastModifiedDate":"2022-10-03"},{"lineNumber":370,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":371,"author":{"gitId":"shenyih0ng"},"content":"    public Consumer\u003cHttpResponse\u003cString\u003e\u003e getAsyncResponseInterceptor() {","lastModifiedDate":"2022-10-07"},{"lineNumber":372,"author":{"gitId":"shenyih0ng"},"content":"        return asyncResponseInterceptor;","lastModifiedDate":"2022-10-07"},{"lineNumber":373,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":374,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":375,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":376,"author":{"gitId":"shenyih0ng"},"content":"     * Set a custom async response interceptor. Use this interceptor when asyncNative is set to \u0027true\u0027.","lastModifiedDate":"2022-10-03"},{"lineNumber":377,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":378,"author":{"gitId":"shenyih0ng"},"content":"     * \u003cp\u003eThis is useful for logging, monitoring or extraction of header variables\u003c/p\u003e","lastModifiedDate":"2022-10-03"},{"lineNumber":379,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":380,"author":{"gitId":"shenyih0ng"},"content":"     * @param interceptor A function invoked before creating each request. A value of null resets the interceptor to a","lastModifiedDate":"2022-10-07"},{"lineNumber":381,"author":{"gitId":"shenyih0ng"},"content":"     *                    no-op.","lastModifiedDate":"2022-10-07"},{"lineNumber":382,"author":{"gitId":"shenyih0ng"},"content":"     * @return This object.","lastModifiedDate":"2022-10-03"},{"lineNumber":383,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":384,"author":{"gitId":"shenyih0ng"},"content":"    public ApiClient setAsyncResponseInterceptor(Consumer\u003cHttpResponse\u003cString\u003e\u003e interceptor) {","lastModifiedDate":"2022-10-03"},{"lineNumber":385,"author":{"gitId":"shenyih0ng"},"content":"        this.asyncResponseInterceptor \u003d interceptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":386,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":387,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":388,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":389,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":390,"author":{"gitId":"shenyih0ng"},"content":"     * Get the read timeout that was set.","lastModifiedDate":"2022-10-07"},{"lineNumber":391,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":392,"author":{"gitId":"shenyih0ng"},"content":"     * @return The read timeout, or null if no timeout was set. Null represents an infinite wait time.","lastModifiedDate":"2022-10-07"},{"lineNumber":393,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":394,"author":{"gitId":"shenyih0ng"},"content":"    public Duration getReadTimeout() {","lastModifiedDate":"2022-10-07"},{"lineNumber":395,"author":{"gitId":"shenyih0ng"},"content":"        return readTimeout;","lastModifiedDate":"2022-10-07"},{"lineNumber":396,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":397,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":398,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":399,"author":{"gitId":"shenyih0ng"},"content":"     * Set the read timeout for the http client.","lastModifiedDate":"2022-10-03"},{"lineNumber":400,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":401,"author":{"gitId":"shenyih0ng"},"content":"     * \u003cp\u003eThis is the value used by default for each request, though it can be","lastModifiedDate":"2022-10-03"},{"lineNumber":402,"author":{"gitId":"shenyih0ng"},"content":"     * overridden on a per-request basis with a request interceptor.\u003c/p\u003e","lastModifiedDate":"2022-10-03"},{"lineNumber":403,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":404,"author":{"gitId":"shenyih0ng"},"content":"     * @param readTimeout The read timeout used by default by the http client. Setting this value to null resets the","lastModifiedDate":"2022-10-07"},{"lineNumber":405,"author":{"gitId":"shenyih0ng"},"content":"     *                    timeout to an effectively infinite value.","lastModifiedDate":"2022-10-07"},{"lineNumber":406,"author":{"gitId":"shenyih0ng"},"content":"     * @return This object.","lastModifiedDate":"2022-10-03"},{"lineNumber":407,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":408,"author":{"gitId":"shenyih0ng"},"content":"    public ApiClient setReadTimeout(Duration readTimeout) {","lastModifiedDate":"2022-10-03"},{"lineNumber":409,"author":{"gitId":"shenyih0ng"},"content":"        this.readTimeout \u003d readTimeout;","lastModifiedDate":"2022-10-03"},{"lineNumber":410,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":411,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":412,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":413,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":414,"author":{"gitId":"shenyih0ng"},"content":"     * Get connection timeout (in milliseconds).","lastModifiedDate":"2022-10-07"},{"lineNumber":415,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":416,"author":{"gitId":"shenyih0ng"},"content":"     * @return Timeout in milliseconds","lastModifiedDate":"2022-10-07"},{"lineNumber":417,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":418,"author":{"gitId":"shenyih0ng"},"content":"    public Duration getConnectTimeout() {","lastModifiedDate":"2022-10-07"},{"lineNumber":419,"author":{"gitId":"shenyih0ng"},"content":"        return connectTimeout;","lastModifiedDate":"2022-10-07"},{"lineNumber":420,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":421,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":422,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":423,"author":{"gitId":"shenyih0ng"},"content":"     * Sets the connect timeout (in milliseconds) for the http client.","lastModifiedDate":"2022-10-03"},{"lineNumber":424,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":425,"author":{"gitId":"shenyih0ng"},"content":"     * \u003cp\u003e In the case where a new connection needs to be established, if","lastModifiedDate":"2022-10-03"},{"lineNumber":426,"author":{"gitId":"shenyih0ng"},"content":"     * the connection cannot be established within the given {@code duration}, then {@link HttpClient#send(HttpRequest,","lastModifiedDate":"2022-10-07"},{"lineNumber":427,"author":{"gitId":"shenyih0ng"},"content":"     * BodyHandler) HttpClient::send} throws an {@link HttpConnectTimeoutException}, or {@link","lastModifiedDate":"2022-10-07"},{"lineNumber":428,"author":{"gitId":"shenyih0ng"},"content":"     * HttpClient#sendAsync(HttpRequest, BodyHandler) HttpClient::sendAsync} completes exceptionally with an {@code","lastModifiedDate":"2022-10-07"},{"lineNumber":429,"author":{"gitId":"shenyih0ng"},"content":"     * HttpConnectTimeoutException}. If a new connection does not need to be established, for example if a connection","lastModifiedDate":"2022-10-07"},{"lineNumber":430,"author":{"gitId":"shenyih0ng"},"content":"     * can be reused from a previous request, then this timeout duration has no effect.","lastModifiedDate":"2022-10-07"},{"lineNumber":431,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":432,"author":{"gitId":"shenyih0ng"},"content":"     * @param connectTimeout connection timeout in milliseconds","lastModifiedDate":"2022-10-03"},{"lineNumber":433,"author":{"gitId":"shenyih0ng"},"content":"     * @return This object.","lastModifiedDate":"2022-10-03"},{"lineNumber":434,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":435,"author":{"gitId":"shenyih0ng"},"content":"    public ApiClient setConnectTimeout(Duration connectTimeout) {","lastModifiedDate":"2022-10-03"},{"lineNumber":436,"author":{"gitId":"shenyih0ng"},"content":"        this.connectTimeout \u003d connectTimeout;","lastModifiedDate":"2022-10-03"},{"lineNumber":437,"author":{"gitId":"shenyih0ng"},"content":"        this.builder.connectTimeout(connectTimeout);","lastModifiedDate":"2022-10-03"},{"lineNumber":438,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":439,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":440,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"shenyih0ng":440}},{"path":"src/main/java/org/openapitools/client/ApiException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"/*","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API contains data used to render \u003chttps://nusmods.com\u003e. It includes data on modules offered by NUS and their timetables, as well as information on the locations the classes take place in. You are welcome to use and experiment with the data, which is extracted from official APIs provided by the Registrar\u0027s Office.  The API consists of static JSON files scraped daily from the school\u0027s APIs. This means it only partially follow REST conventions, and all resources are read only. All successful responses will return JSON, and all endpoints end in `.json`.  The shape of the data returned by these endpoints are designed for NUSMods in mind. If you have any questions or find that you need the data in other shapes for other purposes, feel free to reach out to us:  - **Telegram**: \u003chttps://telegram.me/nusmods\u003e - **Mailing list**: \u003cnusmods@googlegroups.com\u003e (for security related issues please email \u003cmods@nusmods.com\u003e instead)  ## Fetching data  Any HTTP client can be used to fetch data from the API. HTTPS is preferred, but the server will also respond to HTTP requests. The server supports HTTP 1.1 as well as HTTP 2 over HTTPS, and supports gzip compression.  The API has no authentication, and is not rate limited. While the server can respond to a large number of requests simultaneously, we request that you be polite with resource usage so as not to disrupt nusmods.com, which relies on the same API server. In general there is no need to fetch data from the API more than once per day, as that is the frequency at which we update the data.  [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) headers are enabled on all endpoints, so client-side JavaScript can use also use the API.  ## TypeScript types  Since the NUSMods is written in TypeScript, typings are available in the source for the scraper. These may be easier to read than the documentation generated by Swagger.  - Module types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/modules.ts\u003e - Venue types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/venues.ts\u003e  ## Data  Below are some notes about the data returned from the API. Feel free to talk to us or create an issue if any of it is not clear.  ### Module data  Module endpoints return information on modules offered by NUS. Most of the module data is self-explanatory, but some of the data are more complex and is explained here.  #### Lessons  Each lesson in a timetable has a lesson type `lessonType` and class number `ClassNo`. Every student must take one of each lesson type offered by the module. For example, this module offers two tutorials and one lecture. That means the student must attend the lecture, and can choose one of the two tutorials to attend.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"01\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1100\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"COM1-0207\\\"     },     {       \\\"classNo\\\": \\\"02\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Friday\\\",       \\\"startTime\\\": \\\"0900\\\",       \\\"endTime\\\": \\\"1000\\\",       \\\"venue\\\": \\\"COM1-0209\\\"     }   ] } ```  Each lesson has a `classNo` key. There can be multiple lessons of the same type and class number, in which case students must attend both. In this example, students can choose to attend either lecture group 1 on Tuesdays and Wednesdays, or lecture group 2 on Mondays and Wednesdays.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1400\\\",       \\\"endTime\\\": \\\"1500\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Monday\\\",       \\\"startTime\\\": \\\"1000\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1500\\\",       \\\"endTime\\\": \\\"1600\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     }   ] } ```  #### Lesson Weeks  The `weeks` key on lessons can return data in one of two forms.  Weeks is usually a sorted array of numbers. In this case it represents the school weeks the lesson occurs on, from 1 to 13.  Some classes have lessons outside of the school timetable. In this case a `WeekRange` object is returned. The object will always contain a `start` and `end` key representing the start and end date of lessons. The example below has classes every week from 17th Jan to 18th April.  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-04-18\\\" } ```  Optionally it can also include `weekInterval`, a positive integer describing the number of weeks between each lesson, and `weeks`, an array of positive integers describing the weeks on which the lesson will fall, with week 1 being the starting date. If these are not present you can assume lessons will occur every week.  The following example has lessons on 17th Jan (week 1), 24th Jan (week 2), 7th Feb (week 4) and 21st Feb (week 6).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-21\\\",   \\\"weeks\\\": [1, 2, 4, 6] } ```  The following example has lessons on 17th Jan (week 1), 31st Jan (week 3), 14th Feb (week 5) and 28th Feb (week 7).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-28\\\",   \\\"weekInterval\\\": 2 } ```  #### Workload  The `workload` key can return data in one of two forms.  Workload is usually a **5-tuple of numbers**, describing the estimated number of hours per week the student is expected to put in for the module for **lectures, tutorials, laboratory, projects/fieldwork, and preparatory work** respectively. For example, a workload of `[2, 1, 1, 3, 3]` means the student should spend every week  - 2 hours in lectures - 1 hour in tutorials - 1 hour at the lab - 3 hours doing project work - 3 hours preparing for classes  Each module credit represents 2.5 hours of work each week, so the standard 4 MC module represents 10 hours of work each week. Module credit may not be integers.  Note that this is only an estimate, and may be outdated or differ significantly in reality. Some modules also incorrectly lists the **total** workload hours instead of weekly, so very large values may show up.  This value is parsed from a string provided by the school, and occasionally this field will contain unusual values which cannot be parsed. In this case this field will contain the original **string** instead, which should be displayed as-is to the user.  #### Prerequisite, corequisite and preclusions  These three keys determine whether a student can take a module.  **Prerequisites** are requirements you have to meet before you can take a module. These are usually in the form of other modules (see prerequisite tree below for a machine readable format), but can also be things like \u0027taken A-level H2 math\u0027 or \u002770 MCs and above\u0027.  **Preclusions** refer to modules or requirements that cannot be taken if this module is taken, and vice versa. These are usually modules whose content overlaps significantly with this module, and can usually be used to replace each other to fulfill prerequisites.  **Corequisites** are modules that must be taken together with this module in the same semester. This usually refer to twined modules - modules which have linked syllabuses.  #### Prerequisite Tree  The `prereqTree` key is return on the individual module endpoint (`/modules/{moduleCode`). Not all modules have prerequisites, and some have prerequisites that cannot be properly represented as a tree, in which case this key will not appear.  This describes the prerequisites that need to be fulfilled before this module can be taken. The data structure is recursive and represents a tree.  ```json {   \\\"and\\\": [     \\\"CS1231\\\",     {       \\\"or\\\": [\\\"CS1010S\\\", \\\"CS1010X\\\"]     }   ] } ```  In the example, this module requires CS1231 and either CS1010S or CS1010X. This can be visualized as  ```            ┌ CS1231 ── all of ─┤            │         ┌ CS1010            └ one of ─┤                      └ CS1010X ```  The module information also contains the inverse of this, that is, modules whose requirements are fulfilled by this module (taking this module will allow you to take these modules in the following semester). The data is found on the `fulfillRequirements` key as an array of module codes.  ### Venue data  Venue data is simply the module timetable restructured to show the lessons happening at each classroom.  The venue list endpoint returns a list of all locations that are used in the semester. Note that this is not a comprehensive list of locations, but rather just a list of venues that appears in module lessons.  The venue information endpoint returns the full class and occupancy information about a venue. The `classes` key contains a list of lessons similar to the `timetable` key in module data, but without a `venue` key and with `moduleCode`.","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":" * The version of the OpenAPI document: 2.0.0","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":" * Contact: nusmods@googlegroups.com","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":" * https://openapi-generator.tech","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":" * Do not edit the class manually.","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"package org.openapitools.client;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import java.net.http.HttpHeaders;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"@javax.annotation.processing.Generated(value \u003d \"org.openapitools.codegen.languages.JavaClientCodegen\", date \u003d \"2022-10-03T22:22:26.802458+08:00[Asia/Singapore]\")","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"public class ApiException extends Exception {","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"    private int code \u003d 0;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"    private HttpHeaders responseHeaders \u003d null;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"    private String responseBody \u003d null;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"    public ApiException() {","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"    public ApiException(Throwable throwable) {","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"        super(throwable);","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"    public ApiException(String message) {","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"        super(message);","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"    public ApiException(String message, Throwable throwable, int code, HttpHeaders responseHeaders,","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"        String responseBody) {","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"        super(message, throwable);","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"        this.code \u003d code;","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"        this.responseHeaders \u003d responseHeaders;","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"        this.responseBody \u003d responseBody;","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"    public ApiException(String message, int code, HttpHeaders responseHeaders, String responseBody) {","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"        this(message, (Throwable) null, code, responseHeaders, responseBody);","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"    public ApiException(String message, Throwable throwable, int code, HttpHeaders responseHeaders) {","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"        this(message, throwable, code, responseHeaders, null);","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"    public ApiException(int code, HttpHeaders responseHeaders, String responseBody) {","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"        this((String) null, (Throwable) null, code, responseHeaders, responseBody);","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"    public ApiException(int code, String message) {","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"        super(message);","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"        this.code \u003d code;","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"    public ApiException(int code, String message, HttpHeaders responseHeaders, String responseBody) {","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"        this(code, message);","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"        this.responseHeaders \u003d responseHeaders;","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"        this.responseBody \u003d responseBody;","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"     * Get the HTTP status code.","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"shenyih0ng"},"content":"     * @return HTTP status code","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"shenyih0ng"},"content":"    public int getCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"shenyih0ng"},"content":"        return code;","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"shenyih0ng"},"content":"     * Get the HTTP response headers.","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"shenyih0ng"},"content":"     * @return Headers as an HttpHeaders object","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"shenyih0ng"},"content":"    public HttpHeaders getResponseHeaders() {","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"shenyih0ng"},"content":"        return responseHeaders;","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"shenyih0ng"},"content":"     * Get the HTTP response body.","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"shenyih0ng"},"content":"     * @return Response body in the form of string","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"shenyih0ng"},"content":"    public String getResponseBody() {","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"shenyih0ng"},"content":"        return responseBody;","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"shenyih0ng":93}},{"path":"src/main/java/org/openapitools/client/ApiResponse.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"/*","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API contains data used to render \u003chttps://nusmods.com\u003e. It includes data on modules offered by NUS and their timetables, as well as information on the locations the classes take place in. You are welcome to use and experiment with the data, which is extracted from official APIs provided by the Registrar\u0027s Office.  The API consists of static JSON files scraped daily from the school\u0027s APIs. This means it only partially follow REST conventions, and all resources are read only. All successful responses will return JSON, and all endpoints end in `.json`.  The shape of the data returned by these endpoints are designed for NUSMods in mind. If you have any questions or find that you need the data in other shapes for other purposes, feel free to reach out to us:  - **Telegram**: \u003chttps://telegram.me/nusmods\u003e - **Mailing list**: \u003cnusmods@googlegroups.com\u003e (for security related issues please email \u003cmods@nusmods.com\u003e instead)  ## Fetching data  Any HTTP client can be used to fetch data from the API. HTTPS is preferred, but the server will also respond to HTTP requests. The server supports HTTP 1.1 as well as HTTP 2 over HTTPS, and supports gzip compression.  The API has no authentication, and is not rate limited. While the server can respond to a large number of requests simultaneously, we request that you be polite with resource usage so as not to disrupt nusmods.com, which relies on the same API server. In general there is no need to fetch data from the API more than once per day, as that is the frequency at which we update the data.  [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) headers are enabled on all endpoints, so client-side JavaScript can use also use the API.  ## TypeScript types  Since the NUSMods is written in TypeScript, typings are available in the source for the scraper. These may be easier to read than the documentation generated by Swagger.  - Module types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/modules.ts\u003e - Venue types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/venues.ts\u003e  ## Data  Below are some notes about the data returned from the API. Feel free to talk to us or create an issue if any of it is not clear.  ### Module data  Module endpoints return information on modules offered by NUS. Most of the module data is self-explanatory, but some of the data are more complex and is explained here.  #### Lessons  Each lesson in a timetable has a lesson type `lessonType` and class number `ClassNo`. Every student must take one of each lesson type offered by the module. For example, this module offers two tutorials and one lecture. That means the student must attend the lecture, and can choose one of the two tutorials to attend.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"01\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1100\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"COM1-0207\\\"     },     {       \\\"classNo\\\": \\\"02\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Friday\\\",       \\\"startTime\\\": \\\"0900\\\",       \\\"endTime\\\": \\\"1000\\\",       \\\"venue\\\": \\\"COM1-0209\\\"     }   ] } ```  Each lesson has a `classNo` key. There can be multiple lessons of the same type and class number, in which case students must attend both. In this example, students can choose to attend either lecture group 1 on Tuesdays and Wednesdays, or lecture group 2 on Mondays and Wednesdays.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1400\\\",       \\\"endTime\\\": \\\"1500\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Monday\\\",       \\\"startTime\\\": \\\"1000\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1500\\\",       \\\"endTime\\\": \\\"1600\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     }   ] } ```  #### Lesson Weeks  The `weeks` key on lessons can return data in one of two forms.  Weeks is usually a sorted array of numbers. In this case it represents the school weeks the lesson occurs on, from 1 to 13.  Some classes have lessons outside of the school timetable. In this case a `WeekRange` object is returned. The object will always contain a `start` and `end` key representing the start and end date of lessons. The example below has classes every week from 17th Jan to 18th April.  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-04-18\\\" } ```  Optionally it can also include `weekInterval`, a positive integer describing the number of weeks between each lesson, and `weeks`, an array of positive integers describing the weeks on which the lesson will fall, with week 1 being the starting date. If these are not present you can assume lessons will occur every week.  The following example has lessons on 17th Jan (week 1), 24th Jan (week 2), 7th Feb (week 4) and 21st Feb (week 6).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-21\\\",   \\\"weeks\\\": [1, 2, 4, 6] } ```  The following example has lessons on 17th Jan (week 1), 31st Jan (week 3), 14th Feb (week 5) and 28th Feb (week 7).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-28\\\",   \\\"weekInterval\\\": 2 } ```  #### Workload  The `workload` key can return data in one of two forms.  Workload is usually a **5-tuple of numbers**, describing the estimated number of hours per week the student is expected to put in for the module for **lectures, tutorials, laboratory, projects/fieldwork, and preparatory work** respectively. For example, a workload of `[2, 1, 1, 3, 3]` means the student should spend every week  - 2 hours in lectures - 1 hour in tutorials - 1 hour at the lab - 3 hours doing project work - 3 hours preparing for classes  Each module credit represents 2.5 hours of work each week, so the standard 4 MC module represents 10 hours of work each week. Module credit may not be integers.  Note that this is only an estimate, and may be outdated or differ significantly in reality. Some modules also incorrectly lists the **total** workload hours instead of weekly, so very large values may show up.  This value is parsed from a string provided by the school, and occasionally this field will contain unusual values which cannot be parsed. In this case this field will contain the original **string** instead, which should be displayed as-is to the user.  #### Prerequisite, corequisite and preclusions  These three keys determine whether a student can take a module.  **Prerequisites** are requirements you have to meet before you can take a module. These are usually in the form of other modules (see prerequisite tree below for a machine readable format), but can also be things like \u0027taken A-level H2 math\u0027 or \u002770 MCs and above\u0027.  **Preclusions** refer to modules or requirements that cannot be taken if this module is taken, and vice versa. These are usually modules whose content overlaps significantly with this module, and can usually be used to replace each other to fulfill prerequisites.  **Corequisites** are modules that must be taken together with this module in the same semester. This usually refer to twined modules - modules which have linked syllabuses.  #### Prerequisite Tree  The `prereqTree` key is return on the individual module endpoint (`/modules/{moduleCode`). Not all modules have prerequisites, and some have prerequisites that cannot be properly represented as a tree, in which case this key will not appear.  This describes the prerequisites that need to be fulfilled before this module can be taken. The data structure is recursive and represents a tree.  ```json {   \\\"and\\\": [     \\\"CS1231\\\",     {       \\\"or\\\": [\\\"CS1010S\\\", \\\"CS1010X\\\"]     }   ] } ```  In the example, this module requires CS1231 and either CS1010S or CS1010X. This can be visualized as  ```            ┌ CS1231 ── all of ─┤            │         ┌ CS1010            └ one of ─┤                      └ CS1010X ```  The module information also contains the inverse of this, that is, modules whose requirements are fulfilled by this module (taking this module will allow you to take these modules in the following semester). The data is found on the `fulfillRequirements` key as an array of module codes.  ### Venue data  Venue data is simply the module timetable restructured to show the lessons happening at each classroom.  The venue list endpoint returns a list of all locations that are used in the semester. Note that this is not a comprehensive list of locations, but rather just a list of venues that appears in module lessons.  The venue information endpoint returns the full class and occupancy information about a venue. The `classes` key contains a list of lessons similar to the `timetable` key in module data, but without a `venue` key and with `moduleCode`.","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":" * The version of the OpenAPI document: 2.0.0","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":" * Contact: nusmods@googlegroups.com","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":" * https://openapi-generator.tech","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":" * Do not edit the class manually.","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"package org.openapitools.client;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import java.util.List;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":" * API response returned by API call.","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":" * @param \u003cT\u003e The type of data that is deserialized from response body","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"public class ApiResponse\u003cT\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"    final private int statusCode;","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"    final private Map\u003cString, List\u003cString\u003e\u003e headers;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"    final private T data;","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"     * @param statusCode The status code of HTTP response","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"     * @param headers    The headers of HTTP response","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"    public ApiResponse(int statusCode, Map\u003cString, List\u003cString\u003e\u003e headers) {","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"        this(statusCode, headers, null);","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"     * @param statusCode The status code of HTTP response","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"     * @param headers    The headers of HTTP response","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"     * @param data       The object deserialized from response bod","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"    public ApiResponse(int statusCode, Map\u003cString, List\u003cString\u003e\u003e headers, T data) {","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"        this.statusCode \u003d statusCode;","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"        this.headers \u003d headers;","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"        this.data \u003d data;","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"    public int getStatusCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"        return statusCode;","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"    public Map\u003cString, List\u003cString\u003e\u003e getHeaders() {","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"        return headers;","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"    public T getData() {","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"        return data;","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"shenyih0ng":60}},{"path":"src/main/java/org/openapitools/client/Configuration.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"/*","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API contains data used to render \u003chttps://nusmods.com\u003e. It includes data on modules offered by NUS and their timetables, as well as information on the locations the classes take place in. You are welcome to use and experiment with the data, which is extracted from official APIs provided by the Registrar\u0027s Office.  The API consists of static JSON files scraped daily from the school\u0027s APIs. This means it only partially follow REST conventions, and all resources are read only. All successful responses will return JSON, and all endpoints end in `.json`.  The shape of the data returned by these endpoints are designed for NUSMods in mind. If you have any questions or find that you need the data in other shapes for other purposes, feel free to reach out to us:  - **Telegram**: \u003chttps://telegram.me/nusmods\u003e - **Mailing list**: \u003cnusmods@googlegroups.com\u003e (for security related issues please email \u003cmods@nusmods.com\u003e instead)  ## Fetching data  Any HTTP client can be used to fetch data from the API. HTTPS is preferred, but the server will also respond to HTTP requests. The server supports HTTP 1.1 as well as HTTP 2 over HTTPS, and supports gzip compression.  The API has no authentication, and is not rate limited. While the server can respond to a large number of requests simultaneously, we request that you be polite with resource usage so as not to disrupt nusmods.com, which relies on the same API server. In general there is no need to fetch data from the API more than once per day, as that is the frequency at which we update the data.  [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) headers are enabled on all endpoints, so client-side JavaScript can use also use the API.  ## TypeScript types  Since the NUSMods is written in TypeScript, typings are available in the source for the scraper. These may be easier to read than the documentation generated by Swagger.  - Module types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/modules.ts\u003e - Venue types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/venues.ts\u003e  ## Data  Below are some notes about the data returned from the API. Feel free to talk to us or create an issue if any of it is not clear.  ### Module data  Module endpoints return information on modules offered by NUS. Most of the module data is self-explanatory, but some of the data are more complex and is explained here.  #### Lessons  Each lesson in a timetable has a lesson type `lessonType` and class number `ClassNo`. Every student must take one of each lesson type offered by the module. For example, this module offers two tutorials and one lecture. That means the student must attend the lecture, and can choose one of the two tutorials to attend.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"01\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1100\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"COM1-0207\\\"     },     {       \\\"classNo\\\": \\\"02\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Friday\\\",       \\\"startTime\\\": \\\"0900\\\",       \\\"endTime\\\": \\\"1000\\\",       \\\"venue\\\": \\\"COM1-0209\\\"     }   ] } ```  Each lesson has a `classNo` key. There can be multiple lessons of the same type and class number, in which case students must attend both. In this example, students can choose to attend either lecture group 1 on Tuesdays and Wednesdays, or lecture group 2 on Mondays and Wednesdays.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1400\\\",       \\\"endTime\\\": \\\"1500\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Monday\\\",       \\\"startTime\\\": \\\"1000\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1500\\\",       \\\"endTime\\\": \\\"1600\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     }   ] } ```  #### Lesson Weeks  The `weeks` key on lessons can return data in one of two forms.  Weeks is usually a sorted array of numbers. In this case it represents the school weeks the lesson occurs on, from 1 to 13.  Some classes have lessons outside of the school timetable. In this case a `WeekRange` object is returned. The object will always contain a `start` and `end` key representing the start and end date of lessons. The example below has classes every week from 17th Jan to 18th April.  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-04-18\\\" } ```  Optionally it can also include `weekInterval`, a positive integer describing the number of weeks between each lesson, and `weeks`, an array of positive integers describing the weeks on which the lesson will fall, with week 1 being the starting date. If these are not present you can assume lessons will occur every week.  The following example has lessons on 17th Jan (week 1), 24th Jan (week 2), 7th Feb (week 4) and 21st Feb (week 6).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-21\\\",   \\\"weeks\\\": [1, 2, 4, 6] } ```  The following example has lessons on 17th Jan (week 1), 31st Jan (week 3), 14th Feb (week 5) and 28th Feb (week 7).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-28\\\",   \\\"weekInterval\\\": 2 } ```  #### Workload  The `workload` key can return data in one of two forms.  Workload is usually a **5-tuple of numbers**, describing the estimated number of hours per week the student is expected to put in for the module for **lectures, tutorials, laboratory, projects/fieldwork, and preparatory work** respectively. For example, a workload of `[2, 1, 1, 3, 3]` means the student should spend every week  - 2 hours in lectures - 1 hour in tutorials - 1 hour at the lab - 3 hours doing project work - 3 hours preparing for classes  Each module credit represents 2.5 hours of work each week, so the standard 4 MC module represents 10 hours of work each week. Module credit may not be integers.  Note that this is only an estimate, and may be outdated or differ significantly in reality. Some modules also incorrectly lists the **total** workload hours instead of weekly, so very large values may show up.  This value is parsed from a string provided by the school, and occasionally this field will contain unusual values which cannot be parsed. In this case this field will contain the original **string** instead, which should be displayed as-is to the user.  #### Prerequisite, corequisite and preclusions  These three keys determine whether a student can take a module.  **Prerequisites** are requirements you have to meet before you can take a module. These are usually in the form of other modules (see prerequisite tree below for a machine readable format), but can also be things like \u0027taken A-level H2 math\u0027 or \u002770 MCs and above\u0027.  **Preclusions** refer to modules or requirements that cannot be taken if this module is taken, and vice versa. These are usually modules whose content overlaps significantly with this module, and can usually be used to replace each other to fulfill prerequisites.  **Corequisites** are modules that must be taken together with this module in the same semester. This usually refer to twined modules - modules which have linked syllabuses.  #### Prerequisite Tree  The `prereqTree` key is return on the individual module endpoint (`/modules/{moduleCode`). Not all modules have prerequisites, and some have prerequisites that cannot be properly represented as a tree, in which case this key will not appear.  This describes the prerequisites that need to be fulfilled before this module can be taken. The data structure is recursive and represents a tree.  ```json {   \\\"and\\\": [     \\\"CS1231\\\",     {       \\\"or\\\": [\\\"CS1010S\\\", \\\"CS1010X\\\"]     }   ] } ```  In the example, this module requires CS1231 and either CS1010S or CS1010X. This can be visualized as  ```            ┌ CS1231 ── all of ─┤            │         ┌ CS1010            └ one of ─┤                      └ CS1010X ```  The module information also contains the inverse of this, that is, modules whose requirements are fulfilled by this module (taking this module will allow you to take these modules in the following semester). The data is found on the `fulfillRequirements` key as an array of module codes.  ### Venue data  Venue data is simply the module timetable restructured to show the lessons happening at each classroom.  The venue list endpoint returns a list of all locations that are used in the semester. Note that this is not a comprehensive list of locations, but rather just a list of venues that appears in module lessons.  The venue information endpoint returns the full class and occupancy information about a venue. The `classes` key contains a list of lessons similar to the `timetable` key in module data, but without a `venue` key and with `moduleCode`.","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":" * The version of the OpenAPI document: 2.0.0","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":" * Contact: nusmods@googlegroups.com","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":" * https://openapi-generator.tech","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":" * Do not edit the class manually.","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"package org.openapitools.client;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"@javax.annotation.processing.Generated(value \u003d \"org.openapitools.codegen.languages.JavaClientCodegen\", date \u003d \"2022-10-03T22:22:26.802458+08:00[Asia/Singapore]\")","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"public class Configuration {","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"    private static ApiClient defaultApiClient \u003d new ApiClient();","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"     * Get the default API client, which would be used when creating API instances without providing an API client.","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"     * @return Default API client","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"    public static ApiClient getDefaultApiClient() {","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"        return defaultApiClient;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"     * Set the default API client, which would be used when creating API instances without providing an API client.","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"     * @param apiClient API client","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"    public static void setDefaultApiClient(ApiClient apiClient) {","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"        defaultApiClient \u003d apiClient;","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"shenyih0ng":38}},{"path":"src/main/java/org/openapitools/client/JSON.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package org.openapitools.client;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import java.text.DateFormat;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"import org.openapitools.jackson.nullable.JsonNullableModule;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonInclude;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.JsonNode;","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.MapperFeature;","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"@javax.annotation.processing.Generated(value \u003d \"org.openapitools.codegen.languages.JavaClientCodegen\", date \u003d \"2022-10-03T22:22:26.802458+08:00[Asia/Singapore]\")","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"public class JSON {","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"     * A map of discriminators for all model classes.","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"    private static Map\u003cClass\u003c?\u003e, ClassDiscriminatorMapping\u003e modelDiscriminators \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"     * A map of oneOf/anyOf descendants for each model class.","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"    private static Map\u003cClass\u003c?\u003e, Map\u003cString, Class\u003c?\u003e\u003e\u003e modelDescendants \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"    private static JSON json;","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"    static {","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"        json \u003d new JSON();","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"    private ObjectMapper mapper;","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"    public JSON() {","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"        mapper \u003d new ObjectMapper();","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"        mapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"        mapper.configure(MapperFeature.ALLOW_COERCION_OF_SCALARS, false);","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"        mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, true);","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"        mapper.configure(DeserializationFeature.FAIL_ON_INVALID_SUBTYPE, true);","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"        mapper.disable(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"        mapper.enable(SerializationFeature.WRITE_ENUMS_USING_TO_STRING);","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"        mapper.enable(DeserializationFeature.READ_ENUMS_USING_TO_STRING);","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"        mapper.setDateFormat(new RFC3339DateFormat());","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"        mapper.registerModule(new JavaTimeModule());","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"        JsonNullableModule jnm \u003d new JsonNullableModule();","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"        mapper.registerModule(jnm);","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"     * Returns the target model class that should be used to deserialize the input data. The discriminator mappings are","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"     * used to determine the target model class.","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"     * @param node       The input data.","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"     * @param modelClass The class that contains the discriminator mappings.","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"     * @return the target model class.","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"    public static Class\u003c?\u003e getClassForElement(JsonNode node, Class\u003c?\u003e modelClass) {","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"        ClassDiscriminatorMapping cdm \u003d modelDiscriminators.get(modelClass);","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"        if (cdm !\u003d null) {","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"            return cdm.getClassForElement(node, new HashSet\u003cClass\u003c?\u003e\u003e());","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"        return null;","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"shenyih0ng"},"content":"     * Returns true if inst is an instance of modelClass in the OpenAPI model hierarchy.","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"shenyih0ng"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"shenyih0ng"},"content":"     * The Java class hierarchy is not implemented the same way as the OpenAPI model hierarchy, so it\u0027s not possible to","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"shenyih0ng"},"content":"     * use the instanceof keyword.","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"shenyih0ng"},"content":"     * @param modelClass     A OpenAPI model class.","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"shenyih0ng"},"content":"     * @param inst           The instance object.","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"shenyih0ng"},"content":"     * @param visitedClasses The set of classes that have already been visited.","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"shenyih0ng"},"content":"     * @return true if inst is an instance of modelClass in the OpenAPI model hierarchy.","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"shenyih0ng"},"content":"    public static boolean isInstanceOf(Class\u003c?\u003e modelClass, Object inst, Set\u003cClass\u003c?\u003e\u003e visitedClasses) {","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"shenyih0ng"},"content":"        if (modelClass.isInstance(inst)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"shenyih0ng"},"content":"            // This handles the \u0027allOf\u0027 use case with single parent inheritance.","lastModifiedDate":"2022-10-07"},{"lineNumber":82,"author":{"gitId":"shenyih0ng"},"content":"            return true;","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":84,"author":{"gitId":"shenyih0ng"},"content":"        if (visitedClasses.contains(modelClass)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":85,"author":{"gitId":"shenyih0ng"},"content":"            // This is to prevent infinite recursion when the composed schemas have","lastModifiedDate":"2022-10-07"},{"lineNumber":86,"author":{"gitId":"shenyih0ng"},"content":"            // a circular dependency.","lastModifiedDate":"2022-10-07"},{"lineNumber":87,"author":{"gitId":"shenyih0ng"},"content":"            return false;","lastModifiedDate":"2022-10-07"},{"lineNumber":88,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":89,"author":{"gitId":"shenyih0ng"},"content":"        visitedClasses.add(modelClass);","lastModifiedDate":"2022-10-07"},{"lineNumber":90,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":91,"author":{"gitId":"shenyih0ng"},"content":"        // Traverse the oneOf/anyOf composed schemas.","lastModifiedDate":"2022-10-07"},{"lineNumber":92,"author":{"gitId":"shenyih0ng"},"content":"        Map\u003cString, Class\u003c?\u003e\u003e descendants \u003d modelDescendants.get(modelClass);","lastModifiedDate":"2022-10-07"},{"lineNumber":93,"author":{"gitId":"shenyih0ng"},"content":"        if (descendants !\u003d null) {","lastModifiedDate":"2022-10-07"},{"lineNumber":94,"author":{"gitId":"shenyih0ng"},"content":"            for (Class\u003c?\u003e childType : descendants.values()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":95,"author":{"gitId":"shenyih0ng"},"content":"                if (isInstanceOf(childType, inst, visitedClasses)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":96,"author":{"gitId":"shenyih0ng"},"content":"                    return true;","lastModifiedDate":"2022-10-07"},{"lineNumber":97,"author":{"gitId":"shenyih0ng"},"content":"                }","lastModifiedDate":"2022-10-07"},{"lineNumber":98,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":100,"author":{"gitId":"shenyih0ng"},"content":"        return false;","lastModifiedDate":"2022-10-07"},{"lineNumber":101,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":102,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":103,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":104,"author":{"gitId":"shenyih0ng"},"content":"     * Register a model class discriminator.","lastModifiedDate":"2022-10-07"},{"lineNumber":105,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":106,"author":{"gitId":"shenyih0ng"},"content":"     * @param modelClass                the model class","lastModifiedDate":"2022-10-07"},{"lineNumber":107,"author":{"gitId":"shenyih0ng"},"content":"     * @param discriminatorPropertyName the name of the discriminator property","lastModifiedDate":"2022-10-07"},{"lineNumber":108,"author":{"gitId":"shenyih0ng"},"content":"     * @param mappings                  a map with the discriminator mappings.","lastModifiedDate":"2022-10-07"},{"lineNumber":109,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"shenyih0ng"},"content":"    public static void registerDiscriminator(Class\u003c?\u003e modelClass, String discriminatorPropertyName,","lastModifiedDate":"2022-10-07"},{"lineNumber":111,"author":{"gitId":"shenyih0ng"},"content":"        Map\u003cString, Class\u003c?\u003e\u003e mappings) {","lastModifiedDate":"2022-10-07"},{"lineNumber":112,"author":{"gitId":"shenyih0ng"},"content":"        ClassDiscriminatorMapping m \u003d new ClassDiscriminatorMapping(modelClass, discriminatorPropertyName, mappings);","lastModifiedDate":"2022-10-07"},{"lineNumber":113,"author":{"gitId":"shenyih0ng"},"content":"        modelDiscriminators.put(modelClass, m);","lastModifiedDate":"2022-10-07"},{"lineNumber":114,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":115,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"shenyih0ng"},"content":"     * Register the oneOf/anyOf descendants of the modelClass.","lastModifiedDate":"2022-10-07"},{"lineNumber":118,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"shenyih0ng"},"content":"     * @param modelClass  the model class","lastModifiedDate":"2022-10-07"},{"lineNumber":120,"author":{"gitId":"shenyih0ng"},"content":"     * @param descendants a map of oneOf/anyOf descendants.","lastModifiedDate":"2022-10-07"},{"lineNumber":121,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":122,"author":{"gitId":"shenyih0ng"},"content":"    public static void registerDescendants(Class\u003c?\u003e modelClass, Map\u003cString, Class\u003c?\u003e\u003e descendants) {","lastModifiedDate":"2022-10-07"},{"lineNumber":123,"author":{"gitId":"shenyih0ng"},"content":"        modelDescendants.put(modelClass, descendants);","lastModifiedDate":"2022-10-07"},{"lineNumber":124,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":125,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":126,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":127,"author":{"gitId":"shenyih0ng"},"content":"     * Get the default JSON instance.","lastModifiedDate":"2022-10-07"},{"lineNumber":128,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":129,"author":{"gitId":"shenyih0ng"},"content":"     * @return the default JSON instance","lastModifiedDate":"2022-10-07"},{"lineNumber":130,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"shenyih0ng"},"content":"    public static JSON getDefault() {","lastModifiedDate":"2022-10-07"},{"lineNumber":132,"author":{"gitId":"shenyih0ng"},"content":"        return json;","lastModifiedDate":"2022-10-07"},{"lineNumber":133,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":135,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":136,"author":{"gitId":"shenyih0ng"},"content":"     * Set the default JSON instance.","lastModifiedDate":"2022-10-07"},{"lineNumber":137,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":138,"author":{"gitId":"shenyih0ng"},"content":"     * @param json JSON instance to be used","lastModifiedDate":"2022-10-07"},{"lineNumber":139,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":140,"author":{"gitId":"shenyih0ng"},"content":"    public static void setDefault(JSON json) {","lastModifiedDate":"2022-10-07"},{"lineNumber":141,"author":{"gitId":"shenyih0ng"},"content":"        JSON.json \u003d json;","lastModifiedDate":"2022-10-07"},{"lineNumber":142,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":143,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":144,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":145,"author":{"gitId":"shenyih0ng"},"content":"     * Set the date format for JSON (de)serialization with Date properties.","lastModifiedDate":"2022-10-07"},{"lineNumber":146,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":147,"author":{"gitId":"shenyih0ng"},"content":"     * @param dateFormat Date format","lastModifiedDate":"2022-10-07"},{"lineNumber":148,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":149,"author":{"gitId":"shenyih0ng"},"content":"    public void setDateFormat(DateFormat dateFormat) {","lastModifiedDate":"2022-10-07"},{"lineNumber":150,"author":{"gitId":"shenyih0ng"},"content":"        mapper.setDateFormat(dateFormat);","lastModifiedDate":"2022-10-07"},{"lineNumber":151,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":152,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":153,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":154,"author":{"gitId":"shenyih0ng"},"content":"     * Get the object mapper","lastModifiedDate":"2022-10-07"},{"lineNumber":155,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":156,"author":{"gitId":"shenyih0ng"},"content":"     * @return object mapper","lastModifiedDate":"2022-10-07"},{"lineNumber":157,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":158,"author":{"gitId":"shenyih0ng"},"content":"    public ObjectMapper getMapper() {","lastModifiedDate":"2022-10-07"},{"lineNumber":159,"author":{"gitId":"shenyih0ng"},"content":"        return mapper;","lastModifiedDate":"2022-10-07"},{"lineNumber":160,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":161,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":162,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":163,"author":{"gitId":"shenyih0ng"},"content":"     * Helper class to register the discriminator mappings.","lastModifiedDate":"2022-10-03"},{"lineNumber":164,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":165,"author":{"gitId":"shenyih0ng"},"content":"    private static class ClassDiscriminatorMapping {","lastModifiedDate":"2022-10-03"},{"lineNumber":166,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":167,"author":{"gitId":"shenyih0ng"},"content":"        // The model class name.","lastModifiedDate":"2022-10-03"},{"lineNumber":168,"author":{"gitId":"shenyih0ng"},"content":"        Class\u003c?\u003e modelClass;","lastModifiedDate":"2022-10-03"},{"lineNumber":169,"author":{"gitId":"shenyih0ng"},"content":"        // The name of the discriminator property.","lastModifiedDate":"2022-10-03"},{"lineNumber":170,"author":{"gitId":"shenyih0ng"},"content":"        String discriminatorName;","lastModifiedDate":"2022-10-03"},{"lineNumber":171,"author":{"gitId":"shenyih0ng"},"content":"        // The discriminator mappings for a model class.","lastModifiedDate":"2022-10-03"},{"lineNumber":172,"author":{"gitId":"shenyih0ng"},"content":"        Map\u003cString, Class\u003c?\u003e\u003e discriminatorMappings;","lastModifiedDate":"2022-10-03"},{"lineNumber":173,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":174,"author":{"gitId":"shenyih0ng"},"content":"        // Constructs a new class discriminator.","lastModifiedDate":"2022-10-03"},{"lineNumber":175,"author":{"gitId":"shenyih0ng"},"content":"        ClassDiscriminatorMapping(Class\u003c?\u003e cls, String propertyName, Map\u003cString, Class\u003c?\u003e\u003e mappings) {","lastModifiedDate":"2022-10-03"},{"lineNumber":176,"author":{"gitId":"shenyih0ng"},"content":"            modelClass \u003d cls;","lastModifiedDate":"2022-10-03"},{"lineNumber":177,"author":{"gitId":"shenyih0ng"},"content":"            discriminatorName \u003d propertyName;","lastModifiedDate":"2022-10-03"},{"lineNumber":178,"author":{"gitId":"shenyih0ng"},"content":"            discriminatorMappings \u003d new HashMap\u003cString, Class\u003c?\u003e\u003e();","lastModifiedDate":"2022-10-03"},{"lineNumber":179,"author":{"gitId":"shenyih0ng"},"content":"            if (mappings !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":180,"author":{"gitId":"shenyih0ng"},"content":"                discriminatorMappings.putAll(mappings);","lastModifiedDate":"2022-10-03"},{"lineNumber":181,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":182,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":183,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":184,"author":{"gitId":"shenyih0ng"},"content":"        // Return the name of the discriminator property for this model class.","lastModifiedDate":"2022-10-03"},{"lineNumber":185,"author":{"gitId":"shenyih0ng"},"content":"        String getDiscriminatorPropertyName() {","lastModifiedDate":"2022-10-03"},{"lineNumber":186,"author":{"gitId":"shenyih0ng"},"content":"            return discriminatorName;","lastModifiedDate":"2022-10-03"},{"lineNumber":187,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":188,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":189,"author":{"gitId":"shenyih0ng"},"content":"        // Return the discriminator value or null if the discriminator is not","lastModifiedDate":"2022-10-03"},{"lineNumber":190,"author":{"gitId":"shenyih0ng"},"content":"        // present in the payload.","lastModifiedDate":"2022-10-03"},{"lineNumber":191,"author":{"gitId":"shenyih0ng"},"content":"        String getDiscriminatorValue(JsonNode node) {","lastModifiedDate":"2022-10-03"},{"lineNumber":192,"author":{"gitId":"shenyih0ng"},"content":"            // Determine the value of the discriminator property in the input data.","lastModifiedDate":"2022-10-03"},{"lineNumber":193,"author":{"gitId":"shenyih0ng"},"content":"            if (discriminatorName !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":194,"author":{"gitId":"shenyih0ng"},"content":"                // Get the value of the discriminator property, if present in the input payload.","lastModifiedDate":"2022-10-03"},{"lineNumber":195,"author":{"gitId":"shenyih0ng"},"content":"                node \u003d node.get(discriminatorName);","lastModifiedDate":"2022-10-03"},{"lineNumber":196,"author":{"gitId":"shenyih0ng"},"content":"                if (node !\u003d null \u0026\u0026 node.isValueNode()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":197,"author":{"gitId":"shenyih0ng"},"content":"                    String discrValue \u003d node.asText();","lastModifiedDate":"2022-10-03"},{"lineNumber":198,"author":{"gitId":"shenyih0ng"},"content":"                    if (discrValue !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":199,"author":{"gitId":"shenyih0ng"},"content":"                        return discrValue;","lastModifiedDate":"2022-10-03"},{"lineNumber":200,"author":{"gitId":"shenyih0ng"},"content":"                    }","lastModifiedDate":"2022-10-03"},{"lineNumber":201,"author":{"gitId":"shenyih0ng"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":202,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":203,"author":{"gitId":"shenyih0ng"},"content":"            return null;","lastModifiedDate":"2022-10-03"},{"lineNumber":204,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":205,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":206,"author":{"gitId":"shenyih0ng"},"content":"        /**","lastModifiedDate":"2022-10-03"},{"lineNumber":207,"author":{"gitId":"shenyih0ng"},"content":"         * Returns the target model class that should be used to deserialize the input data. This function can be","lastModifiedDate":"2022-10-07"},{"lineNumber":208,"author":{"gitId":"shenyih0ng"},"content":"         * invoked for anyOf/oneOf composed models with discriminator mappings. The discriminator mappings are used to","lastModifiedDate":"2022-10-07"},{"lineNumber":209,"author":{"gitId":"shenyih0ng"},"content":"         * determine the target model class.","lastModifiedDate":"2022-10-07"},{"lineNumber":210,"author":{"gitId":"shenyih0ng"},"content":"         *","lastModifiedDate":"2022-10-03"},{"lineNumber":211,"author":{"gitId":"shenyih0ng"},"content":"         * @param node           The input data.","lastModifiedDate":"2022-10-03"},{"lineNumber":212,"author":{"gitId":"shenyih0ng"},"content":"         * @param visitedClasses The set of classes that have already been visited.","lastModifiedDate":"2022-10-03"},{"lineNumber":213,"author":{"gitId":"shenyih0ng"},"content":"         * @return the target model class.","lastModifiedDate":"2022-10-03"},{"lineNumber":214,"author":{"gitId":"shenyih0ng"},"content":"         */","lastModifiedDate":"2022-10-03"},{"lineNumber":215,"author":{"gitId":"shenyih0ng"},"content":"        Class\u003c?\u003e getClassForElement(JsonNode node, Set\u003cClass\u003c?\u003e\u003e visitedClasses) {","lastModifiedDate":"2022-10-03"},{"lineNumber":216,"author":{"gitId":"shenyih0ng"},"content":"            if (visitedClasses.contains(modelClass)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":217,"author":{"gitId":"shenyih0ng"},"content":"                // Class has already been visited.","lastModifiedDate":"2022-10-03"},{"lineNumber":218,"author":{"gitId":"shenyih0ng"},"content":"                return null;","lastModifiedDate":"2022-10-03"},{"lineNumber":219,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":220,"author":{"gitId":"shenyih0ng"},"content":"            // Determine the value of the discriminator property in the input data.","lastModifiedDate":"2022-10-03"},{"lineNumber":221,"author":{"gitId":"shenyih0ng"},"content":"            String discrValue \u003d getDiscriminatorValue(node);","lastModifiedDate":"2022-10-03"},{"lineNumber":222,"author":{"gitId":"shenyih0ng"},"content":"            if (discrValue \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":223,"author":{"gitId":"shenyih0ng"},"content":"                return null;","lastModifiedDate":"2022-10-03"},{"lineNumber":224,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":225,"author":{"gitId":"shenyih0ng"},"content":"            Class\u003c?\u003e cls \u003d discriminatorMappings.get(discrValue);","lastModifiedDate":"2022-10-03"},{"lineNumber":226,"author":{"gitId":"shenyih0ng"},"content":"            // It may not be sufficient to return this cls directly because that target class","lastModifiedDate":"2022-10-03"},{"lineNumber":227,"author":{"gitId":"shenyih0ng"},"content":"            // may itself be a composed schema, possibly with its own discriminator.","lastModifiedDate":"2022-10-03"},{"lineNumber":228,"author":{"gitId":"shenyih0ng"},"content":"            visitedClasses.add(modelClass);","lastModifiedDate":"2022-10-03"},{"lineNumber":229,"author":{"gitId":"shenyih0ng"},"content":"            for (Class\u003c?\u003e childClass : discriminatorMappings.values()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":230,"author":{"gitId":"shenyih0ng"},"content":"                ClassDiscriminatorMapping childCdm \u003d modelDiscriminators.get(childClass);","lastModifiedDate":"2022-10-03"},{"lineNumber":231,"author":{"gitId":"shenyih0ng"},"content":"                if (childCdm \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":232,"author":{"gitId":"shenyih0ng"},"content":"                    continue;","lastModifiedDate":"2022-10-03"},{"lineNumber":233,"author":{"gitId":"shenyih0ng"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":234,"author":{"gitId":"shenyih0ng"},"content":"                if (!discriminatorName.equals(childCdm.discriminatorName)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":235,"author":{"gitId":"shenyih0ng"},"content":"                    discrValue \u003d getDiscriminatorValue(node);","lastModifiedDate":"2022-10-03"},{"lineNumber":236,"author":{"gitId":"shenyih0ng"},"content":"                    if (discrValue \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":237,"author":{"gitId":"shenyih0ng"},"content":"                        continue;","lastModifiedDate":"2022-10-03"},{"lineNumber":238,"author":{"gitId":"shenyih0ng"},"content":"                    }","lastModifiedDate":"2022-10-03"},{"lineNumber":239,"author":{"gitId":"shenyih0ng"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":240,"author":{"gitId":"shenyih0ng"},"content":"                if (childCdm !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":241,"author":{"gitId":"shenyih0ng"},"content":"                    // Recursively traverse the discriminator mappings.","lastModifiedDate":"2022-10-03"},{"lineNumber":242,"author":{"gitId":"shenyih0ng"},"content":"                    Class\u003c?\u003e childDiscr \u003d childCdm.getClassForElement(node, visitedClasses);","lastModifiedDate":"2022-10-03"},{"lineNumber":243,"author":{"gitId":"shenyih0ng"},"content":"                    if (childDiscr !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":244,"author":{"gitId":"shenyih0ng"},"content":"                        return childDiscr;","lastModifiedDate":"2022-10-03"},{"lineNumber":245,"author":{"gitId":"shenyih0ng"},"content":"                    }","lastModifiedDate":"2022-10-03"},{"lineNumber":246,"author":{"gitId":"shenyih0ng"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":247,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":248,"author":{"gitId":"shenyih0ng"},"content":"            return cls;","lastModifiedDate":"2022-10-03"},{"lineNumber":249,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":250,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":251,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"shenyih0ng":251}},{"path":"src/main/java/org/openapitools/client/Pair.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"/*","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API contains data used to render \u003chttps://nusmods.com\u003e. It includes data on modules offered by NUS and their timetables, as well as information on the locations the classes take place in. You are welcome to use and experiment with the data, which is extracted from official APIs provided by the Registrar\u0027s Office.  The API consists of static JSON files scraped daily from the school\u0027s APIs. This means it only partially follow REST conventions, and all resources are read only. All successful responses will return JSON, and all endpoints end in `.json`.  The shape of the data returned by these endpoints are designed for NUSMods in mind. If you have any questions or find that you need the data in other shapes for other purposes, feel free to reach out to us:  - **Telegram**: \u003chttps://telegram.me/nusmods\u003e - **Mailing list**: \u003cnusmods@googlegroups.com\u003e (for security related issues please email \u003cmods@nusmods.com\u003e instead)  ## Fetching data  Any HTTP client can be used to fetch data from the API. HTTPS is preferred, but the server will also respond to HTTP requests. The server supports HTTP 1.1 as well as HTTP 2 over HTTPS, and supports gzip compression.  The API has no authentication, and is not rate limited. While the server can respond to a large number of requests simultaneously, we request that you be polite with resource usage so as not to disrupt nusmods.com, which relies on the same API server. In general there is no need to fetch data from the API more than once per day, as that is the frequency at which we update the data.  [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) headers are enabled on all endpoints, so client-side JavaScript can use also use the API.  ## TypeScript types  Since the NUSMods is written in TypeScript, typings are available in the source for the scraper. These may be easier to read than the documentation generated by Swagger.  - Module types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/modules.ts\u003e - Venue types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/venues.ts\u003e  ## Data  Below are some notes about the data returned from the API. Feel free to talk to us or create an issue if any of it is not clear.  ### Module data  Module endpoints return information on modules offered by NUS. Most of the module data is self-explanatory, but some of the data are more complex and is explained here.  #### Lessons  Each lesson in a timetable has a lesson type `lessonType` and class number `ClassNo`. Every student must take one of each lesson type offered by the module. For example, this module offers two tutorials and one lecture. That means the student must attend the lecture, and can choose one of the two tutorials to attend.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"01\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1100\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"COM1-0207\\\"     },     {       \\\"classNo\\\": \\\"02\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Friday\\\",       \\\"startTime\\\": \\\"0900\\\",       \\\"endTime\\\": \\\"1000\\\",       \\\"venue\\\": \\\"COM1-0209\\\"     }   ] } ```  Each lesson has a `classNo` key. There can be multiple lessons of the same type and class number, in which case students must attend both. In this example, students can choose to attend either lecture group 1 on Tuesdays and Wednesdays, or lecture group 2 on Mondays and Wednesdays.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1400\\\",       \\\"endTime\\\": \\\"1500\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Monday\\\",       \\\"startTime\\\": \\\"1000\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1500\\\",       \\\"endTime\\\": \\\"1600\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     }   ] } ```  #### Lesson Weeks  The `weeks` key on lessons can return data in one of two forms.  Weeks is usually a sorted array of numbers. In this case it represents the school weeks the lesson occurs on, from 1 to 13.  Some classes have lessons outside of the school timetable. In this case a `WeekRange` object is returned. The object will always contain a `start` and `end` key representing the start and end date of lessons. The example below has classes every week from 17th Jan to 18th April.  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-04-18\\\" } ```  Optionally it can also include `weekInterval`, a positive integer describing the number of weeks between each lesson, and `weeks`, an array of positive integers describing the weeks on which the lesson will fall, with week 1 being the starting date. If these are not present you can assume lessons will occur every week.  The following example has lessons on 17th Jan (week 1), 24th Jan (week 2), 7th Feb (week 4) and 21st Feb (week 6).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-21\\\",   \\\"weeks\\\": [1, 2, 4, 6] } ```  The following example has lessons on 17th Jan (week 1), 31st Jan (week 3), 14th Feb (week 5) and 28th Feb (week 7).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-28\\\",   \\\"weekInterval\\\": 2 } ```  #### Workload  The `workload` key can return data in one of two forms.  Workload is usually a **5-tuple of numbers**, describing the estimated number of hours per week the student is expected to put in for the module for **lectures, tutorials, laboratory, projects/fieldwork, and preparatory work** respectively. For example, a workload of `[2, 1, 1, 3, 3]` means the student should spend every week  - 2 hours in lectures - 1 hour in tutorials - 1 hour at the lab - 3 hours doing project work - 3 hours preparing for classes  Each module credit represents 2.5 hours of work each week, so the standard 4 MC module represents 10 hours of work each week. Module credit may not be integers.  Note that this is only an estimate, and may be outdated or differ significantly in reality. Some modules also incorrectly lists the **total** workload hours instead of weekly, so very large values may show up.  This value is parsed from a string provided by the school, and occasionally this field will contain unusual values which cannot be parsed. In this case this field will contain the original **string** instead, which should be displayed as-is to the user.  #### Prerequisite, corequisite and preclusions  These three keys determine whether a student can take a module.  **Prerequisites** are requirements you have to meet before you can take a module. These are usually in the form of other modules (see prerequisite tree below for a machine readable format), but can also be things like \u0027taken A-level H2 math\u0027 or \u002770 MCs and above\u0027.  **Preclusions** refer to modules or requirements that cannot be taken if this module is taken, and vice versa. These are usually modules whose content overlaps significantly with this module, and can usually be used to replace each other to fulfill prerequisites.  **Corequisites** are modules that must be taken together with this module in the same semester. This usually refer to twined modules - modules which have linked syllabuses.  #### Prerequisite Tree  The `prereqTree` key is return on the individual module endpoint (`/modules/{moduleCode`). Not all modules have prerequisites, and some have prerequisites that cannot be properly represented as a tree, in which case this key will not appear.  This describes the prerequisites that need to be fulfilled before this module can be taken. The data structure is recursive and represents a tree.  ```json {   \\\"and\\\": [     \\\"CS1231\\\",     {       \\\"or\\\": [\\\"CS1010S\\\", \\\"CS1010X\\\"]     }   ] } ```  In the example, this module requires CS1231 and either CS1010S or CS1010X. This can be visualized as  ```            ┌ CS1231 ── all of ─┤            │         ┌ CS1010            └ one of ─┤                      └ CS1010X ```  The module information also contains the inverse of this, that is, modules whose requirements are fulfilled by this module (taking this module will allow you to take these modules in the following semester). The data is found on the `fulfillRequirements` key as an array of module codes.  ### Venue data  Venue data is simply the module timetable restructured to show the lessons happening at each classroom.  The venue list endpoint returns a list of all locations that are used in the semester. Note that this is not a comprehensive list of locations, but rather just a list of venues that appears in module lessons.  The venue information endpoint returns the full class and occupancy information about a venue. The `classes` key contains a list of lessons similar to the `timetable` key in module data, but without a `venue` key and with `moduleCode`.","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":" * The version of the OpenAPI document: 2.0.0","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":" * Contact: nusmods@googlegroups.com","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":" * https://openapi-generator.tech","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":" * Do not edit the class manually.","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"package org.openapitools.client;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"@javax.annotation.processing.Generated(value \u003d \"org.openapitools.codegen.languages.JavaClientCodegen\", date \u003d \"2022-10-03T22:22:26.802458+08:00[Asia/Singapore]\")","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"public class Pair {","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"    private String name \u003d \"\";","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"    private String value \u003d \"\";","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"    public Pair(String name, String value) {","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"        setName(name);","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"        setValue(value);","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"    public String getName() {","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"        return this.name;","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"    private void setName(String name) {","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"        if (!isValidString(name)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"            return;","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"    public String getValue() {","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"        return this.value;","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"    private void setValue(String value) {","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"        if (!isValidString(value)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"            return;","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"        this.value \u003d value;","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"    private boolean isValidString(String arg) {","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"        if (arg \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"            return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"        return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"shenyih0ng":58}},{"path":"src/main/java/org/openapitools/client/RFC3339DateFormat.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"/*","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API contains data used to render \u003chttps://nusmods.com\u003e. It includes data on modules offered by NUS and their timetables, as well as information on the locations the classes take place in. You are welcome to use and experiment with the data, which is extracted from official APIs provided by the Registrar\u0027s Office.  The API consists of static JSON files scraped daily from the school\u0027s APIs. This means it only partially follow REST conventions, and all resources are read only. All successful responses will return JSON, and all endpoints end in `.json`.  The shape of the data returned by these endpoints are designed for NUSMods in mind. If you have any questions or find that you need the data in other shapes for other purposes, feel free to reach out to us:  - **Telegram**: \u003chttps://telegram.me/nusmods\u003e - **Mailing list**: \u003cnusmods@googlegroups.com\u003e (for security related issues please email \u003cmods@nusmods.com\u003e instead)  ## Fetching data  Any HTTP client can be used to fetch data from the API. HTTPS is preferred, but the server will also respond to HTTP requests. The server supports HTTP 1.1 as well as HTTP 2 over HTTPS, and supports gzip compression.  The API has no authentication, and is not rate limited. While the server can respond to a large number of requests simultaneously, we request that you be polite with resource usage so as not to disrupt nusmods.com, which relies on the same API server. In general there is no need to fetch data from the API more than once per day, as that is the frequency at which we update the data.  [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) headers are enabled on all endpoints, so client-side JavaScript can use also use the API.  ## TypeScript types  Since the NUSMods is written in TypeScript, typings are available in the source for the scraper. These may be easier to read than the documentation generated by Swagger.  - Module types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/modules.ts\u003e - Venue types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/venues.ts\u003e  ## Data  Below are some notes about the data returned from the API. Feel free to talk to us or create an issue if any of it is not clear.  ### Module data  Module endpoints return information on modules offered by NUS. Most of the module data is self-explanatory, but some of the data are more complex and is explained here.  #### Lessons  Each lesson in a timetable has a lesson type `lessonType` and class number `ClassNo`. Every student must take one of each lesson type offered by the module. For example, this module offers two tutorials and one lecture. That means the student must attend the lecture, and can choose one of the two tutorials to attend.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"01\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1100\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"COM1-0207\\\"     },     {       \\\"classNo\\\": \\\"02\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Friday\\\",       \\\"startTime\\\": \\\"0900\\\",       \\\"endTime\\\": \\\"1000\\\",       \\\"venue\\\": \\\"COM1-0209\\\"     }   ] } ```  Each lesson has a `classNo` key. There can be multiple lessons of the same type and class number, in which case students must attend both. In this example, students can choose to attend either lecture group 1 on Tuesdays and Wednesdays, or lecture group 2 on Mondays and Wednesdays.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1400\\\",       \\\"endTime\\\": \\\"1500\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Monday\\\",       \\\"startTime\\\": \\\"1000\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1500\\\",       \\\"endTime\\\": \\\"1600\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     }   ] } ```  #### Lesson Weeks  The `weeks` key on lessons can return data in one of two forms.  Weeks is usually a sorted array of numbers. In this case it represents the school weeks the lesson occurs on, from 1 to 13.  Some classes have lessons outside of the school timetable. In this case a `WeekRange` object is returned. The object will always contain a `start` and `end` key representing the start and end date of lessons. The example below has classes every week from 17th Jan to 18th April.  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-04-18\\\" } ```  Optionally it can also include `weekInterval`, a positive integer describing the number of weeks between each lesson, and `weeks`, an array of positive integers describing the weeks on which the lesson will fall, with week 1 being the starting date. If these are not present you can assume lessons will occur every week.  The following example has lessons on 17th Jan (week 1), 24th Jan (week 2), 7th Feb (week 4) and 21st Feb (week 6).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-21\\\",   \\\"weeks\\\": [1, 2, 4, 6] } ```  The following example has lessons on 17th Jan (week 1), 31st Jan (week 3), 14th Feb (week 5) and 28th Feb (week 7).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-28\\\",   \\\"weekInterval\\\": 2 } ```  #### Workload  The `workload` key can return data in one of two forms.  Workload is usually a **5-tuple of numbers**, describing the estimated number of hours per week the student is expected to put in for the module for **lectures, tutorials, laboratory, projects/fieldwork, and preparatory work** respectively. For example, a workload of `[2, 1, 1, 3, 3]` means the student should spend every week  - 2 hours in lectures - 1 hour in tutorials - 1 hour at the lab - 3 hours doing project work - 3 hours preparing for classes  Each module credit represents 2.5 hours of work each week, so the standard 4 MC module represents 10 hours of work each week. Module credit may not be integers.  Note that this is only an estimate, and may be outdated or differ significantly in reality. Some modules also incorrectly lists the **total** workload hours instead of weekly, so very large values may show up.  This value is parsed from a string provided by the school, and occasionally this field will contain unusual values which cannot be parsed. In this case this field will contain the original **string** instead, which should be displayed as-is to the user.  #### Prerequisite, corequisite and preclusions  These three keys determine whether a student can take a module.  **Prerequisites** are requirements you have to meet before you can take a module. These are usually in the form of other modules (see prerequisite tree below for a machine readable format), but can also be things like \u0027taken A-level H2 math\u0027 or \u002770 MCs and above\u0027.  **Preclusions** refer to modules or requirements that cannot be taken if this module is taken, and vice versa. These are usually modules whose content overlaps significantly with this module, and can usually be used to replace each other to fulfill prerequisites.  **Corequisites** are modules that must be taken together with this module in the same semester. This usually refer to twined modules - modules which have linked syllabuses.  #### Prerequisite Tree  The `prereqTree` key is return on the individual module endpoint (`/modules/{moduleCode`). Not all modules have prerequisites, and some have prerequisites that cannot be properly represented as a tree, in which case this key will not appear.  This describes the prerequisites that need to be fulfilled before this module can be taken. The data structure is recursive and represents a tree.  ```json {   \\\"and\\\": [     \\\"CS1231\\\",     {       \\\"or\\\": [\\\"CS1010S\\\", \\\"CS1010X\\\"]     }   ] } ```  In the example, this module requires CS1231 and either CS1010S or CS1010X. This can be visualized as  ```            ┌ CS1231 ── all of ─┤            │         ┌ CS1010            └ one of ─┤                      └ CS1010X ```  The module information also contains the inverse of this, that is, modules whose requirements are fulfilled by this module (taking this module will allow you to take these modules in the following semester). The data is found on the `fulfillRequirements` key as an array of module codes.  ### Venue data  Venue data is simply the module timetable restructured to show the lessons happening at each classroom.  The venue list endpoint returns a list of all locations that are used in the semester. Note that this is not a comprehensive list of locations, but rather just a list of venues that appears in module lessons.  The venue information endpoint returns the full class and occupancy information about a venue. The `classes` key contains a list of lessons similar to the `timetable` key in module data, but without a `venue` key and with `moduleCode`.","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":" * The version of the OpenAPI document: 2.0.0","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":" * Contact: nusmods@googlegroups.com","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":" * https://openapi-generator.tech","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":" * Do not edit the class manually.","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"package org.openapitools.client;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"import java.text.DateFormat;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import java.text.DecimalFormat;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"import java.text.FieldPosition;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"import java.text.ParsePosition;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Date;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"import java.util.GregorianCalendar;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"import java.util.TimeZone;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.util.StdDateFormat;","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"public class RFC3339DateFormat extends DateFormat {","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"    private static final long serialVersionUID \u003d 1L;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"    private static final TimeZone TIMEZONE_Z \u003d TimeZone.getTimeZone(\"UTC\");","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"    private final StdDateFormat fmt \u003d new StdDateFormat()","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"        .withTimeZone(TIMEZONE_Z)","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"        .withColonInTimeZone(true);","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"    public RFC3339DateFormat() {","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"        this.calendar \u003d new GregorianCalendar();","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"        this.numberFormat \u003d new DecimalFormat();","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"    public Date parse(String source) {","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"        return parse(source, new ParsePosition(0));","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"    public Date parse(String source, ParsePosition pos) {","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"        return fmt.parse(source, pos);","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"    public StringBuffer format(Date date, StringBuffer toAppendTo, FieldPosition fieldPosition) {","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"        return fmt.format(date, toAppendTo, fieldPosition);","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"    public Object clone() {","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"        return super.clone();","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"shenyih0ng":58}},{"path":"src/main/java/org/openapitools/client/ServerConfiguration.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package org.openapitools.client;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":" * Representing a Server configuration.","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"public class ServerConfiguration {","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"    public String URL;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"    public String description;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"    public Map\u003cString, ServerVariable\u003e variables;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"     * @param URL         A URL to the target host.","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"     * @param description A description of the host designated by the URL.","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"     * @param variables   A map between a variable name and its value. The value is used for substitution in the","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"     *                    server\u0027s URL template.","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"    public ServerConfiguration(String URL, String description, Map\u003cString, ServerVariable\u003e variables) {","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"        this.URL \u003d URL;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"        this.variables \u003d variables;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"     * Format URL template using given variables.","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"     * @param variables A map between a variable name and its value.","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"     * @return Formatted URL.","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"    public String URL(Map\u003cString, String\u003e variables) {","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"        String url \u003d this.URL;","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"        // go through variables and replace placeholders","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"        for (Map.Entry\u003cString, ServerVariable\u003e variable : this.variables.entrySet()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"            String name \u003d variable.getKey();","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"            ServerVariable serverVariable \u003d variable.getValue();","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"            String value \u003d serverVariable.defaultValue;","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"            if (variables !\u003d null \u0026\u0026 variables.containsKey(name)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"                value \u003d variables.get(name);","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"                if (serverVariable.enumValues.size() \u003e 0 \u0026\u0026 !serverVariable.enumValues.contains(value)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"                    throw new IllegalArgumentException(","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"                        \"The variable \" + name + \" in the server URL has invalid value \" + value + \".\");","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"            url \u003d url.replaceAll(\"\\\\{\" + name + \"\\\\}\", value);","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"        return url;","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"     * Format URL template using default server variables.","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"     * @return Formatted URL.","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"    public String URL() {","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"        return URL(null);","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"shenyih0ng":61}},{"path":"src/main/java/org/openapitools/client/ServerVariable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package org.openapitools.client;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":" * Representing a Server Variable for server URL template substitution.","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"public class ServerVariable {","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"    public String description;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"    public String defaultValue;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"    public HashSet\u003cString\u003e enumValues \u003d null;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"     * @param description  A description for the server variable.","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"     * @param defaultValue The default value to use for substitution.","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"     * @param enumValues   An enumeration of string values to be used if the substitution options are from a limited","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"     *                     set.","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"    public ServerVariable(String description, String defaultValue, HashSet\u003cString\u003e enumValues) {","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"        this.defaultValue \u003d defaultValue;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"        this.enumValues \u003d enumValues;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"shenyih0ng":25}},{"path":"src/main/java/org/openapitools/client/api/ModulesApi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"/*","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API contains data used to render \u003chttps://nusmods.com\u003e. It includes data on modules offered by NUS and their timetables, as well as information on the locations the classes take place in. You are welcome to use and experiment with the data, which is extracted from official APIs provided by the Registrar\u0027s Office.  The API consists of static JSON files scraped daily from the school\u0027s APIs. This means it only partially follow REST conventions, and all resources are read only. All successful responses will return JSON, and all endpoints end in `.json`.  The shape of the data returned by these endpoints are designed for NUSMods in mind. If you have any questions or find that you need the data in other shapes for other purposes, feel free to reach out to us:  - **Telegram**: \u003chttps://telegram.me/nusmods\u003e - **Mailing list**: \u003cnusmods@googlegroups.com\u003e (for security related issues please email \u003cmods@nusmods.com\u003e instead)  ## Fetching data  Any HTTP client can be used to fetch data from the API. HTTPS is preferred, but the server will also respond to HTTP requests. The server supports HTTP 1.1 as well as HTTP 2 over HTTPS, and supports gzip compression.  The API has no authentication, and is not rate limited. While the server can respond to a large number of requests simultaneously, we request that you be polite with resource usage so as not to disrupt nusmods.com, which relies on the same API server. In general there is no need to fetch data from the API more than once per day, as that is the frequency at which we update the data.  [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) headers are enabled on all endpoints, so client-side JavaScript can use also use the API.  ## TypeScript types  Since the NUSMods is written in TypeScript, typings are available in the source for the scraper. These may be easier to read than the documentation generated by Swagger.  - Module types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/modules.ts\u003e - Venue types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/venues.ts\u003e  ## Data  Below are some notes about the data returned from the API. Feel free to talk to us or create an issue if any of it is not clear.  ### Module data  Module endpoints return information on modules offered by NUS. Most of the module data is self-explanatory, but some of the data are more complex and is explained here.  #### Lessons  Each lesson in a timetable has a lesson type `lessonType` and class number `ClassNo`. Every student must take one of each lesson type offered by the module. For example, this module offers two tutorials and one lecture. That means the student must attend the lecture, and can choose one of the two tutorials to attend.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"01\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1100\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"COM1-0207\\\"     },     {       \\\"classNo\\\": \\\"02\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Friday\\\",       \\\"startTime\\\": \\\"0900\\\",       \\\"endTime\\\": \\\"1000\\\",       \\\"venue\\\": \\\"COM1-0209\\\"     }   ] } ```  Each lesson has a `classNo` key. There can be multiple lessons of the same type and class number, in which case students must attend both. In this example, students can choose to attend either lecture group 1 on Tuesdays and Wednesdays, or lecture group 2 on Mondays and Wednesdays.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1400\\\",       \\\"endTime\\\": \\\"1500\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Monday\\\",       \\\"startTime\\\": \\\"1000\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1500\\\",       \\\"endTime\\\": \\\"1600\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     }   ] } ```  #### Lesson Weeks  The `weeks` key on lessons can return data in one of two forms.  Weeks is usually a sorted array of numbers. In this case it represents the school weeks the lesson occurs on, from 1 to 13.  Some classes have lessons outside of the school timetable. In this case a `WeekRange` object is returned. The object will always contain a `start` and `end` key representing the start and end date of lessons. The example below has classes every week from 17th Jan to 18th April.  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-04-18\\\" } ```  Optionally it can also include `weekInterval`, a positive integer describing the number of weeks between each lesson, and `weeks`, an array of positive integers describing the weeks on which the lesson will fall, with week 1 being the starting date. If these are not present you can assume lessons will occur every week.  The following example has lessons on 17th Jan (week 1), 24th Jan (week 2), 7th Feb (week 4) and 21st Feb (week 6).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-21\\\",   \\\"weeks\\\": [1, 2, 4, 6] } ```  The following example has lessons on 17th Jan (week 1), 31st Jan (week 3), 14th Feb (week 5) and 28th Feb (week 7).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-28\\\",   \\\"weekInterval\\\": 2 } ```  #### Workload  The `workload` key can return data in one of two forms.  Workload is usually a **5-tuple of numbers**, describing the estimated number of hours per week the student is expected to put in for the module for **lectures, tutorials, laboratory, projects/fieldwork, and preparatory work** respectively. For example, a workload of `[2, 1, 1, 3, 3]` means the student should spend every week  - 2 hours in lectures - 1 hour in tutorials - 1 hour at the lab - 3 hours doing project work - 3 hours preparing for classes  Each module credit represents 2.5 hours of work each week, so the standard 4 MC module represents 10 hours of work each week. Module credit may not be integers.  Note that this is only an estimate, and may be outdated or differ significantly in reality. Some modules also incorrectly lists the **total** workload hours instead of weekly, so very large values may show up.  This value is parsed from a string provided by the school, and occasionally this field will contain unusual values which cannot be parsed. In this case this field will contain the original **string** instead, which should be displayed as-is to the user.  #### Prerequisite, corequisite and preclusions  These three keys determine whether a student can take a module.  **Prerequisites** are requirements you have to meet before you can take a module. These are usually in the form of other modules (see prerequisite tree below for a machine readable format), but can also be things like \u0027taken A-level H2 math\u0027 or \u002770 MCs and above\u0027.  **Preclusions** refer to modules or requirements that cannot be taken if this module is taken, and vice versa. These are usually modules whose content overlaps significantly with this module, and can usually be used to replace each other to fulfill prerequisites.  **Corequisites** are modules that must be taken together with this module in the same semester. This usually refer to twined modules - modules which have linked syllabuses.  #### Prerequisite Tree  The `prereqTree` key is return on the individual module endpoint (`/modules/{moduleCode`). Not all modules have prerequisites, and some have prerequisites that cannot be properly represented as a tree, in which case this key will not appear.  This describes the prerequisites that need to be fulfilled before this module can be taken. The data structure is recursive and represents a tree.  ```json {   \\\"and\\\": [     \\\"CS1231\\\",     {       \\\"or\\\": [\\\"CS1010S\\\", \\\"CS1010X\\\"]     }   ] } ```  In the example, this module requires CS1231 and either CS1010S or CS1010X. This can be visualized as  ```            ┌ CS1231 ── all of ─┤            │         ┌ CS1010            └ one of ─┤                      └ CS1010X ```  The module information also contains the inverse of this, that is, modules whose requirements are fulfilled by this module (taking this module will allow you to take these modules in the following semester). The data is found on the `fulfillRequirements` key as an array of module codes.  ### Venue data  Venue data is simply the module timetable restructured to show the lessons happening at each classroom.  The venue list endpoint returns a list of all locations that are used in the semester. Note that this is not a comprehensive list of locations, but rather just a list of venues that appears in module lessons.  The venue information endpoint returns the full class and occupancy information about a venue. The `classes` key contains a list of lessons similar to the `timetable` key in module data, but without a `venue` key and with `moduleCode`.","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":" * The version of the OpenAPI document: 2.0.0","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":" * Contact: nusmods@googlegroups.com","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":" * https://openapi-generator.tech","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":" * Do not edit the class manually.","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"package org.openapitools.client.api;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import java.io.InputStream;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"import java.net.URI;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"import java.net.http.HttpClient;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"import java.net.http.HttpRequest;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"import java.net.http.HttpResponse;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"import java.time.Duration;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"import java.util.List;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"import org.openapitools.client.ApiClient;","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"import org.openapitools.client.ApiException;","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"import org.openapitools.client.ApiResponse;","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"SeekSaveServe"},"content":"import org.openapitools.client.model.Module;","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"import org.openapitools.client.model.ModuleCondensed;","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"import org.openapitools.client.model.ModuleInformation;","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.core.type.TypeReference;","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"@javax.annotation.processing.Generated(value \u003d \"org.openapitools.codegen.languages.JavaClientCodegen\", date \u003d \"2022-10-03T22:22:26.802458+08:00[Asia/Singapore]\")","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"public class ModulesApi {","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"    private final HttpClient memberVarHttpClient;","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"    private final ObjectMapper memberVarObjectMapper;","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"    private final String memberVarBaseUri;","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"    private final Consumer\u003cHttpRequest.Builder\u003e memberVarInterceptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"    private final Duration memberVarReadTimeout;","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"    private final Consumer\u003cHttpResponse\u003cInputStream\u003e\u003e memberVarResponseInterceptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"    private final Consumer\u003cHttpResponse\u003cString\u003e\u003e memberVarAsyncResponseInterceptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"    public ModulesApi() {","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"        this(new ApiClient());","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"    public ModulesApi(ApiClient apiClient) {","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"        memberVarHttpClient \u003d apiClient.getHttpClient();","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"        memberVarObjectMapper \u003d apiClient.getObjectMapper();","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"        memberVarBaseUri \u003d apiClient.getBaseUri();","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"        memberVarInterceptor \u003d apiClient.getRequestInterceptor();","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"        memberVarReadTimeout \u003d apiClient.getReadTimeout();","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"        memberVarResponseInterceptor \u003d apiClient.getResponseInterceptor();","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"        memberVarAsyncResponseInterceptor \u003d apiClient.getAsyncResponseInterceptor();","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"    protected ApiException getApiException(String operationId, HttpResponse\u003cInputStream\u003e response) throws IOException {","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"        String body \u003d response.body() \u003d\u003d null ? null : new String(response.body().readAllBytes());","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"        String message \u003d formatExceptionMessage(operationId, response.statusCode(), body);","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"        return new ApiException(response.statusCode(), message, response.headers(), body);","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"    private String formatExceptionMessage(String operationId, int statusCode, String body) {","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"        if (body \u003d\u003d null || body.isEmpty()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"            body \u003d \"[no body]\";","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"shenyih0ng"},"content":"        return operationId + \" call failed with: \" + statusCode + \" - \" + body;","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"shenyih0ng"},"content":"     * Get detailed information about all modules Get all information about modules except for timetable and prereq tree","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"shenyih0ng"},"content":"     * in a year. This is compact enough to be loaded and filtered in browsers without lag and is useful for faceted","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"shenyih0ng"},"content":"     * search and detailed module listing.  NUSMods feeds this information into an Elasticsearch search server for the","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"shenyih0ng"},"content":"     * detailed module search page.","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"shenyih0ng"},"content":"     * @param acadYear academic year, with the slash (/) replaced by a dash (required)","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"shenyih0ng"},"content":"     * @return List\u0026lt;ModuleInformation\u0026gt;","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"shenyih0ng"},"content":"     * @throws ApiException if fails to make API call","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"shenyih0ng"},"content":"    public List\u003cModuleInformation\u003e acadYearModuleInfoJsonGet(String acadYear) throws ApiException {","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"shenyih0ng"},"content":"        ApiResponse\u003cList\u003cModuleInformation\u003e\u003e localVarResponse \u003d acadYearModuleInfoJsonGetWithHttpInfo(acadYear);","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"shenyih0ng"},"content":"        return localVarResponse.getData();","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"shenyih0ng"},"content":"     * Get detailed information about all modules Get all information about modules except for timetable and prereq tree","lastModifiedDate":"2022-10-07"},{"lineNumber":90,"author":{"gitId":"shenyih0ng"},"content":"     * in a year. This is compact enough to be loaded and filtered in browsers without lag and is useful for faceted","lastModifiedDate":"2022-10-07"},{"lineNumber":91,"author":{"gitId":"shenyih0ng"},"content":"     * search and detailed module listing.  NUSMods feeds this information into an Elasticsearch search server for the","lastModifiedDate":"2022-10-07"},{"lineNumber":92,"author":{"gitId":"shenyih0ng"},"content":"     * detailed module search page.","lastModifiedDate":"2022-10-07"},{"lineNumber":93,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":94,"author":{"gitId":"shenyih0ng"},"content":"     * @param acadYear academic year, with the slash (/) replaced by a dash (required)","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"shenyih0ng"},"content":"     * @return ApiResponse\u0026lt;List\u0026lt;ModuleInformation\u0026gt;\u0026gt;","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"shenyih0ng"},"content":"     * @throws ApiException if fails to make API call","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"shenyih0ng"},"content":"    public ApiResponse\u003cList\u003cModuleInformation\u003e\u003e acadYearModuleInfoJsonGetWithHttpInfo(String acadYear)","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"shenyih0ng"},"content":"        throws ApiException {","lastModifiedDate":"2022-10-07"},{"lineNumber":100,"author":{"gitId":"shenyih0ng"},"content":"        HttpRequest.Builder localVarRequestBuilder \u003d acadYearModuleInfoJsonGetRequestBuilder(acadYear);","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"shenyih0ng"},"content":"        try {","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"shenyih0ng"},"content":"            HttpResponse\u003cInputStream\u003e localVarResponse \u003d memberVarHttpClient.send(","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"shenyih0ng"},"content":"                localVarRequestBuilder.build(),","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"shenyih0ng"},"content":"                HttpResponse.BodyHandlers.ofInputStream());","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"shenyih0ng"},"content":"            if (memberVarResponseInterceptor !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"shenyih0ng"},"content":"                memberVarResponseInterceptor.accept(localVarResponse);","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"shenyih0ng"},"content":"            try {","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"shenyih0ng"},"content":"                if (localVarResponse.statusCode() / 100 !\u003d 2) {","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"shenyih0ng"},"content":"                    throw getApiException(\"acadYearModuleInfoJsonGet\", localVarResponse);","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"shenyih0ng"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"shenyih0ng"},"content":"                return new ApiResponse\u003cList\u003cModuleInformation\u003e\u003e(","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"shenyih0ng"},"content":"                    localVarResponse.statusCode(),","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"shenyih0ng"},"content":"                    localVarResponse.headers().map(),","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"shenyih0ng"},"content":"                    memberVarObjectMapper.readValue(localVarResponse.body(),","lastModifiedDate":"2022-10-07"},{"lineNumber":116,"author":{"gitId":"shenyih0ng"},"content":"                        new TypeReference\u003cList\u003cModuleInformation\u003e\u003e() {","lastModifiedDate":"2022-10-07"},{"lineNumber":117,"author":{"gitId":"shenyih0ng"},"content":"                        }) // closes the InputStream","lastModifiedDate":"2022-10-07"},{"lineNumber":118,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"shenyih0ng"},"content":"                );","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"shenyih0ng"},"content":"            } finally {","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"shenyih0ng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"shenyih0ng"},"content":"            throw new ApiException(e);","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"shenyih0ng"},"content":"        } catch (InterruptedException e) {","lastModifiedDate":"2022-10-07"},{"lineNumber":125,"author":{"gitId":"shenyih0ng"},"content":"            Thread.currentThread().interrupt();","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"shenyih0ng"},"content":"            throw new ApiException(e);","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":129,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"shenyih0ng"},"content":"    private HttpRequest.Builder acadYearModuleInfoJsonGetRequestBuilder(String acadYear) throws ApiException {","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"shenyih0ng"},"content":"        // verify the required parameter \u0027acadYear\u0027 is set","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"shenyih0ng"},"content":"        if (acadYear \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"shenyih0ng"},"content":"            throw new ApiException(400,","lastModifiedDate":"2022-10-07"},{"lineNumber":134,"author":{"gitId":"shenyih0ng"},"content":"                \"Missing the required parameter \u0027acadYear\u0027 when calling acadYearModuleInfoJsonGet\");","lastModifiedDate":"2022-10-07"},{"lineNumber":135,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":136,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"shenyih0ng"},"content":"        HttpRequest.Builder localVarRequestBuilder \u003d HttpRequest.newBuilder();","lastModifiedDate":"2022-10-03"},{"lineNumber":138,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":139,"author":{"gitId":"shenyih0ng"},"content":"        String localVarPath \u003d \"/{acadYear}/moduleInfo.json\"","lastModifiedDate":"2022-10-03"},{"lineNumber":140,"author":{"gitId":"shenyih0ng"},"content":"            .replace(\"{acadYear}\", ApiClient.urlEncode(acadYear.toString()));","lastModifiedDate":"2022-10-03"},{"lineNumber":141,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":142,"author":{"gitId":"shenyih0ng"},"content":"        localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));","lastModifiedDate":"2022-10-03"},{"lineNumber":143,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":144,"author":{"gitId":"shenyih0ng"},"content":"        localVarRequestBuilder.header(\"Accept\", \"application/json\");","lastModifiedDate":"2022-10-03"},{"lineNumber":145,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":146,"author":{"gitId":"shenyih0ng"},"content":"        localVarRequestBuilder.method(\"GET\", HttpRequest.BodyPublishers.noBody());","lastModifiedDate":"2022-10-03"},{"lineNumber":147,"author":{"gitId":"shenyih0ng"},"content":"        if (memberVarReadTimeout !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":148,"author":{"gitId":"shenyih0ng"},"content":"            localVarRequestBuilder.timeout(memberVarReadTimeout);","lastModifiedDate":"2022-10-03"},{"lineNumber":149,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":150,"author":{"gitId":"shenyih0ng"},"content":"        if (memberVarInterceptor !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":151,"author":{"gitId":"shenyih0ng"},"content":"            memberVarInterceptor.accept(localVarRequestBuilder);","lastModifiedDate":"2022-10-03"},{"lineNumber":152,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":153,"author":{"gitId":"shenyih0ng"},"content":"        return localVarRequestBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":154,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":155,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":156,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":157,"author":{"gitId":"shenyih0ng"},"content":"     * Get detailed information about all modules Get all information about modules except for timetable and prereq tree","lastModifiedDate":"2022-10-07"},{"lineNumber":158,"author":{"gitId":"shenyih0ng"},"content":"     * in a year. This is compact enough to be loaded and filtered in browsers without lag and is useful for faceted","lastModifiedDate":"2022-10-07"},{"lineNumber":159,"author":{"gitId":"shenyih0ng"},"content":"     * search and detailed module listing.  In AY2018/2019, NUSMods used this information for the detailed module search","lastModifiedDate":"2022-10-07"},{"lineNumber":160,"author":{"gitId":"shenyih0ng"},"content":"     * page. This endpoint will no longer be present starting in AY2019/2020. Please use the moduleInfo.json endpoint","lastModifiedDate":"2022-10-07"},{"lineNumber":161,"author":{"gitId":"shenyih0ng"},"content":"     * instead, which contains modules which are not offered in the specified academic year, but is otherwise identical","lastModifiedDate":"2022-10-07"},{"lineNumber":162,"author":{"gitId":"shenyih0ng"},"content":"     * to this endpoint.","lastModifiedDate":"2022-10-07"},{"lineNumber":163,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":164,"author":{"gitId":"shenyih0ng"},"content":"     * @param acadYear academic year, with the slash (/) replaced by a dash (required)","lastModifiedDate":"2022-10-03"},{"lineNumber":165,"author":{"gitId":"shenyih0ng"},"content":"     * @return List\u0026lt;ModuleInformation\u0026gt;","lastModifiedDate":"2022-10-03"},{"lineNumber":166,"author":{"gitId":"shenyih0ng"},"content":"     * @throws ApiException if fails to make API call","lastModifiedDate":"2022-10-03"},{"lineNumber":167,"author":{"gitId":"shenyih0ng"},"content":"     * @deprecated","lastModifiedDate":"2022-10-03"},{"lineNumber":168,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":169,"author":{"gitId":"shenyih0ng"},"content":"    @Deprecated","lastModifiedDate":"2022-10-03"},{"lineNumber":170,"author":{"gitId":"shenyih0ng"},"content":"    public List\u003cModuleInformation\u003e acadYearModuleInformationJsonGet(String acadYear) throws ApiException {","lastModifiedDate":"2022-10-03"},{"lineNumber":171,"author":{"gitId":"shenyih0ng"},"content":"        ApiResponse\u003cList\u003cModuleInformation\u003e\u003e localVarResponse \u003d acadYearModuleInformationJsonGetWithHttpInfo(acadYear);","lastModifiedDate":"2022-10-03"},{"lineNumber":172,"author":{"gitId":"shenyih0ng"},"content":"        return localVarResponse.getData();","lastModifiedDate":"2022-10-03"},{"lineNumber":173,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":174,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":175,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":176,"author":{"gitId":"shenyih0ng"},"content":"     * Get detailed information about all modules Get all information about modules except for timetable and prereq tree","lastModifiedDate":"2022-10-07"},{"lineNumber":177,"author":{"gitId":"shenyih0ng"},"content":"     * in a year. This is compact enough to be loaded and filtered in browsers without lag and is useful for faceted","lastModifiedDate":"2022-10-07"},{"lineNumber":178,"author":{"gitId":"shenyih0ng"},"content":"     * search and detailed module listing.  In AY2018/2019, NUSMods used this information for the detailed module search","lastModifiedDate":"2022-10-07"},{"lineNumber":179,"author":{"gitId":"shenyih0ng"},"content":"     * page. This endpoint will no longer be present starting in AY2019/2020. Please use the moduleInfo.json endpoint","lastModifiedDate":"2022-10-07"},{"lineNumber":180,"author":{"gitId":"shenyih0ng"},"content":"     * instead, which contains modules which are not offered in the specified academic year, but is otherwise identical","lastModifiedDate":"2022-10-07"},{"lineNumber":181,"author":{"gitId":"shenyih0ng"},"content":"     * to this endpoint.","lastModifiedDate":"2022-10-07"},{"lineNumber":182,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":183,"author":{"gitId":"shenyih0ng"},"content":"     * @param acadYear academic year, with the slash (/) replaced by a dash (required)","lastModifiedDate":"2022-10-03"},{"lineNumber":184,"author":{"gitId":"shenyih0ng"},"content":"     * @return ApiResponse\u0026lt;List\u0026lt;ModuleInformation\u0026gt;\u0026gt;","lastModifiedDate":"2022-10-03"},{"lineNumber":185,"author":{"gitId":"shenyih0ng"},"content":"     * @throws ApiException if fails to make API call","lastModifiedDate":"2022-10-03"},{"lineNumber":186,"author":{"gitId":"shenyih0ng"},"content":"     * @deprecated","lastModifiedDate":"2022-10-03"},{"lineNumber":187,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":188,"author":{"gitId":"shenyih0ng"},"content":"    @Deprecated","lastModifiedDate":"2022-10-03"},{"lineNumber":189,"author":{"gitId":"shenyih0ng"},"content":"    public ApiResponse\u003cList\u003cModuleInformation\u003e\u003e acadYearModuleInformationJsonGetWithHttpInfo(String acadYear)","lastModifiedDate":"2022-10-07"},{"lineNumber":190,"author":{"gitId":"shenyih0ng"},"content":"        throws ApiException {","lastModifiedDate":"2022-10-07"},{"lineNumber":191,"author":{"gitId":"shenyih0ng"},"content":"        HttpRequest.Builder localVarRequestBuilder \u003d acadYearModuleInformationJsonGetRequestBuilder(acadYear);","lastModifiedDate":"2022-10-03"},{"lineNumber":192,"author":{"gitId":"shenyih0ng"},"content":"        try {","lastModifiedDate":"2022-10-03"},{"lineNumber":193,"author":{"gitId":"shenyih0ng"},"content":"            HttpResponse\u003cInputStream\u003e localVarResponse \u003d memberVarHttpClient.send(","lastModifiedDate":"2022-10-03"},{"lineNumber":194,"author":{"gitId":"shenyih0ng"},"content":"                localVarRequestBuilder.build(),","lastModifiedDate":"2022-10-03"},{"lineNumber":195,"author":{"gitId":"shenyih0ng"},"content":"                HttpResponse.BodyHandlers.ofInputStream());","lastModifiedDate":"2022-10-03"},{"lineNumber":196,"author":{"gitId":"shenyih0ng"},"content":"            if (memberVarResponseInterceptor !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":197,"author":{"gitId":"shenyih0ng"},"content":"                memberVarResponseInterceptor.accept(localVarResponse);","lastModifiedDate":"2022-10-03"},{"lineNumber":198,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":199,"author":{"gitId":"shenyih0ng"},"content":"            try {","lastModifiedDate":"2022-10-03"},{"lineNumber":200,"author":{"gitId":"shenyih0ng"},"content":"                if (localVarResponse.statusCode() / 100 !\u003d 2) {","lastModifiedDate":"2022-10-03"},{"lineNumber":201,"author":{"gitId":"shenyih0ng"},"content":"                    throw getApiException(\"acadYearModuleInformationJsonGet\", localVarResponse);","lastModifiedDate":"2022-10-03"},{"lineNumber":202,"author":{"gitId":"shenyih0ng"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":203,"author":{"gitId":"shenyih0ng"},"content":"                return new ApiResponse\u003cList\u003cModuleInformation\u003e\u003e(","lastModifiedDate":"2022-10-03"},{"lineNumber":204,"author":{"gitId":"shenyih0ng"},"content":"                    localVarResponse.statusCode(),","lastModifiedDate":"2022-10-03"},{"lineNumber":205,"author":{"gitId":"shenyih0ng"},"content":"                    localVarResponse.headers().map(),","lastModifiedDate":"2022-10-03"},{"lineNumber":206,"author":{"gitId":"shenyih0ng"},"content":"                    memberVarObjectMapper.readValue(localVarResponse.body(),","lastModifiedDate":"2022-10-07"},{"lineNumber":207,"author":{"gitId":"shenyih0ng"},"content":"                        new TypeReference\u003cList\u003cModuleInformation\u003e\u003e() {","lastModifiedDate":"2022-10-07"},{"lineNumber":208,"author":{"gitId":"shenyih0ng"},"content":"                        }) // closes the InputStream","lastModifiedDate":"2022-10-07"},{"lineNumber":209,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":210,"author":{"gitId":"shenyih0ng"},"content":"                );","lastModifiedDate":"2022-10-03"},{"lineNumber":211,"author":{"gitId":"shenyih0ng"},"content":"            } finally {","lastModifiedDate":"2022-10-03"},{"lineNumber":212,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":213,"author":{"gitId":"shenyih0ng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-03"},{"lineNumber":214,"author":{"gitId":"shenyih0ng"},"content":"            throw new ApiException(e);","lastModifiedDate":"2022-10-03"},{"lineNumber":215,"author":{"gitId":"shenyih0ng"},"content":"        } catch (InterruptedException e) {","lastModifiedDate":"2022-10-07"},{"lineNumber":216,"author":{"gitId":"shenyih0ng"},"content":"            Thread.currentThread().interrupt();","lastModifiedDate":"2022-10-03"},{"lineNumber":217,"author":{"gitId":"shenyih0ng"},"content":"            throw new ApiException(e);","lastModifiedDate":"2022-10-03"},{"lineNumber":218,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":219,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":220,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":221,"author":{"gitId":"shenyih0ng"},"content":"    private HttpRequest.Builder acadYearModuleInformationJsonGetRequestBuilder(String acadYear) throws ApiException {","lastModifiedDate":"2022-10-03"},{"lineNumber":222,"author":{"gitId":"shenyih0ng"},"content":"        // verify the required parameter \u0027acadYear\u0027 is set","lastModifiedDate":"2022-10-03"},{"lineNumber":223,"author":{"gitId":"shenyih0ng"},"content":"        if (acadYear \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":224,"author":{"gitId":"shenyih0ng"},"content":"            throw new ApiException(400,","lastModifiedDate":"2022-10-07"},{"lineNumber":225,"author":{"gitId":"shenyih0ng"},"content":"                \"Missing the required parameter \u0027acadYear\u0027 when calling acadYearModuleInformationJsonGet\");","lastModifiedDate":"2022-10-07"},{"lineNumber":226,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":227,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":228,"author":{"gitId":"shenyih0ng"},"content":"        HttpRequest.Builder localVarRequestBuilder \u003d HttpRequest.newBuilder();","lastModifiedDate":"2022-10-03"},{"lineNumber":229,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":230,"author":{"gitId":"shenyih0ng"},"content":"        String localVarPath \u003d \"/{acadYear}/moduleInformation.json\"","lastModifiedDate":"2022-10-03"},{"lineNumber":231,"author":{"gitId":"shenyih0ng"},"content":"            .replace(\"{acadYear}\", ApiClient.urlEncode(acadYear.toString()));","lastModifiedDate":"2022-10-03"},{"lineNumber":232,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":233,"author":{"gitId":"shenyih0ng"},"content":"        localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));","lastModifiedDate":"2022-10-03"},{"lineNumber":234,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":235,"author":{"gitId":"shenyih0ng"},"content":"        localVarRequestBuilder.header(\"Accept\", \"application/json\");","lastModifiedDate":"2022-10-03"},{"lineNumber":236,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":237,"author":{"gitId":"shenyih0ng"},"content":"        localVarRequestBuilder.method(\"GET\", HttpRequest.BodyPublishers.noBody());","lastModifiedDate":"2022-10-03"},{"lineNumber":238,"author":{"gitId":"shenyih0ng"},"content":"        if (memberVarReadTimeout !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":239,"author":{"gitId":"shenyih0ng"},"content":"            localVarRequestBuilder.timeout(memberVarReadTimeout);","lastModifiedDate":"2022-10-03"},{"lineNumber":240,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":241,"author":{"gitId":"shenyih0ng"},"content":"        if (memberVarInterceptor !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":242,"author":{"gitId":"shenyih0ng"},"content":"            memberVarInterceptor.accept(localVarRequestBuilder);","lastModifiedDate":"2022-10-03"},{"lineNumber":243,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":244,"author":{"gitId":"shenyih0ng"},"content":"        return localVarRequestBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":245,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":246,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":247,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":248,"author":{"gitId":"shenyih0ng"},"content":"     * Get summaries of all modules Get the module code, title and semesters which the module is available in for all","lastModifiedDate":"2022-10-07"},{"lineNumber":249,"author":{"gitId":"shenyih0ng"},"content":"     * modules in a year. This is useful for tasks that only require a minimal set of information, such as simple","lastModifiedDate":"2022-10-07"},{"lineNumber":250,"author":{"gitId":"shenyih0ng"},"content":"     * search, autocompleting module code and titles, and checking if a module code is valid.  NUSMods uses this","lastModifiedDate":"2022-10-07"},{"lineNumber":251,"author":{"gitId":"shenyih0ng"},"content":"     * information to validate module codes and for searching.","lastModifiedDate":"2022-10-07"},{"lineNumber":252,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":253,"author":{"gitId":"shenyih0ng"},"content":"     * @param acadYear academic year, with the slash (/) replaced by a dash (required)","lastModifiedDate":"2022-10-03"},{"lineNumber":254,"author":{"gitId":"shenyih0ng"},"content":"     * @return List\u0026lt;ModuleCondensed\u0026gt;","lastModifiedDate":"2022-10-03"},{"lineNumber":255,"author":{"gitId":"shenyih0ng"},"content":"     * @throws ApiException if fails to make API call","lastModifiedDate":"2022-10-03"},{"lineNumber":256,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":257,"author":{"gitId":"shenyih0ng"},"content":"    public List\u003cModuleCondensed\u003e acadYearModuleListJsonGet(String acadYear) throws ApiException {","lastModifiedDate":"2022-10-03"},{"lineNumber":258,"author":{"gitId":"shenyih0ng"},"content":"        ApiResponse\u003cList\u003cModuleCondensed\u003e\u003e localVarResponse \u003d acadYearModuleListJsonGetWithHttpInfo(acadYear);","lastModifiedDate":"2022-10-03"},{"lineNumber":259,"author":{"gitId":"shenyih0ng"},"content":"        return localVarResponse.getData();","lastModifiedDate":"2022-10-03"},{"lineNumber":260,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":261,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":262,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":263,"author":{"gitId":"shenyih0ng"},"content":"     * Get summaries of all modules Get the module code, title and semesters which the module is available in for all","lastModifiedDate":"2022-10-07"},{"lineNumber":264,"author":{"gitId":"shenyih0ng"},"content":"     * modules in a year. This is useful for tasks that only require a minimal set of information, such as simple","lastModifiedDate":"2022-10-07"},{"lineNumber":265,"author":{"gitId":"shenyih0ng"},"content":"     * search, autocompleting module code and titles, and checking if a module code is valid.  NUSMods uses this","lastModifiedDate":"2022-10-07"},{"lineNumber":266,"author":{"gitId":"shenyih0ng"},"content":"     * information to validate module codes and for searching.","lastModifiedDate":"2022-10-07"},{"lineNumber":267,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":268,"author":{"gitId":"shenyih0ng"},"content":"     * @param acadYear academic year, with the slash (/) replaced by a dash (required)","lastModifiedDate":"2022-10-03"},{"lineNumber":269,"author":{"gitId":"shenyih0ng"},"content":"     * @return ApiResponse\u0026lt;List\u0026lt;ModuleCondensed\u0026gt;\u0026gt;","lastModifiedDate":"2022-10-03"},{"lineNumber":270,"author":{"gitId":"shenyih0ng"},"content":"     * @throws ApiException if fails to make API call","lastModifiedDate":"2022-10-03"},{"lineNumber":271,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":272,"author":{"gitId":"shenyih0ng"},"content":"    public ApiResponse\u003cList\u003cModuleCondensed\u003e\u003e acadYearModuleListJsonGetWithHttpInfo(String acadYear)","lastModifiedDate":"2022-10-07"},{"lineNumber":273,"author":{"gitId":"shenyih0ng"},"content":"        throws ApiException {","lastModifiedDate":"2022-10-07"},{"lineNumber":274,"author":{"gitId":"shenyih0ng"},"content":"        HttpRequest.Builder localVarRequestBuilder \u003d acadYearModuleListJsonGetRequestBuilder(acadYear);","lastModifiedDate":"2022-10-03"},{"lineNumber":275,"author":{"gitId":"shenyih0ng"},"content":"        try {","lastModifiedDate":"2022-10-03"},{"lineNumber":276,"author":{"gitId":"shenyih0ng"},"content":"            HttpResponse\u003cInputStream\u003e localVarResponse \u003d memberVarHttpClient.send(","lastModifiedDate":"2022-10-03"},{"lineNumber":277,"author":{"gitId":"shenyih0ng"},"content":"                localVarRequestBuilder.build(),","lastModifiedDate":"2022-10-03"},{"lineNumber":278,"author":{"gitId":"shenyih0ng"},"content":"                HttpResponse.BodyHandlers.ofInputStream());","lastModifiedDate":"2022-10-03"},{"lineNumber":279,"author":{"gitId":"shenyih0ng"},"content":"            if (memberVarResponseInterceptor !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":280,"author":{"gitId":"shenyih0ng"},"content":"                memberVarResponseInterceptor.accept(localVarResponse);","lastModifiedDate":"2022-10-03"},{"lineNumber":281,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":282,"author":{"gitId":"shenyih0ng"},"content":"            try {","lastModifiedDate":"2022-10-03"},{"lineNumber":283,"author":{"gitId":"shenyih0ng"},"content":"                if (localVarResponse.statusCode() / 100 !\u003d 2) {","lastModifiedDate":"2022-10-03"},{"lineNumber":284,"author":{"gitId":"shenyih0ng"},"content":"                    throw getApiException(\"acadYearModuleListJsonGet\", localVarResponse);","lastModifiedDate":"2022-10-03"},{"lineNumber":285,"author":{"gitId":"shenyih0ng"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":286,"author":{"gitId":"shenyih0ng"},"content":"                return new ApiResponse\u003cList\u003cModuleCondensed\u003e\u003e(","lastModifiedDate":"2022-10-03"},{"lineNumber":287,"author":{"gitId":"shenyih0ng"},"content":"                    localVarResponse.statusCode(),","lastModifiedDate":"2022-10-03"},{"lineNumber":288,"author":{"gitId":"shenyih0ng"},"content":"                    localVarResponse.headers().map(),","lastModifiedDate":"2022-10-03"},{"lineNumber":289,"author":{"gitId":"shenyih0ng"},"content":"                    memberVarObjectMapper.readValue(localVarResponse.body(),","lastModifiedDate":"2022-10-07"},{"lineNumber":290,"author":{"gitId":"shenyih0ng"},"content":"                        new TypeReference\u003cList\u003cModuleCondensed\u003e\u003e() {","lastModifiedDate":"2022-10-07"},{"lineNumber":291,"author":{"gitId":"shenyih0ng"},"content":"                        }) // closes the InputStream","lastModifiedDate":"2022-10-07"},{"lineNumber":292,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":293,"author":{"gitId":"shenyih0ng"},"content":"                );","lastModifiedDate":"2022-10-03"},{"lineNumber":294,"author":{"gitId":"shenyih0ng"},"content":"            } finally {","lastModifiedDate":"2022-10-03"},{"lineNumber":295,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":296,"author":{"gitId":"shenyih0ng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-03"},{"lineNumber":297,"author":{"gitId":"shenyih0ng"},"content":"            throw new ApiException(e);","lastModifiedDate":"2022-10-03"},{"lineNumber":298,"author":{"gitId":"shenyih0ng"},"content":"        } catch (InterruptedException e) {","lastModifiedDate":"2022-10-07"},{"lineNumber":299,"author":{"gitId":"shenyih0ng"},"content":"            Thread.currentThread().interrupt();","lastModifiedDate":"2022-10-03"},{"lineNumber":300,"author":{"gitId":"shenyih0ng"},"content":"            throw new ApiException(e);","lastModifiedDate":"2022-10-03"},{"lineNumber":301,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":302,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":303,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":304,"author":{"gitId":"shenyih0ng"},"content":"    private HttpRequest.Builder acadYearModuleListJsonGetRequestBuilder(String acadYear) throws ApiException {","lastModifiedDate":"2022-10-03"},{"lineNumber":305,"author":{"gitId":"shenyih0ng"},"content":"        // verify the required parameter \u0027acadYear\u0027 is set","lastModifiedDate":"2022-10-03"},{"lineNumber":306,"author":{"gitId":"shenyih0ng"},"content":"        if (acadYear \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":307,"author":{"gitId":"shenyih0ng"},"content":"            throw new ApiException(400,","lastModifiedDate":"2022-10-07"},{"lineNumber":308,"author":{"gitId":"shenyih0ng"},"content":"                \"Missing the required parameter \u0027acadYear\u0027 when calling acadYearModuleListJsonGet\");","lastModifiedDate":"2022-10-07"},{"lineNumber":309,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":310,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":311,"author":{"gitId":"shenyih0ng"},"content":"        HttpRequest.Builder localVarRequestBuilder \u003d HttpRequest.newBuilder();","lastModifiedDate":"2022-10-03"},{"lineNumber":312,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":313,"author":{"gitId":"shenyih0ng"},"content":"        String localVarPath \u003d \"/{acadYear}/moduleList.json\"","lastModifiedDate":"2022-10-03"},{"lineNumber":314,"author":{"gitId":"shenyih0ng"},"content":"            .replace(\"{acadYear}\", ApiClient.urlEncode(acadYear.toString()));","lastModifiedDate":"2022-10-03"},{"lineNumber":315,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":316,"author":{"gitId":"shenyih0ng"},"content":"        localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));","lastModifiedDate":"2022-10-03"},{"lineNumber":317,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":318,"author":{"gitId":"shenyih0ng"},"content":"        localVarRequestBuilder.header(\"Accept\", \"application/json\");","lastModifiedDate":"2022-10-03"},{"lineNumber":319,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":320,"author":{"gitId":"shenyih0ng"},"content":"        localVarRequestBuilder.method(\"GET\", HttpRequest.BodyPublishers.noBody());","lastModifiedDate":"2022-10-03"},{"lineNumber":321,"author":{"gitId":"shenyih0ng"},"content":"        if (memberVarReadTimeout !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":322,"author":{"gitId":"shenyih0ng"},"content":"            localVarRequestBuilder.timeout(memberVarReadTimeout);","lastModifiedDate":"2022-10-03"},{"lineNumber":323,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":324,"author":{"gitId":"shenyih0ng"},"content":"        if (memberVarInterceptor !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":325,"author":{"gitId":"shenyih0ng"},"content":"            memberVarInterceptor.accept(localVarRequestBuilder);","lastModifiedDate":"2022-10-03"},{"lineNumber":326,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":327,"author":{"gitId":"shenyih0ng"},"content":"        return localVarRequestBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":328,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":329,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":330,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":331,"author":{"gitId":"shenyih0ng"},"content":"     * Get all information about a specific module Get all information available for a specific module including","lastModifiedDate":"2022-10-07"},{"lineNumber":332,"author":{"gitId":"shenyih0ng"},"content":"     * prerequite tree and timetable.  NUSMods uses this on the module information page.","lastModifiedDate":"2022-10-07"},{"lineNumber":333,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":334,"author":{"gitId":"shenyih0ng"},"content":"     * @param acadYear   academic year, with the slash (/) replaced by a dash (required)","lastModifiedDate":"2022-10-03"},{"lineNumber":335,"author":{"gitId":"shenyih0ng"},"content":"     * @param moduleCode module code (required)","lastModifiedDate":"2022-10-03"},{"lineNumber":336,"author":{"gitId":"shenyih0ng"},"content":"     * @return Module","lastModifiedDate":"2022-10-03"},{"lineNumber":337,"author":{"gitId":"shenyih0ng"},"content":"     * @throws ApiException if fails to make API call","lastModifiedDate":"2022-10-03"},{"lineNumber":338,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":339,"author":{"gitId":"shenyih0ng"},"content":"    public Module acadYearModulesModuleCodeJsonGet(String acadYear, String moduleCode) throws ApiException {","lastModifiedDate":"2022-10-03"},{"lineNumber":340,"author":{"gitId":"shenyih0ng"},"content":"        ApiResponse\u003cModule\u003e localVarResponse \u003d acadYearModulesModuleCodeJsonGetWithHttpInfo(acadYear, moduleCode);","lastModifiedDate":"2022-10-03"},{"lineNumber":341,"author":{"gitId":"shenyih0ng"},"content":"        return localVarResponse.getData();","lastModifiedDate":"2022-10-03"},{"lineNumber":342,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":343,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":344,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":345,"author":{"gitId":"shenyih0ng"},"content":"     * Get all information about a specific module Get all information available for a specific module including","lastModifiedDate":"2022-10-07"},{"lineNumber":346,"author":{"gitId":"shenyih0ng"},"content":"     * prerequite tree and timetable.  NUSMods uses this on the module information page.","lastModifiedDate":"2022-10-07"},{"lineNumber":347,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":348,"author":{"gitId":"shenyih0ng"},"content":"     * @param acadYear   academic year, with the slash (/) replaced by a dash (required)","lastModifiedDate":"2022-10-03"},{"lineNumber":349,"author":{"gitId":"shenyih0ng"},"content":"     * @param moduleCode module code (required)","lastModifiedDate":"2022-10-03"},{"lineNumber":350,"author":{"gitId":"shenyih0ng"},"content":"     * @return ApiResponse\u0026lt;Module\u0026gt;","lastModifiedDate":"2022-10-03"},{"lineNumber":351,"author":{"gitId":"shenyih0ng"},"content":"     * @throws ApiException if fails to make API call","lastModifiedDate":"2022-10-03"},{"lineNumber":352,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":353,"author":{"gitId":"shenyih0ng"},"content":"    public ApiResponse\u003cModule\u003e acadYearModulesModuleCodeJsonGetWithHttpInfo(String acadYear, String moduleCode)","lastModifiedDate":"2022-10-07"},{"lineNumber":354,"author":{"gitId":"shenyih0ng"},"content":"        throws ApiException {","lastModifiedDate":"2022-10-07"},{"lineNumber":355,"author":{"gitId":"shenyih0ng"},"content":"        HttpRequest.Builder localVarRequestBuilder \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":356,"author":{"gitId":"shenyih0ng"},"content":"            acadYearModulesModuleCodeJsonGetRequestBuilder(acadYear, moduleCode);","lastModifiedDate":"2022-10-07"},{"lineNumber":357,"author":{"gitId":"shenyih0ng"},"content":"        try {","lastModifiedDate":"2022-10-03"},{"lineNumber":358,"author":{"gitId":"shenyih0ng"},"content":"            HttpResponse\u003cInputStream\u003e localVarResponse \u003d memberVarHttpClient.send(","lastModifiedDate":"2022-10-03"},{"lineNumber":359,"author":{"gitId":"shenyih0ng"},"content":"                localVarRequestBuilder.build(),","lastModifiedDate":"2022-10-03"},{"lineNumber":360,"author":{"gitId":"shenyih0ng"},"content":"                HttpResponse.BodyHandlers.ofInputStream());","lastModifiedDate":"2022-10-03"},{"lineNumber":361,"author":{"gitId":"shenyih0ng"},"content":"            if (memberVarResponseInterceptor !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":362,"author":{"gitId":"shenyih0ng"},"content":"                memberVarResponseInterceptor.accept(localVarResponse);","lastModifiedDate":"2022-10-03"},{"lineNumber":363,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":364,"author":{"gitId":"shenyih0ng"},"content":"            try {","lastModifiedDate":"2022-10-03"},{"lineNumber":365,"author":{"gitId":"shenyih0ng"},"content":"                if (localVarResponse.statusCode() / 100 !\u003d 2) {","lastModifiedDate":"2022-10-03"},{"lineNumber":366,"author":{"gitId":"shenyih0ng"},"content":"                    throw getApiException(\"acadYearModulesModuleCodeJsonGet\", localVarResponse);","lastModifiedDate":"2022-10-03"},{"lineNumber":367,"author":{"gitId":"shenyih0ng"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":368,"author":{"gitId":"shenyih0ng"},"content":"                return new ApiResponse\u003cModule\u003e(","lastModifiedDate":"2022-10-03"},{"lineNumber":369,"author":{"gitId":"shenyih0ng"},"content":"                    localVarResponse.statusCode(),","lastModifiedDate":"2022-10-03"},{"lineNumber":370,"author":{"gitId":"shenyih0ng"},"content":"                    localVarResponse.headers().map(),","lastModifiedDate":"2022-10-03"},{"lineNumber":371,"author":{"gitId":"shenyih0ng"},"content":"                    memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference\u003cModule\u003e() {","lastModifiedDate":"2022-10-07"},{"lineNumber":372,"author":{"gitId":"shenyih0ng"},"content":"                    }) // closes the InputStream","lastModifiedDate":"2022-10-07"},{"lineNumber":373,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":374,"author":{"gitId":"shenyih0ng"},"content":"                );","lastModifiedDate":"2022-10-03"},{"lineNumber":375,"author":{"gitId":"shenyih0ng"},"content":"            } finally {","lastModifiedDate":"2022-10-03"},{"lineNumber":376,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":377,"author":{"gitId":"shenyih0ng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-03"},{"lineNumber":378,"author":{"gitId":"shenyih0ng"},"content":"            throw new ApiException(e);","lastModifiedDate":"2022-10-03"},{"lineNumber":379,"author":{"gitId":"shenyih0ng"},"content":"        } catch (InterruptedException e) {","lastModifiedDate":"2022-10-07"},{"lineNumber":380,"author":{"gitId":"shenyih0ng"},"content":"            Thread.currentThread().interrupt();","lastModifiedDate":"2022-10-03"},{"lineNumber":381,"author":{"gitId":"shenyih0ng"},"content":"            throw new ApiException(e);","lastModifiedDate":"2022-10-03"},{"lineNumber":382,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":383,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":384,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":385,"author":{"gitId":"shenyih0ng"},"content":"    private HttpRequest.Builder acadYearModulesModuleCodeJsonGetRequestBuilder(String acadYear, String moduleCode)","lastModifiedDate":"2022-10-07"},{"lineNumber":386,"author":{"gitId":"shenyih0ng"},"content":"        throws ApiException {","lastModifiedDate":"2022-10-07"},{"lineNumber":387,"author":{"gitId":"shenyih0ng"},"content":"        // verify the required parameter \u0027acadYear\u0027 is set","lastModifiedDate":"2022-10-03"},{"lineNumber":388,"author":{"gitId":"shenyih0ng"},"content":"        if (acadYear \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":389,"author":{"gitId":"shenyih0ng"},"content":"            throw new ApiException(400,","lastModifiedDate":"2022-10-07"},{"lineNumber":390,"author":{"gitId":"shenyih0ng"},"content":"                \"Missing the required parameter \u0027acadYear\u0027 when calling acadYearModulesModuleCodeJsonGet\");","lastModifiedDate":"2022-10-07"},{"lineNumber":391,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":392,"author":{"gitId":"shenyih0ng"},"content":"        // verify the required parameter \u0027moduleCode\u0027 is set","lastModifiedDate":"2022-10-03"},{"lineNumber":393,"author":{"gitId":"shenyih0ng"},"content":"        if (moduleCode \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":394,"author":{"gitId":"shenyih0ng"},"content":"            throw new ApiException(400,","lastModifiedDate":"2022-10-07"},{"lineNumber":395,"author":{"gitId":"shenyih0ng"},"content":"                \"Missing the required parameter \u0027moduleCode\u0027 when calling acadYearModulesModuleCodeJsonGet\");","lastModifiedDate":"2022-10-07"},{"lineNumber":396,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":397,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":398,"author":{"gitId":"shenyih0ng"},"content":"        HttpRequest.Builder localVarRequestBuilder \u003d HttpRequest.newBuilder();","lastModifiedDate":"2022-10-03"},{"lineNumber":399,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":400,"author":{"gitId":"shenyih0ng"},"content":"        String localVarPath \u003d \"/{acadYear}/modules/{moduleCode}.json\"","lastModifiedDate":"2022-10-03"},{"lineNumber":401,"author":{"gitId":"shenyih0ng"},"content":"            .replace(\"{acadYear}\", ApiClient.urlEncode(acadYear.toString()))","lastModifiedDate":"2022-10-03"},{"lineNumber":402,"author":{"gitId":"shenyih0ng"},"content":"            .replace(\"{moduleCode}\", ApiClient.urlEncode(moduleCode.toString()));","lastModifiedDate":"2022-10-03"},{"lineNumber":403,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":404,"author":{"gitId":"shenyih0ng"},"content":"        localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));","lastModifiedDate":"2022-10-03"},{"lineNumber":405,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":406,"author":{"gitId":"shenyih0ng"},"content":"        localVarRequestBuilder.header(\"Accept\", \"application/json\");","lastModifiedDate":"2022-10-03"},{"lineNumber":407,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":408,"author":{"gitId":"shenyih0ng"},"content":"        localVarRequestBuilder.method(\"GET\", HttpRequest.BodyPublishers.noBody());","lastModifiedDate":"2022-10-03"},{"lineNumber":409,"author":{"gitId":"shenyih0ng"},"content":"        if (memberVarReadTimeout !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":410,"author":{"gitId":"shenyih0ng"},"content":"            localVarRequestBuilder.timeout(memberVarReadTimeout);","lastModifiedDate":"2022-10-03"},{"lineNumber":411,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":412,"author":{"gitId":"shenyih0ng"},"content":"        if (memberVarInterceptor !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":413,"author":{"gitId":"shenyih0ng"},"content":"            memberVarInterceptor.accept(localVarRequestBuilder);","lastModifiedDate":"2022-10-03"},{"lineNumber":414,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":415,"author":{"gitId":"shenyih0ng"},"content":"        return localVarRequestBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":416,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":417,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"SeekSaveServe":2,"shenyih0ng":415}},{"path":"src/main/java/org/openapitools/client/api/VenuesApi.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"/*","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API contains data used to render \u003chttps://nusmods.com\u003e. It includes data on modules offered by NUS and their timetables, as well as information on the locations the classes take place in. You are welcome to use and experiment with the data, which is extracted from official APIs provided by the Registrar\u0027s Office.  The API consists of static JSON files scraped daily from the school\u0027s APIs. This means it only partially follow REST conventions, and all resources are read only. All successful responses will return JSON, and all endpoints end in `.json`.  The shape of the data returned by these endpoints are designed for NUSMods in mind. If you have any questions or find that you need the data in other shapes for other purposes, feel free to reach out to us:  - **Telegram**: \u003chttps://telegram.me/nusmods\u003e - **Mailing list**: \u003cnusmods@googlegroups.com\u003e (for security related issues please email \u003cmods@nusmods.com\u003e instead)  ## Fetching data  Any HTTP client can be used to fetch data from the API. HTTPS is preferred, but the server will also respond to HTTP requests. The server supports HTTP 1.1 as well as HTTP 2 over HTTPS, and supports gzip compression.  The API has no authentication, and is not rate limited. While the server can respond to a large number of requests simultaneously, we request that you be polite with resource usage so as not to disrupt nusmods.com, which relies on the same API server. In general there is no need to fetch data from the API more than once per day, as that is the frequency at which we update the data.  [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) headers are enabled on all endpoints, so client-side JavaScript can use also use the API.  ## TypeScript types  Since the NUSMods is written in TypeScript, typings are available in the source for the scraper. These may be easier to read than the documentation generated by Swagger.  - Module types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/modules.ts\u003e - Venue types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/venues.ts\u003e  ## Data  Below are some notes about the data returned from the API. Feel free to talk to us or create an issue if any of it is not clear.  ### Module data  Module endpoints return information on modules offered by NUS. Most of the module data is self-explanatory, but some of the data are more complex and is explained here.  #### Lessons  Each lesson in a timetable has a lesson type `lessonType` and class number `ClassNo`. Every student must take one of each lesson type offered by the module. For example, this module offers two tutorials and one lecture. That means the student must attend the lecture, and can choose one of the two tutorials to attend.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"01\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1100\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"COM1-0207\\\"     },     {       \\\"classNo\\\": \\\"02\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Friday\\\",       \\\"startTime\\\": \\\"0900\\\",       \\\"endTime\\\": \\\"1000\\\",       \\\"venue\\\": \\\"COM1-0209\\\"     }   ] } ```  Each lesson has a `classNo` key. There can be multiple lessons of the same type and class number, in which case students must attend both. In this example, students can choose to attend either lecture group 1 on Tuesdays and Wednesdays, or lecture group 2 on Mondays and Wednesdays.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1400\\\",       \\\"endTime\\\": \\\"1500\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Monday\\\",       \\\"startTime\\\": \\\"1000\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1500\\\",       \\\"endTime\\\": \\\"1600\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     }   ] } ```  #### Lesson Weeks  The `weeks` key on lessons can return data in one of two forms.  Weeks is usually a sorted array of numbers. In this case it represents the school weeks the lesson occurs on, from 1 to 13.  Some classes have lessons outside of the school timetable. In this case a `WeekRange` object is returned. The object will always contain a `start` and `end` key representing the start and end date of lessons. The example below has classes every week from 17th Jan to 18th April.  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-04-18\\\" } ```  Optionally it can also include `weekInterval`, a positive integer describing the number of weeks between each lesson, and `weeks`, an array of positive integers describing the weeks on which the lesson will fall, with week 1 being the starting date. If these are not present you can assume lessons will occur every week.  The following example has lessons on 17th Jan (week 1), 24th Jan (week 2), 7th Feb (week 4) and 21st Feb (week 6).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-21\\\",   \\\"weeks\\\": [1, 2, 4, 6] } ```  The following example has lessons on 17th Jan (week 1), 31st Jan (week 3), 14th Feb (week 5) and 28th Feb (week 7).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-28\\\",   \\\"weekInterval\\\": 2 } ```  #### Workload  The `workload` key can return data in one of two forms.  Workload is usually a **5-tuple of numbers**, describing the estimated number of hours per week the student is expected to put in for the module for **lectures, tutorials, laboratory, projects/fieldwork, and preparatory work** respectively. For example, a workload of `[2, 1, 1, 3, 3]` means the student should spend every week  - 2 hours in lectures - 1 hour in tutorials - 1 hour at the lab - 3 hours doing project work - 3 hours preparing for classes  Each module credit represents 2.5 hours of work each week, so the standard 4 MC module represents 10 hours of work each week. Module credit may not be integers.  Note that this is only an estimate, and may be outdated or differ significantly in reality. Some modules also incorrectly lists the **total** workload hours instead of weekly, so very large values may show up.  This value is parsed from a string provided by the school, and occasionally this field will contain unusual values which cannot be parsed. In this case this field will contain the original **string** instead, which should be displayed as-is to the user.  #### Prerequisite, corequisite and preclusions  These three keys determine whether a student can take a module.  **Prerequisites** are requirements you have to meet before you can take a module. These are usually in the form of other modules (see prerequisite tree below for a machine readable format), but can also be things like \u0027taken A-level H2 math\u0027 or \u002770 MCs and above\u0027.  **Preclusions** refer to modules or requirements that cannot be taken if this module is taken, and vice versa. These are usually modules whose content overlaps significantly with this module, and can usually be used to replace each other to fulfill prerequisites.  **Corequisites** are modules that must be taken together with this module in the same semester. This usually refer to twined modules - modules which have linked syllabuses.  #### Prerequisite Tree  The `prereqTree` key is return on the individual module endpoint (`/modules/{moduleCode`). Not all modules have prerequisites, and some have prerequisites that cannot be properly represented as a tree, in which case this key will not appear.  This describes the prerequisites that need to be fulfilled before this module can be taken. The data structure is recursive and represents a tree.  ```json {   \\\"and\\\": [     \\\"CS1231\\\",     {       \\\"or\\\": [\\\"CS1010S\\\", \\\"CS1010X\\\"]     }   ] } ```  In the example, this module requires CS1231 and either CS1010S or CS1010X. This can be visualized as  ```            ┌ CS1231 ── all of ─┤            │         ┌ CS1010            └ one of ─┤                      └ CS1010X ```  The module information also contains the inverse of this, that is, modules whose requirements are fulfilled by this module (taking this module will allow you to take these modules in the following semester). The data is found on the `fulfillRequirements` key as an array of module codes.  ### Venue data  Venue data is simply the module timetable restructured to show the lessons happening at each classroom.  The venue list endpoint returns a list of all locations that are used in the semester. Note that this is not a comprehensive list of locations, but rather just a list of venues that appears in module lessons.  The venue information endpoint returns the full class and occupancy information about a venue. The `classes` key contains a list of lessons similar to the `timetable` key in module data, but without a `venue` key and with `moduleCode`.","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":" * The version of the OpenAPI document: 2.0.0","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":" * Contact: nusmods@googlegroups.com","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":" * https://openapi-generator.tech","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":" * Do not edit the class manually.","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"package org.openapitools.client.api;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import java.io.InputStream;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"import java.net.URI;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"import java.net.http.HttpClient;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"import java.net.http.HttpRequest;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"import java.net.http.HttpResponse;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"import java.time.Duration;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"import java.util.List;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"import org.openapitools.client.ApiClient;","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"import org.openapitools.client.ApiException;","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"import org.openapitools.client.ApiResponse;","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"import org.openapitools.client.model.VenueInformation;","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.core.type.TypeReference;","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"@javax.annotation.processing.Generated(value \u003d \"org.openapitools.codegen.languages.JavaClientCodegen\", date \u003d \"2022-10-03T22:22:26.802458+08:00[Asia/Singapore]\")","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"public class VenuesApi {","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"    private final HttpClient memberVarHttpClient;","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"    private final ObjectMapper memberVarObjectMapper;","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"    private final String memberVarBaseUri;","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"    private final Consumer\u003cHttpRequest.Builder\u003e memberVarInterceptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"    private final Duration memberVarReadTimeout;","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"    private final Consumer\u003cHttpResponse\u003cInputStream\u003e\u003e memberVarResponseInterceptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"    private final Consumer\u003cHttpResponse\u003cString\u003e\u003e memberVarAsyncResponseInterceptor;","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"    public VenuesApi() {","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"        this(new ApiClient());","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"    public VenuesApi(ApiClient apiClient) {","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"        memberVarHttpClient \u003d apiClient.getHttpClient();","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"        memberVarObjectMapper \u003d apiClient.getObjectMapper();","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"        memberVarBaseUri \u003d apiClient.getBaseUri();","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"        memberVarInterceptor \u003d apiClient.getRequestInterceptor();","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"        memberVarReadTimeout \u003d apiClient.getReadTimeout();","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"        memberVarResponseInterceptor \u003d apiClient.getResponseInterceptor();","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"        memberVarAsyncResponseInterceptor \u003d apiClient.getAsyncResponseInterceptor();","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"    protected ApiException getApiException(String operationId, HttpResponse\u003cInputStream\u003e response) throws IOException {","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"        String body \u003d response.body() \u003d\u003d null ? null : new String(response.body().readAllBytes());","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"        String message \u003d formatExceptionMessage(operationId, response.statusCode(), body);","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"        return new ApiException(response.statusCode(), message, response.headers(), body);","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"    private String formatExceptionMessage(String operationId, int statusCode, String body) {","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"        if (body \u003d\u003d null || body.isEmpty()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"            body \u003d \"[no body]\";","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"shenyih0ng"},"content":"        return operationId + \" call failed with: \" + statusCode + \" - \" + body;","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"shenyih0ng"},"content":"     * Get detailed information on all venues Get detailed venue information including classes and occupancy for every","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"shenyih0ng"},"content":"     * venue. This is useful for displaying a timetable of the given venue as well as for checking if a venue is","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"shenyih0ng"},"content":"     * occupied at any given time.","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"shenyih0ng"},"content":"     * @param acadYear academic year, with the slash (/) replaced by a dash (required)","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"shenyih0ng"},"content":"     * @param semester semester, with 1 and 2 representing semester 1 and 2, and 3, 4 representing special term 1 and 2","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"shenyih0ng"},"content":"     *                 (required)","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"shenyih0ng"},"content":"     * @return Map\u0026lt;String, List\u0026lt;VenueInformation\u0026gt;\u0026gt;","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"shenyih0ng"},"content":"     * @throws ApiException if fails to make API call","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"shenyih0ng"},"content":"    public Map\u003cString, List\u003cVenueInformation\u003e\u003e acadYearSemestersSemesterVenueInformationJsonGet(String acadYear,","lastModifiedDate":"2022-10-07"},{"lineNumber":84,"author":{"gitId":"shenyih0ng"},"content":"        BigDecimal semester) throws ApiException {","lastModifiedDate":"2022-10-07"},{"lineNumber":85,"author":{"gitId":"shenyih0ng"},"content":"        ApiResponse\u003cMap\u003cString, List\u003cVenueInformation\u003e\u003e\u003e localVarResponse \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":86,"author":{"gitId":"shenyih0ng"},"content":"            acadYearSemestersSemesterVenueInformationJsonGetWithHttpInfo(acadYear, semester);","lastModifiedDate":"2022-10-07"},{"lineNumber":87,"author":{"gitId":"shenyih0ng"},"content":"        return localVarResponse.getData();","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"shenyih0ng"},"content":"     * Get detailed information on all venues Get detailed venue information including classes and occupancy for every","lastModifiedDate":"2022-10-07"},{"lineNumber":92,"author":{"gitId":"shenyih0ng"},"content":"     * venue. This is useful for displaying a timetable of the given venue as well as for checking if a venue is","lastModifiedDate":"2022-10-07"},{"lineNumber":93,"author":{"gitId":"shenyih0ng"},"content":"     * occupied at any given time.","lastModifiedDate":"2022-10-07"},{"lineNumber":94,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":95,"author":{"gitId":"shenyih0ng"},"content":"     * @param acadYear academic year, with the slash (/) replaced by a dash (required)","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"shenyih0ng"},"content":"     * @param semester semester, with 1 and 2 representing semester 1 and 2, and 3, 4 representing special term 1 and 2","lastModifiedDate":"2022-10-07"},{"lineNumber":97,"author":{"gitId":"shenyih0ng"},"content":"     *                 (required)","lastModifiedDate":"2022-10-07"},{"lineNumber":98,"author":{"gitId":"shenyih0ng"},"content":"     * @return ApiResponse\u0026lt;Map\u0026lt;String, List\u0026lt;VenueInformation\u0026gt;\u0026gt;\u0026gt;","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"shenyih0ng"},"content":"     * @throws ApiException if fails to make API call","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"shenyih0ng"},"content":"    public ApiResponse\u003cMap\u003cString, List\u003cVenueInformation\u003e\u003e\u003e acadYearSemestersSemesterVenueInformationJsonGetWithHttpInfo(","lastModifiedDate":"2022-10-07"},{"lineNumber":102,"author":{"gitId":"shenyih0ng"},"content":"        String acadYear, BigDecimal semester) throws ApiException {","lastModifiedDate":"2022-10-07"},{"lineNumber":103,"author":{"gitId":"shenyih0ng"},"content":"        HttpRequest.Builder localVarRequestBuilder \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":104,"author":{"gitId":"shenyih0ng"},"content":"            acadYearSemestersSemesterVenueInformationJsonGetRequestBuilder(acadYear, semester);","lastModifiedDate":"2022-10-07"},{"lineNumber":105,"author":{"gitId":"shenyih0ng"},"content":"        try {","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"shenyih0ng"},"content":"            HttpResponse\u003cInputStream\u003e localVarResponse \u003d memberVarHttpClient.send(","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"shenyih0ng"},"content":"                localVarRequestBuilder.build(),","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"shenyih0ng"},"content":"                HttpResponse.BodyHandlers.ofInputStream());","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"shenyih0ng"},"content":"            if (memberVarResponseInterceptor !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"shenyih0ng"},"content":"                memberVarResponseInterceptor.accept(localVarResponse);","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"shenyih0ng"},"content":"            try {","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"shenyih0ng"},"content":"                if (localVarResponse.statusCode() / 100 !\u003d 2) {","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"shenyih0ng"},"content":"                    throw getApiException(\"acadYearSemestersSemesterVenueInformationJsonGet\", localVarResponse);","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"shenyih0ng"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"shenyih0ng"},"content":"                return new ApiResponse\u003cMap\u003cString, List\u003cVenueInformation\u003e\u003e\u003e(","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"shenyih0ng"},"content":"                    localVarResponse.statusCode(),","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"shenyih0ng"},"content":"                    localVarResponse.headers().map(),","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"shenyih0ng"},"content":"                    memberVarObjectMapper.readValue(localVarResponse.body(),","lastModifiedDate":"2022-10-07"},{"lineNumber":120,"author":{"gitId":"shenyih0ng"},"content":"                        new TypeReference\u003cMap\u003cString, List\u003cVenueInformation\u003e\u003e\u003e() {","lastModifiedDate":"2022-10-07"},{"lineNumber":121,"author":{"gitId":"shenyih0ng"},"content":"                        }) // closes the InputStream","lastModifiedDate":"2022-10-07"},{"lineNumber":122,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"shenyih0ng"},"content":"                );","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"shenyih0ng"},"content":"            } finally {","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"shenyih0ng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"shenyih0ng"},"content":"            throw new ApiException(e);","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"shenyih0ng"},"content":"        } catch (InterruptedException e) {","lastModifiedDate":"2022-10-07"},{"lineNumber":129,"author":{"gitId":"shenyih0ng"},"content":"            Thread.currentThread().interrupt();","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"shenyih0ng"},"content":"            throw new ApiException(e);","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"shenyih0ng"},"content":"    private HttpRequest.Builder acadYearSemestersSemesterVenueInformationJsonGetRequestBuilder(String acadYear,","lastModifiedDate":"2022-10-07"},{"lineNumber":135,"author":{"gitId":"shenyih0ng"},"content":"        BigDecimal semester) throws ApiException {","lastModifiedDate":"2022-10-07"},{"lineNumber":136,"author":{"gitId":"shenyih0ng"},"content":"        // verify the required parameter \u0027acadYear\u0027 is set","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"shenyih0ng"},"content":"        if (acadYear \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":138,"author":{"gitId":"shenyih0ng"},"content":"            throw new ApiException(400,","lastModifiedDate":"2022-10-07"},{"lineNumber":139,"author":{"gitId":"shenyih0ng"},"content":"                \"Missing the required parameter \u0027acadYear\u0027 when calling acadYearSemestersSemesterVenueInformationJsonGet\");","lastModifiedDate":"2022-10-07"},{"lineNumber":140,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":141,"author":{"gitId":"shenyih0ng"},"content":"        // verify the required parameter \u0027semester\u0027 is set","lastModifiedDate":"2022-10-03"},{"lineNumber":142,"author":{"gitId":"shenyih0ng"},"content":"        if (semester \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":143,"author":{"gitId":"shenyih0ng"},"content":"            throw new ApiException(400,","lastModifiedDate":"2022-10-07"},{"lineNumber":144,"author":{"gitId":"shenyih0ng"},"content":"                \"Missing the required parameter \u0027semester\u0027 when calling acadYearSemestersSemesterVenueInformationJsonGet\");","lastModifiedDate":"2022-10-07"},{"lineNumber":145,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":146,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":147,"author":{"gitId":"shenyih0ng"},"content":"        HttpRequest.Builder localVarRequestBuilder \u003d HttpRequest.newBuilder();","lastModifiedDate":"2022-10-03"},{"lineNumber":148,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":149,"author":{"gitId":"shenyih0ng"},"content":"        String localVarPath \u003d \"/{acadYear}/semesters/{semester}/venueInformation.json\"","lastModifiedDate":"2022-10-03"},{"lineNumber":150,"author":{"gitId":"shenyih0ng"},"content":"            .replace(\"{acadYear}\", ApiClient.urlEncode(acadYear.toString()))","lastModifiedDate":"2022-10-03"},{"lineNumber":151,"author":{"gitId":"shenyih0ng"},"content":"            .replace(\"{semester}\", ApiClient.urlEncode(semester.toString()));","lastModifiedDate":"2022-10-03"},{"lineNumber":152,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":153,"author":{"gitId":"shenyih0ng"},"content":"        localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));","lastModifiedDate":"2022-10-03"},{"lineNumber":154,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":155,"author":{"gitId":"shenyih0ng"},"content":"        localVarRequestBuilder.header(\"Accept\", \"application/json\");","lastModifiedDate":"2022-10-03"},{"lineNumber":156,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":157,"author":{"gitId":"shenyih0ng"},"content":"        localVarRequestBuilder.method(\"GET\", HttpRequest.BodyPublishers.noBody());","lastModifiedDate":"2022-10-03"},{"lineNumber":158,"author":{"gitId":"shenyih0ng"},"content":"        if (memberVarReadTimeout !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":159,"author":{"gitId":"shenyih0ng"},"content":"            localVarRequestBuilder.timeout(memberVarReadTimeout);","lastModifiedDate":"2022-10-03"},{"lineNumber":160,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":161,"author":{"gitId":"shenyih0ng"},"content":"        if (memberVarInterceptor !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":162,"author":{"gitId":"shenyih0ng"},"content":"            memberVarInterceptor.accept(localVarRequestBuilder);","lastModifiedDate":"2022-10-03"},{"lineNumber":163,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":164,"author":{"gitId":"shenyih0ng"},"content":"        return localVarRequestBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":165,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":166,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":167,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":168,"author":{"gitId":"shenyih0ng"},"content":"     * Get a list of all venues Get a list of all venues, including lecture theatres, seminar rooms, laboratories, etc.","lastModifiedDate":"2022-10-07"},{"lineNumber":169,"author":{"gitId":"shenyih0ng"},"content":"     * used in the given semester\u0026#39;s classes. This endpoint only returns an array of names, and is useful for","lastModifiedDate":"2022-10-07"},{"lineNumber":170,"author":{"gitId":"shenyih0ng"},"content":"     * searching and autocompletion.","lastModifiedDate":"2022-10-07"},{"lineNumber":171,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":172,"author":{"gitId":"shenyih0ng"},"content":"     * @param acadYear academic year, with the slash (/) replaced by a dash (required)","lastModifiedDate":"2022-10-03"},{"lineNumber":173,"author":{"gitId":"shenyih0ng"},"content":"     * @param semester semester, with 1 and 2 representing semester 1 and 2, and 3, 4 representing special term 1 and 2","lastModifiedDate":"2022-10-07"},{"lineNumber":174,"author":{"gitId":"shenyih0ng"},"content":"     *                 (required)","lastModifiedDate":"2022-10-07"},{"lineNumber":175,"author":{"gitId":"shenyih0ng"},"content":"     * @return List\u0026lt;String\u0026gt;","lastModifiedDate":"2022-10-03"},{"lineNumber":176,"author":{"gitId":"shenyih0ng"},"content":"     * @throws ApiException if fails to make API call","lastModifiedDate":"2022-10-03"},{"lineNumber":177,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":178,"author":{"gitId":"shenyih0ng"},"content":"    public List\u003cString\u003e acadYearSemestersSemesterVenuesJsonGet(String acadYear, BigDecimal semester)","lastModifiedDate":"2022-10-07"},{"lineNumber":179,"author":{"gitId":"shenyih0ng"},"content":"        throws ApiException {","lastModifiedDate":"2022-10-07"},{"lineNumber":180,"author":{"gitId":"shenyih0ng"},"content":"        ApiResponse\u003cList\u003cString\u003e\u003e localVarResponse \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":181,"author":{"gitId":"shenyih0ng"},"content":"            acadYearSemestersSemesterVenuesJsonGetWithHttpInfo(acadYear, semester);","lastModifiedDate":"2022-10-07"},{"lineNumber":182,"author":{"gitId":"shenyih0ng"},"content":"        return localVarResponse.getData();","lastModifiedDate":"2022-10-03"},{"lineNumber":183,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":184,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":185,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":186,"author":{"gitId":"shenyih0ng"},"content":"     * Get a list of all venues Get a list of all venues, including lecture theatres, seminar rooms, laboratories, etc.","lastModifiedDate":"2022-10-07"},{"lineNumber":187,"author":{"gitId":"shenyih0ng"},"content":"     * used in the given semester\u0026#39;s classes. This endpoint only returns an array of names, and is useful for","lastModifiedDate":"2022-10-07"},{"lineNumber":188,"author":{"gitId":"shenyih0ng"},"content":"     * searching and autocompletion.","lastModifiedDate":"2022-10-07"},{"lineNumber":189,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":190,"author":{"gitId":"shenyih0ng"},"content":"     * @param acadYear academic year, with the slash (/) replaced by a dash (required)","lastModifiedDate":"2022-10-03"},{"lineNumber":191,"author":{"gitId":"shenyih0ng"},"content":"     * @param semester semester, with 1 and 2 representing semester 1 and 2, and 3, 4 representing special term 1 and 2","lastModifiedDate":"2022-10-07"},{"lineNumber":192,"author":{"gitId":"shenyih0ng"},"content":"     *                 (required)","lastModifiedDate":"2022-10-07"},{"lineNumber":193,"author":{"gitId":"shenyih0ng"},"content":"     * @return ApiResponse\u0026lt;List\u0026lt;String\u0026gt;\u0026gt;","lastModifiedDate":"2022-10-03"},{"lineNumber":194,"author":{"gitId":"shenyih0ng"},"content":"     * @throws ApiException if fails to make API call","lastModifiedDate":"2022-10-03"},{"lineNumber":195,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":196,"author":{"gitId":"shenyih0ng"},"content":"    public ApiResponse\u003cList\u003cString\u003e\u003e acadYearSemestersSemesterVenuesJsonGetWithHttpInfo(String acadYear,","lastModifiedDate":"2022-10-07"},{"lineNumber":197,"author":{"gitId":"shenyih0ng"},"content":"        BigDecimal semester) throws ApiException {","lastModifiedDate":"2022-10-07"},{"lineNumber":198,"author":{"gitId":"shenyih0ng"},"content":"        HttpRequest.Builder localVarRequestBuilder \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":199,"author":{"gitId":"shenyih0ng"},"content":"            acadYearSemestersSemesterVenuesJsonGetRequestBuilder(acadYear, semester);","lastModifiedDate":"2022-10-07"},{"lineNumber":200,"author":{"gitId":"shenyih0ng"},"content":"        try {","lastModifiedDate":"2022-10-03"},{"lineNumber":201,"author":{"gitId":"shenyih0ng"},"content":"            HttpResponse\u003cInputStream\u003e localVarResponse \u003d memberVarHttpClient.send(","lastModifiedDate":"2022-10-03"},{"lineNumber":202,"author":{"gitId":"shenyih0ng"},"content":"                localVarRequestBuilder.build(),","lastModifiedDate":"2022-10-03"},{"lineNumber":203,"author":{"gitId":"shenyih0ng"},"content":"                HttpResponse.BodyHandlers.ofInputStream());","lastModifiedDate":"2022-10-03"},{"lineNumber":204,"author":{"gitId":"shenyih0ng"},"content":"            if (memberVarResponseInterceptor !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":205,"author":{"gitId":"shenyih0ng"},"content":"                memberVarResponseInterceptor.accept(localVarResponse);","lastModifiedDate":"2022-10-03"},{"lineNumber":206,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":207,"author":{"gitId":"shenyih0ng"},"content":"            try {","lastModifiedDate":"2022-10-03"},{"lineNumber":208,"author":{"gitId":"shenyih0ng"},"content":"                if (localVarResponse.statusCode() / 100 !\u003d 2) {","lastModifiedDate":"2022-10-03"},{"lineNumber":209,"author":{"gitId":"shenyih0ng"},"content":"                    throw getApiException(\"acadYearSemestersSemesterVenuesJsonGet\", localVarResponse);","lastModifiedDate":"2022-10-03"},{"lineNumber":210,"author":{"gitId":"shenyih0ng"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":211,"author":{"gitId":"shenyih0ng"},"content":"                return new ApiResponse\u003cList\u003cString\u003e\u003e(","lastModifiedDate":"2022-10-03"},{"lineNumber":212,"author":{"gitId":"shenyih0ng"},"content":"                    localVarResponse.statusCode(),","lastModifiedDate":"2022-10-03"},{"lineNumber":213,"author":{"gitId":"shenyih0ng"},"content":"                    localVarResponse.headers().map(),","lastModifiedDate":"2022-10-03"},{"lineNumber":214,"author":{"gitId":"shenyih0ng"},"content":"                    memberVarObjectMapper.readValue(localVarResponse.body(), new TypeReference\u003cList\u003cString\u003e\u003e() {","lastModifiedDate":"2022-10-07"},{"lineNumber":215,"author":{"gitId":"shenyih0ng"},"content":"                    }) // closes the InputStream","lastModifiedDate":"2022-10-07"},{"lineNumber":216,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":217,"author":{"gitId":"shenyih0ng"},"content":"                );","lastModifiedDate":"2022-10-03"},{"lineNumber":218,"author":{"gitId":"shenyih0ng"},"content":"            } finally {","lastModifiedDate":"2022-10-03"},{"lineNumber":219,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":220,"author":{"gitId":"shenyih0ng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-03"},{"lineNumber":221,"author":{"gitId":"shenyih0ng"},"content":"            throw new ApiException(e);","lastModifiedDate":"2022-10-03"},{"lineNumber":222,"author":{"gitId":"shenyih0ng"},"content":"        } catch (InterruptedException e) {","lastModifiedDate":"2022-10-07"},{"lineNumber":223,"author":{"gitId":"shenyih0ng"},"content":"            Thread.currentThread().interrupt();","lastModifiedDate":"2022-10-03"},{"lineNumber":224,"author":{"gitId":"shenyih0ng"},"content":"            throw new ApiException(e);","lastModifiedDate":"2022-10-03"},{"lineNumber":225,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":226,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":227,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":228,"author":{"gitId":"shenyih0ng"},"content":"    private HttpRequest.Builder acadYearSemestersSemesterVenuesJsonGetRequestBuilder(String acadYear,","lastModifiedDate":"2022-10-07"},{"lineNumber":229,"author":{"gitId":"shenyih0ng"},"content":"        BigDecimal semester) throws ApiException {","lastModifiedDate":"2022-10-07"},{"lineNumber":230,"author":{"gitId":"shenyih0ng"},"content":"        // verify the required parameter \u0027acadYear\u0027 is set","lastModifiedDate":"2022-10-03"},{"lineNumber":231,"author":{"gitId":"shenyih0ng"},"content":"        if (acadYear \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":232,"author":{"gitId":"shenyih0ng"},"content":"            throw new ApiException(400,","lastModifiedDate":"2022-10-07"},{"lineNumber":233,"author":{"gitId":"shenyih0ng"},"content":"                \"Missing the required parameter \u0027acadYear\u0027 when calling acadYearSemestersSemesterVenuesJsonGet\");","lastModifiedDate":"2022-10-07"},{"lineNumber":234,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":235,"author":{"gitId":"shenyih0ng"},"content":"        // verify the required parameter \u0027semester\u0027 is set","lastModifiedDate":"2022-10-03"},{"lineNumber":236,"author":{"gitId":"shenyih0ng"},"content":"        if (semester \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":237,"author":{"gitId":"shenyih0ng"},"content":"            throw new ApiException(400,","lastModifiedDate":"2022-10-07"},{"lineNumber":238,"author":{"gitId":"shenyih0ng"},"content":"                \"Missing the required parameter \u0027semester\u0027 when calling acadYearSemestersSemesterVenuesJsonGet\");","lastModifiedDate":"2022-10-07"},{"lineNumber":239,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":240,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":241,"author":{"gitId":"shenyih0ng"},"content":"        HttpRequest.Builder localVarRequestBuilder \u003d HttpRequest.newBuilder();","lastModifiedDate":"2022-10-03"},{"lineNumber":242,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":243,"author":{"gitId":"shenyih0ng"},"content":"        String localVarPath \u003d \"/{acadYear}/semesters/{semester}/venues.json\"","lastModifiedDate":"2022-10-03"},{"lineNumber":244,"author":{"gitId":"shenyih0ng"},"content":"            .replace(\"{acadYear}\", ApiClient.urlEncode(acadYear.toString()))","lastModifiedDate":"2022-10-03"},{"lineNumber":245,"author":{"gitId":"shenyih0ng"},"content":"            .replace(\"{semester}\", ApiClient.urlEncode(semester.toString()));","lastModifiedDate":"2022-10-03"},{"lineNumber":246,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":247,"author":{"gitId":"shenyih0ng"},"content":"        localVarRequestBuilder.uri(URI.create(memberVarBaseUri + localVarPath));","lastModifiedDate":"2022-10-03"},{"lineNumber":248,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":249,"author":{"gitId":"shenyih0ng"},"content":"        localVarRequestBuilder.header(\"Accept\", \"application/json\");","lastModifiedDate":"2022-10-03"},{"lineNumber":250,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":251,"author":{"gitId":"shenyih0ng"},"content":"        localVarRequestBuilder.method(\"GET\", HttpRequest.BodyPublishers.noBody());","lastModifiedDate":"2022-10-03"},{"lineNumber":252,"author":{"gitId":"shenyih0ng"},"content":"        if (memberVarReadTimeout !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":253,"author":{"gitId":"shenyih0ng"},"content":"            localVarRequestBuilder.timeout(memberVarReadTimeout);","lastModifiedDate":"2022-10-03"},{"lineNumber":254,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":255,"author":{"gitId":"shenyih0ng"},"content":"        if (memberVarInterceptor !\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":256,"author":{"gitId":"shenyih0ng"},"content":"            memberVarInterceptor.accept(localVarRequestBuilder);","lastModifiedDate":"2022-10-03"},{"lineNumber":257,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":258,"author":{"gitId":"shenyih0ng"},"content":"        return localVarRequestBuilder;","lastModifiedDate":"2022-10-03"},{"lineNumber":259,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":260,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"shenyih0ng":260}},{"path":"src/main/java/org/openapitools/client/model/AbstractOpenApiSchema.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"/*","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API contains data used to render \u003chttps://nusmods.com\u003e. It includes data on modules offered by NUS and their timetables, as well as information on the locations the classes take place in. You are welcome to use and experiment with the data, which is extracted from official APIs provided by the Registrar\u0027s Office.  The API consists of static JSON files scraped daily from the school\u0027s APIs. This means it only partially follow REST conventions, and all resources are read only. All successful responses will return JSON, and all endpoints end in `.json`.  The shape of the data returned by these endpoints are designed for NUSMods in mind. If you have any questions or find that you need the data in other shapes for other purposes, feel free to reach out to us:  - **Telegram**: \u003chttps://telegram.me/nusmods\u003e - **Mailing list**: \u003cnusmods@googlegroups.com\u003e (for security related issues please email \u003cmods@nusmods.com\u003e instead)  ## Fetching data  Any HTTP client can be used to fetch data from the API. HTTPS is preferred, but the server will also respond to HTTP requests. The server supports HTTP 1.1 as well as HTTP 2 over HTTPS, and supports gzip compression.  The API has no authentication, and is not rate limited. While the server can respond to a large number of requests simultaneously, we request that you be polite with resource usage so as not to disrupt nusmods.com, which relies on the same API server. In general there is no need to fetch data from the API more than once per day, as that is the frequency at which we update the data.  [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) headers are enabled on all endpoints, so client-side JavaScript can use also use the API.  ## TypeScript types  Since the NUSMods is written in TypeScript, typings are available in the source for the scraper. These may be easier to read than the documentation generated by Swagger.  - Module types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/modules.ts\u003e - Venue types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/venues.ts\u003e  ## Data  Below are some notes about the data returned from the API. Feel free to talk to us or create an issue if any of it is not clear.  ### Module data  Module endpoints return information on modules offered by NUS. Most of the module data is self-explanatory, but some of the data are more complex and is explained here.  #### Lessons  Each lesson in a timetable has a lesson type `lessonType` and class number `ClassNo`. Every student must take one of each lesson type offered by the module. For example, this module offers two tutorials and one lecture. That means the student must attend the lecture, and can choose one of the two tutorials to attend.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"01\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1100\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"COM1-0207\\\"     },     {       \\\"classNo\\\": \\\"02\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Friday\\\",       \\\"startTime\\\": \\\"0900\\\",       \\\"endTime\\\": \\\"1000\\\",       \\\"venue\\\": \\\"COM1-0209\\\"     }   ] } ```  Each lesson has a `classNo` key. There can be multiple lessons of the same type and class number, in which case students must attend both. In this example, students can choose to attend either lecture group 1 on Tuesdays and Wednesdays, or lecture group 2 on Mondays and Wednesdays.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1400\\\",       \\\"endTime\\\": \\\"1500\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Monday\\\",       \\\"startTime\\\": \\\"1000\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1500\\\",       \\\"endTime\\\": \\\"1600\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     }   ] } ```  #### Lesson Weeks  The `weeks` key on lessons can return data in one of two forms.  Weeks is usually a sorted array of numbers. In this case it represents the school weeks the lesson occurs on, from 1 to 13.  Some classes have lessons outside of the school timetable. In this case a `WeekRange` object is returned. The object will always contain a `start` and `end` key representing the start and end date of lessons. The example below has classes every week from 17th Jan to 18th April.  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-04-18\\\" } ```  Optionally it can also include `weekInterval`, a positive integer describing the number of weeks between each lesson, and `weeks`, an array of positive integers describing the weeks on which the lesson will fall, with week 1 being the starting date. If these are not present you can assume lessons will occur every week.  The following example has lessons on 17th Jan (week 1), 24th Jan (week 2), 7th Feb (week 4) and 21st Feb (week 6).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-21\\\",   \\\"weeks\\\": [1, 2, 4, 6] } ```  The following example has lessons on 17th Jan (week 1), 31st Jan (week 3), 14th Feb (week 5) and 28th Feb (week 7).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-28\\\",   \\\"weekInterval\\\": 2 } ```  #### Workload  The `workload` key can return data in one of two forms.  Workload is usually a **5-tuple of numbers**, describing the estimated number of hours per week the student is expected to put in for the module for **lectures, tutorials, laboratory, projects/fieldwork, and preparatory work** respectively. For example, a workload of `[2, 1, 1, 3, 3]` means the student should spend every week  - 2 hours in lectures - 1 hour in tutorials - 1 hour at the lab - 3 hours doing project work - 3 hours preparing for classes  Each module credit represents 2.5 hours of work each week, so the standard 4 MC module represents 10 hours of work each week. Module credit may not be integers.  Note that this is only an estimate, and may be outdated or differ significantly in reality. Some modules also incorrectly lists the **total** workload hours instead of weekly, so very large values may show up.  This value is parsed from a string provided by the school, and occasionally this field will contain unusual values which cannot be parsed. In this case this field will contain the original **string** instead, which should be displayed as-is to the user.  #### Prerequisite, corequisite and preclusions  These three keys determine whether a student can take a module.  **Prerequisites** are requirements you have to meet before you can take a module. These are usually in the form of other modules (see prerequisite tree below for a machine readable format), but can also be things like \u0027taken A-level H2 math\u0027 or \u002770 MCs and above\u0027.  **Preclusions** refer to modules or requirements that cannot be taken if this module is taken, and vice versa. These are usually modules whose content overlaps significantly with this module, and can usually be used to replace each other to fulfill prerequisites.  **Corequisites** are modules that must be taken together with this module in the same semester. This usually refer to twined modules - modules which have linked syllabuses.  #### Prerequisite Tree  The `prereqTree` key is return on the individual module endpoint (`/modules/{moduleCode`). Not all modules have prerequisites, and some have prerequisites that cannot be properly represented as a tree, in which case this key will not appear.  This describes the prerequisites that need to be fulfilled before this module can be taken. The data structure is recursive and represents a tree.  ```json {   \\\"and\\\": [     \\\"CS1231\\\",     {       \\\"or\\\": [\\\"CS1010S\\\", \\\"CS1010X\\\"]     }   ] } ```  In the example, this module requires CS1231 and either CS1010S or CS1010X. This can be visualized as  ```            ┌ CS1231 ── all of ─┤            │         ┌ CS1010            └ one of ─┤                      └ CS1010X ```  The module information also contains the inverse of this, that is, modules whose requirements are fulfilled by this module (taking this module will allow you to take these modules in the following semester). The data is found on the `fulfillRequirements` key as an array of module codes.  ### Venue data  Venue data is simply the module timetable restructured to show the lessons happening at each classroom.  The venue list endpoint returns a list of all locations that are used in the semester. Note that this is not a comprehensive list of locations, but rather just a list of venues that appears in module lessons.  The venue information endpoint returns the full class and occupancy information about a venue. The `classes` key contains a list of lessons similar to the `timetable` key in module data, but without a `venue` key and with `moduleCode`.","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":" * The version of the OpenAPI document: 2.0.0","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":" * Contact: nusmods@googlegroups.com","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":" * https://openapi-generator.tech","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":" * Do not edit the class manually.","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"package org.openapitools.client.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":" * Abstract class for oneOf,anyOf schemas defined in OpenAPI spec","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"@javax.annotation.processing.Generated(value \u003d \"org.openapitools.codegen.languages.JavaClientCodegen\", date \u003d \"2022-10-03T22:22:26.802458+08:00[Asia/Singapore]\")","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"public abstract class AbstractOpenApiSchema {","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"    // schema type (e.g. oneOf, anyOf)","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"    private final String schemaType;","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"    // store the actual instance of the schema/object","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"    private Object instance;","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"    // is nullable","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"    private Boolean isNullable;","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"    public AbstractOpenApiSchema(String schemaType, Boolean isNullable) {","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"        this.schemaType \u003d schemaType;","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"        this.isNullable \u003d isNullable;","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"     * Get the list of oneOf/anyOf composed schemas allowed to be stored in this object","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"     * @return an instance of the actual schema/object","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"    public abstract Map\u003cString, Class\u003c?\u003e\u003e getSchemas();","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"     * Get the actual instance","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"     * @return an instance of the actual schema/object","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"    @JsonValue","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"    public Object getActualInstance() {","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"        return instance;","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"     * Set the actual instance","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"     * @param instance the actual instance of the schema/object","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"    public void setActualInstance(Object instance) {","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"        this.instance \u003d instance;","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"     * Get the instant recursively when the schemas defined in oneOf/anyof happen to be oneOf/anyOf schema as well","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"     * @return an instance of the actual schema/object","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"shenyih0ng"},"content":"    public Object getActualInstanceRecursively() {","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"shenyih0ng"},"content":"        return getActualInstanceRecursively(this);","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"shenyih0ng"},"content":"    private Object getActualInstanceRecursively(AbstractOpenApiSchema object) {","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"shenyih0ng"},"content":"        if (object.getActualInstance() \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"shenyih0ng"},"content":"            return null;","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"shenyih0ng"},"content":"        } else if (object.getActualInstance() instanceof AbstractOpenApiSchema) {","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"shenyih0ng"},"content":"            return getActualInstanceRecursively((AbstractOpenApiSchema) object.getActualInstance());","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"shenyih0ng"},"content":"        } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"shenyih0ng"},"content":"            return object.getActualInstance();","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"shenyih0ng"},"content":"     * Get the schema type (e.g. anyOf, oneOf)","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"shenyih0ng"},"content":"     * @return the schema type","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"shenyih0ng"},"content":"    public String getSchemaType() {","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"shenyih0ng"},"content":"        return schemaType;","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"shenyih0ng"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"shenyih0ng"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"class \").append(getClass()).append(\" {\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    instance: \").append(toIndentedString(instance)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    isNullable: \").append(toIndentedString(isNullable)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    schemaType: \").append(toIndentedString(schemaType)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"}\");","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"shenyih0ng"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"shenyih0ng"},"content":"     * Convert the given object to string with each line indented by 4 spaces (except the first line).","lastModifiedDate":"2022-10-07"},{"lineNumber":106,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"shenyih0ng"},"content":"    private String toIndentedString(Object o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"shenyih0ng"},"content":"        if (o \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"shenyih0ng"},"content":"            return \"null\";","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"shenyih0ng"},"content":"        return o.toString().replace(\"\\n\", \"\\n    \");","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"shenyih0ng"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"shenyih0ng"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"shenyih0ng"},"content":"            return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"shenyih0ng"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"shenyih0ng"},"content":"            return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"shenyih0ng"},"content":"        AbstractOpenApiSchema a \u003d (AbstractOpenApiSchema) o;","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"shenyih0ng"},"content":"        return Objects.equals(this.instance, a.instance) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.isNullable, a.isNullable) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.schemaType, a.schemaType);","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"shenyih0ng"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":129,"author":{"gitId":"shenyih0ng"},"content":"        return Objects.hash(instance, isNullable, schemaType);","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"shenyih0ng"},"content":"     * Is nullable","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"shenyih0ng"},"content":"     * @return true if it\u0027s nullable","lastModifiedDate":"2022-10-03"},{"lineNumber":136,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"shenyih0ng"},"content":"    public Boolean isNullable() {","lastModifiedDate":"2022-10-03"},{"lineNumber":138,"author":{"gitId":"shenyih0ng"},"content":"        if (Boolean.TRUE.equals(isNullable)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":139,"author":{"gitId":"shenyih0ng"},"content":"            return Boolean.TRUE;","lastModifiedDate":"2022-10-03"},{"lineNumber":140,"author":{"gitId":"shenyih0ng"},"content":"        } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":141,"author":{"gitId":"shenyih0ng"},"content":"            return Boolean.FALSE;","lastModifiedDate":"2022-10-03"},{"lineNumber":142,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":143,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":144,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":145,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":146,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"shenyih0ng":146}},{"path":"src/main/java/org/openapitools/client/model/Lesson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"/*","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API contains data used to render \u003chttps://nusmods.com\u003e. It includes data on modules offered by NUS and their timetables, as well as information on the locations the classes take place in. You are welcome to use and experiment with the data, which is extracted from official APIs provided by the Registrar\u0027s Office.  The API consists of static JSON files scraped daily from the school\u0027s APIs. This means it only partially follow REST conventions, and all resources are read only. All successful responses will return JSON, and all endpoints end in `.json`.  The shape of the data returned by these endpoints are designed for NUSMods in mind. If you have any questions or find that you need the data in other shapes for other purposes, feel free to reach out to us:  - **Telegram**: \u003chttps://telegram.me/nusmods\u003e - **Mailing list**: \u003cnusmods@googlegroups.com\u003e (for security related issues please email \u003cmods@nusmods.com\u003e instead)  ## Fetching data  Any HTTP client can be used to fetch data from the API. HTTPS is preferred, but the server will also respond to HTTP requests. The server supports HTTP 1.1 as well as HTTP 2 over HTTPS, and supports gzip compression.  The API has no authentication, and is not rate limited. While the server can respond to a large number of requests simultaneously, we request that you be polite with resource usage so as not to disrupt nusmods.com, which relies on the same API server. In general there is no need to fetch data from the API more than once per day, as that is the frequency at which we update the data.  [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) headers are enabled on all endpoints, so client-side JavaScript can use also use the API.  ## TypeScript types  Since the NUSMods is written in TypeScript, typings are available in the source for the scraper. These may be easier to read than the documentation generated by Swagger.  - Module types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/modules.ts\u003e - Venue types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/venues.ts\u003e  ## Data  Below are some notes about the data returned from the API. Feel free to talk to us or create an issue if any of it is not clear.  ### Module data  Module endpoints return information on modules offered by NUS. Most of the module data is self-explanatory, but some of the data are more complex and is explained here.  #### Lessons  Each lesson in a timetable has a lesson type `lessonType` and class number `ClassNo`. Every student must take one of each lesson type offered by the module. For example, this module offers two tutorials and one lecture. That means the student must attend the lecture, and can choose one of the two tutorials to attend.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"01\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1100\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"COM1-0207\\\"     },     {       \\\"classNo\\\": \\\"02\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Friday\\\",       \\\"startTime\\\": \\\"0900\\\",       \\\"endTime\\\": \\\"1000\\\",       \\\"venue\\\": \\\"COM1-0209\\\"     }   ] } ```  Each lesson has a `classNo` key. There can be multiple lessons of the same type and class number, in which case students must attend both. In this example, students can choose to attend either lecture group 1 on Tuesdays and Wednesdays, or lecture group 2 on Mondays and Wednesdays.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1400\\\",       \\\"endTime\\\": \\\"1500\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Monday\\\",       \\\"startTime\\\": \\\"1000\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1500\\\",       \\\"endTime\\\": \\\"1600\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     }   ] } ```  #### Lesson Weeks  The `weeks` key on lessons can return data in one of two forms.  Weeks is usually a sorted array of numbers. In this case it represents the school weeks the lesson occurs on, from 1 to 13.  Some classes have lessons outside of the school timetable. In this case a `WeekRange` object is returned. The object will always contain a `start` and `end` key representing the start and end date of lessons. The example below has classes every week from 17th Jan to 18th April.  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-04-18\\\" } ```  Optionally it can also include `weekInterval`, a positive integer describing the number of weeks between each lesson, and `weeks`, an array of positive integers describing the weeks on which the lesson will fall, with week 1 being the starting date. If these are not present you can assume lessons will occur every week.  The following example has lessons on 17th Jan (week 1), 24th Jan (week 2), 7th Feb (week 4) and 21st Feb (week 6).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-21\\\",   \\\"weeks\\\": [1, 2, 4, 6] } ```  The following example has lessons on 17th Jan (week 1), 31st Jan (week 3), 14th Feb (week 5) and 28th Feb (week 7).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-28\\\",   \\\"weekInterval\\\": 2 } ```  #### Workload  The `workload` key can return data in one of two forms.  Workload is usually a **5-tuple of numbers**, describing the estimated number of hours per week the student is expected to put in for the module for **lectures, tutorials, laboratory, projects/fieldwork, and preparatory work** respectively. For example, a workload of `[2, 1, 1, 3, 3]` means the student should spend every week  - 2 hours in lectures - 1 hour in tutorials - 1 hour at the lab - 3 hours doing project work - 3 hours preparing for classes  Each module credit represents 2.5 hours of work each week, so the standard 4 MC module represents 10 hours of work each week. Module credit may not be integers.  Note that this is only an estimate, and may be outdated or differ significantly in reality. Some modules also incorrectly lists the **total** workload hours instead of weekly, so very large values may show up.  This value is parsed from a string provided by the school, and occasionally this field will contain unusual values which cannot be parsed. In this case this field will contain the original **string** instead, which should be displayed as-is to the user.  #### Prerequisite, corequisite and preclusions  These three keys determine whether a student can take a module.  **Prerequisites** are requirements you have to meet before you can take a module. These are usually in the form of other modules (see prerequisite tree below for a machine readable format), but can also be things like \u0027taken A-level H2 math\u0027 or \u002770 MCs and above\u0027.  **Preclusions** refer to modules or requirements that cannot be taken if this module is taken, and vice versa. These are usually modules whose content overlaps significantly with this module, and can usually be used to replace each other to fulfill prerequisites.  **Corequisites** are modules that must be taken together with this module in the same semester. This usually refer to twined modules - modules which have linked syllabuses.  #### Prerequisite Tree  The `prereqTree` key is return on the individual module endpoint (`/modules/{moduleCode`). Not all modules have prerequisites, and some have prerequisites that cannot be properly represented as a tree, in which case this key will not appear.  This describes the prerequisites that need to be fulfilled before this module can be taken. The data structure is recursive and represents a tree.  ```json {   \\\"and\\\": [     \\\"CS1231\\\",     {       \\\"or\\\": [\\\"CS1010S\\\", \\\"CS1010X\\\"]     }   ] } ```  In the example, this module requires CS1231 and either CS1010S or CS1010X. This can be visualized as  ```            ┌ CS1231 ── all of ─┤            │         ┌ CS1010            └ one of ─┤                      └ CS1010X ```  The module information also contains the inverse of this, that is, modules whose requirements are fulfilled by this module (taking this module will allow you to take these modules in the following semester). The data is found on the `fulfillRequirements` key as an array of module codes.  ### Venue data  Venue data is simply the module timetable restructured to show the lessons happening at each classroom.  The venue list endpoint returns a list of all locations that are used in the semester. Note that this is not a comprehensive list of locations, but rather just a list of venues that appears in module lessons.  The venue information endpoint returns the full class and occupancy information about a venue. The `classes` key contains a list of lessons similar to the `timetable` key in module data, but without a `venue` key and with `moduleCode`.","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":" * The version of the OpenAPI document: 2.0.0","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":" * Contact: nusmods@googlegroups.com","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":" * https://openapi-generator.tech","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":" * Do not edit the class manually.","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"package org.openapitools.client.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonInclude;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonPropertyOrder;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"import io.swagger.annotations.ApiModelProperty;","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":" * Lesson","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"@JsonPropertyOrder({","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"    Lesson.JSON_PROPERTY_CLASS_NO,","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"    Lesson.JSON_PROPERTY_START_TIME,","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"    Lesson.JSON_PROPERTY_END_TIME,","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"    Lesson.JSON_PROPERTY_WEEKS,","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"    Lesson.JSON_PROPERTY_VENUE,","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"    Lesson.JSON_PROPERTY_DAY,","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"    Lesson.JSON_PROPERTY_LESSON_TYPE,","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"    Lesson.JSON_PROPERTY_SIZE","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"})","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"@javax.annotation.processing.Generated(value \u003d \"org.openapitools.codegen.languages.JavaClientCodegen\", date \u003d \"2022-10-03T22:22:26.802458+08:00[Asia/Singapore]\")","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"public class Lesson {","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_CLASS_NO \u003d \"classNo\";","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_START_TIME \u003d \"startTime\";","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_END_TIME \u003d \"endTime\";","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_WEEKS \u003d \"weeks\";","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_VENUE \u003d \"venue\";","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_DAY \u003d \"day\";","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_LESSON_TYPE \u003d \"lessonType\";","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_SIZE \u003d \"size\";","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"    private String classNo;","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"    private String startTime;","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"    private String endTime;","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"    private LessonWeeks weeks;","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"    private String venue;","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"    private String day;","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"    private String lessonType;","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"    private BigDecimal size;","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"    public Lesson() {","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"    public Lesson classNo(String classNo) {","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"        this.classNo \u003d classNo;","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"     * Get classNo","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"shenyih0ng"},"content":"     * @return classNo","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"08\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_CLASS_NO)","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"shenyih0ng"},"content":"    public String getClassNo() {","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"shenyih0ng"},"content":"        return classNo;","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_CLASS_NO)","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"shenyih0ng"},"content":"    public void setClassNo(String classNo) {","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"shenyih0ng"},"content":"        this.classNo \u003d classNo;","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"shenyih0ng"},"content":"    public Lesson startTime(String startTime) {","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"shenyih0ng"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"shenyih0ng"},"content":"     * Get startTime","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":97,"author":{"gitId":"shenyih0ng"},"content":"     * @return startTime","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"1100\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_START_TIME)","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"shenyih0ng"},"content":"    public String getStartTime() {","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"shenyih0ng"},"content":"        return startTime;","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_START_TIME)","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"shenyih0ng"},"content":"    public void setStartTime(String startTime) {","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"shenyih0ng"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"shenyih0ng"},"content":"    public Lesson endTime(String endTime) {","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"shenyih0ng"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"shenyih0ng"},"content":"     * Get endTime","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":124,"author":{"gitId":"shenyih0ng"},"content":"     * @return endTime","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"1200\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_END_TIME)","lastModifiedDate":"2022-10-03"},{"lineNumber":129,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"shenyih0ng"},"content":"    public String getEndTime() {","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"shenyih0ng"},"content":"        return endTime;","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":136,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_END_TIME)","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":138,"author":{"gitId":"shenyih0ng"},"content":"    public void setEndTime(String endTime) {","lastModifiedDate":"2022-10-03"},{"lineNumber":139,"author":{"gitId":"shenyih0ng"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2022-10-03"},{"lineNumber":140,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":141,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":142,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":143,"author":{"gitId":"shenyih0ng"},"content":"    public Lesson weeks(LessonWeeks weeks) {","lastModifiedDate":"2022-10-03"},{"lineNumber":144,"author":{"gitId":"shenyih0ng"},"content":"        this.weeks \u003d weeks;","lastModifiedDate":"2022-10-03"},{"lineNumber":145,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":146,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":147,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":148,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":149,"author":{"gitId":"shenyih0ng"},"content":"     * Get weeks","lastModifiedDate":"2022-10-03"},{"lineNumber":150,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":151,"author":{"gitId":"shenyih0ng"},"content":"     * @return weeks","lastModifiedDate":"2022-10-03"},{"lineNumber":152,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":153,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":154,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":155,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_WEEKS)","lastModifiedDate":"2022-10-03"},{"lineNumber":156,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":157,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":158,"author":{"gitId":"shenyih0ng"},"content":"    public LessonWeeks getWeeks() {","lastModifiedDate":"2022-10-03"},{"lineNumber":159,"author":{"gitId":"shenyih0ng"},"content":"        return weeks;","lastModifiedDate":"2022-10-03"},{"lineNumber":160,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":161,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":162,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":163,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_WEEKS)","lastModifiedDate":"2022-10-03"},{"lineNumber":164,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":165,"author":{"gitId":"shenyih0ng"},"content":"    public void setWeeks(LessonWeeks weeks) {","lastModifiedDate":"2022-10-03"},{"lineNumber":166,"author":{"gitId":"shenyih0ng"},"content":"        this.weeks \u003d weeks;","lastModifiedDate":"2022-10-03"},{"lineNumber":167,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":168,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":169,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":170,"author":{"gitId":"shenyih0ng"},"content":"    public Lesson venue(String venue) {","lastModifiedDate":"2022-10-03"},{"lineNumber":171,"author":{"gitId":"shenyih0ng"},"content":"        this.venue \u003d venue;","lastModifiedDate":"2022-10-03"},{"lineNumber":172,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":173,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":174,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":175,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":176,"author":{"gitId":"shenyih0ng"},"content":"     * Get venue","lastModifiedDate":"2022-10-03"},{"lineNumber":177,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":178,"author":{"gitId":"shenyih0ng"},"content":"     * @return venue","lastModifiedDate":"2022-10-03"},{"lineNumber":179,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":180,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":181,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"COM1-0208\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":182,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_VENUE)","lastModifiedDate":"2022-10-03"},{"lineNumber":183,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":184,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":185,"author":{"gitId":"shenyih0ng"},"content":"    public String getVenue() {","lastModifiedDate":"2022-10-03"},{"lineNumber":186,"author":{"gitId":"shenyih0ng"},"content":"        return venue;","lastModifiedDate":"2022-10-03"},{"lineNumber":187,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":188,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":189,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":190,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_VENUE)","lastModifiedDate":"2022-10-03"},{"lineNumber":191,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":192,"author":{"gitId":"shenyih0ng"},"content":"    public void setVenue(String venue) {","lastModifiedDate":"2022-10-03"},{"lineNumber":193,"author":{"gitId":"shenyih0ng"},"content":"        this.venue \u003d venue;","lastModifiedDate":"2022-10-03"},{"lineNumber":194,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":195,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":196,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":197,"author":{"gitId":"shenyih0ng"},"content":"    public Lesson day(String day) {","lastModifiedDate":"2022-10-03"},{"lineNumber":198,"author":{"gitId":"shenyih0ng"},"content":"        this.day \u003d day;","lastModifiedDate":"2022-10-03"},{"lineNumber":199,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":200,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":201,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":202,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":203,"author":{"gitId":"shenyih0ng"},"content":"     * Get day","lastModifiedDate":"2022-10-03"},{"lineNumber":204,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":205,"author":{"gitId":"shenyih0ng"},"content":"     * @return day","lastModifiedDate":"2022-10-03"},{"lineNumber":206,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":207,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nullable","lastModifiedDate":"2022-10-03"},{"lineNumber":208,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"Friday\", value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":209,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_DAY)","lastModifiedDate":"2022-10-03"},{"lineNumber":210,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":211,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":212,"author":{"gitId":"shenyih0ng"},"content":"    public String getDay() {","lastModifiedDate":"2022-10-03"},{"lineNumber":213,"author":{"gitId":"shenyih0ng"},"content":"        return day;","lastModifiedDate":"2022-10-03"},{"lineNumber":214,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":215,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":216,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":217,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_DAY)","lastModifiedDate":"2022-10-03"},{"lineNumber":218,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":219,"author":{"gitId":"shenyih0ng"},"content":"    public void setDay(String day) {","lastModifiedDate":"2022-10-03"},{"lineNumber":220,"author":{"gitId":"shenyih0ng"},"content":"        this.day \u003d day;","lastModifiedDate":"2022-10-03"},{"lineNumber":221,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":222,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":223,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":224,"author":{"gitId":"shenyih0ng"},"content":"    public Lesson lessonType(String lessonType) {","lastModifiedDate":"2022-10-03"},{"lineNumber":225,"author":{"gitId":"shenyih0ng"},"content":"        this.lessonType \u003d lessonType;","lastModifiedDate":"2022-10-03"},{"lineNumber":226,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":227,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":228,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":229,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":230,"author":{"gitId":"shenyih0ng"},"content":"     * Get lessonType","lastModifiedDate":"2022-10-03"},{"lineNumber":231,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":232,"author":{"gitId":"shenyih0ng"},"content":"     * @return lessonType","lastModifiedDate":"2022-10-03"},{"lineNumber":233,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":234,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":235,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"Tutorial\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":236,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_LESSON_TYPE)","lastModifiedDate":"2022-10-03"},{"lineNumber":237,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":238,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":239,"author":{"gitId":"shenyih0ng"},"content":"    public String getLessonType() {","lastModifiedDate":"2022-10-03"},{"lineNumber":240,"author":{"gitId":"shenyih0ng"},"content":"        return lessonType;","lastModifiedDate":"2022-10-03"},{"lineNumber":241,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":242,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":243,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":244,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_LESSON_TYPE)","lastModifiedDate":"2022-10-03"},{"lineNumber":245,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":246,"author":{"gitId":"shenyih0ng"},"content":"    public void setLessonType(String lessonType) {","lastModifiedDate":"2022-10-03"},{"lineNumber":247,"author":{"gitId":"shenyih0ng"},"content":"        this.lessonType \u003d lessonType;","lastModifiedDate":"2022-10-03"},{"lineNumber":248,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":249,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":250,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":251,"author":{"gitId":"shenyih0ng"},"content":"    public Lesson size(BigDecimal size) {","lastModifiedDate":"2022-10-03"},{"lineNumber":252,"author":{"gitId":"shenyih0ng"},"content":"        this.size \u003d size;","lastModifiedDate":"2022-10-03"},{"lineNumber":253,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":254,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":255,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":256,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":257,"author":{"gitId":"shenyih0ng"},"content":"     * Get size","lastModifiedDate":"2022-10-03"},{"lineNumber":258,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":259,"author":{"gitId":"shenyih0ng"},"content":"     * @return size","lastModifiedDate":"2022-10-03"},{"lineNumber":260,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":261,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nullable","lastModifiedDate":"2022-10-03"},{"lineNumber":262,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"30\", value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":263,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_SIZE)","lastModifiedDate":"2022-10-03"},{"lineNumber":264,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":265,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":266,"author":{"gitId":"shenyih0ng"},"content":"    public BigDecimal getSize() {","lastModifiedDate":"2022-10-03"},{"lineNumber":267,"author":{"gitId":"shenyih0ng"},"content":"        return size;","lastModifiedDate":"2022-10-03"},{"lineNumber":268,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":269,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":270,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":271,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_SIZE)","lastModifiedDate":"2022-10-03"},{"lineNumber":272,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":273,"author":{"gitId":"shenyih0ng"},"content":"    public void setSize(BigDecimal size) {","lastModifiedDate":"2022-10-03"},{"lineNumber":274,"author":{"gitId":"shenyih0ng"},"content":"        this.size \u003d size;","lastModifiedDate":"2022-10-03"},{"lineNumber":275,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":276,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":277,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":278,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":279,"author":{"gitId":"shenyih0ng"},"content":"     * Return true if this Lesson object is equal to o.","lastModifiedDate":"2022-10-03"},{"lineNumber":280,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":281,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":282,"author":{"gitId":"shenyih0ng"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":283,"author":{"gitId":"shenyih0ng"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":284,"author":{"gitId":"shenyih0ng"},"content":"            return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":285,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":286,"author":{"gitId":"shenyih0ng"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":287,"author":{"gitId":"shenyih0ng"},"content":"            return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":288,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":289,"author":{"gitId":"shenyih0ng"},"content":"        Lesson lesson \u003d (Lesson) o;","lastModifiedDate":"2022-10-03"},{"lineNumber":290,"author":{"gitId":"shenyih0ng"},"content":"        return Objects.equals(this.classNo, lesson.classNo) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":291,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.startTime, lesson.startTime) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":292,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.endTime, lesson.endTime) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":293,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.weeks, lesson.weeks) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":294,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.venue, lesson.venue) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":295,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.day, lesson.day) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":296,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.lessonType, lesson.lessonType) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":297,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.size, lesson.size);","lastModifiedDate":"2022-10-03"},{"lineNumber":298,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":299,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":300,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":301,"author":{"gitId":"shenyih0ng"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":302,"author":{"gitId":"shenyih0ng"},"content":"        return Objects.hash(classNo, startTime, endTime, weeks, venue, day, lessonType, size);","lastModifiedDate":"2022-10-03"},{"lineNumber":303,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":304,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":305,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":306,"author":{"gitId":"shenyih0ng"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":307,"author":{"gitId":"shenyih0ng"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-03"},{"lineNumber":308,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"class Lesson {\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":309,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    classNo: \").append(toIndentedString(classNo)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":310,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    startTime: \").append(toIndentedString(startTime)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":311,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    endTime: \").append(toIndentedString(endTime)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":312,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    weeks: \").append(toIndentedString(weeks)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":313,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    venue: \").append(toIndentedString(venue)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":314,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    day: \").append(toIndentedString(day)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":315,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    lessonType: \").append(toIndentedString(lessonType)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":316,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    size: \").append(toIndentedString(size)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":317,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"}\");","lastModifiedDate":"2022-10-03"},{"lineNumber":318,"author":{"gitId":"shenyih0ng"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-03"},{"lineNumber":319,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":320,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":321,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":322,"author":{"gitId":"shenyih0ng"},"content":"     * Convert the given object to string with each line indented by 4 spaces (except the first line).","lastModifiedDate":"2022-10-07"},{"lineNumber":323,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":324,"author":{"gitId":"shenyih0ng"},"content":"    private String toIndentedString(Object o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":325,"author":{"gitId":"shenyih0ng"},"content":"        if (o \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":326,"author":{"gitId":"shenyih0ng"},"content":"            return \"null\";","lastModifiedDate":"2022-10-03"},{"lineNumber":327,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":328,"author":{"gitId":"shenyih0ng"},"content":"        return o.toString().replace(\"\\n\", \"\\n    \");","lastModifiedDate":"2022-10-03"},{"lineNumber":329,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":330,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":331,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"},{"lineNumber":332,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"shenyih0ng":332}},{"path":"src/main/java/org/openapitools/client/model/LessonWeeks.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"/*","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API contains data used to render \u003chttps://nusmods.com\u003e. It includes data on modules offered by NUS and their timetables, as well as information on the locations the classes take place in. You are welcome to use and experiment with the data, which is extracted from official APIs provided by the Registrar\u0027s Office.  The API consists of static JSON files scraped daily from the school\u0027s APIs. This means it only partially follow REST conventions, and all resources are read only. All successful responses will return JSON, and all endpoints end in `.json`.  The shape of the data returned by these endpoints are designed for NUSMods in mind. If you have any questions or find that you need the data in other shapes for other purposes, feel free to reach out to us:  - **Telegram**: \u003chttps://telegram.me/nusmods\u003e - **Mailing list**: \u003cnusmods@googlegroups.com\u003e (for security related issues please email \u003cmods@nusmods.com\u003e instead)  ## Fetching data  Any HTTP client can be used to fetch data from the API. HTTPS is preferred, but the server will also respond to HTTP requests. The server supports HTTP 1.1 as well as HTTP 2 over HTTPS, and supports gzip compression.  The API has no authentication, and is not rate limited. While the server can respond to a large number of requests simultaneously, we request that you be polite with resource usage so as not to disrupt nusmods.com, which relies on the same API server. In general there is no need to fetch data from the API more than once per day, as that is the frequency at which we update the data.  [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) headers are enabled on all endpoints, so client-side JavaScript can use also use the API.  ## TypeScript types  Since the NUSMods is written in TypeScript, typings are available in the source for the scraper. These may be easier to read than the documentation generated by Swagger.  - Module types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/modules.ts\u003e - Venue types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/venues.ts\u003e  ## Data  Below are some notes about the data returned from the API. Feel free to talk to us or create an issue if any of it is not clear.  ### Module data  Module endpoints return information on modules offered by NUS. Most of the module data is self-explanatory, but some of the data are more complex and is explained here.  #### Lessons  Each lesson in a timetable has a lesson type `lessonType` and class number `ClassNo`. Every student must take one of each lesson type offered by the module. For example, this module offers two tutorials and one lecture. That means the student must attend the lecture, and can choose one of the two tutorials to attend.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"01\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1100\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"COM1-0207\\\"     },     {       \\\"classNo\\\": \\\"02\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Friday\\\",       \\\"startTime\\\": \\\"0900\\\",       \\\"endTime\\\": \\\"1000\\\",       \\\"venue\\\": \\\"COM1-0209\\\"     }   ] } ```  Each lesson has a `classNo` key. There can be multiple lessons of the same type and class number, in which case students must attend both. In this example, students can choose to attend either lecture group 1 on Tuesdays and Wednesdays, or lecture group 2 on Mondays and Wednesdays.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1400\\\",       \\\"endTime\\\": \\\"1500\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Monday\\\",       \\\"startTime\\\": \\\"1000\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1500\\\",       \\\"endTime\\\": \\\"1600\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     }   ] } ```  #### Lesson Weeks  The `weeks` key on lessons can return data in one of two forms.  Weeks is usually a sorted array of numbers. In this case it represents the school weeks the lesson occurs on, from 1 to 13.  Some classes have lessons outside of the school timetable. In this case a `WeekRange` object is returned. The object will always contain a `start` and `end` key representing the start and end date of lessons. The example below has classes every week from 17th Jan to 18th April.  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-04-18\\\" } ```  Optionally it can also include `weekInterval`, a positive integer describing the number of weeks between each lesson, and `weeks`, an array of positive integers describing the weeks on which the lesson will fall, with week 1 being the starting date. If these are not present you can assume lessons will occur every week.  The following example has lessons on 17th Jan (week 1), 24th Jan (week 2), 7th Feb (week 4) and 21st Feb (week 6).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-21\\\",   \\\"weeks\\\": [1, 2, 4, 6] } ```  The following example has lessons on 17th Jan (week 1), 31st Jan (week 3), 14th Feb (week 5) and 28th Feb (week 7).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-28\\\",   \\\"weekInterval\\\": 2 } ```  #### Workload  The `workload` key can return data in one of two forms.  Workload is usually a **5-tuple of numbers**, describing the estimated number of hours per week the student is expected to put in for the module for **lectures, tutorials, laboratory, projects/fieldwork, and preparatory work** respectively. For example, a workload of `[2, 1, 1, 3, 3]` means the student should spend every week  - 2 hours in lectures - 1 hour in tutorials - 1 hour at the lab - 3 hours doing project work - 3 hours preparing for classes  Each module credit represents 2.5 hours of work each week, so the standard 4 MC module represents 10 hours of work each week. Module credit may not be integers.  Note that this is only an estimate, and may be outdated or differ significantly in reality. Some modules also incorrectly lists the **total** workload hours instead of weekly, so very large values may show up.  This value is parsed from a string provided by the school, and occasionally this field will contain unusual values which cannot be parsed. In this case this field will contain the original **string** instead, which should be displayed as-is to the user.  #### Prerequisite, corequisite and preclusions  These three keys determine whether a student can take a module.  **Prerequisites** are requirements you have to meet before you can take a module. These are usually in the form of other modules (see prerequisite tree below for a machine readable format), but can also be things like \u0027taken A-level H2 math\u0027 or \u002770 MCs and above\u0027.  **Preclusions** refer to modules or requirements that cannot be taken if this module is taken, and vice versa. These are usually modules whose content overlaps significantly with this module, and can usually be used to replace each other to fulfill prerequisites.  **Corequisites** are modules that must be taken together with this module in the same semester. This usually refer to twined modules - modules which have linked syllabuses.  #### Prerequisite Tree  The `prereqTree` key is return on the individual module endpoint (`/modules/{moduleCode`). Not all modules have prerequisites, and some have prerequisites that cannot be properly represented as a tree, in which case this key will not appear.  This describes the prerequisites that need to be fulfilled before this module can be taken. The data structure is recursive and represents a tree.  ```json {   \\\"and\\\": [     \\\"CS1231\\\",     {       \\\"or\\\": [\\\"CS1010S\\\", \\\"CS1010X\\\"]     }   ] } ```  In the example, this module requires CS1231 and either CS1010S or CS1010X. This can be visualized as  ```            ┌ CS1231 ── all of ─┤            │         ┌ CS1010            └ one of ─┤                      └ CS1010X ```  The module information also contains the inverse of this, that is, modules whose requirements are fulfilled by this module (taking this module will allow you to take these modules in the following semester). The data is found on the `fulfillRequirements` key as an array of module codes.  ### Venue data  Venue data is simply the module timetable restructured to show the lessons happening at each classroom.  The venue list endpoint returns a list of all locations that are used in the semester. Note that this is not a comprehensive list of locations, but rather just a list of venues that appears in module lessons.  The venue information endpoint returns the full class and occupancy information about a venue. The `classes` key contains a list of lessons similar to the `timetable` key in module data, but without a `venue` key and with `moduleCode`.","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":" * The version of the OpenAPI document: 2.0.0","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":" * Contact: nusmods@googlegroups.com","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":" * https://openapi-generator.tech","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":" * Do not edit the class manually.","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"package org.openapitools.client.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"import java.util.List;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"import org.openapitools.client.JSON;","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.core.JsonGenerator;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.core.JsonParser;","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.core.JsonToken;","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.JsonMappingException;","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.JsonNode;","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.MapperFeature;","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.SerializerProvider;","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.annotation.JsonDeserialize;","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.annotation.JsonSerialize;","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.deser.std.StdDeserializer;","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.ser.std.StdSerializer;","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"@javax.annotation.processing.Generated(value \u003d \"org.openapitools.codegen.languages.JavaClientCodegen\", date \u003d \"2022-10-03T22:22:26.802458+08:00[Asia/Singapore]\")","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"@JsonDeserialize(using \u003d LessonWeeks.LessonWeeksDeserializer.class)","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"@JsonSerialize(using \u003d LessonWeeks.LessonWeeksSerializer.class)","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"public class LessonWeeks extends AbstractOpenApiSchema {","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"    // store a list of schema names defined in oneOf","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"    public static final Map\u003cString, Class\u003c?\u003e\u003e schemas \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"    private static final Logger log \u003d Logger.getLogger(LessonWeeks.class.getName());","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"    static {","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"        schemas.put(\"List\u003cBigDecimal\u003e\", List.class);","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"        schemas.put(\"WeekRange\", WeekRange.class);","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"        JSON.registerDescendants(LessonWeeks.class, Collections.unmodifiableMap(schemas));","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"    public LessonWeeks() {","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"        super(\"oneOf\", Boolean.FALSE);","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"    public LessonWeeks(List\u003cBigDecimal\u003e o) {","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"        super(\"oneOf\", Boolean.FALSE);","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"        setActualInstance(o);","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"    public LessonWeeks(WeekRange o) {","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"        super(\"oneOf\", Boolean.FALSE);","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"        setActualInstance(o);","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"shenyih0ng"},"content":"    public Map\u003cString, Class\u003c?\u003e\u003e getSchemas() {","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"shenyih0ng"},"content":"        return LessonWeeks.schemas;","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"shenyih0ng"},"content":"     * Get the actual instance, which can be the following: List\u003cBigDecimal\u003e, WeekRange","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"shenyih0ng"},"content":"     * @return The actual instance (List\u003cBigDecimal\u003e, WeekRange)","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"shenyih0ng"},"content":"    public Object getActualInstance() {","lastModifiedDate":"2022-10-07"},{"lineNumber":82,"author":{"gitId":"shenyih0ng"},"content":"        return super.getActualInstance();","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":84,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":85,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":86,"author":{"gitId":"shenyih0ng"},"content":"     * Set the instance that matches the oneOf child schema, check the instance parameter is valid against the oneOf","lastModifiedDate":"2022-10-07"},{"lineNumber":87,"author":{"gitId":"shenyih0ng"},"content":"     * child schemas: List\u003cBigDecimal\u003e, WeekRange","lastModifiedDate":"2022-10-07"},{"lineNumber":88,"author":{"gitId":"shenyih0ng"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":89,"author":{"gitId":"shenyih0ng"},"content":"     * It could be an instance of the \u0027oneOf\u0027 schemas. The oneOf child schemas may themselves be a composed schema","lastModifiedDate":"2022-10-07"},{"lineNumber":90,"author":{"gitId":"shenyih0ng"},"content":"     * (allOf, anyOf, oneOf).","lastModifiedDate":"2022-10-07"},{"lineNumber":91,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":92,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":93,"author":{"gitId":"shenyih0ng"},"content":"    public void setActualInstance(Object instance) {","lastModifiedDate":"2022-10-07"},{"lineNumber":94,"author":{"gitId":"shenyih0ng"},"content":"        if (JSON.isInstanceOf(List.class, instance, new HashSet\u003cClass\u003c?\u003e\u003e())) {","lastModifiedDate":"2022-10-07"},{"lineNumber":95,"author":{"gitId":"shenyih0ng"},"content":"            super.setActualInstance(instance);","lastModifiedDate":"2022-10-07"},{"lineNumber":96,"author":{"gitId":"shenyih0ng"},"content":"            return;","lastModifiedDate":"2022-10-07"},{"lineNumber":97,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":98,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"shenyih0ng"},"content":"        if (JSON.isInstanceOf(WeekRange.class, instance, new HashSet\u003cClass\u003c?\u003e\u003e())) {","lastModifiedDate":"2022-10-07"},{"lineNumber":100,"author":{"gitId":"shenyih0ng"},"content":"            super.setActualInstance(instance);","lastModifiedDate":"2022-10-07"},{"lineNumber":101,"author":{"gitId":"shenyih0ng"},"content":"            return;","lastModifiedDate":"2022-10-07"},{"lineNumber":102,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":103,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":104,"author":{"gitId":"shenyih0ng"},"content":"        throw new RuntimeException(\"Invalid instance type. Must be List\u003cBigDecimal\u003e, WeekRange\");","lastModifiedDate":"2022-10-07"},{"lineNumber":105,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":106,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":107,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":108,"author":{"gitId":"shenyih0ng"},"content":"     * Get the actual instance of `List\u003cBigDecimal\u003e`. If the actual instance is not `List\u003cBigDecimal\u003e`, the","lastModifiedDate":"2022-10-07"},{"lineNumber":109,"author":{"gitId":"shenyih0ng"},"content":"     * ClassCastException will be thrown.","lastModifiedDate":"2022-10-07"},{"lineNumber":110,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":111,"author":{"gitId":"shenyih0ng"},"content":"     * @return The actual instance of `List\u003cBigDecimal\u003e`","lastModifiedDate":"2022-10-07"},{"lineNumber":112,"author":{"gitId":"shenyih0ng"},"content":"     * @throws ClassCastException if the instance is not `List\u003cBigDecimal\u003e`","lastModifiedDate":"2022-10-07"},{"lineNumber":113,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":114,"author":{"gitId":"shenyih0ng"},"content":"    public List\u003cBigDecimal\u003e getList() throws ClassCastException {","lastModifiedDate":"2022-10-07"},{"lineNumber":115,"author":{"gitId":"shenyih0ng"},"content":"        return (List\u003cBigDecimal\u003e) super.getActualInstance();","lastModifiedDate":"2022-10-07"},{"lineNumber":116,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":117,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":118,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":119,"author":{"gitId":"shenyih0ng"},"content":"     * Get the actual instance of `WeekRange`. If the actual instance is not `WeekRange`, the ClassCastException will be","lastModifiedDate":"2022-10-07"},{"lineNumber":120,"author":{"gitId":"shenyih0ng"},"content":"     * thrown.","lastModifiedDate":"2022-10-07"},{"lineNumber":121,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":122,"author":{"gitId":"shenyih0ng"},"content":"     * @return The actual instance of `WeekRange`","lastModifiedDate":"2022-10-07"},{"lineNumber":123,"author":{"gitId":"shenyih0ng"},"content":"     * @throws ClassCastException if the instance is not `WeekRange`","lastModifiedDate":"2022-10-07"},{"lineNumber":124,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":125,"author":{"gitId":"shenyih0ng"},"content":"    public WeekRange getWeekRange() throws ClassCastException {","lastModifiedDate":"2022-10-07"},{"lineNumber":126,"author":{"gitId":"shenyih0ng"},"content":"        return (WeekRange) super.getActualInstance();","lastModifiedDate":"2022-10-07"},{"lineNumber":127,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":128,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":129,"author":{"gitId":"shenyih0ng"},"content":"    public static class LessonWeeksSerializer extends StdSerializer\u003cLessonWeeks\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":131,"author":{"gitId":"shenyih0ng"},"content":"        public LessonWeeksSerializer(Class\u003cLessonWeeks\u003e t) {","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"shenyih0ng"},"content":"            super(t);","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"shenyih0ng"},"content":"        public LessonWeeksSerializer() {","lastModifiedDate":"2022-10-03"},{"lineNumber":136,"author":{"gitId":"shenyih0ng"},"content":"            this(null);","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":138,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":139,"author":{"gitId":"shenyih0ng"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":140,"author":{"gitId":"shenyih0ng"},"content":"        public void serialize(LessonWeeks value, JsonGenerator jgen, SerializerProvider provider)","lastModifiedDate":"2022-10-07"},{"lineNumber":141,"author":{"gitId":"shenyih0ng"},"content":"            throws IOException, JsonProcessingException {","lastModifiedDate":"2022-10-07"},{"lineNumber":142,"author":{"gitId":"shenyih0ng"},"content":"            jgen.writeObject(value.getActualInstance());","lastModifiedDate":"2022-10-03"},{"lineNumber":143,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":144,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":145,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":146,"author":{"gitId":"shenyih0ng"},"content":"    public static class LessonWeeksDeserializer extends StdDeserializer\u003cLessonWeeks\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":147,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":148,"author":{"gitId":"shenyih0ng"},"content":"        public LessonWeeksDeserializer() {","lastModifiedDate":"2022-10-03"},{"lineNumber":149,"author":{"gitId":"shenyih0ng"},"content":"            this(LessonWeeks.class);","lastModifiedDate":"2022-10-03"},{"lineNumber":150,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":151,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":152,"author":{"gitId":"shenyih0ng"},"content":"        public LessonWeeksDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2022-10-03"},{"lineNumber":153,"author":{"gitId":"shenyih0ng"},"content":"            super(vc);","lastModifiedDate":"2022-10-03"},{"lineNumber":154,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":155,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":156,"author":{"gitId":"shenyih0ng"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":157,"author":{"gitId":"shenyih0ng"},"content":"        public LessonWeeks deserialize(JsonParser jp, DeserializationContext ctxt)","lastModifiedDate":"2022-10-07"},{"lineNumber":158,"author":{"gitId":"shenyih0ng"},"content":"            throws IOException, JsonProcessingException {","lastModifiedDate":"2022-10-07"},{"lineNumber":159,"author":{"gitId":"shenyih0ng"},"content":"            JsonNode tree \u003d jp.readValueAsTree();","lastModifiedDate":"2022-10-03"},{"lineNumber":160,"author":{"gitId":"shenyih0ng"},"content":"            Object deserialized \u003d null;","lastModifiedDate":"2022-10-03"},{"lineNumber":161,"author":{"gitId":"shenyih0ng"},"content":"            boolean typeCoercion \u003d ctxt.isEnabled(MapperFeature.ALLOW_COERCION_OF_SCALARS);","lastModifiedDate":"2022-10-03"},{"lineNumber":162,"author":{"gitId":"shenyih0ng"},"content":"            int match \u003d 0;","lastModifiedDate":"2022-10-03"},{"lineNumber":163,"author":{"gitId":"shenyih0ng"},"content":"            JsonToken token \u003d tree.traverse(jp.getCodec()).nextToken();","lastModifiedDate":"2022-10-03"},{"lineNumber":164,"author":{"gitId":"shenyih0ng"},"content":"            // deserialize List\u003cBigDecimal\u003e","lastModifiedDate":"2022-10-03"},{"lineNumber":165,"author":{"gitId":"shenyih0ng"},"content":"            try {","lastModifiedDate":"2022-10-03"},{"lineNumber":166,"author":{"gitId":"shenyih0ng"},"content":"                boolean attemptParsing \u003d true;","lastModifiedDate":"2022-10-03"},{"lineNumber":167,"author":{"gitId":"shenyih0ng"},"content":"                if (attemptParsing) {","lastModifiedDate":"2022-10-03"},{"lineNumber":168,"author":{"gitId":"shenyih0ng"},"content":"                    deserialized \u003d tree.traverse(jp.getCodec()).readValueAs(List.class);","lastModifiedDate":"2022-10-03"},{"lineNumber":169,"author":{"gitId":"shenyih0ng"},"content":"                    match++;","lastModifiedDate":"2022-10-03"},{"lineNumber":170,"author":{"gitId":"shenyih0ng"},"content":"                    log.log(Level.FINER, \"Input data matches schema \u0027List\u003cBigDecimal\u003e\u0027\");","lastModifiedDate":"2022-10-03"},{"lineNumber":171,"author":{"gitId":"shenyih0ng"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":172,"author":{"gitId":"shenyih0ng"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-10-03"},{"lineNumber":173,"author":{"gitId":"shenyih0ng"},"content":"                // deserialization failed, continue","lastModifiedDate":"2022-10-03"},{"lineNumber":174,"author":{"gitId":"shenyih0ng"},"content":"                log.log(Level.FINER, \"Input data does not match schema \u0027List\u003cBigDecimal\u003e\u0027\", e);","lastModifiedDate":"2022-10-03"},{"lineNumber":175,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":176,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":177,"author":{"gitId":"shenyih0ng"},"content":"            // deserialize WeekRange","lastModifiedDate":"2022-10-03"},{"lineNumber":178,"author":{"gitId":"shenyih0ng"},"content":"            try {","lastModifiedDate":"2022-10-03"},{"lineNumber":179,"author":{"gitId":"shenyih0ng"},"content":"                boolean attemptParsing \u003d true;","lastModifiedDate":"2022-10-03"},{"lineNumber":180,"author":{"gitId":"shenyih0ng"},"content":"                // ensure that we respect type coercion as set on the client ObjectMapper","lastModifiedDate":"2022-10-03"},{"lineNumber":181,"author":{"gitId":"shenyih0ng"},"content":"                if (WeekRange.class.equals(Integer.class) || WeekRange.class.equals(Long.class)","lastModifiedDate":"2022-10-07"},{"lineNumber":182,"author":{"gitId":"shenyih0ng"},"content":"                    || WeekRange.class.equals(Float.class) || WeekRange.class.equals(Double.class)","lastModifiedDate":"2022-10-07"},{"lineNumber":183,"author":{"gitId":"shenyih0ng"},"content":"                    || WeekRange.class.equals(Boolean.class) || WeekRange.class.equals(String.class)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":184,"author":{"gitId":"shenyih0ng"},"content":"                    attemptParsing \u003d typeCoercion;","lastModifiedDate":"2022-10-03"},{"lineNumber":185,"author":{"gitId":"shenyih0ng"},"content":"                    if (!attemptParsing) {","lastModifiedDate":"2022-10-03"},{"lineNumber":186,"author":{"gitId":"shenyih0ng"},"content":"                        attemptParsing |\u003d ((WeekRange.class.equals(Integer.class) || WeekRange.class.equals(Long.class))","lastModifiedDate":"2022-10-07"},{"lineNumber":187,"author":{"gitId":"shenyih0ng"},"content":"                            \u0026\u0026 token \u003d\u003d JsonToken.VALUE_NUMBER_INT);","lastModifiedDate":"2022-10-07"},{"lineNumber":188,"author":{"gitId":"shenyih0ng"},"content":"                        attemptParsing |\u003d ((WeekRange.class.equals(Float.class) || WeekRange.class.equals(Double.class))","lastModifiedDate":"2022-10-07"},{"lineNumber":189,"author":{"gitId":"shenyih0ng"},"content":"                            \u0026\u0026 token \u003d\u003d JsonToken.VALUE_NUMBER_FLOAT);","lastModifiedDate":"2022-10-07"},{"lineNumber":190,"author":{"gitId":"shenyih0ng"},"content":"                        attemptParsing |\u003d (WeekRange.class.equals(Boolean.class) \u0026\u0026 (token \u003d\u003d JsonToken.VALUE_FALSE","lastModifiedDate":"2022-10-07"},{"lineNumber":191,"author":{"gitId":"shenyih0ng"},"content":"                            || token \u003d\u003d JsonToken.VALUE_TRUE));","lastModifiedDate":"2022-10-07"},{"lineNumber":192,"author":{"gitId":"shenyih0ng"},"content":"                        attemptParsing |\u003d (WeekRange.class.equals(String.class) \u0026\u0026 token \u003d\u003d JsonToken.VALUE_STRING);","lastModifiedDate":"2022-10-03"},{"lineNumber":193,"author":{"gitId":"shenyih0ng"},"content":"                    }","lastModifiedDate":"2022-10-03"},{"lineNumber":194,"author":{"gitId":"shenyih0ng"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":195,"author":{"gitId":"shenyih0ng"},"content":"                if (attemptParsing) {","lastModifiedDate":"2022-10-03"},{"lineNumber":196,"author":{"gitId":"shenyih0ng"},"content":"                    deserialized \u003d tree.traverse(jp.getCodec()).readValueAs(WeekRange.class);","lastModifiedDate":"2022-10-03"},{"lineNumber":197,"author":{"gitId":"shenyih0ng"},"content":"                    // TODO: there is no validation against JSON schema constraints","lastModifiedDate":"2022-10-03"},{"lineNumber":198,"author":{"gitId":"shenyih0ng"},"content":"                    // (min, max, enum, pattern...), this does not perform a strict JSON","lastModifiedDate":"2022-10-03"},{"lineNumber":199,"author":{"gitId":"shenyih0ng"},"content":"                    // validation, which means the \u0027match\u0027 count may be higher than it should be.","lastModifiedDate":"2022-10-03"},{"lineNumber":200,"author":{"gitId":"shenyih0ng"},"content":"                    match++;","lastModifiedDate":"2022-10-03"},{"lineNumber":201,"author":{"gitId":"shenyih0ng"},"content":"                    log.log(Level.FINER, \"Input data matches schema \u0027WeekRange\u0027\");","lastModifiedDate":"2022-10-03"},{"lineNumber":202,"author":{"gitId":"shenyih0ng"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":203,"author":{"gitId":"shenyih0ng"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-10-03"},{"lineNumber":204,"author":{"gitId":"shenyih0ng"},"content":"                // deserialization failed, continue","lastModifiedDate":"2022-10-03"},{"lineNumber":205,"author":{"gitId":"shenyih0ng"},"content":"                log.log(Level.FINER, \"Input data does not match schema \u0027WeekRange\u0027\", e);","lastModifiedDate":"2022-10-03"},{"lineNumber":206,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":207,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":208,"author":{"gitId":"shenyih0ng"},"content":"            if (match \u003d\u003d 1) {","lastModifiedDate":"2022-10-03"},{"lineNumber":209,"author":{"gitId":"shenyih0ng"},"content":"                LessonWeeks ret \u003d new LessonWeeks();","lastModifiedDate":"2022-10-03"},{"lineNumber":210,"author":{"gitId":"shenyih0ng"},"content":"                ret.setActualInstance(deserialized);","lastModifiedDate":"2022-10-03"},{"lineNumber":211,"author":{"gitId":"shenyih0ng"},"content":"                return ret;","lastModifiedDate":"2022-10-03"},{"lineNumber":212,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":213,"author":{"gitId":"shenyih0ng"},"content":"            throw new IOException(","lastModifiedDate":"2022-10-07"},{"lineNumber":214,"author":{"gitId":"shenyih0ng"},"content":"                String.format(\"Failed deserialization for LessonWeeks: %d classes match result, expected 1\", match));","lastModifiedDate":"2022-10-07"},{"lineNumber":215,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":216,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":217,"author":{"gitId":"shenyih0ng"},"content":"        /**","lastModifiedDate":"2022-10-03"},{"lineNumber":218,"author":{"gitId":"shenyih0ng"},"content":"         * Handle deserialization of the \u0027null\u0027 value.","lastModifiedDate":"2022-10-03"},{"lineNumber":219,"author":{"gitId":"shenyih0ng"},"content":"         */","lastModifiedDate":"2022-10-03"},{"lineNumber":220,"author":{"gitId":"shenyih0ng"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":221,"author":{"gitId":"shenyih0ng"},"content":"        public LessonWeeks getNullValue(DeserializationContext ctxt) throws JsonMappingException {","lastModifiedDate":"2022-10-03"},{"lineNumber":222,"author":{"gitId":"shenyih0ng"},"content":"            throw new JsonMappingException(ctxt.getParser(), \"LessonWeeks cannot be null\");","lastModifiedDate":"2022-10-03"},{"lineNumber":223,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":224,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":225,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":226,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"},{"lineNumber":227,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"shenyih0ng":227}},{"path":"src/main/java/org/openapitools/client/model/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"SeekSaveServe"},"content":"package org.openapitools.client.model;","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"SeekSaveServe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"SeekSaveServe"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"SeekSaveServe"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"SeekSaveServe"},"content":"import com.fasterxml.jackson.annotation.JsonInclude;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"SeekSaveServe"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"SeekSaveServe"},"content":"import com.fasterxml.jackson.annotation.JsonPropertyOrder;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"SeekSaveServe"},"content":"import io.swagger.annotations.ApiModelProperty;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"SeekSaveServe"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"SeekSaveServe"},"content":" * Module","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"SeekSaveServe"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"SeekSaveServe"},"content":"@JsonPropertyOrder({","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"SeekSaveServe"},"content":"        Module.JSON_PROPERTY_ACAD_YEAR,","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"SeekSaveServe"},"content":"        Module.JSON_PROPERTY_PRECLUSION,","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"SeekSaveServe"},"content":"        Module.JSON_PROPERTY_DESCRIPTION,","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"SeekSaveServe"},"content":"        Module.JSON_PROPERTY_TITLE,","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"SeekSaveServe"},"content":"        Module.JSON_PROPERTY_DEPARTMENT,","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"SeekSaveServe"},"content":"        Module.JSON_PROPERTY_FACULTY,","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"SeekSaveServe"},"content":"        Module.JSON_PROPERTY_WORKLOAD,","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"SeekSaveServe"},"content":"        Module.JSON_PROPERTY_PREREQUISITE,","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"SeekSaveServe"},"content":"        Module.JSON_PROPERTY_MODULE_CREDIT,","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"SeekSaveServe"},"content":"        Module.JSON_PROPERTY_MODULE_CODE,","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"SeekSaveServe"},"content":"        Module.JSON_PROPERTY_SEMESTER_DATA,","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"SeekSaveServe"},"content":"        Module.JSON_PROPERTY_PREREQ_TREE,","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"SeekSaveServe"},"content":"        Module.JSON_PROPERTY_FULFILL_REQUIREMENTS","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"SeekSaveServe"},"content":"})","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"SeekSaveServe"},"content":"@javax.annotation.processing.Generated(value \u003d \"org.openapitools.codegen.languages.JavaClientCodegen\", date \u003d \"2022-10-03T22:22:26.802458+08:00[Asia/Singapore]\")","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"SeekSaveServe"},"content":"public class Module {","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"SeekSaveServe"},"content":"    public static final String JSON_PROPERTY_ACAD_YEAR \u003d \"acadYear\";","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"SeekSaveServe"},"content":"    public static final String JSON_PROPERTY_PRECLUSION \u003d \"preclusion\";","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"SeekSaveServe"},"content":"    public static final String JSON_PROPERTY_DESCRIPTION \u003d \"description\";","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"SeekSaveServe"},"content":"    public static final String JSON_PROPERTY_TITLE \u003d \"title\";","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"SeekSaveServe"},"content":"    public static final String JSON_PROPERTY_DEPARTMENT \u003d \"department\";","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"SeekSaveServe"},"content":"    public static final String JSON_PROPERTY_FACULTY \u003d \"faculty\";","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"SeekSaveServe"},"content":"    public static final String JSON_PROPERTY_WORKLOAD \u003d \"workload\";","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"SeekSaveServe"},"content":"    public static final String JSON_PROPERTY_PREREQUISITE \u003d \"prerequisite\";","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"SeekSaveServe"},"content":"    public static final String JSON_PROPERTY_MODULE_CREDIT \u003d \"moduleCredit\";","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"SeekSaveServe"},"content":"    public static final String JSON_PROPERTY_MODULE_CODE \u003d \"moduleCode\";","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"SeekSaveServe"},"content":"    public static final String JSON_PROPERTY_SEMESTER_DATA \u003d \"semesterData\";","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"SeekSaveServe"},"content":"    public static final String JSON_PROPERTY_PREREQ_TREE \u003d \"prereqTree\";","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"SeekSaveServe"},"content":"    public static final String JSON_PROPERTY_FULFILL_REQUIREMENTS \u003d \"fulfillRequirements\";","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"SeekSaveServe"},"content":"    private String acadYear;","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"SeekSaveServe"},"content":"    private String preclusion;","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"SeekSaveServe"},"content":"    private String description;","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"SeekSaveServe"},"content":"    private String title;","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"SeekSaveServe"},"content":"    private String department;","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"SeekSaveServe"},"content":"    private String faculty;","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"SeekSaveServe"},"content":"    private Workload workload;","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"SeekSaveServe"},"content":"    private String prerequisite;","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"SeekSaveServe"},"content":"    private String moduleCredit;","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"SeekSaveServe"},"content":"    private String moduleCode;","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"SeekSaveServe"},"content":"    private List\u003cSemesterData\u003e semesterData \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"SeekSaveServe"},"content":"    private PrereqTree prereqTree;","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"SeekSaveServe"},"content":"    private List\u003cString\u003e fulfillRequirements \u003d null;","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"SeekSaveServe"},"content":"    public Module() {","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"SeekSaveServe"},"content":"    public Module acadYear(String acadYear) {","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"SeekSaveServe"},"content":"        this.acadYear \u003d acadYear;","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"SeekSaveServe"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"SeekSaveServe"},"content":"     * Get acadYear","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"SeekSaveServe"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"SeekSaveServe"},"content":"     * @return acadYear","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"SeekSaveServe"},"content":"     **/","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"SeekSaveServe"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"SeekSaveServe"},"content":"    @ApiModelProperty(example \u003d \"2018/2019\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonProperty(JSON_PROPERTY_ACAD_YEAR)","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"SeekSaveServe"},"content":"    public String getAcadYear() {","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"SeekSaveServe"},"content":"        return acadYear;","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonProperty(JSON_PROPERTY_ACAD_YEAR)","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"SeekSaveServe"},"content":"    public void setAcadYear(String acadYear) {","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"SeekSaveServe"},"content":"        this.acadYear \u003d acadYear;","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"SeekSaveServe"},"content":"    public Module preclusion(String preclusion) {","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"SeekSaveServe"},"content":"        this.preclusion \u003d preclusion;","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"SeekSaveServe"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"SeekSaveServe"},"content":"     * Get preclusion","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"SeekSaveServe"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"SeekSaveServe"},"content":"     * @return preclusion","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"SeekSaveServe"},"content":"     **/","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"SeekSaveServe"},"content":"    @javax.annotation.Nullable","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"SeekSaveServe"},"content":"    @ApiModelProperty(example \u003d \"CS1104 or Students from department of ECE\", value \u003d \"\")","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonProperty(JSON_PROPERTY_PRECLUSION)","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"SeekSaveServe"},"content":"    public String getPreclusion() {","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"SeekSaveServe"},"content":"        return preclusion;","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonProperty(JSON_PROPERTY_PRECLUSION)","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"SeekSaveServe"},"content":"    public void setPreclusion(String preclusion) {","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"SeekSaveServe"},"content":"        this.preclusion \u003d preclusion;","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"SeekSaveServe"},"content":"    public Module description(String description) {","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"SeekSaveServe"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"SeekSaveServe"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"SeekSaveServe"},"content":"     * Get description","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"SeekSaveServe"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"SeekSaveServe"},"content":"     * @return description","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"SeekSaveServe"},"content":"     **/","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"SeekSaveServe"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"SeekSaveServe"},"content":"    @ApiModelProperty(example \u003d \"The objective of this module is to familiarise students with the fundamentals of computing devices. Through this module students will understand the basics of data representation, and how the various parts of a computer work, separately and with each other. This allows students to understand the issues in computing devices, and how these issues affect the implementation of solutions. Topics covered include data representation systems, combinational and sequential circuit design techniques, assembly language, processor execution cycles, pipelining, memory hierarchy and input/output systems.\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonProperty(JSON_PROPERTY_DESCRIPTION)","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"SeekSaveServe"},"content":"    public String getDescription() {","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"SeekSaveServe"},"content":"        return description;","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonProperty(JSON_PROPERTY_DESCRIPTION)","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"SeekSaveServe"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"SeekSaveServe"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"SeekSaveServe"},"content":"    public Module title(String title) {","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"SeekSaveServe"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"SeekSaveServe"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"SeekSaveServe"},"content":"     * Get title","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"SeekSaveServe"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"SeekSaveServe"},"content":"     * @return title","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"SeekSaveServe"},"content":"     **/","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"SeekSaveServe"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"SeekSaveServe"},"content":"    @ApiModelProperty(example \u003d \"Computer Organisation\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonProperty(JSON_PROPERTY_TITLE)","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"SeekSaveServe"},"content":"    public String getTitle() {","lastModifiedDate":"2022-10-12"},{"lineNumber":163,"author":{"gitId":"SeekSaveServe"},"content":"        return title;","lastModifiedDate":"2022-10-12"},{"lineNumber":164,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":165,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":166,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":167,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonProperty(JSON_PROPERTY_TITLE)","lastModifiedDate":"2022-10-12"},{"lineNumber":168,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-12"},{"lineNumber":169,"author":{"gitId":"SeekSaveServe"},"content":"    public void setTitle(String title) {","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"SeekSaveServe"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-10-12"},{"lineNumber":171,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":172,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":173,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":174,"author":{"gitId":"SeekSaveServe"},"content":"    public Module department(String department) {","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"SeekSaveServe"},"content":"        this.department \u003d department;","lastModifiedDate":"2022-10-12"},{"lineNumber":176,"author":{"gitId":"SeekSaveServe"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":177,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":178,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":179,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":180,"author":{"gitId":"SeekSaveServe"},"content":"     * Get department","lastModifiedDate":"2022-10-12"},{"lineNumber":181,"author":{"gitId":"SeekSaveServe"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":182,"author":{"gitId":"SeekSaveServe"},"content":"     * @return department","lastModifiedDate":"2022-10-12"},{"lineNumber":183,"author":{"gitId":"SeekSaveServe"},"content":"     **/","lastModifiedDate":"2022-10-12"},{"lineNumber":184,"author":{"gitId":"SeekSaveServe"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-12"},{"lineNumber":185,"author":{"gitId":"SeekSaveServe"},"content":"    @ApiModelProperty(example \u003d \"Computer Science\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-12"},{"lineNumber":186,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonProperty(JSON_PROPERTY_DEPARTMENT)","lastModifiedDate":"2022-10-12"},{"lineNumber":187,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-12"},{"lineNumber":188,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":189,"author":{"gitId":"SeekSaveServe"},"content":"    public String getDepartment() {","lastModifiedDate":"2022-10-12"},{"lineNumber":190,"author":{"gitId":"SeekSaveServe"},"content":"        return department;","lastModifiedDate":"2022-10-12"},{"lineNumber":191,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":192,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":193,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":194,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonProperty(JSON_PROPERTY_DEPARTMENT)","lastModifiedDate":"2022-10-12"},{"lineNumber":195,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-12"},{"lineNumber":196,"author":{"gitId":"SeekSaveServe"},"content":"    public void setDepartment(String department) {","lastModifiedDate":"2022-10-12"},{"lineNumber":197,"author":{"gitId":"SeekSaveServe"},"content":"        this.department \u003d department;","lastModifiedDate":"2022-10-12"},{"lineNumber":198,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":199,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":200,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":201,"author":{"gitId":"SeekSaveServe"},"content":"    public Module faculty(String faculty) {","lastModifiedDate":"2022-10-12"},{"lineNumber":202,"author":{"gitId":"SeekSaveServe"},"content":"        this.faculty \u003d faculty;","lastModifiedDate":"2022-10-12"},{"lineNumber":203,"author":{"gitId":"SeekSaveServe"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":204,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":205,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":206,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":207,"author":{"gitId":"SeekSaveServe"},"content":"     * Get faculty","lastModifiedDate":"2022-10-12"},{"lineNumber":208,"author":{"gitId":"SeekSaveServe"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":209,"author":{"gitId":"SeekSaveServe"},"content":"     * @return faculty","lastModifiedDate":"2022-10-12"},{"lineNumber":210,"author":{"gitId":"SeekSaveServe"},"content":"     **/","lastModifiedDate":"2022-10-12"},{"lineNumber":211,"author":{"gitId":"SeekSaveServe"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-12"},{"lineNumber":212,"author":{"gitId":"SeekSaveServe"},"content":"    @ApiModelProperty(example \u003d \"Computing\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-12"},{"lineNumber":213,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonProperty(JSON_PROPERTY_FACULTY)","lastModifiedDate":"2022-10-12"},{"lineNumber":214,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-12"},{"lineNumber":215,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":216,"author":{"gitId":"SeekSaveServe"},"content":"    public String getFaculty() {","lastModifiedDate":"2022-10-12"},{"lineNumber":217,"author":{"gitId":"SeekSaveServe"},"content":"        return faculty;","lastModifiedDate":"2022-10-12"},{"lineNumber":218,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":219,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":220,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":221,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonProperty(JSON_PROPERTY_FACULTY)","lastModifiedDate":"2022-10-12"},{"lineNumber":222,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-12"},{"lineNumber":223,"author":{"gitId":"SeekSaveServe"},"content":"    public void setFaculty(String faculty) {","lastModifiedDate":"2022-10-12"},{"lineNumber":224,"author":{"gitId":"SeekSaveServe"},"content":"        this.faculty \u003d faculty;","lastModifiedDate":"2022-10-12"},{"lineNumber":225,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":226,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":227,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":228,"author":{"gitId":"SeekSaveServe"},"content":"    public Module workload(Workload workload) {","lastModifiedDate":"2022-10-12"},{"lineNumber":229,"author":{"gitId":"SeekSaveServe"},"content":"        this.workload \u003d workload;","lastModifiedDate":"2022-10-12"},{"lineNumber":230,"author":{"gitId":"SeekSaveServe"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":231,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":232,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":233,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":234,"author":{"gitId":"SeekSaveServe"},"content":"     * Get workload","lastModifiedDate":"2022-10-12"},{"lineNumber":235,"author":{"gitId":"SeekSaveServe"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":236,"author":{"gitId":"SeekSaveServe"},"content":"     * @return workload","lastModifiedDate":"2022-10-12"},{"lineNumber":237,"author":{"gitId":"SeekSaveServe"},"content":"     **/","lastModifiedDate":"2022-10-12"},{"lineNumber":238,"author":{"gitId":"SeekSaveServe"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-12"},{"lineNumber":239,"author":{"gitId":"SeekSaveServe"},"content":"    @ApiModelProperty(required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-12"},{"lineNumber":240,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonProperty(JSON_PROPERTY_WORKLOAD)","lastModifiedDate":"2022-10-12"},{"lineNumber":241,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-12"},{"lineNumber":242,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":243,"author":{"gitId":"SeekSaveServe"},"content":"    public Workload getWorkload() {","lastModifiedDate":"2022-10-12"},{"lineNumber":244,"author":{"gitId":"SeekSaveServe"},"content":"        return workload;","lastModifiedDate":"2022-10-12"},{"lineNumber":245,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":246,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":247,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":248,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonProperty(JSON_PROPERTY_WORKLOAD)","lastModifiedDate":"2022-10-12"},{"lineNumber":249,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-12"},{"lineNumber":250,"author":{"gitId":"SeekSaveServe"},"content":"    public void setWorkload(Workload workload) {","lastModifiedDate":"2022-10-12"},{"lineNumber":251,"author":{"gitId":"SeekSaveServe"},"content":"        this.workload \u003d workload;","lastModifiedDate":"2022-10-12"},{"lineNumber":252,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":253,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":254,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":255,"author":{"gitId":"SeekSaveServe"},"content":"    public Module prerequisite(String prerequisite) {","lastModifiedDate":"2022-10-12"},{"lineNumber":256,"author":{"gitId":"SeekSaveServe"},"content":"        this.prerequisite \u003d prerequisite;","lastModifiedDate":"2022-10-12"},{"lineNumber":257,"author":{"gitId":"SeekSaveServe"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":258,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":259,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":260,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":261,"author":{"gitId":"SeekSaveServe"},"content":"     * Get prerequisite","lastModifiedDate":"2022-10-12"},{"lineNumber":262,"author":{"gitId":"SeekSaveServe"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":263,"author":{"gitId":"SeekSaveServe"},"content":"     * @return prerequisite","lastModifiedDate":"2022-10-12"},{"lineNumber":264,"author":{"gitId":"SeekSaveServe"},"content":"     **/","lastModifiedDate":"2022-10-12"},{"lineNumber":265,"author":{"gitId":"SeekSaveServe"},"content":"    @javax.annotation.Nullable","lastModifiedDate":"2022-10-12"},{"lineNumber":266,"author":{"gitId":"SeekSaveServe"},"content":"    @ApiModelProperty(example \u003d \"CS1010 or its equivalent\", value \u003d \"\")","lastModifiedDate":"2022-10-12"},{"lineNumber":267,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonProperty(JSON_PROPERTY_PREREQUISITE)","lastModifiedDate":"2022-10-12"},{"lineNumber":268,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-12"},{"lineNumber":269,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":270,"author":{"gitId":"SeekSaveServe"},"content":"    public String getPrerequisite() {","lastModifiedDate":"2022-10-12"},{"lineNumber":271,"author":{"gitId":"SeekSaveServe"},"content":"        return prerequisite;","lastModifiedDate":"2022-10-12"},{"lineNumber":272,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":273,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":274,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":275,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonProperty(JSON_PROPERTY_PREREQUISITE)","lastModifiedDate":"2022-10-12"},{"lineNumber":276,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-12"},{"lineNumber":277,"author":{"gitId":"SeekSaveServe"},"content":"    public void setPrerequisite(String prerequisite) {","lastModifiedDate":"2022-10-12"},{"lineNumber":278,"author":{"gitId":"SeekSaveServe"},"content":"        this.prerequisite \u003d prerequisite;","lastModifiedDate":"2022-10-12"},{"lineNumber":279,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":280,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":281,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":282,"author":{"gitId":"SeekSaveServe"},"content":"    public Module moduleCredit(String moduleCredit) {","lastModifiedDate":"2022-10-12"},{"lineNumber":283,"author":{"gitId":"SeekSaveServe"},"content":"        this.moduleCredit \u003d moduleCredit;","lastModifiedDate":"2022-10-12"},{"lineNumber":284,"author":{"gitId":"SeekSaveServe"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":285,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":286,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":287,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":288,"author":{"gitId":"SeekSaveServe"},"content":"     * Get moduleCredit","lastModifiedDate":"2022-10-12"},{"lineNumber":289,"author":{"gitId":"SeekSaveServe"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":290,"author":{"gitId":"SeekSaveServe"},"content":"     * @return moduleCredit","lastModifiedDate":"2022-10-12"},{"lineNumber":291,"author":{"gitId":"SeekSaveServe"},"content":"     **/","lastModifiedDate":"2022-10-12"},{"lineNumber":292,"author":{"gitId":"SeekSaveServe"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-12"},{"lineNumber":293,"author":{"gitId":"SeekSaveServe"},"content":"    @ApiModelProperty(example \u003d \"4\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-12"},{"lineNumber":294,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonProperty(JSON_PROPERTY_MODULE_CREDIT)","lastModifiedDate":"2022-10-12"},{"lineNumber":295,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-12"},{"lineNumber":296,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":297,"author":{"gitId":"SeekSaveServe"},"content":"    public String getModuleCredit() {","lastModifiedDate":"2022-10-12"},{"lineNumber":298,"author":{"gitId":"SeekSaveServe"},"content":"        return moduleCredit;","lastModifiedDate":"2022-10-12"},{"lineNumber":299,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":300,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":301,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":302,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonProperty(JSON_PROPERTY_MODULE_CREDIT)","lastModifiedDate":"2022-10-12"},{"lineNumber":303,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-12"},{"lineNumber":304,"author":{"gitId":"SeekSaveServe"},"content":"    public void setModuleCredit(String moduleCredit) {","lastModifiedDate":"2022-10-12"},{"lineNumber":305,"author":{"gitId":"SeekSaveServe"},"content":"        this.moduleCredit \u003d moduleCredit;","lastModifiedDate":"2022-10-12"},{"lineNumber":306,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":307,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":308,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":309,"author":{"gitId":"SeekSaveServe"},"content":"    public Module moduleCode(String moduleCode) {","lastModifiedDate":"2022-10-12"},{"lineNumber":310,"author":{"gitId":"SeekSaveServe"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-10-12"},{"lineNumber":311,"author":{"gitId":"SeekSaveServe"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":312,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":313,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":314,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":315,"author":{"gitId":"SeekSaveServe"},"content":"     * Get moduleCode","lastModifiedDate":"2022-10-12"},{"lineNumber":316,"author":{"gitId":"SeekSaveServe"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":317,"author":{"gitId":"SeekSaveServe"},"content":"     * @return moduleCode","lastModifiedDate":"2022-10-12"},{"lineNumber":318,"author":{"gitId":"SeekSaveServe"},"content":"     **/","lastModifiedDate":"2022-10-12"},{"lineNumber":319,"author":{"gitId":"SeekSaveServe"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-12"},{"lineNumber":320,"author":{"gitId":"SeekSaveServe"},"content":"    @ApiModelProperty(example \u003d \"CS2100\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-12"},{"lineNumber":321,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonProperty(JSON_PROPERTY_MODULE_CODE)","lastModifiedDate":"2022-10-12"},{"lineNumber":322,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-12"},{"lineNumber":323,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":324,"author":{"gitId":"SeekSaveServe"},"content":"    public String getModuleCode() {","lastModifiedDate":"2022-10-12"},{"lineNumber":325,"author":{"gitId":"SeekSaveServe"},"content":"        return moduleCode;","lastModifiedDate":"2022-10-12"},{"lineNumber":326,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":327,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":328,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":329,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonProperty(JSON_PROPERTY_MODULE_CODE)","lastModifiedDate":"2022-10-12"},{"lineNumber":330,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-12"},{"lineNumber":331,"author":{"gitId":"SeekSaveServe"},"content":"    public void setModuleCode(String moduleCode) {","lastModifiedDate":"2022-10-12"},{"lineNumber":332,"author":{"gitId":"SeekSaveServe"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-10-12"},{"lineNumber":333,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":334,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":335,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":336,"author":{"gitId":"SeekSaveServe"},"content":"    public Module semesterData(List\u003cSemesterData\u003e semesterData) {","lastModifiedDate":"2022-10-12"},{"lineNumber":337,"author":{"gitId":"SeekSaveServe"},"content":"        this.semesterData \u003d semesterData;","lastModifiedDate":"2022-10-12"},{"lineNumber":338,"author":{"gitId":"SeekSaveServe"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":339,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":340,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":341,"author":{"gitId":"SeekSaveServe"},"content":"    public Module addSemesterDataItem(SemesterData semesterDataItem) {","lastModifiedDate":"2022-10-12"},{"lineNumber":342,"author":{"gitId":"SeekSaveServe"},"content":"        this.semesterData.add(semesterDataItem);","lastModifiedDate":"2022-10-12"},{"lineNumber":343,"author":{"gitId":"SeekSaveServe"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":344,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":345,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":346,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":347,"author":{"gitId":"SeekSaveServe"},"content":"     * Get semesterData","lastModifiedDate":"2022-10-12"},{"lineNumber":348,"author":{"gitId":"SeekSaveServe"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":349,"author":{"gitId":"SeekSaveServe"},"content":"     * @return semesterData","lastModifiedDate":"2022-10-12"},{"lineNumber":350,"author":{"gitId":"SeekSaveServe"},"content":"     **/","lastModifiedDate":"2022-10-12"},{"lineNumber":351,"author":{"gitId":"SeekSaveServe"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-12"},{"lineNumber":352,"author":{"gitId":"SeekSaveServe"},"content":"    @ApiModelProperty(required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-12"},{"lineNumber":353,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonProperty(JSON_PROPERTY_SEMESTER_DATA)","lastModifiedDate":"2022-10-12"},{"lineNumber":354,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-12"},{"lineNumber":355,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":356,"author":{"gitId":"SeekSaveServe"},"content":"    public List\u003cSemesterData\u003e getSemesterData() {","lastModifiedDate":"2022-10-12"},{"lineNumber":357,"author":{"gitId":"SeekSaveServe"},"content":"        return semesterData;","lastModifiedDate":"2022-10-12"},{"lineNumber":358,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":359,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":360,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":361,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonProperty(JSON_PROPERTY_SEMESTER_DATA)","lastModifiedDate":"2022-10-12"},{"lineNumber":362,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-12"},{"lineNumber":363,"author":{"gitId":"SeekSaveServe"},"content":"    public void setSemesterData(List\u003cSemesterData\u003e semesterData) {","lastModifiedDate":"2022-10-12"},{"lineNumber":364,"author":{"gitId":"SeekSaveServe"},"content":"        this.semesterData \u003d semesterData;","lastModifiedDate":"2022-10-12"},{"lineNumber":365,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":366,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":367,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":368,"author":{"gitId":"SeekSaveServe"},"content":"    public Module prereqTree(PrereqTree prereqTree) {","lastModifiedDate":"2022-10-12"},{"lineNumber":369,"author":{"gitId":"SeekSaveServe"},"content":"        this.prereqTree \u003d prereqTree;","lastModifiedDate":"2022-10-12"},{"lineNumber":370,"author":{"gitId":"SeekSaveServe"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":371,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":372,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":373,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":374,"author":{"gitId":"SeekSaveServe"},"content":"     * Get prereqTree","lastModifiedDate":"2022-10-12"},{"lineNumber":375,"author":{"gitId":"SeekSaveServe"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":376,"author":{"gitId":"SeekSaveServe"},"content":"     * @return prereqTree","lastModifiedDate":"2022-10-12"},{"lineNumber":377,"author":{"gitId":"SeekSaveServe"},"content":"     **/","lastModifiedDate":"2022-10-12"},{"lineNumber":378,"author":{"gitId":"SeekSaveServe"},"content":"    @javax.annotation.Nullable","lastModifiedDate":"2022-10-12"},{"lineNumber":379,"author":{"gitId":"SeekSaveServe"},"content":"    @ApiModelProperty(value \u003d \"\")","lastModifiedDate":"2022-10-12"},{"lineNumber":380,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonProperty(JSON_PROPERTY_PREREQ_TREE)","lastModifiedDate":"2022-10-12"},{"lineNumber":381,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-12"},{"lineNumber":382,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":383,"author":{"gitId":"SeekSaveServe"},"content":"    public PrereqTree getPrereqTree() {","lastModifiedDate":"2022-10-12"},{"lineNumber":384,"author":{"gitId":"SeekSaveServe"},"content":"        return prereqTree;","lastModifiedDate":"2022-10-12"},{"lineNumber":385,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":386,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":387,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":388,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonProperty(JSON_PROPERTY_PREREQ_TREE)","lastModifiedDate":"2022-10-12"},{"lineNumber":389,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-12"},{"lineNumber":390,"author":{"gitId":"SeekSaveServe"},"content":"    public void setPrereqTree(PrereqTree prereqTree) {","lastModifiedDate":"2022-10-12"},{"lineNumber":391,"author":{"gitId":"SeekSaveServe"},"content":"        this.prereqTree \u003d prereqTree;","lastModifiedDate":"2022-10-12"},{"lineNumber":392,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":393,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":394,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":395,"author":{"gitId":"SeekSaveServe"},"content":"    public Module fulfillRequirements(List\u003cString\u003e fulfillRequirements) {","lastModifiedDate":"2022-10-12"},{"lineNumber":396,"author":{"gitId":"SeekSaveServe"},"content":"        this.fulfillRequirements \u003d fulfillRequirements;","lastModifiedDate":"2022-10-12"},{"lineNumber":397,"author":{"gitId":"SeekSaveServe"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":398,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":399,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":400,"author":{"gitId":"SeekSaveServe"},"content":"    public Module addFulfillRequirementsItem(String fulfillRequirementsItem) {","lastModifiedDate":"2022-10-12"},{"lineNumber":401,"author":{"gitId":"SeekSaveServe"},"content":"        if (this.fulfillRequirements \u003d\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":402,"author":{"gitId":"SeekSaveServe"},"content":"            this.fulfillRequirements \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":403,"author":{"gitId":"SeekSaveServe"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":404,"author":{"gitId":"SeekSaveServe"},"content":"        this.fulfillRequirements.add(fulfillRequirementsItem);","lastModifiedDate":"2022-10-12"},{"lineNumber":405,"author":{"gitId":"SeekSaveServe"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":406,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":407,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":408,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":409,"author":{"gitId":"SeekSaveServe"},"content":"     * Get fulfillRequirements","lastModifiedDate":"2022-10-12"},{"lineNumber":410,"author":{"gitId":"SeekSaveServe"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":411,"author":{"gitId":"SeekSaveServe"},"content":"     * @return fulfillRequirements","lastModifiedDate":"2022-10-12"},{"lineNumber":412,"author":{"gitId":"SeekSaveServe"},"content":"     **/","lastModifiedDate":"2022-10-12"},{"lineNumber":413,"author":{"gitId":"SeekSaveServe"},"content":"    @javax.annotation.Nullable","lastModifiedDate":"2022-10-12"},{"lineNumber":414,"author":{"gitId":"SeekSaveServe"},"content":"    @ApiModelProperty(example \u003d \"[\\\"CS2106\\\",\\\"CS3210\\\"]\", value \u003d \"\")","lastModifiedDate":"2022-10-12"},{"lineNumber":415,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonProperty(JSON_PROPERTY_FULFILL_REQUIREMENTS)","lastModifiedDate":"2022-10-12"},{"lineNumber":416,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-12"},{"lineNumber":417,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":418,"author":{"gitId":"SeekSaveServe"},"content":"    public List\u003cString\u003e getFulfillRequirements() {","lastModifiedDate":"2022-10-12"},{"lineNumber":419,"author":{"gitId":"SeekSaveServe"},"content":"        return fulfillRequirements;","lastModifiedDate":"2022-10-12"},{"lineNumber":420,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":421,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":422,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":423,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonProperty(JSON_PROPERTY_FULFILL_REQUIREMENTS)","lastModifiedDate":"2022-10-12"},{"lineNumber":424,"author":{"gitId":"SeekSaveServe"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-12"},{"lineNumber":425,"author":{"gitId":"SeekSaveServe"},"content":"    public void setFulfillRequirements(List\u003cString\u003e fulfillRequirements) {","lastModifiedDate":"2022-10-12"},{"lineNumber":426,"author":{"gitId":"SeekSaveServe"},"content":"        this.fulfillRequirements \u003d fulfillRequirements;","lastModifiedDate":"2022-10-12"},{"lineNumber":427,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":428,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":429,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":430,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":431,"author":{"gitId":"SeekSaveServe"},"content":"     * Return true if this Module object is equal to o.","lastModifiedDate":"2022-10-12"},{"lineNumber":432,"author":{"gitId":"SeekSaveServe"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":433,"author":{"gitId":"SeekSaveServe"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":434,"author":{"gitId":"SeekSaveServe"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-10-12"},{"lineNumber":435,"author":{"gitId":"SeekSaveServe"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-10-12"},{"lineNumber":436,"author":{"gitId":"SeekSaveServe"},"content":"            return true;","lastModifiedDate":"2022-10-12"},{"lineNumber":437,"author":{"gitId":"SeekSaveServe"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":438,"author":{"gitId":"SeekSaveServe"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":439,"author":{"gitId":"SeekSaveServe"},"content":"            return false;","lastModifiedDate":"2022-10-12"},{"lineNumber":440,"author":{"gitId":"SeekSaveServe"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":441,"author":{"gitId":"SeekSaveServe"},"content":"        Module module \u003d (Module) o;","lastModifiedDate":"2022-10-12"},{"lineNumber":442,"author":{"gitId":"SeekSaveServe"},"content":"        return Objects.equals(this.acadYear, module.acadYear) \u0026\u0026","lastModifiedDate":"2022-10-12"},{"lineNumber":443,"author":{"gitId":"SeekSaveServe"},"content":"                Objects.equals(this.preclusion, module.preclusion) \u0026\u0026","lastModifiedDate":"2022-10-12"},{"lineNumber":444,"author":{"gitId":"SeekSaveServe"},"content":"                Objects.equals(this.description, module.description) \u0026\u0026","lastModifiedDate":"2022-10-12"},{"lineNumber":445,"author":{"gitId":"SeekSaveServe"},"content":"                Objects.equals(this.title, module.title) \u0026\u0026","lastModifiedDate":"2022-10-12"},{"lineNumber":446,"author":{"gitId":"SeekSaveServe"},"content":"                Objects.equals(this.department, module.department) \u0026\u0026","lastModifiedDate":"2022-10-12"},{"lineNumber":447,"author":{"gitId":"SeekSaveServe"},"content":"                Objects.equals(this.faculty, module.faculty) \u0026\u0026","lastModifiedDate":"2022-10-12"},{"lineNumber":448,"author":{"gitId":"SeekSaveServe"},"content":"                Objects.equals(this.workload, module.workload) \u0026\u0026","lastModifiedDate":"2022-10-12"},{"lineNumber":449,"author":{"gitId":"SeekSaveServe"},"content":"                Objects.equals(this.prerequisite, module.prerequisite) \u0026\u0026","lastModifiedDate":"2022-10-12"},{"lineNumber":450,"author":{"gitId":"SeekSaveServe"},"content":"                Objects.equals(this.moduleCredit, module.moduleCredit) \u0026\u0026","lastModifiedDate":"2022-10-12"},{"lineNumber":451,"author":{"gitId":"SeekSaveServe"},"content":"                Objects.equals(this.moduleCode, module.moduleCode) \u0026\u0026","lastModifiedDate":"2022-10-12"},{"lineNumber":452,"author":{"gitId":"SeekSaveServe"},"content":"                Objects.equals(this.semesterData, module.semesterData) \u0026\u0026","lastModifiedDate":"2022-10-12"},{"lineNumber":453,"author":{"gitId":"SeekSaveServe"},"content":"                Objects.equals(this.prereqTree, module.prereqTree) \u0026\u0026","lastModifiedDate":"2022-10-12"},{"lineNumber":454,"author":{"gitId":"SeekSaveServe"},"content":"                Objects.equals(this.fulfillRequirements, module.fulfillRequirements);","lastModifiedDate":"2022-10-12"},{"lineNumber":455,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":456,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":457,"author":{"gitId":"SeekSaveServe"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":458,"author":{"gitId":"SeekSaveServe"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-12"},{"lineNumber":459,"author":{"gitId":"SeekSaveServe"},"content":"        return Objects.hash(acadYear, preclusion, description, title, department, faculty, workload, prerequisite,","lastModifiedDate":"2022-10-12"},{"lineNumber":460,"author":{"gitId":"SeekSaveServe"},"content":"                moduleCredit, moduleCode, semesterData, prereqTree, fulfillRequirements);","lastModifiedDate":"2022-10-12"},{"lineNumber":461,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":462,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":463,"author":{"gitId":"SeekSaveServe"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":464,"author":{"gitId":"SeekSaveServe"},"content":"    public String toString() {","lastModifiedDate":"2022-10-12"},{"lineNumber":465,"author":{"gitId":"SeekSaveServe"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-12"},{"lineNumber":466,"author":{"gitId":"SeekSaveServe"},"content":"        sb.append(\"class Module {\\n\");","lastModifiedDate":"2022-10-12"},{"lineNumber":467,"author":{"gitId":"SeekSaveServe"},"content":"        sb.append(\"    acadYear: \").append(toIndentedString(acadYear)).append(\"\\n\");","lastModifiedDate":"2022-10-12"},{"lineNumber":468,"author":{"gitId":"SeekSaveServe"},"content":"        sb.append(\"    preclusion: \").append(toIndentedString(preclusion)).append(\"\\n\");","lastModifiedDate":"2022-10-12"},{"lineNumber":469,"author":{"gitId":"SeekSaveServe"},"content":"        sb.append(\"    description: \").append(toIndentedString(description)).append(\"\\n\");","lastModifiedDate":"2022-10-12"},{"lineNumber":470,"author":{"gitId":"SeekSaveServe"},"content":"        sb.append(\"    title: \").append(toIndentedString(title)).append(\"\\n\");","lastModifiedDate":"2022-10-12"},{"lineNumber":471,"author":{"gitId":"SeekSaveServe"},"content":"        sb.append(\"    department: \").append(toIndentedString(department)).append(\"\\n\");","lastModifiedDate":"2022-10-12"},{"lineNumber":472,"author":{"gitId":"SeekSaveServe"},"content":"        sb.append(\"    faculty: \").append(toIndentedString(faculty)).append(\"\\n\");","lastModifiedDate":"2022-10-12"},{"lineNumber":473,"author":{"gitId":"SeekSaveServe"},"content":"        sb.append(\"    workload: \").append(toIndentedString(workload)).append(\"\\n\");","lastModifiedDate":"2022-10-12"},{"lineNumber":474,"author":{"gitId":"SeekSaveServe"},"content":"        sb.append(\"    prerequisite: \").append(toIndentedString(prerequisite)).append(\"\\n\");","lastModifiedDate":"2022-10-12"},{"lineNumber":475,"author":{"gitId":"SeekSaveServe"},"content":"        sb.append(\"    moduleCredit: \").append(toIndentedString(moduleCredit)).append(\"\\n\");","lastModifiedDate":"2022-10-12"},{"lineNumber":476,"author":{"gitId":"SeekSaveServe"},"content":"        sb.append(\"    moduleCode: \").append(toIndentedString(moduleCode)).append(\"\\n\");","lastModifiedDate":"2022-10-12"},{"lineNumber":477,"author":{"gitId":"SeekSaveServe"},"content":"        sb.append(\"    semesterData: \").append(toIndentedString(semesterData)).append(\"\\n\");","lastModifiedDate":"2022-10-12"},{"lineNumber":478,"author":{"gitId":"SeekSaveServe"},"content":"        sb.append(\"    prereqTree: \").append(toIndentedString(prereqTree)).append(\"\\n\");","lastModifiedDate":"2022-10-12"},{"lineNumber":479,"author":{"gitId":"SeekSaveServe"},"content":"        sb.append(\"    fulfillRequirements: \").append(toIndentedString(fulfillRequirements)).append(\"\\n\");","lastModifiedDate":"2022-10-12"},{"lineNumber":480,"author":{"gitId":"SeekSaveServe"},"content":"        sb.append(\"}\");","lastModifiedDate":"2022-10-12"},{"lineNumber":481,"author":{"gitId":"SeekSaveServe"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-12"},{"lineNumber":482,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":483,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":484,"author":{"gitId":"SeekSaveServe"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":485,"author":{"gitId":"SeekSaveServe"},"content":"     * Convert the given object to string with each line indented by 4 spaces (except the first line).","lastModifiedDate":"2022-10-12"},{"lineNumber":486,"author":{"gitId":"SeekSaveServe"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":487,"author":{"gitId":"SeekSaveServe"},"content":"    private String toIndentedString(Object o) {","lastModifiedDate":"2022-10-12"},{"lineNumber":488,"author":{"gitId":"SeekSaveServe"},"content":"        if (o \u003d\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":489,"author":{"gitId":"SeekSaveServe"},"content":"            return \"null\";","lastModifiedDate":"2022-10-12"},{"lineNumber":490,"author":{"gitId":"SeekSaveServe"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":491,"author":{"gitId":"SeekSaveServe"},"content":"        return o.toString().replace(\"\\n\", \"\\n    \");","lastModifiedDate":"2022-10-12"},{"lineNumber":492,"author":{"gitId":"SeekSaveServe"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":493,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":494,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"SeekSaveServe":494}},{"path":"src/main/java/org/openapitools/client/model/ModuleCondensed.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"/*","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API contains data used to render \u003chttps://nusmods.com\u003e. It includes data on modules offered by NUS and their timetables, as well as information on the locations the classes take place in. You are welcome to use and experiment with the data, which is extracted from official APIs provided by the Registrar\u0027s Office.  The API consists of static JSON files scraped daily from the school\u0027s APIs. This means it only partially follow REST conventions, and all resources are read only. All successful responses will return JSON, and all endpoints end in `.json`.  The shape of the data returned by these endpoints are designed for NUSMods in mind. If you have any questions or find that you need the data in other shapes for other purposes, feel free to reach out to us:  - **Telegram**: \u003chttps://telegram.me/nusmods\u003e - **Mailing list**: \u003cnusmods@googlegroups.com\u003e (for security related issues please email \u003cmods@nusmods.com\u003e instead)  ## Fetching data  Any HTTP client can be used to fetch data from the API. HTTPS is preferred, but the server will also respond to HTTP requests. The server supports HTTP 1.1 as well as HTTP 2 over HTTPS, and supports gzip compression.  The API has no authentication, and is not rate limited. While the server can respond to a large number of requests simultaneously, we request that you be polite with resource usage so as not to disrupt nusmods.com, which relies on the same API server. In general there is no need to fetch data from the API more than once per day, as that is the frequency at which we update the data.  [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) headers are enabled on all endpoints, so client-side JavaScript can use also use the API.  ## TypeScript types  Since the NUSMods is written in TypeScript, typings are available in the source for the scraper. These may be easier to read than the documentation generated by Swagger.  - Module types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/modules.ts\u003e - Venue types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/venues.ts\u003e  ## Data  Below are some notes about the data returned from the API. Feel free to talk to us or create an issue if any of it is not clear.  ### Module data  Module endpoints return information on modules offered by NUS. Most of the module data is self-explanatory, but some of the data are more complex and is explained here.  #### Lessons  Each lesson in a timetable has a lesson type `lessonType` and class number `ClassNo`. Every student must take one of each lesson type offered by the module. For example, this module offers two tutorials and one lecture. That means the student must attend the lecture, and can choose one of the two tutorials to attend.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"01\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1100\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"COM1-0207\\\"     },     {       \\\"classNo\\\": \\\"02\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Friday\\\",       \\\"startTime\\\": \\\"0900\\\",       \\\"endTime\\\": \\\"1000\\\",       \\\"venue\\\": \\\"COM1-0209\\\"     }   ] } ```  Each lesson has a `classNo` key. There can be multiple lessons of the same type and class number, in which case students must attend both. In this example, students can choose to attend either lecture group 1 on Tuesdays and Wednesdays, or lecture group 2 on Mondays and Wednesdays.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1400\\\",       \\\"endTime\\\": \\\"1500\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Monday\\\",       \\\"startTime\\\": \\\"1000\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1500\\\",       \\\"endTime\\\": \\\"1600\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     }   ] } ```  #### Lesson Weeks  The `weeks` key on lessons can return data in one of two forms.  Weeks is usually a sorted array of numbers. In this case it represents the school weeks the lesson occurs on, from 1 to 13.  Some classes have lessons outside of the school timetable. In this case a `WeekRange` object is returned. The object will always contain a `start` and `end` key representing the start and end date of lessons. The example below has classes every week from 17th Jan to 18th April.  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-04-18\\\" } ```  Optionally it can also include `weekInterval`, a positive integer describing the number of weeks between each lesson, and `weeks`, an array of positive integers describing the weeks on which the lesson will fall, with week 1 being the starting date. If these are not present you can assume lessons will occur every week.  The following example has lessons on 17th Jan (week 1), 24th Jan (week 2), 7th Feb (week 4) and 21st Feb (week 6).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-21\\\",   \\\"weeks\\\": [1, 2, 4, 6] } ```  The following example has lessons on 17th Jan (week 1), 31st Jan (week 3), 14th Feb (week 5) and 28th Feb (week 7).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-28\\\",   \\\"weekInterval\\\": 2 } ```  #### Workload  The `workload` key can return data in one of two forms.  Workload is usually a **5-tuple of numbers**, describing the estimated number of hours per week the student is expected to put in for the module for **lectures, tutorials, laboratory, projects/fieldwork, and preparatory work** respectively. For example, a workload of `[2, 1, 1, 3, 3]` means the student should spend every week  - 2 hours in lectures - 1 hour in tutorials - 1 hour at the lab - 3 hours doing project work - 3 hours preparing for classes  Each module credit represents 2.5 hours of work each week, so the standard 4 MC module represents 10 hours of work each week. Module credit may not be integers.  Note that this is only an estimate, and may be outdated or differ significantly in reality. Some modules also incorrectly lists the **total** workload hours instead of weekly, so very large values may show up.  This value is parsed from a string provided by the school, and occasionally this field will contain unusual values which cannot be parsed. In this case this field will contain the original **string** instead, which should be displayed as-is to the user.  #### Prerequisite, corequisite and preclusions  These three keys determine whether a student can take a module.  **Prerequisites** are requirements you have to meet before you can take a module. These are usually in the form of other modules (see prerequisite tree below for a machine readable format), but can also be things like \u0027taken A-level H2 math\u0027 or \u002770 MCs and above\u0027.  **Preclusions** refer to modules or requirements that cannot be taken if this module is taken, and vice versa. These are usually modules whose content overlaps significantly with this module, and can usually be used to replace each other to fulfill prerequisites.  **Corequisites** are modules that must be taken together with this module in the same semester. This usually refer to twined modules - modules which have linked syllabuses.  #### Prerequisite Tree  The `prereqTree` key is return on the individual module endpoint (`/modules/{moduleCode`). Not all modules have prerequisites, and some have prerequisites that cannot be properly represented as a tree, in which case this key will not appear.  This describes the prerequisites that need to be fulfilled before this module can be taken. The data structure is recursive and represents a tree.  ```json {   \\\"and\\\": [     \\\"CS1231\\\",     {       \\\"or\\\": [\\\"CS1010S\\\", \\\"CS1010X\\\"]     }   ] } ```  In the example, this module requires CS1231 and either CS1010S or CS1010X. This can be visualized as  ```            ┌ CS1231 ── all of ─┤            │         ┌ CS1010            └ one of ─┤                      └ CS1010X ```  The module information also contains the inverse of this, that is, modules whose requirements are fulfilled by this module (taking this module will allow you to take these modules in the following semester). The data is found on the `fulfillRequirements` key as an array of module codes.  ### Venue data  Venue data is simply the module timetable restructured to show the lessons happening at each classroom.  The venue list endpoint returns a list of all locations that are used in the semester. Note that this is not a comprehensive list of locations, but rather just a list of venues that appears in module lessons.  The venue information endpoint returns the full class and occupancy information about a venue. The `classes` key contains a list of lessons similar to the `timetable` key in module data, but without a `venue` key and with `moduleCode`.","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":" * The version of the OpenAPI document: 2.0.0","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":" * Contact: nusmods@googlegroups.com","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":" * https://openapi-generator.tech","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":" * Do not edit the class manually.","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"package org.openapitools.client.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"import java.util.List;","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonInclude;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonPropertyOrder;","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"import io.swagger.annotations.ApiModelProperty;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":" * ModuleCondensed","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"@JsonPropertyOrder({","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"    ModuleCondensed.JSON_PROPERTY_MODULE_CODE,","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"    ModuleCondensed.JSON_PROPERTY_TITLE,","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"    ModuleCondensed.JSON_PROPERTY_SEMESTERS","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"})","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"@javax.annotation.processing.Generated(value \u003d \"org.openapitools.codegen.languages.JavaClientCodegen\", date \u003d \"2022-10-03T22:22:26.802458+08:00[Asia/Singapore]\")","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"public class ModuleCondensed {","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_MODULE_CODE \u003d \"moduleCode\";","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_TITLE \u003d \"title\";","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_SEMESTERS \u003d \"semesters\";","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"    private String moduleCode;","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"    private String title;","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"    private List\u003cSemestersEnum\u003e semesters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleCondensed() {","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleCondensed moduleCode(String moduleCode) {","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"     * Get moduleCode","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"     * @return moduleCode","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"EL1101E\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_MODULE_CODE)","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"    public String getModuleCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"        return moduleCode;","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_MODULE_CODE)","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"shenyih0ng"},"content":"    public void setModuleCode(String moduleCode) {","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"shenyih0ng"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleCondensed title(String title) {","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"shenyih0ng"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"shenyih0ng"},"content":"     * Get title","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":84,"author":{"gitId":"shenyih0ng"},"content":"     * @return title","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"The Nature of Language\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_TITLE)","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"shenyih0ng"},"content":"    public String getTitle() {","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"shenyih0ng"},"content":"        return title;","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_TITLE)","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"shenyih0ng"},"content":"    public void setTitle(String title) {","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"shenyih0ng"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleCondensed semesters(List\u003cSemestersEnum\u003e semesters) {","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"shenyih0ng"},"content":"        this.semesters \u003d semesters;","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleCondensed addSemestersItem(SemestersEnum semestersItem) {","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"shenyih0ng"},"content":"        this.semesters.add(semestersItem);","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"shenyih0ng"},"content":"     * Get semesters","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":114,"author":{"gitId":"shenyih0ng"},"content":"     * @return semesters","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"[1,2]\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_SEMESTERS)","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"shenyih0ng"},"content":"    public List\u003cSemestersEnum\u003e getSemesters() {","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"shenyih0ng"},"content":"        return semesters;","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_SEMESTERS)","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"shenyih0ng"},"content":"    public void setSemesters(List\u003cSemestersEnum\u003e semesters) {","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"shenyih0ng"},"content":"        this.semesters \u003d semesters;","lastModifiedDate":"2022-10-03"},{"lineNumber":129,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"shenyih0ng"},"content":"     * Return true if this ModuleCondensed object is equal to o.","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"shenyih0ng"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":136,"author":{"gitId":"shenyih0ng"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"shenyih0ng"},"content":"            return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":138,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":139,"author":{"gitId":"shenyih0ng"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":140,"author":{"gitId":"shenyih0ng"},"content":"            return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":141,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":142,"author":{"gitId":"shenyih0ng"},"content":"        ModuleCondensed moduleCondensed \u003d (ModuleCondensed) o;","lastModifiedDate":"2022-10-03"},{"lineNumber":143,"author":{"gitId":"shenyih0ng"},"content":"        return Objects.equals(this.moduleCode, moduleCondensed.moduleCode) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":144,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.title, moduleCondensed.title) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":145,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.semesters, moduleCondensed.semesters);","lastModifiedDate":"2022-10-03"},{"lineNumber":146,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":147,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":148,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":149,"author":{"gitId":"shenyih0ng"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":150,"author":{"gitId":"shenyih0ng"},"content":"        return Objects.hash(moduleCode, title, semesters);","lastModifiedDate":"2022-10-03"},{"lineNumber":151,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":152,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":153,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":154,"author":{"gitId":"shenyih0ng"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":155,"author":{"gitId":"shenyih0ng"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-03"},{"lineNumber":156,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"class ModuleCondensed {\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":157,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    moduleCode: \").append(toIndentedString(moduleCode)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":158,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    title: \").append(toIndentedString(title)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":159,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    semesters: \").append(toIndentedString(semesters)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":160,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"}\");","lastModifiedDate":"2022-10-03"},{"lineNumber":161,"author":{"gitId":"shenyih0ng"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-03"},{"lineNumber":162,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":163,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":164,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":165,"author":{"gitId":"shenyih0ng"},"content":"     * Convert the given object to string with each line indented by 4 spaces (except the first line).","lastModifiedDate":"2022-10-07"},{"lineNumber":166,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":167,"author":{"gitId":"shenyih0ng"},"content":"    private String toIndentedString(Object o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":168,"author":{"gitId":"shenyih0ng"},"content":"        if (o \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":169,"author":{"gitId":"shenyih0ng"},"content":"            return \"null\";","lastModifiedDate":"2022-10-03"},{"lineNumber":170,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":171,"author":{"gitId":"shenyih0ng"},"content":"        return o.toString().replace(\"\\n\", \"\\n    \");","lastModifiedDate":"2022-10-03"},{"lineNumber":172,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":173,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":174,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":175,"author":{"gitId":"shenyih0ng"},"content":"     * Gets or Sets semesters","lastModifiedDate":"2022-10-07"},{"lineNumber":176,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":177,"author":{"gitId":"shenyih0ng"},"content":"    public enum SemestersEnum {","lastModifiedDate":"2022-10-07"},{"lineNumber":178,"author":{"gitId":"shenyih0ng"},"content":"        NUMBER_1(new BigDecimal(\"1\")),","lastModifiedDate":"2022-10-07"},{"lineNumber":179,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":180,"author":{"gitId":"shenyih0ng"},"content":"        NUMBER_2(new BigDecimal(\"2\")),","lastModifiedDate":"2022-10-07"},{"lineNumber":181,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":182,"author":{"gitId":"shenyih0ng"},"content":"        NUMBER_3(new BigDecimal(\"3\")),","lastModifiedDate":"2022-10-07"},{"lineNumber":183,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":184,"author":{"gitId":"shenyih0ng"},"content":"        NUMBER_4(new BigDecimal(\"4\"));","lastModifiedDate":"2022-10-07"},{"lineNumber":185,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":186,"author":{"gitId":"shenyih0ng"},"content":"        private BigDecimal value;","lastModifiedDate":"2022-10-07"},{"lineNumber":187,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":188,"author":{"gitId":"shenyih0ng"},"content":"        SemestersEnum(BigDecimal value) {","lastModifiedDate":"2022-10-07"},{"lineNumber":189,"author":{"gitId":"shenyih0ng"},"content":"            this.value \u003d value;","lastModifiedDate":"2022-10-07"},{"lineNumber":190,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":191,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":192,"author":{"gitId":"shenyih0ng"},"content":"        @JsonCreator","lastModifiedDate":"2022-10-07"},{"lineNumber":193,"author":{"gitId":"shenyih0ng"},"content":"        public static SemestersEnum fromValue(BigDecimal value) {","lastModifiedDate":"2022-10-07"},{"lineNumber":194,"author":{"gitId":"shenyih0ng"},"content":"            for (SemestersEnum b : SemestersEnum.values()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":195,"author":{"gitId":"shenyih0ng"},"content":"                if (b.value.equals(value)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":196,"author":{"gitId":"shenyih0ng"},"content":"                    return b;","lastModifiedDate":"2022-10-07"},{"lineNumber":197,"author":{"gitId":"shenyih0ng"},"content":"                }","lastModifiedDate":"2022-10-07"},{"lineNumber":198,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-07"},{"lineNumber":199,"author":{"gitId":"shenyih0ng"},"content":"            throw new IllegalArgumentException(\"Unexpected value \u0027\" + value + \"\u0027\");","lastModifiedDate":"2022-10-07"},{"lineNumber":200,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":201,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":202,"author":{"gitId":"shenyih0ng"},"content":"        @JsonValue","lastModifiedDate":"2022-10-07"},{"lineNumber":203,"author":{"gitId":"shenyih0ng"},"content":"        public BigDecimal getValue() {","lastModifiedDate":"2022-10-07"},{"lineNumber":204,"author":{"gitId":"shenyih0ng"},"content":"            return value;","lastModifiedDate":"2022-10-07"},{"lineNumber":205,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":206,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":207,"author":{"gitId":"shenyih0ng"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":208,"author":{"gitId":"shenyih0ng"},"content":"        public String toString() {","lastModifiedDate":"2022-10-07"},{"lineNumber":209,"author":{"gitId":"shenyih0ng"},"content":"            return String.valueOf(value);","lastModifiedDate":"2022-10-07"},{"lineNumber":210,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":211,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":212,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":213,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"},{"lineNumber":214,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"shenyih0ng":214}},{"path":"src/main/java/org/openapitools/client/model/ModuleInformation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"/*","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API contains data used to render \u003chttps://nusmods.com\u003e. It includes data on modules offered by NUS and their timetables, as well as information on the locations the classes take place in. You are welcome to use and experiment with the data, which is extracted from official APIs provided by the Registrar\u0027s Office.  The API consists of static JSON files scraped daily from the school\u0027s APIs. This means it only partially follow REST conventions, and all resources are read only. All successful responses will return JSON, and all endpoints end in `.json`.  The shape of the data returned by these endpoints are designed for NUSMods in mind. If you have any questions or find that you need the data in other shapes for other purposes, feel free to reach out to us:  - **Telegram**: \u003chttps://telegram.me/nusmods\u003e - **Mailing list**: \u003cnusmods@googlegroups.com\u003e (for security related issues please email \u003cmods@nusmods.com\u003e instead)  ## Fetching data  Any HTTP client can be used to fetch data from the API. HTTPS is preferred, but the server will also respond to HTTP requests. The server supports HTTP 1.1 as well as HTTP 2 over HTTPS, and supports gzip compression.  The API has no authentication, and is not rate limited. While the server can respond to a large number of requests simultaneously, we request that you be polite with resource usage so as not to disrupt nusmods.com, which relies on the same API server. In general there is no need to fetch data from the API more than once per day, as that is the frequency at which we update the data.  [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) headers are enabled on all endpoints, so client-side JavaScript can use also use the API.  ## TypeScript types  Since the NUSMods is written in TypeScript, typings are available in the source for the scraper. These may be easier to read than the documentation generated by Swagger.  - Module types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/modules.ts\u003e - Venue types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/venues.ts\u003e  ## Data  Below are some notes about the data returned from the API. Feel free to talk to us or create an issue if any of it is not clear.  ### Module data  Module endpoints return information on modules offered by NUS. Most of the module data is self-explanatory, but some of the data are more complex and is explained here.  #### Lessons  Each lesson in a timetable has a lesson type `lessonType` and class number `ClassNo`. Every student must take one of each lesson type offered by the module. For example, this module offers two tutorials and one lecture. That means the student must attend the lecture, and can choose one of the two tutorials to attend.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"01\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1100\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"COM1-0207\\\"     },     {       \\\"classNo\\\": \\\"02\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Friday\\\",       \\\"startTime\\\": \\\"0900\\\",       \\\"endTime\\\": \\\"1000\\\",       \\\"venue\\\": \\\"COM1-0209\\\"     }   ] } ```  Each lesson has a `classNo` key. There can be multiple lessons of the same type and class number, in which case students must attend both. In this example, students can choose to attend either lecture group 1 on Tuesdays and Wednesdays, or lecture group 2 on Mondays and Wednesdays.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1400\\\",       \\\"endTime\\\": \\\"1500\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Monday\\\",       \\\"startTime\\\": \\\"1000\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1500\\\",       \\\"endTime\\\": \\\"1600\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     }   ] } ```  #### Lesson Weeks  The `weeks` key on lessons can return data in one of two forms.  Weeks is usually a sorted array of numbers. In this case it represents the school weeks the lesson occurs on, from 1 to 13.  Some classes have lessons outside of the school timetable. In this case a `WeekRange` object is returned. The object will always contain a `start` and `end` key representing the start and end date of lessons. The example below has classes every week from 17th Jan to 18th April.  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-04-18\\\" } ```  Optionally it can also include `weekInterval`, a positive integer describing the number of weeks between each lesson, and `weeks`, an array of positive integers describing the weeks on which the lesson will fall, with week 1 being the starting date. If these are not present you can assume lessons will occur every week.  The following example has lessons on 17th Jan (week 1), 24th Jan (week 2), 7th Feb (week 4) and 21st Feb (week 6).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-21\\\",   \\\"weeks\\\": [1, 2, 4, 6] } ```  The following example has lessons on 17th Jan (week 1), 31st Jan (week 3), 14th Feb (week 5) and 28th Feb (week 7).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-28\\\",   \\\"weekInterval\\\": 2 } ```  #### Workload  The `workload` key can return data in one of two forms.  Workload is usually a **5-tuple of numbers**, describing the estimated number of hours per week the student is expected to put in for the module for **lectures, tutorials, laboratory, projects/fieldwork, and preparatory work** respectively. For example, a workload of `[2, 1, 1, 3, 3]` means the student should spend every week  - 2 hours in lectures - 1 hour in tutorials - 1 hour at the lab - 3 hours doing project work - 3 hours preparing for classes  Each module credit represents 2.5 hours of work each week, so the standard 4 MC module represents 10 hours of work each week. Module credit may not be integers.  Note that this is only an estimate, and may be outdated or differ significantly in reality. Some modules also incorrectly lists the **total** workload hours instead of weekly, so very large values may show up.  This value is parsed from a string provided by the school, and occasionally this field will contain unusual values which cannot be parsed. In this case this field will contain the original **string** instead, which should be displayed as-is to the user.  #### Prerequisite, corequisite and preclusions  These three keys determine whether a student can take a module.  **Prerequisites** are requirements you have to meet before you can take a module. These are usually in the form of other modules (see prerequisite tree below for a machine readable format), but can also be things like \u0027taken A-level H2 math\u0027 or \u002770 MCs and above\u0027.  **Preclusions** refer to modules or requirements that cannot be taken if this module is taken, and vice versa. These are usually modules whose content overlaps significantly with this module, and can usually be used to replace each other to fulfill prerequisites.  **Corequisites** are modules that must be taken together with this module in the same semester. This usually refer to twined modules - modules which have linked syllabuses.  #### Prerequisite Tree  The `prereqTree` key is return on the individual module endpoint (`/modules/{moduleCode`). Not all modules have prerequisites, and some have prerequisites that cannot be properly represented as a tree, in which case this key will not appear.  This describes the prerequisites that need to be fulfilled before this module can be taken. The data structure is recursive and represents a tree.  ```json {   \\\"and\\\": [     \\\"CS1231\\\",     {       \\\"or\\\": [\\\"CS1010S\\\", \\\"CS1010X\\\"]     }   ] } ```  In the example, this module requires CS1231 and either CS1010S or CS1010X. This can be visualized as  ```            ┌ CS1231 ── all of ─┤            │         ┌ CS1010            └ one of ─┤                      └ CS1010X ```  The module information also contains the inverse of this, that is, modules whose requirements are fulfilled by this module (taking this module will allow you to take these modules in the following semester). The data is found on the `fulfillRequirements` key as an array of module codes.  ### Venue data  Venue data is simply the module timetable restructured to show the lessons happening at each classroom.  The venue list endpoint returns a list of all locations that are used in the semester. Note that this is not a comprehensive list of locations, but rather just a list of venues that appears in module lessons.  The venue information endpoint returns the full class and occupancy information about a venue. The `classes` key contains a list of lessons similar to the `timetable` key in module data, but without a `venue` key and with `moduleCode`.","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":" * The version of the OpenAPI document: 2.0.0","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":" * Contact: nusmods@googlegroups.com","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":" * https://openapi-generator.tech","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":" * Do not edit the class manually.","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"package org.openapitools.client.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"import java.util.List;","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonInclude;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonPropertyOrder;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"import io.swagger.annotations.ApiModelProperty;","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":" * ModuleInformation","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"@JsonPropertyOrder({","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"    ModuleInformation.JSON_PROPERTY_MODULE_CODE,","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"    ModuleInformation.JSON_PROPERTY_TITLE,","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"    ModuleInformation.JSON_PROPERTY_DESCRIPTION,","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"    ModuleInformation.JSON_PROPERTY_MODULE_CREDIT,","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"    ModuleInformation.JSON_PROPERTY_DEPARTMENT,","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"    ModuleInformation.JSON_PROPERTY_FACULTY,","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"    ModuleInformation.JSON_PROPERTY_WORKLOAD,","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"    ModuleInformation.JSON_PROPERTY_PREREQUISITE,","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"    ModuleInformation.JSON_PROPERTY_PRECLUSION,","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"    ModuleInformation.JSON_PROPERTY_COREQUISITE,","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"    ModuleInformation.JSON_PROPERTY_SEMESTER_DATA","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"})","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"@javax.annotation.processing.Generated(value \u003d \"org.openapitools.codegen.languages.JavaClientCodegen\", date \u003d \"2022-10-03T22:22:26.802458+08:00[Asia/Singapore]\")","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"public class ModuleInformation {","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_MODULE_CODE \u003d \"moduleCode\";","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_TITLE \u003d \"title\";","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_DESCRIPTION \u003d \"description\";","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_MODULE_CREDIT \u003d \"moduleCredit\";","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_DEPARTMENT \u003d \"department\";","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_FACULTY \u003d \"faculty\";","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_WORKLOAD \u003d \"workload\";","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_PREREQUISITE \u003d \"prerequisite\";","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_PRECLUSION \u003d \"preclusion\";","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_COREQUISITE \u003d \"corequisite\";","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_SEMESTER_DATA \u003d \"semesterData\";","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"    private String moduleCode;","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"    private String title;","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"    private String description;","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"    private String moduleCredit;","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"    private String department;","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"    private String faculty;","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"    private Workload workload;","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"    private String prerequisite;","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"    private String preclusion;","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"    private String corequisite;","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"    private List\u003cModuleInformationSemesterDataInner\u003e semesterData \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleInformation() {","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleInformation moduleCode(String moduleCode) {","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"shenyih0ng"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"shenyih0ng"},"content":"     * Get moduleCode","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"shenyih0ng"},"content":"     * @return moduleCode","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"CS2100\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_MODULE_CODE)","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"shenyih0ng"},"content":"    public String getModuleCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"shenyih0ng"},"content":"        return moduleCode;","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_MODULE_CODE)","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"shenyih0ng"},"content":"    public void setModuleCode(String moduleCode) {","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"shenyih0ng"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleInformation title(String title) {","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"shenyih0ng"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"shenyih0ng"},"content":"     * Get title","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":107,"author":{"gitId":"shenyih0ng"},"content":"     * @return title","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"Computer Organisation\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_TITLE)","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"shenyih0ng"},"content":"    public String getTitle() {","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"shenyih0ng"},"content":"        return title;","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_TITLE)","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"shenyih0ng"},"content":"    public void setTitle(String title) {","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"shenyih0ng"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleInformation description(String description) {","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"shenyih0ng"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":129,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"shenyih0ng"},"content":"     * Get description","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":134,"author":{"gitId":"shenyih0ng"},"content":"     * @return description","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":136,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"The objective of this module is to familiarise students with the fundamentals of computing devices. Through this module students will understand the basics of data representation, and how the various parts of a computer work, separately and with each other. This allows students to understand the issues in computing devices, and how these issues affect the implementation of solutions. Topics covered include data representation systems, combinational and sequential circuit design techniques, assembly language, processor execution cycles, pipelining, memory hierarchy and input/output systems.\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":138,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_DESCRIPTION)","lastModifiedDate":"2022-10-03"},{"lineNumber":139,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":140,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":141,"author":{"gitId":"shenyih0ng"},"content":"    public String getDescription() {","lastModifiedDate":"2022-10-03"},{"lineNumber":142,"author":{"gitId":"shenyih0ng"},"content":"        return description;","lastModifiedDate":"2022-10-03"},{"lineNumber":143,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":144,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":145,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":146,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_DESCRIPTION)","lastModifiedDate":"2022-10-03"},{"lineNumber":147,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":148,"author":{"gitId":"shenyih0ng"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2022-10-03"},{"lineNumber":149,"author":{"gitId":"shenyih0ng"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-03"},{"lineNumber":150,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":151,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":152,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":153,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleInformation moduleCredit(String moduleCredit) {","lastModifiedDate":"2022-10-03"},{"lineNumber":154,"author":{"gitId":"shenyih0ng"},"content":"        this.moduleCredit \u003d moduleCredit;","lastModifiedDate":"2022-10-03"},{"lineNumber":155,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":156,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":157,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":158,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":159,"author":{"gitId":"shenyih0ng"},"content":"     * Get moduleCredit","lastModifiedDate":"2022-10-03"},{"lineNumber":160,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":161,"author":{"gitId":"shenyih0ng"},"content":"     * @return moduleCredit","lastModifiedDate":"2022-10-03"},{"lineNumber":162,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":163,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":164,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"4\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":165,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_MODULE_CREDIT)","lastModifiedDate":"2022-10-03"},{"lineNumber":166,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":167,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":168,"author":{"gitId":"shenyih0ng"},"content":"    public String getModuleCredit() {","lastModifiedDate":"2022-10-03"},{"lineNumber":169,"author":{"gitId":"shenyih0ng"},"content":"        return moduleCredit;","lastModifiedDate":"2022-10-03"},{"lineNumber":170,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":171,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":172,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":173,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_MODULE_CREDIT)","lastModifiedDate":"2022-10-03"},{"lineNumber":174,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":175,"author":{"gitId":"shenyih0ng"},"content":"    public void setModuleCredit(String moduleCredit) {","lastModifiedDate":"2022-10-03"},{"lineNumber":176,"author":{"gitId":"shenyih0ng"},"content":"        this.moduleCredit \u003d moduleCredit;","lastModifiedDate":"2022-10-03"},{"lineNumber":177,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":178,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":179,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":180,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleInformation department(String department) {","lastModifiedDate":"2022-10-03"},{"lineNumber":181,"author":{"gitId":"shenyih0ng"},"content":"        this.department \u003d department;","lastModifiedDate":"2022-10-03"},{"lineNumber":182,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":183,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":184,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":185,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":186,"author":{"gitId":"shenyih0ng"},"content":"     * Get department","lastModifiedDate":"2022-10-03"},{"lineNumber":187,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":188,"author":{"gitId":"shenyih0ng"},"content":"     * @return department","lastModifiedDate":"2022-10-03"},{"lineNumber":189,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":190,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":191,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"Computer Science\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":192,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_DEPARTMENT)","lastModifiedDate":"2022-10-03"},{"lineNumber":193,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":194,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":195,"author":{"gitId":"shenyih0ng"},"content":"    public String getDepartment() {","lastModifiedDate":"2022-10-03"},{"lineNumber":196,"author":{"gitId":"shenyih0ng"},"content":"        return department;","lastModifiedDate":"2022-10-03"},{"lineNumber":197,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":198,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":199,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":200,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_DEPARTMENT)","lastModifiedDate":"2022-10-03"},{"lineNumber":201,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":202,"author":{"gitId":"shenyih0ng"},"content":"    public void setDepartment(String department) {","lastModifiedDate":"2022-10-03"},{"lineNumber":203,"author":{"gitId":"shenyih0ng"},"content":"        this.department \u003d department;","lastModifiedDate":"2022-10-03"},{"lineNumber":204,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":205,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":206,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":207,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleInformation faculty(String faculty) {","lastModifiedDate":"2022-10-03"},{"lineNumber":208,"author":{"gitId":"shenyih0ng"},"content":"        this.faculty \u003d faculty;","lastModifiedDate":"2022-10-03"},{"lineNumber":209,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":210,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":211,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":212,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":213,"author":{"gitId":"shenyih0ng"},"content":"     * Get faculty","lastModifiedDate":"2022-10-03"},{"lineNumber":214,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":215,"author":{"gitId":"shenyih0ng"},"content":"     * @return faculty","lastModifiedDate":"2022-10-03"},{"lineNumber":216,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":217,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":218,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"Computing\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":219,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_FACULTY)","lastModifiedDate":"2022-10-03"},{"lineNumber":220,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":221,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":222,"author":{"gitId":"shenyih0ng"},"content":"    public String getFaculty() {","lastModifiedDate":"2022-10-03"},{"lineNumber":223,"author":{"gitId":"shenyih0ng"},"content":"        return faculty;","lastModifiedDate":"2022-10-03"},{"lineNumber":224,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":225,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":226,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":227,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_FACULTY)","lastModifiedDate":"2022-10-03"},{"lineNumber":228,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":229,"author":{"gitId":"shenyih0ng"},"content":"    public void setFaculty(String faculty) {","lastModifiedDate":"2022-10-03"},{"lineNumber":230,"author":{"gitId":"shenyih0ng"},"content":"        this.faculty \u003d faculty;","lastModifiedDate":"2022-10-03"},{"lineNumber":231,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":232,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":233,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":234,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleInformation workload(Workload workload) {","lastModifiedDate":"2022-10-03"},{"lineNumber":235,"author":{"gitId":"shenyih0ng"},"content":"        this.workload \u003d workload;","lastModifiedDate":"2022-10-03"},{"lineNumber":236,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":237,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":238,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":239,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":240,"author":{"gitId":"shenyih0ng"},"content":"     * Get workload","lastModifiedDate":"2022-10-03"},{"lineNumber":241,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":242,"author":{"gitId":"shenyih0ng"},"content":"     * @return workload","lastModifiedDate":"2022-10-03"},{"lineNumber":243,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":244,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":245,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":246,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_WORKLOAD)","lastModifiedDate":"2022-10-03"},{"lineNumber":247,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":248,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":249,"author":{"gitId":"shenyih0ng"},"content":"    public Workload getWorkload() {","lastModifiedDate":"2022-10-03"},{"lineNumber":250,"author":{"gitId":"shenyih0ng"},"content":"        return workload;","lastModifiedDate":"2022-10-03"},{"lineNumber":251,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":252,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":253,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":254,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_WORKLOAD)","lastModifiedDate":"2022-10-03"},{"lineNumber":255,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":256,"author":{"gitId":"shenyih0ng"},"content":"    public void setWorkload(Workload workload) {","lastModifiedDate":"2022-10-03"},{"lineNumber":257,"author":{"gitId":"shenyih0ng"},"content":"        this.workload \u003d workload;","lastModifiedDate":"2022-10-03"},{"lineNumber":258,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":259,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":260,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":261,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleInformation prerequisite(String prerequisite) {","lastModifiedDate":"2022-10-03"},{"lineNumber":262,"author":{"gitId":"shenyih0ng"},"content":"        this.prerequisite \u003d prerequisite;","lastModifiedDate":"2022-10-03"},{"lineNumber":263,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":264,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":265,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":266,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":267,"author":{"gitId":"shenyih0ng"},"content":"     * Get prerequisite","lastModifiedDate":"2022-10-03"},{"lineNumber":268,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":269,"author":{"gitId":"shenyih0ng"},"content":"     * @return prerequisite","lastModifiedDate":"2022-10-03"},{"lineNumber":270,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":271,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nullable","lastModifiedDate":"2022-10-03"},{"lineNumber":272,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"CS1010 or its equivalent\", value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":273,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_PREREQUISITE)","lastModifiedDate":"2022-10-03"},{"lineNumber":274,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":275,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":276,"author":{"gitId":"shenyih0ng"},"content":"    public String getPrerequisite() {","lastModifiedDate":"2022-10-03"},{"lineNumber":277,"author":{"gitId":"shenyih0ng"},"content":"        return prerequisite;","lastModifiedDate":"2022-10-03"},{"lineNumber":278,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":279,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":280,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":281,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_PREREQUISITE)","lastModifiedDate":"2022-10-03"},{"lineNumber":282,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":283,"author":{"gitId":"shenyih0ng"},"content":"    public void setPrerequisite(String prerequisite) {","lastModifiedDate":"2022-10-03"},{"lineNumber":284,"author":{"gitId":"shenyih0ng"},"content":"        this.prerequisite \u003d prerequisite;","lastModifiedDate":"2022-10-03"},{"lineNumber":285,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":286,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":287,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":288,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleInformation preclusion(String preclusion) {","lastModifiedDate":"2022-10-03"},{"lineNumber":289,"author":{"gitId":"shenyih0ng"},"content":"        this.preclusion \u003d preclusion;","lastModifiedDate":"2022-10-03"},{"lineNumber":290,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":291,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":292,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":293,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":294,"author":{"gitId":"shenyih0ng"},"content":"     * Get preclusion","lastModifiedDate":"2022-10-03"},{"lineNumber":295,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":296,"author":{"gitId":"shenyih0ng"},"content":"     * @return preclusion","lastModifiedDate":"2022-10-03"},{"lineNumber":297,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":298,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nullable","lastModifiedDate":"2022-10-03"},{"lineNumber":299,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"CS1104 or Students from department of ECE\", value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":300,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_PRECLUSION)","lastModifiedDate":"2022-10-03"},{"lineNumber":301,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":302,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":303,"author":{"gitId":"shenyih0ng"},"content":"    public String getPreclusion() {","lastModifiedDate":"2022-10-03"},{"lineNumber":304,"author":{"gitId":"shenyih0ng"},"content":"        return preclusion;","lastModifiedDate":"2022-10-03"},{"lineNumber":305,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":306,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":307,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":308,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_PRECLUSION)","lastModifiedDate":"2022-10-03"},{"lineNumber":309,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":310,"author":{"gitId":"shenyih0ng"},"content":"    public void setPreclusion(String preclusion) {","lastModifiedDate":"2022-10-03"},{"lineNumber":311,"author":{"gitId":"shenyih0ng"},"content":"        this.preclusion \u003d preclusion;","lastModifiedDate":"2022-10-03"},{"lineNumber":312,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":313,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":314,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":315,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleInformation corequisite(String corequisite) {","lastModifiedDate":"2022-10-03"},{"lineNumber":316,"author":{"gitId":"shenyih0ng"},"content":"        this.corequisite \u003d corequisite;","lastModifiedDate":"2022-10-03"},{"lineNumber":317,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":318,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":319,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":320,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":321,"author":{"gitId":"shenyih0ng"},"content":"     * Get corequisite","lastModifiedDate":"2022-10-03"},{"lineNumber":322,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":323,"author":{"gitId":"shenyih0ng"},"content":"     * @return corequisite","lastModifiedDate":"2022-10-03"},{"lineNumber":324,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":325,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nullable","lastModifiedDate":"2022-10-03"},{"lineNumber":326,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"Students must take CS2101 in the same semester as this module\", value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":327,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_COREQUISITE)","lastModifiedDate":"2022-10-03"},{"lineNumber":328,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":329,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":330,"author":{"gitId":"shenyih0ng"},"content":"    public String getCorequisite() {","lastModifiedDate":"2022-10-03"},{"lineNumber":331,"author":{"gitId":"shenyih0ng"},"content":"        return corequisite;","lastModifiedDate":"2022-10-03"},{"lineNumber":332,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":333,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":334,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":335,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_COREQUISITE)","lastModifiedDate":"2022-10-03"},{"lineNumber":336,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":337,"author":{"gitId":"shenyih0ng"},"content":"    public void setCorequisite(String corequisite) {","lastModifiedDate":"2022-10-03"},{"lineNumber":338,"author":{"gitId":"shenyih0ng"},"content":"        this.corequisite \u003d corequisite;","lastModifiedDate":"2022-10-03"},{"lineNumber":339,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":340,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":341,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":342,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleInformation semesterData(List\u003cModuleInformationSemesterDataInner\u003e semesterData) {","lastModifiedDate":"2022-10-03"},{"lineNumber":343,"author":{"gitId":"shenyih0ng"},"content":"        this.semesterData \u003d semesterData;","lastModifiedDate":"2022-10-03"},{"lineNumber":344,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":345,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":346,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":347,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleInformation addSemesterDataItem(ModuleInformationSemesterDataInner semesterDataItem) {","lastModifiedDate":"2022-10-03"},{"lineNumber":348,"author":{"gitId":"shenyih0ng"},"content":"        this.semesterData.add(semesterDataItem);","lastModifiedDate":"2022-10-03"},{"lineNumber":349,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":350,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":351,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":352,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":353,"author":{"gitId":"shenyih0ng"},"content":"     * Get semesterData","lastModifiedDate":"2022-10-03"},{"lineNumber":354,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":355,"author":{"gitId":"shenyih0ng"},"content":"     * @return semesterData","lastModifiedDate":"2022-10-03"},{"lineNumber":356,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":357,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":358,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":359,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_SEMESTER_DATA)","lastModifiedDate":"2022-10-03"},{"lineNumber":360,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":361,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":362,"author":{"gitId":"shenyih0ng"},"content":"    public List\u003cModuleInformationSemesterDataInner\u003e getSemesterData() {","lastModifiedDate":"2022-10-03"},{"lineNumber":363,"author":{"gitId":"shenyih0ng"},"content":"        return semesterData;","lastModifiedDate":"2022-10-03"},{"lineNumber":364,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":365,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":366,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":367,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_SEMESTER_DATA)","lastModifiedDate":"2022-10-03"},{"lineNumber":368,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":369,"author":{"gitId":"shenyih0ng"},"content":"    public void setSemesterData(List\u003cModuleInformationSemesterDataInner\u003e semesterData) {","lastModifiedDate":"2022-10-03"},{"lineNumber":370,"author":{"gitId":"shenyih0ng"},"content":"        this.semesterData \u003d semesterData;","lastModifiedDate":"2022-10-03"},{"lineNumber":371,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":372,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":373,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":374,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":375,"author":{"gitId":"shenyih0ng"},"content":"     * Return true if this ModuleInformation object is equal to o.","lastModifiedDate":"2022-10-03"},{"lineNumber":376,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":377,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":378,"author":{"gitId":"shenyih0ng"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":379,"author":{"gitId":"shenyih0ng"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":380,"author":{"gitId":"shenyih0ng"},"content":"            return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":381,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":382,"author":{"gitId":"shenyih0ng"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":383,"author":{"gitId":"shenyih0ng"},"content":"            return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":384,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":385,"author":{"gitId":"shenyih0ng"},"content":"        ModuleInformation moduleInformation \u003d (ModuleInformation) o;","lastModifiedDate":"2022-10-03"},{"lineNumber":386,"author":{"gitId":"shenyih0ng"},"content":"        return Objects.equals(this.moduleCode, moduleInformation.moduleCode) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":387,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.title, moduleInformation.title) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":388,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.description, moduleInformation.description) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":389,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.moduleCredit, moduleInformation.moduleCredit) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":390,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.department, moduleInformation.department) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":391,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.faculty, moduleInformation.faculty) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":392,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.workload, moduleInformation.workload) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":393,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.prerequisite, moduleInformation.prerequisite) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":394,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.preclusion, moduleInformation.preclusion) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":395,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.corequisite, moduleInformation.corequisite) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":396,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.semesterData, moduleInformation.semesterData);","lastModifiedDate":"2022-10-03"},{"lineNumber":397,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":398,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":399,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":400,"author":{"gitId":"shenyih0ng"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":401,"author":{"gitId":"shenyih0ng"},"content":"        return Objects.hash(moduleCode, title, description, moduleCredit, department, faculty, workload, prerequisite,","lastModifiedDate":"2022-10-07"},{"lineNumber":402,"author":{"gitId":"shenyih0ng"},"content":"            preclusion, corequisite, semesterData);","lastModifiedDate":"2022-10-07"},{"lineNumber":403,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":404,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":405,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":406,"author":{"gitId":"shenyih0ng"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":407,"author":{"gitId":"shenyih0ng"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-03"},{"lineNumber":408,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"class ModuleInformation {\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":409,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    moduleCode: \").append(toIndentedString(moduleCode)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":410,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    title: \").append(toIndentedString(title)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":411,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    description: \").append(toIndentedString(description)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":412,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    moduleCredit: \").append(toIndentedString(moduleCredit)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":413,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    department: \").append(toIndentedString(department)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":414,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    faculty: \").append(toIndentedString(faculty)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":415,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    workload: \").append(toIndentedString(workload)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":416,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    prerequisite: \").append(toIndentedString(prerequisite)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":417,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    preclusion: \").append(toIndentedString(preclusion)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":418,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    corequisite: \").append(toIndentedString(corequisite)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":419,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    semesterData: \").append(toIndentedString(semesterData)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":420,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"}\");","lastModifiedDate":"2022-10-03"},{"lineNumber":421,"author":{"gitId":"shenyih0ng"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-03"},{"lineNumber":422,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":423,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":424,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":425,"author":{"gitId":"shenyih0ng"},"content":"     * Convert the given object to string with each line indented by 4 spaces (except the first line).","lastModifiedDate":"2022-10-07"},{"lineNumber":426,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":427,"author":{"gitId":"shenyih0ng"},"content":"    private String toIndentedString(Object o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":428,"author":{"gitId":"shenyih0ng"},"content":"        if (o \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":429,"author":{"gitId":"shenyih0ng"},"content":"            return \"null\";","lastModifiedDate":"2022-10-03"},{"lineNumber":430,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":431,"author":{"gitId":"shenyih0ng"},"content":"        return o.toString().replace(\"\\n\", \"\\n    \");","lastModifiedDate":"2022-10-03"},{"lineNumber":432,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":433,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":434,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"},{"lineNumber":435,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"shenyih0ng":435}},{"path":"src/main/java/org/openapitools/client/model/ModuleInformationSemesterDataInner.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"/*","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API contains data used to render \u003chttps://nusmods.com\u003e. It includes data on modules offered by NUS and their timetables, as well as information on the locations the classes take place in. You are welcome to use and experiment with the data, which is extracted from official APIs provided by the Registrar\u0027s Office.  The API consists of static JSON files scraped daily from the school\u0027s APIs. This means it only partially follow REST conventions, and all resources are read only. All successful responses will return JSON, and all endpoints end in `.json`.  The shape of the data returned by these endpoints are designed for NUSMods in mind. If you have any questions or find that you need the data in other shapes for other purposes, feel free to reach out to us:  - **Telegram**: \u003chttps://telegram.me/nusmods\u003e - **Mailing list**: \u003cnusmods@googlegroups.com\u003e (for security related issues please email \u003cmods@nusmods.com\u003e instead)  ## Fetching data  Any HTTP client can be used to fetch data from the API. HTTPS is preferred, but the server will also respond to HTTP requests. The server supports HTTP 1.1 as well as HTTP 2 over HTTPS, and supports gzip compression.  The API has no authentication, and is not rate limited. While the server can respond to a large number of requests simultaneously, we request that you be polite with resource usage so as not to disrupt nusmods.com, which relies on the same API server. In general there is no need to fetch data from the API more than once per day, as that is the frequency at which we update the data.  [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) headers are enabled on all endpoints, so client-side JavaScript can use also use the API.  ## TypeScript types  Since the NUSMods is written in TypeScript, typings are available in the source for the scraper. These may be easier to read than the documentation generated by Swagger.  - Module types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/modules.ts\u003e - Venue types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/venues.ts\u003e  ## Data  Below are some notes about the data returned from the API. Feel free to talk to us or create an issue if any of it is not clear.  ### Module data  Module endpoints return information on modules offered by NUS. Most of the module data is self-explanatory, but some of the data are more complex and is explained here.  #### Lessons  Each lesson in a timetable has a lesson type `lessonType` and class number `ClassNo`. Every student must take one of each lesson type offered by the module. For example, this module offers two tutorials and one lecture. That means the student must attend the lecture, and can choose one of the two tutorials to attend.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"01\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1100\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"COM1-0207\\\"     },     {       \\\"classNo\\\": \\\"02\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Friday\\\",       \\\"startTime\\\": \\\"0900\\\",       \\\"endTime\\\": \\\"1000\\\",       \\\"venue\\\": \\\"COM1-0209\\\"     }   ] } ```  Each lesson has a `classNo` key. There can be multiple lessons of the same type and class number, in which case students must attend both. In this example, students can choose to attend either lecture group 1 on Tuesdays and Wednesdays, or lecture group 2 on Mondays and Wednesdays.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1400\\\",       \\\"endTime\\\": \\\"1500\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Monday\\\",       \\\"startTime\\\": \\\"1000\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1500\\\",       \\\"endTime\\\": \\\"1600\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     }   ] } ```  #### Lesson Weeks  The `weeks` key on lessons can return data in one of two forms.  Weeks is usually a sorted array of numbers. In this case it represents the school weeks the lesson occurs on, from 1 to 13.  Some classes have lessons outside of the school timetable. In this case a `WeekRange` object is returned. The object will always contain a `start` and `end` key representing the start and end date of lessons. The example below has classes every week from 17th Jan to 18th April.  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-04-18\\\" } ```  Optionally it can also include `weekInterval`, a positive integer describing the number of weeks between each lesson, and `weeks`, an array of positive integers describing the weeks on which the lesson will fall, with week 1 being the starting date. If these are not present you can assume lessons will occur every week.  The following example has lessons on 17th Jan (week 1), 24th Jan (week 2), 7th Feb (week 4) and 21st Feb (week 6).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-21\\\",   \\\"weeks\\\": [1, 2, 4, 6] } ```  The following example has lessons on 17th Jan (week 1), 31st Jan (week 3), 14th Feb (week 5) and 28th Feb (week 7).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-28\\\",   \\\"weekInterval\\\": 2 } ```  #### Workload  The `workload` key can return data in one of two forms.  Workload is usually a **5-tuple of numbers**, describing the estimated number of hours per week the student is expected to put in for the module for **lectures, tutorials, laboratory, projects/fieldwork, and preparatory work** respectively. For example, a workload of `[2, 1, 1, 3, 3]` means the student should spend every week  - 2 hours in lectures - 1 hour in tutorials - 1 hour at the lab - 3 hours doing project work - 3 hours preparing for classes  Each module credit represents 2.5 hours of work each week, so the standard 4 MC module represents 10 hours of work each week. Module credit may not be integers.  Note that this is only an estimate, and may be outdated or differ significantly in reality. Some modules also incorrectly lists the **total** workload hours instead of weekly, so very large values may show up.  This value is parsed from a string provided by the school, and occasionally this field will contain unusual values which cannot be parsed. In this case this field will contain the original **string** instead, which should be displayed as-is to the user.  #### Prerequisite, corequisite and preclusions  These three keys determine whether a student can take a module.  **Prerequisites** are requirements you have to meet before you can take a module. These are usually in the form of other modules (see prerequisite tree below for a machine readable format), but can also be things like \u0027taken A-level H2 math\u0027 or \u002770 MCs and above\u0027.  **Preclusions** refer to modules or requirements that cannot be taken if this module is taken, and vice versa. These are usually modules whose content overlaps significantly with this module, and can usually be used to replace each other to fulfill prerequisites.  **Corequisites** are modules that must be taken together with this module in the same semester. This usually refer to twined modules - modules which have linked syllabuses.  #### Prerequisite Tree  The `prereqTree` key is return on the individual module endpoint (`/modules/{moduleCode`). Not all modules have prerequisites, and some have prerequisites that cannot be properly represented as a tree, in which case this key will not appear.  This describes the prerequisites that need to be fulfilled before this module can be taken. The data structure is recursive and represents a tree.  ```json {   \\\"and\\\": [     \\\"CS1231\\\",     {       \\\"or\\\": [\\\"CS1010S\\\", \\\"CS1010X\\\"]     }   ] } ```  In the example, this module requires CS1231 and either CS1010S or CS1010X. This can be visualized as  ```            ┌ CS1231 ── all of ─┤            │         ┌ CS1010            └ one of ─┤                      └ CS1010X ```  The module information also contains the inverse of this, that is, modules whose requirements are fulfilled by this module (taking this module will allow you to take these modules in the following semester). The data is found on the `fulfillRequirements` key as an array of module codes.  ### Venue data  Venue data is simply the module timetable restructured to show the lessons happening at each classroom.  The venue list endpoint returns a list of all locations that are used in the semester. Note that this is not a comprehensive list of locations, but rather just a list of venues that appears in module lessons.  The venue information endpoint returns the full class and occupancy information about a venue. The `classes` key contains a list of lessons similar to the `timetable` key in module data, but without a `venue` key and with `moduleCode`.","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":" * The version of the OpenAPI document: 2.0.0","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":" * Contact: nusmods@googlegroups.com","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":" * https://openapi-generator.tech","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":" * Do not edit the class manually.","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"package org.openapitools.client.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"import java.time.OffsetDateTime;","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonInclude;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonPropertyOrder;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"import io.swagger.annotations.ApiModelProperty;","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":" * ModuleInformationSemesterDataInner","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"@JsonPropertyOrder({","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"    ModuleInformationSemesterDataInner.JSON_PROPERTY_SEMESTER,","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"    ModuleInformationSemesterDataInner.JSON_PROPERTY_EXAM_DATE,","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"    ModuleInformationSemesterDataInner.JSON_PROPERTY_EXAM_DURATION","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"})","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"@javax.annotation.processing.Generated(value \u003d \"org.openapitools.codegen.languages.JavaClientCodegen\", date \u003d \"2022-10-03T22:22:26.802458+08:00[Asia/Singapore]\")","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"public class ModuleInformationSemesterDataInner {","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_SEMESTER \u003d \"semester\";","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_EXAM_DATE \u003d \"examDate\";","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_EXAM_DURATION \u003d \"examDuration\";","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"    private BigDecimal semester;","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"    private OffsetDateTime examDate;","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"    private BigDecimal examDuration;","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleInformationSemesterDataInner() {","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleInformationSemesterDataInner semester(BigDecimal semester) {","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"        this.semester \u003d semester;","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"     * Get semester","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"     * @return semester","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nullable","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"1\", value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_SEMESTER)","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"    public BigDecimal getSemester() {","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"        return semester;","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_SEMESTER)","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"shenyih0ng"},"content":"    public void setSemester(BigDecimal semester) {","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"shenyih0ng"},"content":"        this.semester \u003d semester;","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleInformationSemesterDataInner examDate(OffsetDateTime examDate) {","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"shenyih0ng"},"content":"        this.examDate \u003d examDate;","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"shenyih0ng"},"content":"     * Get examDate","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"shenyih0ng"},"content":"     * @return examDate","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nullable","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"2018-11-27T09:00Z\", value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_EXAM_DATE)","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"shenyih0ng"},"content":"    public OffsetDateTime getExamDate() {","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"shenyih0ng"},"content":"        return examDate;","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_EXAM_DATE)","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"shenyih0ng"},"content":"    public void setExamDate(OffsetDateTime examDate) {","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"shenyih0ng"},"content":"        this.examDate \u003d examDate;","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleInformationSemesterDataInner examDuration(BigDecimal examDuration) {","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"shenyih0ng"},"content":"        this.examDuration \u003d examDuration;","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"shenyih0ng"},"content":"     * Duration of the exam in minutes","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":110,"author":{"gitId":"shenyih0ng"},"content":"     * @return examDuration","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nullable","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"120\", value \u003d \"Duration of the exam in minutes\")","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_EXAM_DURATION)","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"shenyih0ng"},"content":"    public BigDecimal getExamDuration() {","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"shenyih0ng"},"content":"        return examDuration;","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_EXAM_DURATION)","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"shenyih0ng"},"content":"    public void setExamDuration(BigDecimal examDuration) {","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"shenyih0ng"},"content":"        this.examDuration \u003d examDuration;","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":129,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"shenyih0ng"},"content":"     * Return true if this ModuleInformation_semesterData_inner object is equal to o.","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"shenyih0ng"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"shenyih0ng"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"shenyih0ng"},"content":"            return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":136,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"shenyih0ng"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":138,"author":{"gitId":"shenyih0ng"},"content":"            return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":139,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":140,"author":{"gitId":"shenyih0ng"},"content":"        ModuleInformationSemesterDataInner moduleInformationSemesterDataInner \u003d (ModuleInformationSemesterDataInner) o;","lastModifiedDate":"2022-10-03"},{"lineNumber":141,"author":{"gitId":"shenyih0ng"},"content":"        return Objects.equals(this.semester, moduleInformationSemesterDataInner.semester) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":142,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.examDate, moduleInformationSemesterDataInner.examDate) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":143,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.examDuration, moduleInformationSemesterDataInner.examDuration);","lastModifiedDate":"2022-10-03"},{"lineNumber":144,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":145,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":146,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":147,"author":{"gitId":"shenyih0ng"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":148,"author":{"gitId":"shenyih0ng"},"content":"        return Objects.hash(semester, examDate, examDuration);","lastModifiedDate":"2022-10-03"},{"lineNumber":149,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":150,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":151,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":152,"author":{"gitId":"shenyih0ng"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":153,"author":{"gitId":"shenyih0ng"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-03"},{"lineNumber":154,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"class ModuleInformationSemesterDataInner {\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":155,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    semester: \").append(toIndentedString(semester)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":156,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    examDate: \").append(toIndentedString(examDate)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":157,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    examDuration: \").append(toIndentedString(examDuration)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":158,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"}\");","lastModifiedDate":"2022-10-03"},{"lineNumber":159,"author":{"gitId":"shenyih0ng"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-03"},{"lineNumber":160,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":161,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":162,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":163,"author":{"gitId":"shenyih0ng"},"content":"     * Convert the given object to string with each line indented by 4 spaces (except the first line).","lastModifiedDate":"2022-10-07"},{"lineNumber":164,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":165,"author":{"gitId":"shenyih0ng"},"content":"    private String toIndentedString(Object o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":166,"author":{"gitId":"shenyih0ng"},"content":"        if (o \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":167,"author":{"gitId":"shenyih0ng"},"content":"            return \"null\";","lastModifiedDate":"2022-10-03"},{"lineNumber":168,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":169,"author":{"gitId":"shenyih0ng"},"content":"        return o.toString().replace(\"\\n\", \"\\n    \");","lastModifiedDate":"2022-10-03"},{"lineNumber":170,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":171,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":172,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"},{"lineNumber":173,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"shenyih0ng":173}},{"path":"src/main/java/org/openapitools/client/model/PrereqTree.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huzaifa1712"},"content":"///*","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"huzaifa1712"},"content":"// * NUSMods API","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"huzaifa1712"},"content":"// * NUSMods API contains data used to render \u003chttps://nusmods.com\u003e. It includes data on modules offered by NUS and their timetables, as well as information on the locations the classes take place in. You are welcome to use and experiment with the data, which is extracted from official APIs provided by the Registrar\u0027s Office.  The API consists of static JSON files scraped daily from the school\u0027s APIs. This means it only partially follow REST conventions, and all resources are read only. All successful responses will return JSON, and all endpoints end in `.json`.  The shape of the data returned by these endpoints are designed for NUSMods in mind. If you have any questions or find that you need the data in other shapes for other purposes, feel free to reach out to us:  - **Telegram**: \u003chttps://telegram.me/nusmods\u003e - **Mailing list**: \u003cnusmods@googlegroups.com\u003e (for security related issues please email \u003cmods@nusmods.com\u003e instead)  ## Fetching data  Any HTTP client can be used to fetch data from the API. HTTPS is preferred, but the server will also respond to HTTP requests. The server supports HTTP 1.1 as well as HTTP 2 over HTTPS, and supports gzip compression.  The API has no authentication, and is not rate limited. While the server can respond to a large number of requests simultaneously, we request that you be polite with resource usage so as not to disrupt nusmods.com, which relies on the same API server. In general there is no need to fetch data from the API more than once per day, as that is the frequency at which we update the data.  [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) headers are enabled on all endpoints, so client-side JavaScript can use also use the API.  ## TypeScript types  Since the NUSMods is written in TypeScript, typings are available in the source for the scraper. These may be easier to read than the documentation generated by Swagger.  - Module types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/modules.ts\u003e - Venue types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/venues.ts\u003e  ## Data  Below are some notes about the data returned from the API. Feel free to talk to us or create an issue if any of it is not clear.  ### Module data  Module endpoints return information on modules offered by NUS. Most of the module data is self-explanatory, but some of the data are more complex and is explained here.  #### Lessons  Each lesson in a timetable has a lesson type `lessonType` and class number `ClassNo`. Every student must take one of each lesson type offered by the module. For example, this module offers two tutorials and one lecture. That means the student must attend the lecture, and can choose one of the two tutorials to attend.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"01\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1100\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"COM1-0207\\\"     },     {       \\\"classNo\\\": \\\"02\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Friday\\\",       \\\"startTime\\\": \\\"0900\\\",       \\\"endTime\\\": \\\"1000\\\",       \\\"venue\\\": \\\"COM1-0209\\\"     }   ] } ```  Each lesson has a `classNo` key. There can be multiple lessons of the same type and class number, in which case students must attend both. In this example, students can choose to attend either lecture group 1 on Tuesdays and Wednesdays, or lecture group 2 on Mondays and Wednesdays.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1400\\\",       \\\"endTime\\\": \\\"1500\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Monday\\\",       \\\"startTime\\\": \\\"1000\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1500\\\",       \\\"endTime\\\": \\\"1600\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     }   ] } ```  #### Lesson Weeks  The `weeks` key on lessons can return data in one of two forms.  Weeks is usually a sorted array of numbers. In this case it represents the school weeks the lesson occurs on, from 1 to 13.  Some classes have lessons outside of the school timetable. In this case a `WeekRange` object is returned. The object will always contain a `start` and `end` key representing the start and end date of lessons. The example below has classes every week from 17th Jan to 18th April.  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-04-18\\\" } ```  Optionally it can also include `weekInterval`, a positive integer describing the number of weeks between each lesson, and `weeks`, an array of positive integers describing the weeks on which the lesson will fall, with week 1 being the starting date. If these are not present you can assume lessons will occur every week.  The following example has lessons on 17th Jan (week 1), 24th Jan (week 2), 7th Feb (week 4) and 21st Feb (week 6).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-21\\\",   \\\"weeks\\\": [1, 2, 4, 6] } ```  The following example has lessons on 17th Jan (week 1), 31st Jan (week 3), 14th Feb (week 5) and 28th Feb (week 7).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-28\\\",   \\\"weekInterval\\\": 2 } ```  #### Workload  The `workload` key can return data in one of two forms.  Workload is usually a **5-tuple of numbers**, describing the estimated number of hours per week the student is expected to put in for the module for **lectures, tutorials, laboratory, projects/fieldwork, and preparatory work** respectively. For example, a workload of `[2, 1, 1, 3, 3]` means the student should spend every week  - 2 hours in lectures - 1 hour in tutorials - 1 hour at the lab - 3 hours doing project work - 3 hours preparing for classes  Each module credit represents 2.5 hours of work each week, so the standard 4 MC module represents 10 hours of work each week. Module credit may not be integers.  Note that this is only an estimate, and may be outdated or differ significantly in reality. Some modules also incorrectly lists the **total** workload hours instead of weekly, so very large values may show up.  This value is parsed from a string provided by the school, and occasionally this field will contain unusual values which cannot be parsed. In this case this field will contain the original **string** instead, which should be displayed as-is to the user.  #### Prerequisite, corequisite and preclusions  These three keys determine whether a student can take a module.  **Prerequisites** are requirements you have to meet before you can take a module. These are usually in the form of other modules (see prerequisite tree below for a machine readable format), but can also be things like \u0027taken A-level H2 math\u0027 or \u002770 MCs and above\u0027.  **Preclusions** refer to modules or requirements that cannot be taken if this module is taken, and vice versa. These are usually modules whose content overlaps significantly with this module, and can usually be used to replace each other to fulfill prerequisites.  **Corequisites** are modules that must be taken together with this module in the same semester. This usually refer to twined modules - modules which have linked syllabuses.  #### Prerequisite Tree  The `prereqTree` key is return on the individual module endpoint (`/modules/{moduleCode`). Not all modules have prerequisites, and some have prerequisites that cannot be properly represented as a tree, in which case this key will not appear.  This describes the prerequisites that need to be fulfilled before this module can be taken. The data structure is recursive and represents a tree.  ```json {   \\\"and\\\": [     \\\"CS1231\\\",     {       \\\"or\\\": [\\\"CS1010S\\\", \\\"CS1010X\\\"]     }   ] } ```  In the example, this module requires CS1231 and either CS1010S or CS1010X. This can be visualized as  ```            ┌ CS1231 ── all of ─┤            │         ┌ CS1010            └ one of ─┤                      └ CS1010X ```  The module information also contains the inverse of this, that is, modules whose requirements are fulfilled by this module (taking this module will allow you to take these modules in the following semester). The data is found on the `fulfillRequirements` key as an array of module codes.  ### Venue data  Venue data is simply the module timetable restructured to show the lessons happening at each classroom.  The venue list endpoint returns a list of all locations that are used in the semester. Note that this is not a comprehensive list of locations, but rather just a list of venues that appears in module lessons.  The venue information endpoint returns the full class and occupancy information about a venue. The `classes` key contains a list of lessons similar to the `timetable` key in module data, but without a `venue` key and with `moduleCode`.","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"huzaifa1712"},"content":"// *","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"huzaifa1712"},"content":"// * The version of the OpenAPI document: 2.0.0","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"huzaifa1712"},"content":"// * Contact: nusmods@googlegroups.com","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"huzaifa1712"},"content":"// *","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"huzaifa1712"},"content":"// * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"huzaifa1712"},"content":"// * https://openapi-generator.tech","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"huzaifa1712"},"content":"// * Do not edit the class manually.","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"huzaifa1712"},"content":"// */","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"huzaifa1712"},"content":"//package org.openapitools.client.model;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"huzaifa1712"},"content":"//import java.io.IOException;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"huzaifa1712"},"content":"//import java.util.Collections;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"huzaifa1712"},"content":"//import java.util.HashMap;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"huzaifa1712"},"content":"//import java.util.HashSet;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"huzaifa1712"},"content":"//import java.util.Map;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"huzaifa1712"},"content":"//import java.util.logging.Level;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"huzaifa1712"},"content":"//import java.util.logging.Logger;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"huzaifa1712"},"content":"//import org.openapitools.client.JSON;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"huzaifa1712"},"content":"//import com.fasterxml.jackson.core.JsonGenerator;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"huzaifa1712"},"content":"//import com.fasterxml.jackson.core.JsonParser;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"huzaifa1712"},"content":"//import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"huzaifa1712"},"content":"//import com.fasterxml.jackson.core.JsonToken;","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"huzaifa1712"},"content":"//import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"huzaifa1712"},"content":"//import com.fasterxml.jackson.databind.JsonMappingException;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"huzaifa1712"},"content":"//import com.fasterxml.jackson.databind.JsonNode;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"huzaifa1712"},"content":"//import com.fasterxml.jackson.databind.MapperFeature;","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"huzaifa1712"},"content":"//import com.fasterxml.jackson.databind.SerializerProvider;","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"huzaifa1712"},"content":"//import com.fasterxml.jackson.databind.annotation.JsonDeserialize;","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"huzaifa1712"},"content":"//import com.fasterxml.jackson.databind.annotation.JsonSerialize;","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"huzaifa1712"},"content":"//import com.fasterxml.jackson.databind.deser.std.StdDeserializer;","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"huzaifa1712"},"content":"//import com.fasterxml.jackson.databind.ser.std.StdSerializer;","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"huzaifa1712"},"content":"//@javax.annotation.processing.Generated(value \u003d \"org.openapitools.codegen.languages.JavaClientCodegen\", date \u003d \"2022-10-03T22:22:26.802458+08:00[Asia/Singapore]\")","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"huzaifa1712"},"content":"//@JsonDeserialize(using \u003d PrereqTree.PrereqTreeDeserializer.class)","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"huzaifa1712"},"content":"//@JsonSerialize(using \u003d PrereqTree.PrereqTreeSerializer.class)","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"huzaifa1712"},"content":"//public class PrereqTree extends AbstractOpenApiSchema {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"huzaifa1712"},"content":"//    // store a list of schema names defined in oneOf","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"huzaifa1712"},"content":"//    public static final Map\u003cString, Class\u003c?\u003e\u003e schemas \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"huzaifa1712"},"content":"//    private static final Logger log \u003d Logger.getLogger(PrereqTree.class.getName());","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"huzaifa1712"},"content":"//    static {","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"huzaifa1712"},"content":"//        schemas.put(\"PrereqTreeOneOf\", PrereqTreeOneOf.class);","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"huzaifa1712"},"content":"//        schemas.put(\"PrereqTreeOneOf1\", PrereqTreeOneOf1.class);","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"huzaifa1712"},"content":"//        schemas.put(\"String\", String.class);","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"huzaifa1712"},"content":"//        JSON.registerDescendants(PrereqTree.class, Collections.unmodifiableMap(schemas));","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"huzaifa1712"},"content":"//    }","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"huzaifa1712"},"content":"//    public PrereqTree() {","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"huzaifa1712"},"content":"//        super(\"oneOf\", Boolean.FALSE);","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"huzaifa1712"},"content":"//    }","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"huzaifa1712"},"content":"//    public PrereqTree(PrereqTreeOneOf o) {","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"huzaifa1712"},"content":"//        super(\"oneOf\", Boolean.FALSE);","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"huzaifa1712"},"content":"//        setActualInstance(o);","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"huzaifa1712"},"content":"//    }","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"huzaifa1712"},"content":"//    public PrereqTree(PrereqTreeOneOf1 o) {","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"huzaifa1712"},"content":"//        super(\"oneOf\", Boolean.FALSE);","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"huzaifa1712"},"content":"//        setActualInstance(o);","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"huzaifa1712"},"content":"//    }","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"huzaifa1712"},"content":"//    public PrereqTree(String o) {","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"huzaifa1712"},"content":"//        super(\"oneOf\", Boolean.FALSE);","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"huzaifa1712"},"content":"//        setActualInstance(o);","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"huzaifa1712"},"content":"//    }","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"huzaifa1712"},"content":"//    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"huzaifa1712"},"content":"//    public Map\u003cString, Class\u003c?\u003e\u003e getSchemas() {","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"huzaifa1712"},"content":"//        return PrereqTree.schemas;","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"huzaifa1712"},"content":"//    }","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"huzaifa1712"},"content":"//    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"huzaifa1712"},"content":"//     * Get the actual instance, which can be the following: PrereqTreeOneOf, PrereqTreeOneOf1, String","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"huzaifa1712"},"content":"//     *","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"huzaifa1712"},"content":"//     * @return The actual instance (PrereqTreeOneOf, PrereqTreeOneOf1, String)","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"huzaifa1712"},"content":"//     */","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"huzaifa1712"},"content":"//    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"huzaifa1712"},"content":"//    public Object getActualInstance() {","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"huzaifa1712"},"content":"//        return super.getActualInstance();","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"huzaifa1712"},"content":"//    }","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"huzaifa1712"},"content":"//    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"huzaifa1712"},"content":"//     * Set the instance that matches the oneOf child schema, check the instance parameter is valid against the oneOf","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"huzaifa1712"},"content":"//     * child schemas: PrereqTreeOneOf, PrereqTreeOneOf1, String","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"huzaifa1712"},"content":"//     * \u003cp\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"huzaifa1712"},"content":"//     * It could be an instance of the \u0027oneOf\u0027 schemas. The oneOf child schemas may themselves be a composed schema","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"huzaifa1712"},"content":"//     * (allOf, anyOf, oneOf).","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"huzaifa1712"},"content":"//     */","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"huzaifa1712"},"content":"//    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"huzaifa1712"},"content":"//    public void setActualInstance(Object instance) {","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"huzaifa1712"},"content":"//        if (JSON.isInstanceOf(PrereqTreeOneOf.class, instance, new HashSet\u003cClass\u003c?\u003e\u003e())) {","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"huzaifa1712"},"content":"//            super.setActualInstance(instance);","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"huzaifa1712"},"content":"//            return;","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"huzaifa1712"},"content":"//        }","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"huzaifa1712"},"content":"//        if (JSON.isInstanceOf(PrereqTreeOneOf1.class, instance, new HashSet\u003cClass\u003c?\u003e\u003e())) {","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"huzaifa1712"},"content":"//            super.setActualInstance(instance);","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"huzaifa1712"},"content":"//            return;","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"huzaifa1712"},"content":"//        }","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"huzaifa1712"},"content":"//        if (JSON.isInstanceOf(String.class, instance, new HashSet\u003cClass\u003c?\u003e\u003e())) {","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"huzaifa1712"},"content":"//            super.setActualInstance(instance);","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"huzaifa1712"},"content":"//            return;","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"huzaifa1712"},"content":"//        }","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"huzaifa1712"},"content":"//        throw new RuntimeException(\"Invalid instance type. Must be PrereqTreeOneOf, PrereqTreeOneOf1, String\");","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"huzaifa1712"},"content":"//    }","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"huzaifa1712"},"content":"//    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"huzaifa1712"},"content":"//     * Get the actual instance of `PrereqTreeOneOf`. If the actual instance is not `PrereqTreeOneOf`, the","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"huzaifa1712"},"content":"//     * ClassCastException will be thrown.","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"huzaifa1712"},"content":"//     *","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"huzaifa1712"},"content":"//     * @return The actual instance of `PrereqTreeOneOf`","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"huzaifa1712"},"content":"//     * @throws ClassCastException if the instance is not `PrereqTreeOneOf`","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"huzaifa1712"},"content":"//     */","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"huzaifa1712"},"content":"//    public PrereqTreeOneOf getPrereqTreeOneOf() throws ClassCastException {","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"huzaifa1712"},"content":"//        return (PrereqTreeOneOf) super.getActualInstance();","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"huzaifa1712"},"content":"//    }","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"huzaifa1712"},"content":"//    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"huzaifa1712"},"content":"//     * Get the actual instance of `PrereqTreeOneOf1`. If the actual instance is not `PrereqTreeOneOf1`, the","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"huzaifa1712"},"content":"//     * ClassCastException will be thrown.","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"huzaifa1712"},"content":"//     *","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"huzaifa1712"},"content":"//     * @return The actual instance of `PrereqTreeOneOf1`","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"huzaifa1712"},"content":"//     * @throws ClassCastException if the instance is not `PrereqTreeOneOf1`","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"huzaifa1712"},"content":"//     */","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"huzaifa1712"},"content":"//    public PrereqTreeOneOf1 getPrereqTreeOneOf1() throws ClassCastException {","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"huzaifa1712"},"content":"//        return (PrereqTreeOneOf1) super.getActualInstance();","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"huzaifa1712"},"content":"//    }","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"huzaifa1712"},"content":"//    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"huzaifa1712"},"content":"//     * Get the actual instance of `String`. If the actual instance is not `String`, the ClassCastException will be","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"huzaifa1712"},"content":"//     * thrown.","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"huzaifa1712"},"content":"//     *","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"huzaifa1712"},"content":"//     * @return The actual instance of `String`","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"huzaifa1712"},"content":"//     * @throws ClassCastException if the instance is not `String`","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"huzaifa1712"},"content":"//     */","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"huzaifa1712"},"content":"//    public String getString() throws ClassCastException {","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"huzaifa1712"},"content":"//        return (String) super.getActualInstance();","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"huzaifa1712"},"content":"//    }","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"huzaifa1712"},"content":"//    public static class PrereqTreeSerializer extends StdSerializer\u003cPrereqTree\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"huzaifa1712"},"content":"//        public PrereqTreeSerializer(Class\u003cPrereqTree\u003e t) {","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"huzaifa1712"},"content":"//            super(t);","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"huzaifa1712"},"content":"//        }","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"huzaifa1712"},"content":"//        public PrereqTreeSerializer() {","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"huzaifa1712"},"content":"//            this(null);","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"huzaifa1712"},"content":"//        }","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"huzaifa1712"},"content":"//        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"huzaifa1712"},"content":"//        public void serialize(PrereqTree value, JsonGenerator jgen, SerializerProvider provider)","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"huzaifa1712"},"content":"//            throws IOException, JsonProcessingException {","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"huzaifa1712"},"content":"//            jgen.writeObject(value.getActualInstance());","lastModifiedDate":"2022-10-12"},{"lineNumber":163,"author":{"gitId":"huzaifa1712"},"content":"//        }","lastModifiedDate":"2022-10-12"},{"lineNumber":164,"author":{"gitId":"huzaifa1712"},"content":"//    }","lastModifiedDate":"2022-10-12"},{"lineNumber":165,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":166,"author":{"gitId":"huzaifa1712"},"content":"//    public static class PrereqTreeDeserializer extends StdDeserializer\u003cPrereqTree\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":167,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":168,"author":{"gitId":"huzaifa1712"},"content":"//        public PrereqTreeDeserializer() {","lastModifiedDate":"2022-10-12"},{"lineNumber":169,"author":{"gitId":"huzaifa1712"},"content":"//            this(PrereqTree.class);","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"huzaifa1712"},"content":"//        }","lastModifiedDate":"2022-10-12"},{"lineNumber":171,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":172,"author":{"gitId":"huzaifa1712"},"content":"//        public PrereqTreeDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2022-10-12"},{"lineNumber":173,"author":{"gitId":"huzaifa1712"},"content":"//            super(vc);","lastModifiedDate":"2022-10-12"},{"lineNumber":174,"author":{"gitId":"huzaifa1712"},"content":"//        }","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":176,"author":{"gitId":"huzaifa1712"},"content":"//        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":177,"author":{"gitId":"huzaifa1712"},"content":"//        public PrereqTree deserialize(JsonParser jp, DeserializationContext ctxt)","lastModifiedDate":"2022-10-12"},{"lineNumber":178,"author":{"gitId":"huzaifa1712"},"content":"//            throws IOException, JsonProcessingException {","lastModifiedDate":"2022-10-12"},{"lineNumber":179,"author":{"gitId":"huzaifa1712"},"content":"//            JsonNode tree \u003d jp.readValueAsTree();","lastModifiedDate":"2022-10-12"},{"lineNumber":180,"author":{"gitId":"huzaifa1712"},"content":"//            Object deserialized \u003d null;","lastModifiedDate":"2022-10-12"},{"lineNumber":181,"author":{"gitId":"huzaifa1712"},"content":"//            boolean typeCoercion \u003d ctxt.isEnabled(MapperFeature.ALLOW_COERCION_OF_SCALARS);","lastModifiedDate":"2022-10-12"},{"lineNumber":182,"author":{"gitId":"huzaifa1712"},"content":"//            int match \u003d 0;","lastModifiedDate":"2022-10-12"},{"lineNumber":183,"author":{"gitId":"huzaifa1712"},"content":"//            JsonToken token \u003d tree.traverse(jp.getCodec()).nextToken();","lastModifiedDate":"2022-10-12"},{"lineNumber":184,"author":{"gitId":"huzaifa1712"},"content":"//            // deserialize PrereqTreeOneOf","lastModifiedDate":"2022-10-12"},{"lineNumber":185,"author":{"gitId":"huzaifa1712"},"content":"//            try {","lastModifiedDate":"2022-10-12"},{"lineNumber":186,"author":{"gitId":"huzaifa1712"},"content":"//                boolean attemptParsing \u003d true;","lastModifiedDate":"2022-10-12"},{"lineNumber":187,"author":{"gitId":"huzaifa1712"},"content":"//                // ensure that we respect type coercion as set on the client ObjectMapper","lastModifiedDate":"2022-10-12"},{"lineNumber":188,"author":{"gitId":"huzaifa1712"},"content":"//                if (PrereqTreeOneOf.class.equals(Integer.class) || PrereqTreeOneOf.class.equals(Long.class)","lastModifiedDate":"2022-10-12"},{"lineNumber":189,"author":{"gitId":"huzaifa1712"},"content":"//                    || PrereqTreeOneOf.class.equals(Float.class) || PrereqTreeOneOf.class.equals(Double.class)","lastModifiedDate":"2022-10-12"},{"lineNumber":190,"author":{"gitId":"huzaifa1712"},"content":"//                    || PrereqTreeOneOf.class.equals(Boolean.class) || PrereqTreeOneOf.class.equals(String.class)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":191,"author":{"gitId":"huzaifa1712"},"content":"//                    attemptParsing \u003d typeCoercion;","lastModifiedDate":"2022-10-12"},{"lineNumber":192,"author":{"gitId":"huzaifa1712"},"content":"//                    if (!attemptParsing) {","lastModifiedDate":"2022-10-12"},{"lineNumber":193,"author":{"gitId":"huzaifa1712"},"content":"//                        attemptParsing |\u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":194,"author":{"gitId":"huzaifa1712"},"content":"//                            ((PrereqTreeOneOf.class.equals(Integer.class) || PrereqTreeOneOf.class.equals(Long.class))","lastModifiedDate":"2022-10-12"},{"lineNumber":195,"author":{"gitId":"huzaifa1712"},"content":"//                                \u0026\u0026 token \u003d\u003d JsonToken.VALUE_NUMBER_INT);","lastModifiedDate":"2022-10-12"},{"lineNumber":196,"author":{"gitId":"huzaifa1712"},"content":"//                        attemptParsing |\u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":197,"author":{"gitId":"huzaifa1712"},"content":"//                            ((PrereqTreeOneOf.class.equals(Float.class) || PrereqTreeOneOf.class.equals(Double.class))","lastModifiedDate":"2022-10-12"},{"lineNumber":198,"author":{"gitId":"huzaifa1712"},"content":"//                                \u0026\u0026 token \u003d\u003d JsonToken.VALUE_NUMBER_FLOAT);","lastModifiedDate":"2022-10-12"},{"lineNumber":199,"author":{"gitId":"huzaifa1712"},"content":"//                        attemptParsing |\u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":200,"author":{"gitId":"huzaifa1712"},"content":"//                            (PrereqTreeOneOf.class.equals(Boolean.class) \u0026\u0026 (token \u003d\u003d JsonToken.VALUE_FALSE","lastModifiedDate":"2022-10-12"},{"lineNumber":201,"author":{"gitId":"huzaifa1712"},"content":"//                                || token \u003d\u003d JsonToken.VALUE_TRUE));","lastModifiedDate":"2022-10-12"},{"lineNumber":202,"author":{"gitId":"huzaifa1712"},"content":"//                        attemptParsing |\u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":203,"author":{"gitId":"huzaifa1712"},"content":"//                            (PrereqTreeOneOf.class.equals(String.class) \u0026\u0026 token \u003d\u003d JsonToken.VALUE_STRING);","lastModifiedDate":"2022-10-12"},{"lineNumber":204,"author":{"gitId":"huzaifa1712"},"content":"//                    }","lastModifiedDate":"2022-10-12"},{"lineNumber":205,"author":{"gitId":"huzaifa1712"},"content":"//                }","lastModifiedDate":"2022-10-12"},{"lineNumber":206,"author":{"gitId":"huzaifa1712"},"content":"//                if (attemptParsing) {","lastModifiedDate":"2022-10-12"},{"lineNumber":207,"author":{"gitId":"huzaifa1712"},"content":"//                    deserialized \u003d tree.traverse(jp.getCodec()).readValueAs(PrereqTreeOneOf.class);","lastModifiedDate":"2022-10-12"},{"lineNumber":208,"author":{"gitId":"huzaifa1712"},"content":"//                    // TODO: there is no validation against JSON schema constraints","lastModifiedDate":"2022-10-12"},{"lineNumber":209,"author":{"gitId":"huzaifa1712"},"content":"//                    // (min, max, enum, pattern...), this does not perform a strict JSON","lastModifiedDate":"2022-10-12"},{"lineNumber":210,"author":{"gitId":"huzaifa1712"},"content":"//                    // validation, which means the \u0027match\u0027 count may be higher than it should be.","lastModifiedDate":"2022-10-12"},{"lineNumber":211,"author":{"gitId":"huzaifa1712"},"content":"//                    match++;","lastModifiedDate":"2022-10-12"},{"lineNumber":212,"author":{"gitId":"huzaifa1712"},"content":"//                    log.log(Level.FINER, \"Input data matches schema \u0027PrereqTreeOneOf\u0027\");","lastModifiedDate":"2022-10-12"},{"lineNumber":213,"author":{"gitId":"huzaifa1712"},"content":"//                }","lastModifiedDate":"2022-10-12"},{"lineNumber":214,"author":{"gitId":"huzaifa1712"},"content":"//            } catch (Exception e) {","lastModifiedDate":"2022-10-12"},{"lineNumber":215,"author":{"gitId":"huzaifa1712"},"content":"//                // deserialization failed, continue","lastModifiedDate":"2022-10-12"},{"lineNumber":216,"author":{"gitId":"huzaifa1712"},"content":"//                log.log(Level.FINER, \"Input data does not match schema \u0027PrereqTreeOneOf\u0027\", e);","lastModifiedDate":"2022-10-12"},{"lineNumber":217,"author":{"gitId":"huzaifa1712"},"content":"//            }","lastModifiedDate":"2022-10-12"},{"lineNumber":218,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":219,"author":{"gitId":"huzaifa1712"},"content":"//            // deserialize PrereqTreeOneOf1","lastModifiedDate":"2022-10-12"},{"lineNumber":220,"author":{"gitId":"huzaifa1712"},"content":"//            try {","lastModifiedDate":"2022-10-12"},{"lineNumber":221,"author":{"gitId":"huzaifa1712"},"content":"//                boolean attemptParsing \u003d true;","lastModifiedDate":"2022-10-12"},{"lineNumber":222,"author":{"gitId":"huzaifa1712"},"content":"//                // ensure that we respect type coercion as set on the client ObjectMapper","lastModifiedDate":"2022-10-12"},{"lineNumber":223,"author":{"gitId":"huzaifa1712"},"content":"//                if (PrereqTreeOneOf1.class.equals(Integer.class) || PrereqTreeOneOf1.class.equals(Long.class)","lastModifiedDate":"2022-10-12"},{"lineNumber":224,"author":{"gitId":"huzaifa1712"},"content":"//                    || PrereqTreeOneOf1.class.equals(Float.class) || PrereqTreeOneOf1.class.equals(Double.class)","lastModifiedDate":"2022-10-12"},{"lineNumber":225,"author":{"gitId":"huzaifa1712"},"content":"//                    || PrereqTreeOneOf1.class.equals(Boolean.class) || PrereqTreeOneOf1.class.equals(String.class)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":226,"author":{"gitId":"huzaifa1712"},"content":"//                    attemptParsing \u003d typeCoercion;","lastModifiedDate":"2022-10-12"},{"lineNumber":227,"author":{"gitId":"huzaifa1712"},"content":"//                    if (!attemptParsing) {","lastModifiedDate":"2022-10-12"},{"lineNumber":228,"author":{"gitId":"huzaifa1712"},"content":"//                        attemptParsing |\u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":229,"author":{"gitId":"huzaifa1712"},"content":"//                            ((PrereqTreeOneOf1.class.equals(Integer.class) || PrereqTreeOneOf1.class.equals(Long.class))","lastModifiedDate":"2022-10-12"},{"lineNumber":230,"author":{"gitId":"huzaifa1712"},"content":"//                                \u0026\u0026 token \u003d\u003d JsonToken.VALUE_NUMBER_INT);","lastModifiedDate":"2022-10-12"},{"lineNumber":231,"author":{"gitId":"huzaifa1712"},"content":"//                        attemptParsing |\u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":232,"author":{"gitId":"huzaifa1712"},"content":"//                            ((PrereqTreeOneOf1.class.equals(Float.class) || PrereqTreeOneOf1.class.equals(Double.class))","lastModifiedDate":"2022-10-12"},{"lineNumber":233,"author":{"gitId":"huzaifa1712"},"content":"//                                \u0026\u0026 token \u003d\u003d JsonToken.VALUE_NUMBER_FLOAT);","lastModifiedDate":"2022-10-12"},{"lineNumber":234,"author":{"gitId":"huzaifa1712"},"content":"//                        attemptParsing |\u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":235,"author":{"gitId":"huzaifa1712"},"content":"//                            (PrereqTreeOneOf1.class.equals(Boolean.class) \u0026\u0026 (token \u003d\u003d JsonToken.VALUE_FALSE","lastModifiedDate":"2022-10-12"},{"lineNumber":236,"author":{"gitId":"huzaifa1712"},"content":"//                                || token \u003d\u003d JsonToken.VALUE_TRUE));","lastModifiedDate":"2022-10-12"},{"lineNumber":237,"author":{"gitId":"huzaifa1712"},"content":"//                        attemptParsing |\u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":238,"author":{"gitId":"huzaifa1712"},"content":"//                            (PrereqTreeOneOf1.class.equals(String.class) \u0026\u0026 token \u003d\u003d JsonToken.VALUE_STRING);","lastModifiedDate":"2022-10-12"},{"lineNumber":239,"author":{"gitId":"huzaifa1712"},"content":"//                    }","lastModifiedDate":"2022-10-12"},{"lineNumber":240,"author":{"gitId":"huzaifa1712"},"content":"//                }","lastModifiedDate":"2022-10-12"},{"lineNumber":241,"author":{"gitId":"huzaifa1712"},"content":"//                if (attemptParsing) {","lastModifiedDate":"2022-10-12"},{"lineNumber":242,"author":{"gitId":"huzaifa1712"},"content":"//                    deserialized \u003d tree.traverse(jp.getCodec()).readValueAs(PrereqTreeOneOf1.class);","lastModifiedDate":"2022-10-12"},{"lineNumber":243,"author":{"gitId":"huzaifa1712"},"content":"//                    // TODO: there is no validation against JSON schema constraints","lastModifiedDate":"2022-10-12"},{"lineNumber":244,"author":{"gitId":"huzaifa1712"},"content":"//                    // (min, max, enum, pattern...), this does not perform a strict JSON","lastModifiedDate":"2022-10-12"},{"lineNumber":245,"author":{"gitId":"huzaifa1712"},"content":"//                    // validation, which means the \u0027match\u0027 count may be higher than it should be.","lastModifiedDate":"2022-10-12"},{"lineNumber":246,"author":{"gitId":"huzaifa1712"},"content":"//                    match++;","lastModifiedDate":"2022-10-12"},{"lineNumber":247,"author":{"gitId":"huzaifa1712"},"content":"//                    log.log(Level.FINER, \"Input data matches schema \u0027PrereqTreeOneOf1\u0027\");","lastModifiedDate":"2022-10-12"},{"lineNumber":248,"author":{"gitId":"huzaifa1712"},"content":"//                }","lastModifiedDate":"2022-10-12"},{"lineNumber":249,"author":{"gitId":"huzaifa1712"},"content":"//            } catch (Exception e) {","lastModifiedDate":"2022-10-12"},{"lineNumber":250,"author":{"gitId":"huzaifa1712"},"content":"//                // deserialization failed, continue","lastModifiedDate":"2022-10-12"},{"lineNumber":251,"author":{"gitId":"huzaifa1712"},"content":"//                log.log(Level.FINER, \"Input data does not match schema \u0027PrereqTreeOneOf1\u0027\", e);","lastModifiedDate":"2022-10-12"},{"lineNumber":252,"author":{"gitId":"huzaifa1712"},"content":"//            }","lastModifiedDate":"2022-10-12"},{"lineNumber":253,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":254,"author":{"gitId":"huzaifa1712"},"content":"//            // deserialize String","lastModifiedDate":"2022-10-12"},{"lineNumber":255,"author":{"gitId":"huzaifa1712"},"content":"//            try {","lastModifiedDate":"2022-10-12"},{"lineNumber":256,"author":{"gitId":"huzaifa1712"},"content":"//                boolean attemptParsing \u003d true;","lastModifiedDate":"2022-10-12"},{"lineNumber":257,"author":{"gitId":"huzaifa1712"},"content":"//                // ensure that we respect type coercion as set on the client ObjectMapper","lastModifiedDate":"2022-10-12"},{"lineNumber":258,"author":{"gitId":"huzaifa1712"},"content":"//                if (String.class.equals(Integer.class) || String.class.equals(Long.class) || String.class.equals(","lastModifiedDate":"2022-10-12"},{"lineNumber":259,"author":{"gitId":"huzaifa1712"},"content":"//                    Float.class) || String.class.equals(Double.class) || String.class.equals(Boolean.class)","lastModifiedDate":"2022-10-12"},{"lineNumber":260,"author":{"gitId":"huzaifa1712"},"content":"//                    || String.class.equals(String.class)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":261,"author":{"gitId":"huzaifa1712"},"content":"//                    attemptParsing \u003d typeCoercion;","lastModifiedDate":"2022-10-12"},{"lineNumber":262,"author":{"gitId":"huzaifa1712"},"content":"//                    if (!attemptParsing) {","lastModifiedDate":"2022-10-12"},{"lineNumber":263,"author":{"gitId":"huzaifa1712"},"content":"//                        attemptParsing |\u003d ((String.class.equals(Integer.class) || String.class.equals(Long.class))","lastModifiedDate":"2022-10-12"},{"lineNumber":264,"author":{"gitId":"huzaifa1712"},"content":"//                            \u0026\u0026 token \u003d\u003d JsonToken.VALUE_NUMBER_INT);","lastModifiedDate":"2022-10-12"},{"lineNumber":265,"author":{"gitId":"huzaifa1712"},"content":"//                        attemptParsing |\u003d ((String.class.equals(Float.class) || String.class.equals(Double.class))","lastModifiedDate":"2022-10-12"},{"lineNumber":266,"author":{"gitId":"huzaifa1712"},"content":"//                            \u0026\u0026 token \u003d\u003d JsonToken.VALUE_NUMBER_FLOAT);","lastModifiedDate":"2022-10-12"},{"lineNumber":267,"author":{"gitId":"huzaifa1712"},"content":"//                        attemptParsing |\u003d (String.class.equals(Boolean.class) \u0026\u0026 (token \u003d\u003d JsonToken.VALUE_FALSE","lastModifiedDate":"2022-10-12"},{"lineNumber":268,"author":{"gitId":"huzaifa1712"},"content":"//                            || token \u003d\u003d JsonToken.VALUE_TRUE));","lastModifiedDate":"2022-10-12"},{"lineNumber":269,"author":{"gitId":"huzaifa1712"},"content":"//                        attemptParsing |\u003d (String.class.equals(String.class) \u0026\u0026 token \u003d\u003d JsonToken.VALUE_STRING);","lastModifiedDate":"2022-10-12"},{"lineNumber":270,"author":{"gitId":"huzaifa1712"},"content":"//                    }","lastModifiedDate":"2022-10-12"},{"lineNumber":271,"author":{"gitId":"huzaifa1712"},"content":"//                }","lastModifiedDate":"2022-10-12"},{"lineNumber":272,"author":{"gitId":"huzaifa1712"},"content":"//                if (attemptParsing) {","lastModifiedDate":"2022-10-12"},{"lineNumber":273,"author":{"gitId":"huzaifa1712"},"content":"//                    deserialized \u003d tree.traverse(jp.getCodec()).readValueAs(String.class);","lastModifiedDate":"2022-10-12"},{"lineNumber":274,"author":{"gitId":"huzaifa1712"},"content":"//                    // TODO: there is no validation against JSON schema constraints","lastModifiedDate":"2022-10-12"},{"lineNumber":275,"author":{"gitId":"huzaifa1712"},"content":"//                    // (min, max, enum, pattern...), this does not perform a strict JSON","lastModifiedDate":"2022-10-12"},{"lineNumber":276,"author":{"gitId":"huzaifa1712"},"content":"//                    // validation, which means the \u0027match\u0027 count may be higher than it should be.","lastModifiedDate":"2022-10-12"},{"lineNumber":277,"author":{"gitId":"huzaifa1712"},"content":"//                    match++;","lastModifiedDate":"2022-10-12"},{"lineNumber":278,"author":{"gitId":"huzaifa1712"},"content":"//                    log.log(Level.FINER, \"Input data matches schema \u0027String\u0027\");","lastModifiedDate":"2022-10-12"},{"lineNumber":279,"author":{"gitId":"huzaifa1712"},"content":"//                }","lastModifiedDate":"2022-10-12"},{"lineNumber":280,"author":{"gitId":"huzaifa1712"},"content":"//            } catch (Exception e) {","lastModifiedDate":"2022-10-12"},{"lineNumber":281,"author":{"gitId":"huzaifa1712"},"content":"//                // deserialization failed, continue","lastModifiedDate":"2022-10-12"},{"lineNumber":282,"author":{"gitId":"huzaifa1712"},"content":"//                log.log(Level.FINER, \"Input data does not match schema \u0027String\u0027\", e);","lastModifiedDate":"2022-10-12"},{"lineNumber":283,"author":{"gitId":"huzaifa1712"},"content":"//            }","lastModifiedDate":"2022-10-12"},{"lineNumber":284,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":285,"author":{"gitId":"huzaifa1712"},"content":"//            if (match \u003d\u003d 1) {","lastModifiedDate":"2022-10-12"},{"lineNumber":286,"author":{"gitId":"huzaifa1712"},"content":"//                PrereqTree ret \u003d new PrereqTree();","lastModifiedDate":"2022-10-12"},{"lineNumber":287,"author":{"gitId":"huzaifa1712"},"content":"//                ret.setActualInstance(deserialized);","lastModifiedDate":"2022-10-12"},{"lineNumber":288,"author":{"gitId":"huzaifa1712"},"content":"//                return ret;","lastModifiedDate":"2022-10-12"},{"lineNumber":289,"author":{"gitId":"huzaifa1712"},"content":"//            }","lastModifiedDate":"2022-10-12"},{"lineNumber":290,"author":{"gitId":"huzaifa1712"},"content":"//            throw new IOException(","lastModifiedDate":"2022-10-12"},{"lineNumber":291,"author":{"gitId":"huzaifa1712"},"content":"//                String.format(\"Failed deserialization for PrereqTree: %d classes match result, expected 1\", match));","lastModifiedDate":"2022-10-12"},{"lineNumber":292,"author":{"gitId":"huzaifa1712"},"content":"//        }","lastModifiedDate":"2022-10-12"},{"lineNumber":293,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":294,"author":{"gitId":"huzaifa1712"},"content":"//        /**","lastModifiedDate":"2022-10-12"},{"lineNumber":295,"author":{"gitId":"huzaifa1712"},"content":"//         * Handle deserialization of the \u0027null\u0027 value.","lastModifiedDate":"2022-10-12"},{"lineNumber":296,"author":{"gitId":"huzaifa1712"},"content":"//         */","lastModifiedDate":"2022-10-12"},{"lineNumber":297,"author":{"gitId":"huzaifa1712"},"content":"//        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":298,"author":{"gitId":"huzaifa1712"},"content":"//        public PrereqTree getNullValue(DeserializationContext ctxt) throws JsonMappingException {","lastModifiedDate":"2022-10-12"},{"lineNumber":299,"author":{"gitId":"huzaifa1712"},"content":"//            throw new JsonMappingException(ctxt.getParser(), \"PrereqTree cannot be null\");","lastModifiedDate":"2022-10-12"},{"lineNumber":300,"author":{"gitId":"huzaifa1712"},"content":"//        }","lastModifiedDate":"2022-10-12"},{"lineNumber":301,"author":{"gitId":"huzaifa1712"},"content":"//    }","lastModifiedDate":"2022-10-12"},{"lineNumber":302,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":303,"author":{"gitId":"huzaifa1712"},"content":"//}","lastModifiedDate":"2022-10-12"},{"lineNumber":304,"author":{"gitId":"huzaifa1712"},"content":"//","lastModifiedDate":"2022-10-12"},{"lineNumber":305,"author":{"gitId":"shenyih0ng"},"content":"/*","lastModifiedDate":"2022-10-03"},{"lineNumber":306,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API","lastModifiedDate":"2022-10-03"},{"lineNumber":307,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API contains data used to render \u003chttps://nusmods.com\u003e. It includes data on modules offered by NUS and their timetables, as well as information on the locations the classes take place in. You are welcome to use and experiment with the data, which is extracted from official APIs provided by the Registrar\u0027s Office.  The API consists of static JSON files scraped daily from the school\u0027s APIs. This means it only partially follow REST conventions, and all resources are read only. All successful responses will return JSON, and all endpoints end in `.json`.  The shape of the data returned by these endpoints are designed for NUSMods in mind. If you have any questions or find that you need the data in other shapes for other purposes, feel free to reach out to us:  - **Telegram**: \u003chttps://telegram.me/nusmods\u003e - **Mailing list**: \u003cnusmods@googlegroups.com\u003e (for security related issues please email \u003cmods@nusmods.com\u003e instead)  ## Fetching data  Any HTTP client can be used to fetch data from the API. HTTPS is preferred, but the server will also respond to HTTP requests. The server supports HTTP 1.1 as well as HTTP 2 over HTTPS, and supports gzip compression.  The API has no authentication, and is not rate limited. While the server can respond to a large number of requests simultaneously, we request that you be polite with resource usage so as not to disrupt nusmods.com, which relies on the same API server. In general there is no need to fetch data from the API more than once per day, as that is the frequency at which we update the data.  [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) headers are enabled on all endpoints, so client-side JavaScript can use also use the API.  ## TypeScript types  Since the NUSMods is written in TypeScript, typings are available in the source for the scraper. These may be easier to read than the documentation generated by Swagger.  - Module types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/modules.ts\u003e - Venue types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/venues.ts\u003e  ## Data  Below are some notes about the data returned from the API. Feel free to talk to us or create an issue if any of it is not clear.  ### Module data  Module endpoints return information on modules offered by NUS. Most of the module data is self-explanatory, but some of the data are more complex and is explained here.  #### Lessons  Each lesson in a timetable has a lesson type `lessonType` and class number `ClassNo`. Every student must take one of each lesson type offered by the module. For example, this module offers two tutorials and one lecture. That means the student must attend the lecture, and can choose one of the two tutorials to attend.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"01\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1100\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"COM1-0207\\\"     },     {       \\\"classNo\\\": \\\"02\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Friday\\\",       \\\"startTime\\\": \\\"0900\\\",       \\\"endTime\\\": \\\"1000\\\",       \\\"venue\\\": \\\"COM1-0209\\\"     }   ] } ```  Each lesson has a `classNo` key. There can be multiple lessons of the same type and class number, in which case students must attend both. In this example, students can choose to attend either lecture group 1 on Tuesdays and Wednesdays, or lecture group 2 on Mondays and Wednesdays.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1400\\\",       \\\"endTime\\\": \\\"1500\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Monday\\\",       \\\"startTime\\\": \\\"1000\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1500\\\",       \\\"endTime\\\": \\\"1600\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     }   ] } ```  #### Lesson Weeks  The `weeks` key on lessons can return data in one of two forms.  Weeks is usually a sorted array of numbers. In this case it represents the school weeks the lesson occurs on, from 1 to 13.  Some classes have lessons outside of the school timetable. In this case a `WeekRange` object is returned. The object will always contain a `start` and `end` key representing the start and end date of lessons. The example below has classes every week from 17th Jan to 18th April.  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-04-18\\\" } ```  Optionally it can also include `weekInterval`, a positive integer describing the number of weeks between each lesson, and `weeks`, an array of positive integers describing the weeks on which the lesson will fall, with week 1 being the starting date. If these are not present you can assume lessons will occur every week.  The following example has lessons on 17th Jan (week 1), 24th Jan (week 2), 7th Feb (week 4) and 21st Feb (week 6).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-21\\\",   \\\"weeks\\\": [1, 2, 4, 6] } ```  The following example has lessons on 17th Jan (week 1), 31st Jan (week 3), 14th Feb (week 5) and 28th Feb (week 7).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-28\\\",   \\\"weekInterval\\\": 2 } ```  #### Workload  The `workload` key can return data in one of two forms.  Workload is usually a **5-tuple of numbers**, describing the estimated number of hours per week the student is expected to put in for the module for **lectures, tutorials, laboratory, projects/fieldwork, and preparatory work** respectively. For example, a workload of `[2, 1, 1, 3, 3]` means the student should spend every week  - 2 hours in lectures - 1 hour in tutorials - 1 hour at the lab - 3 hours doing project work - 3 hours preparing for classes  Each module credit represents 2.5 hours of work each week, so the standard 4 MC module represents 10 hours of work each week. Module credit may not be integers.  Note that this is only an estimate, and may be outdated or differ significantly in reality. Some modules also incorrectly lists the **total** workload hours instead of weekly, so very large values may show up.  This value is parsed from a string provided by the school, and occasionally this field will contain unusual values which cannot be parsed. In this case this field will contain the original **string** instead, which should be displayed as-is to the user.  #### Prerequisite, corequisite and preclusions  These three keys determine whether a student can take a module.  **Prerequisites** are requirements you have to meet before you can take a module. These are usually in the form of other modules (see prerequisite tree below for a machine readable format), but can also be things like \u0027taken A-level H2 math\u0027 or \u002770 MCs and above\u0027.  **Preclusions** refer to modules or requirements that cannot be taken if this module is taken, and vice versa. These are usually modules whose content overlaps significantly with this module, and can usually be used to replace each other to fulfill prerequisites.  **Corequisites** are modules that must be taken together with this module in the same semester. This usually refer to twined modules - modules which have linked syllabuses.  #### Prerequisite Tree  The `prereqTree` key is return on the individual module endpoint (`/modules/{moduleCode`). Not all modules have prerequisites, and some have prerequisites that cannot be properly represented as a tree, in which case this key will not appear.  This describes the prerequisites that need to be fulfilled before this module can be taken. The data structure is recursive and represents a tree.  ```json {   \\\"and\\\": [     \\\"CS1231\\\",     {       \\\"or\\\": [\\\"CS1010S\\\", \\\"CS1010X\\\"]     }   ] } ```  In the example, this module requires CS1231 and either CS1010S or CS1010X. This can be visualized as  ```            ┌ CS1231 ── all of ─┤            │         ┌ CS1010            └ one of ─┤                      └ CS1010X ```  The module information also contains the inverse of this, that is, modules whose requirements are fulfilled by this module (taking this module will allow you to take these modules in the following semester). The data is found on the `fulfillRequirements` key as an array of module codes.  ### Venue data  Venue data is simply the module timetable restructured to show the lessons happening at each classroom.  The venue list endpoint returns a list of all locations that are used in the semester. Note that this is not a comprehensive list of locations, but rather just a list of venues that appears in module lessons.  The venue information endpoint returns the full class and occupancy information about a venue. The `classes` key contains a list of lessons similar to the `timetable` key in module data, but without a `venue` key and with `moduleCode`.","lastModifiedDate":"2022-10-03"},{"lineNumber":308,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":309,"author":{"gitId":"shenyih0ng"},"content":" * The version of the OpenAPI document: 2.0.0","lastModifiedDate":"2022-10-03"},{"lineNumber":310,"author":{"gitId":"shenyih0ng"},"content":" * Contact: nusmods@googlegroups.com","lastModifiedDate":"2022-10-03"},{"lineNumber":311,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":312,"author":{"gitId":"shenyih0ng"},"content":" * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).","lastModifiedDate":"2022-10-03"},{"lineNumber":313,"author":{"gitId":"shenyih0ng"},"content":" * https://openapi-generator.tech","lastModifiedDate":"2022-10-03"},{"lineNumber":314,"author":{"gitId":"shenyih0ng"},"content":" * Do not edit the class manually.","lastModifiedDate":"2022-10-03"},{"lineNumber":315,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":316,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":317,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":318,"author":{"gitId":"shenyih0ng"},"content":"package org.openapitools.client.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":319,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":320,"author":{"gitId":"shenyih0ng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-03"},{"lineNumber":321,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-03"},{"lineNumber":322,"author":{"gitId":"shenyih0ng"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-07"},{"lineNumber":323,"author":{"gitId":"shenyih0ng"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-03"},{"lineNumber":324,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-07"},{"lineNumber":325,"author":{"gitId":"shenyih0ng"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-10-07"},{"lineNumber":326,"author":{"gitId":"shenyih0ng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-07"},{"lineNumber":327,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":328,"author":{"gitId":"shenyih0ng"},"content":"import org.openapitools.client.JSON;","lastModifiedDate":"2022-10-07"},{"lineNumber":329,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.core.JsonGenerator;","lastModifiedDate":"2022-10-03"},{"lineNumber":330,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.core.JsonParser;","lastModifiedDate":"2022-10-03"},{"lineNumber":331,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2022-10-03"},{"lineNumber":332,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.core.JsonToken;","lastModifiedDate":"2022-10-03"},{"lineNumber":333,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2022-10-03"},{"lineNumber":334,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.JsonMappingException;","lastModifiedDate":"2022-10-03"},{"lineNumber":335,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.JsonNode;","lastModifiedDate":"2022-10-03"},{"lineNumber":336,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.MapperFeature;","lastModifiedDate":"2022-10-03"},{"lineNumber":337,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.SerializerProvider;","lastModifiedDate":"2022-10-03"},{"lineNumber":338,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.annotation.JsonDeserialize;","lastModifiedDate":"2022-10-03"},{"lineNumber":339,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.annotation.JsonSerialize;","lastModifiedDate":"2022-10-03"},{"lineNumber":340,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.deser.std.StdDeserializer;","lastModifiedDate":"2022-10-03"},{"lineNumber":341,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.ser.std.StdSerializer;","lastModifiedDate":"2022-10-03"},{"lineNumber":342,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":343,"author":{"gitId":"shenyih0ng"},"content":"@javax.annotation.processing.Generated(value \u003d \"org.openapitools.codegen.languages.JavaClientCodegen\", date \u003d \"2022-10-03T22:22:26.802458+08:00[Asia/Singapore]\")","lastModifiedDate":"2022-10-03"},{"lineNumber":344,"author":{"gitId":"shenyih0ng"},"content":"@JsonDeserialize(using \u003d PrereqTree.PrereqTreeDeserializer.class)","lastModifiedDate":"2022-10-03"},{"lineNumber":345,"author":{"gitId":"shenyih0ng"},"content":"@JsonSerialize(using \u003d PrereqTree.PrereqTreeSerializer.class)","lastModifiedDate":"2022-10-03"},{"lineNumber":346,"author":{"gitId":"shenyih0ng"},"content":"public class PrereqTree extends AbstractOpenApiSchema {","lastModifiedDate":"2022-10-03"},{"lineNumber":347,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":348,"author":{"gitId":"shenyih0ng"},"content":"    // store a list of schema names defined in oneOf","lastModifiedDate":"2022-10-07"},{"lineNumber":349,"author":{"gitId":"shenyih0ng"},"content":"    public static final Map\u003cString, Class\u003c?\u003e\u003e schemas \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":350,"author":{"gitId":"shenyih0ng"},"content":"    private static final Logger log \u003d Logger.getLogger(PrereqTree.class.getName());","lastModifiedDate":"2022-10-03"},{"lineNumber":351,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":352,"author":{"gitId":"shenyih0ng"},"content":"    static {","lastModifiedDate":"2022-10-07"},{"lineNumber":353,"author":{"gitId":"shenyih0ng"},"content":"        schemas.put(\"PrereqTreeOneOf\", PrereqTreeOneOf.class);","lastModifiedDate":"2022-10-07"},{"lineNumber":354,"author":{"gitId":"shenyih0ng"},"content":"        schemas.put(\"PrereqTreeOneOf1\", PrereqTreeOneOf1.class);","lastModifiedDate":"2022-10-07"},{"lineNumber":355,"author":{"gitId":"shenyih0ng"},"content":"        schemas.put(\"String\", String.class);","lastModifiedDate":"2022-10-07"},{"lineNumber":356,"author":{"gitId":"shenyih0ng"},"content":"        JSON.registerDescendants(PrereqTree.class, Collections.unmodifiableMap(schemas));","lastModifiedDate":"2022-10-07"},{"lineNumber":357,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":358,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":359,"author":{"gitId":"shenyih0ng"},"content":"    public PrereqTree() {","lastModifiedDate":"2022-10-07"},{"lineNumber":360,"author":{"gitId":"shenyih0ng"},"content":"        super(\"oneOf\", Boolean.FALSE);","lastModifiedDate":"2022-10-07"},{"lineNumber":361,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":362,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":363,"author":{"gitId":"shenyih0ng"},"content":"    public PrereqTree(PrereqTreeOneOf o) {","lastModifiedDate":"2022-10-07"},{"lineNumber":364,"author":{"gitId":"shenyih0ng"},"content":"        super(\"oneOf\", Boolean.FALSE);","lastModifiedDate":"2022-10-07"},{"lineNumber":365,"author":{"gitId":"shenyih0ng"},"content":"        setActualInstance(o);","lastModifiedDate":"2022-10-07"},{"lineNumber":366,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":367,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":368,"author":{"gitId":"shenyih0ng"},"content":"    public PrereqTree(PrereqTreeOneOf1 o) {","lastModifiedDate":"2022-10-07"},{"lineNumber":369,"author":{"gitId":"shenyih0ng"},"content":"        super(\"oneOf\", Boolean.FALSE);","lastModifiedDate":"2022-10-07"},{"lineNumber":370,"author":{"gitId":"shenyih0ng"},"content":"        setActualInstance(o);","lastModifiedDate":"2022-10-07"},{"lineNumber":371,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":372,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":373,"author":{"gitId":"shenyih0ng"},"content":"    public PrereqTree(String o) {","lastModifiedDate":"2022-10-07"},{"lineNumber":374,"author":{"gitId":"shenyih0ng"},"content":"        super(\"oneOf\", Boolean.FALSE);","lastModifiedDate":"2022-10-07"},{"lineNumber":375,"author":{"gitId":"shenyih0ng"},"content":"        setActualInstance(o);","lastModifiedDate":"2022-10-07"},{"lineNumber":376,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":377,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":378,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":379,"author":{"gitId":"shenyih0ng"},"content":"    public Map\u003cString, Class\u003c?\u003e\u003e getSchemas() {","lastModifiedDate":"2022-10-07"},{"lineNumber":380,"author":{"gitId":"shenyih0ng"},"content":"        return PrereqTree.schemas;","lastModifiedDate":"2022-10-07"},{"lineNumber":381,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":382,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":383,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":384,"author":{"gitId":"shenyih0ng"},"content":"     * Get the actual instance, which can be the following: PrereqTreeOneOf, PrereqTreeOneOf1, String","lastModifiedDate":"2022-10-07"},{"lineNumber":385,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":386,"author":{"gitId":"shenyih0ng"},"content":"     * @return The actual instance (PrereqTreeOneOf, PrereqTreeOneOf1, String)","lastModifiedDate":"2022-10-07"},{"lineNumber":387,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":388,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":389,"author":{"gitId":"shenyih0ng"},"content":"    public Object getActualInstance() {","lastModifiedDate":"2022-10-07"},{"lineNumber":390,"author":{"gitId":"shenyih0ng"},"content":"        return super.getActualInstance();","lastModifiedDate":"2022-10-07"},{"lineNumber":391,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":392,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":393,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":394,"author":{"gitId":"shenyih0ng"},"content":"     * Set the instance that matches the oneOf child schema, check the instance parameter is valid against the oneOf","lastModifiedDate":"2022-10-07"},{"lineNumber":395,"author":{"gitId":"shenyih0ng"},"content":"     * child schemas: PrereqTreeOneOf, PrereqTreeOneOf1, String","lastModifiedDate":"2022-10-07"},{"lineNumber":396,"author":{"gitId":"shenyih0ng"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":397,"author":{"gitId":"shenyih0ng"},"content":"     * It could be an instance of the \u0027oneOf\u0027 schemas. The oneOf child schemas may themselves be a composed schema","lastModifiedDate":"2022-10-07"},{"lineNumber":398,"author":{"gitId":"shenyih0ng"},"content":"     * (allOf, anyOf, oneOf).","lastModifiedDate":"2022-10-07"},{"lineNumber":399,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":400,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":401,"author":{"gitId":"shenyih0ng"},"content":"    public void setActualInstance(Object instance) {","lastModifiedDate":"2022-10-07"},{"lineNumber":402,"author":{"gitId":"shenyih0ng"},"content":"        if (JSON.isInstanceOf(PrereqTreeOneOf.class, instance, new HashSet\u003cClass\u003c?\u003e\u003e())) {","lastModifiedDate":"2022-10-07"},{"lineNumber":403,"author":{"gitId":"shenyih0ng"},"content":"            super.setActualInstance(instance);","lastModifiedDate":"2022-10-07"},{"lineNumber":404,"author":{"gitId":"shenyih0ng"},"content":"            return;","lastModifiedDate":"2022-10-07"},{"lineNumber":405,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":406,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":407,"author":{"gitId":"shenyih0ng"},"content":"        if (JSON.isInstanceOf(PrereqTreeOneOf1.class, instance, new HashSet\u003cClass\u003c?\u003e\u003e())) {","lastModifiedDate":"2022-10-07"},{"lineNumber":408,"author":{"gitId":"shenyih0ng"},"content":"            super.setActualInstance(instance);","lastModifiedDate":"2022-10-07"},{"lineNumber":409,"author":{"gitId":"shenyih0ng"},"content":"            return;","lastModifiedDate":"2022-10-07"},{"lineNumber":410,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":411,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":412,"author":{"gitId":"shenyih0ng"},"content":"        if (JSON.isInstanceOf(String.class, instance, new HashSet\u003cClass\u003c?\u003e\u003e())) {","lastModifiedDate":"2022-10-07"},{"lineNumber":413,"author":{"gitId":"shenyih0ng"},"content":"            super.setActualInstance(instance);","lastModifiedDate":"2022-10-07"},{"lineNumber":414,"author":{"gitId":"shenyih0ng"},"content":"            return;","lastModifiedDate":"2022-10-07"},{"lineNumber":415,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":416,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":417,"author":{"gitId":"shenyih0ng"},"content":"        throw new RuntimeException(\"Invalid instance type. Must be PrereqTreeOneOf, PrereqTreeOneOf1, String\");","lastModifiedDate":"2022-10-07"},{"lineNumber":418,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":419,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":420,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":421,"author":{"gitId":"shenyih0ng"},"content":"     * Get the actual instance of `PrereqTreeOneOf`. If the actual instance is not `PrereqTreeOneOf`, the","lastModifiedDate":"2022-10-07"},{"lineNumber":422,"author":{"gitId":"shenyih0ng"},"content":"     * ClassCastException will be thrown.","lastModifiedDate":"2022-10-07"},{"lineNumber":423,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":424,"author":{"gitId":"shenyih0ng"},"content":"     * @return The actual instance of `PrereqTreeOneOf`","lastModifiedDate":"2022-10-07"},{"lineNumber":425,"author":{"gitId":"shenyih0ng"},"content":"     * @throws ClassCastException if the instance is not `PrereqTreeOneOf`","lastModifiedDate":"2022-10-07"},{"lineNumber":426,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":427,"author":{"gitId":"shenyih0ng"},"content":"    public PrereqTreeOneOf getPrereqTreeOneOf() throws ClassCastException {","lastModifiedDate":"2022-10-07"},{"lineNumber":428,"author":{"gitId":"shenyih0ng"},"content":"        return (PrereqTreeOneOf) super.getActualInstance();","lastModifiedDate":"2022-10-07"},{"lineNumber":429,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":430,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":431,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":432,"author":{"gitId":"shenyih0ng"},"content":"     * Get the actual instance of `PrereqTreeOneOf1`. If the actual instance is not `PrereqTreeOneOf1`, the","lastModifiedDate":"2022-10-07"},{"lineNumber":433,"author":{"gitId":"shenyih0ng"},"content":"     * ClassCastException will be thrown.","lastModifiedDate":"2022-10-07"},{"lineNumber":434,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":435,"author":{"gitId":"shenyih0ng"},"content":"     * @return The actual instance of `PrereqTreeOneOf1`","lastModifiedDate":"2022-10-07"},{"lineNumber":436,"author":{"gitId":"shenyih0ng"},"content":"     * @throws ClassCastException if the instance is not `PrereqTreeOneOf1`","lastModifiedDate":"2022-10-07"},{"lineNumber":437,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":438,"author":{"gitId":"shenyih0ng"},"content":"    public PrereqTreeOneOf1 getPrereqTreeOneOf1() throws ClassCastException {","lastModifiedDate":"2022-10-07"},{"lineNumber":439,"author":{"gitId":"shenyih0ng"},"content":"        return (PrereqTreeOneOf1) super.getActualInstance();","lastModifiedDate":"2022-10-07"},{"lineNumber":440,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":441,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":442,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":443,"author":{"gitId":"shenyih0ng"},"content":"     * Get the actual instance of `String`. If the actual instance is not `String`, the ClassCastException will be","lastModifiedDate":"2022-10-07"},{"lineNumber":444,"author":{"gitId":"shenyih0ng"},"content":"     * thrown.","lastModifiedDate":"2022-10-07"},{"lineNumber":445,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":446,"author":{"gitId":"shenyih0ng"},"content":"     * @return The actual instance of `String`","lastModifiedDate":"2022-10-07"},{"lineNumber":447,"author":{"gitId":"shenyih0ng"},"content":"     * @throws ClassCastException if the instance is not `String`","lastModifiedDate":"2022-10-07"},{"lineNumber":448,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":449,"author":{"gitId":"shenyih0ng"},"content":"    public String getString() throws ClassCastException {","lastModifiedDate":"2022-10-07"},{"lineNumber":450,"author":{"gitId":"shenyih0ng"},"content":"        return (String) super.getActualInstance();","lastModifiedDate":"2022-10-07"},{"lineNumber":451,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":452,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":453,"author":{"gitId":"shenyih0ng"},"content":"    public static class PrereqTreeSerializer extends StdSerializer\u003cPrereqTree\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":454,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":455,"author":{"gitId":"shenyih0ng"},"content":"        public PrereqTreeSerializer(Class\u003cPrereqTree\u003e t) {","lastModifiedDate":"2022-10-03"},{"lineNumber":456,"author":{"gitId":"shenyih0ng"},"content":"            super(t);","lastModifiedDate":"2022-10-03"},{"lineNumber":457,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":458,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":459,"author":{"gitId":"shenyih0ng"},"content":"        public PrereqTreeSerializer() {","lastModifiedDate":"2022-10-03"},{"lineNumber":460,"author":{"gitId":"shenyih0ng"},"content":"            this(null);","lastModifiedDate":"2022-10-03"},{"lineNumber":461,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":462,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":463,"author":{"gitId":"shenyih0ng"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":464,"author":{"gitId":"shenyih0ng"},"content":"        public void serialize(PrereqTree value, JsonGenerator jgen, SerializerProvider provider)","lastModifiedDate":"2022-10-07"},{"lineNumber":465,"author":{"gitId":"shenyih0ng"},"content":"                throws IOException, JsonProcessingException {","lastModifiedDate":"2022-10-07"},{"lineNumber":466,"author":{"gitId":"shenyih0ng"},"content":"            jgen.writeObject(value.getActualInstance());","lastModifiedDate":"2022-10-03"},{"lineNumber":467,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":468,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":469,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":470,"author":{"gitId":"shenyih0ng"},"content":"    public static class PrereqTreeDeserializer extends StdDeserializer\u003cPrereqTree\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":471,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":472,"author":{"gitId":"shenyih0ng"},"content":"        public PrereqTreeDeserializer() {","lastModifiedDate":"2022-10-03"},{"lineNumber":473,"author":{"gitId":"shenyih0ng"},"content":"            this(PrereqTree.class);","lastModifiedDate":"2022-10-03"},{"lineNumber":474,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":475,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":476,"author":{"gitId":"shenyih0ng"},"content":"        public PrereqTreeDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2022-10-03"},{"lineNumber":477,"author":{"gitId":"shenyih0ng"},"content":"            super(vc);","lastModifiedDate":"2022-10-03"},{"lineNumber":478,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":479,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":480,"author":{"gitId":"shenyih0ng"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":481,"author":{"gitId":"shenyih0ng"},"content":"        public PrereqTree deserialize(JsonParser jp, DeserializationContext ctxt)","lastModifiedDate":"2022-10-07"},{"lineNumber":482,"author":{"gitId":"shenyih0ng"},"content":"                throws IOException, JsonProcessingException {","lastModifiedDate":"2022-10-07"},{"lineNumber":483,"author":{"gitId":"shenyih0ng"},"content":"            JsonNode tree \u003d jp.readValueAsTree();","lastModifiedDate":"2022-10-03"},{"lineNumber":484,"author":{"gitId":"shenyih0ng"},"content":"            Object deserialized \u003d null;","lastModifiedDate":"2022-10-03"},{"lineNumber":485,"author":{"gitId":"shenyih0ng"},"content":"            boolean typeCoercion \u003d ctxt.isEnabled(MapperFeature.ALLOW_COERCION_OF_SCALARS);","lastModifiedDate":"2022-10-03"},{"lineNumber":486,"author":{"gitId":"huzaifa1712"},"content":"            boolean matched \u003d false;","lastModifiedDate":"2022-10-12"},{"lineNumber":487,"author":{"gitId":"shenyih0ng"},"content":"            JsonToken token \u003d tree.traverse(jp.getCodec()).nextToken();","lastModifiedDate":"2022-10-03"},{"lineNumber":488,"author":{"gitId":"shenyih0ng"},"content":"            // deserialize PrereqTreeOneOf","lastModifiedDate":"2022-10-03"},{"lineNumber":489,"author":{"gitId":"shenyih0ng"},"content":"            try {","lastModifiedDate":"2022-10-03"},{"lineNumber":490,"author":{"gitId":"huzaifa1712"},"content":"                boolean attemptParsing \u003d !matched;","lastModifiedDate":"2022-10-12"},{"lineNumber":491,"author":{"gitId":"shenyih0ng"},"content":"                // ensure that we respect type coercion as set on the client ObjectMapper","lastModifiedDate":"2022-10-03"},{"lineNumber":492,"author":{"gitId":"shenyih0ng"},"content":"                if (PrereqTreeOneOf.class.equals(Integer.class) || PrereqTreeOneOf.class.equals(Long.class)","lastModifiedDate":"2022-10-07"},{"lineNumber":493,"author":{"gitId":"shenyih0ng"},"content":"                        || PrereqTreeOneOf.class.equals(Float.class) || PrereqTreeOneOf.class.equals(Double.class)","lastModifiedDate":"2022-10-07"},{"lineNumber":494,"author":{"gitId":"shenyih0ng"},"content":"                        || PrereqTreeOneOf.class.equals(Boolean.class) || PrereqTreeOneOf.class.equals(String.class)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":495,"author":{"gitId":"shenyih0ng"},"content":"                    attemptParsing \u003d typeCoercion;","lastModifiedDate":"2022-10-03"},{"lineNumber":496,"author":{"gitId":"shenyih0ng"},"content":"                    if (!attemptParsing) {","lastModifiedDate":"2022-10-03"},{"lineNumber":497,"author":{"gitId":"shenyih0ng"},"content":"                        attemptParsing |\u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":498,"author":{"gitId":"shenyih0ng"},"content":"                                ((PrereqTreeOneOf.class.equals(Integer.class) || PrereqTreeOneOf.class.equals(Long.class))","lastModifiedDate":"2022-10-07"},{"lineNumber":499,"author":{"gitId":"shenyih0ng"},"content":"                                        \u0026\u0026 token \u003d\u003d JsonToken.VALUE_NUMBER_INT);","lastModifiedDate":"2022-10-07"},{"lineNumber":500,"author":{"gitId":"shenyih0ng"},"content":"                        attemptParsing |\u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":501,"author":{"gitId":"shenyih0ng"},"content":"                                ((PrereqTreeOneOf.class.equals(Float.class) || PrereqTreeOneOf.class.equals(Double.class))","lastModifiedDate":"2022-10-07"},{"lineNumber":502,"author":{"gitId":"shenyih0ng"},"content":"                                        \u0026\u0026 token \u003d\u003d JsonToken.VALUE_NUMBER_FLOAT);","lastModifiedDate":"2022-10-07"},{"lineNumber":503,"author":{"gitId":"shenyih0ng"},"content":"                        attemptParsing |\u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":504,"author":{"gitId":"shenyih0ng"},"content":"                                (PrereqTreeOneOf.class.equals(Boolean.class) \u0026\u0026 (token \u003d\u003d JsonToken.VALUE_FALSE","lastModifiedDate":"2022-10-07"},{"lineNumber":505,"author":{"gitId":"shenyih0ng"},"content":"                                        || token \u003d\u003d JsonToken.VALUE_TRUE));","lastModifiedDate":"2022-10-07"},{"lineNumber":506,"author":{"gitId":"shenyih0ng"},"content":"                        attemptParsing |\u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":507,"author":{"gitId":"shenyih0ng"},"content":"                                (PrereqTreeOneOf.class.equals(String.class) \u0026\u0026 token \u003d\u003d JsonToken.VALUE_STRING);","lastModifiedDate":"2022-10-07"},{"lineNumber":508,"author":{"gitId":"shenyih0ng"},"content":"                    }","lastModifiedDate":"2022-10-03"},{"lineNumber":509,"author":{"gitId":"shenyih0ng"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":510,"author":{"gitId":"shenyih0ng"},"content":"                if (attemptParsing) {","lastModifiedDate":"2022-10-03"},{"lineNumber":511,"author":{"gitId":"shenyih0ng"},"content":"                    deserialized \u003d tree.traverse(jp.getCodec()).readValueAs(PrereqTreeOneOf.class);","lastModifiedDate":"2022-10-03"},{"lineNumber":512,"author":{"gitId":"shenyih0ng"},"content":"                    // TODO: there is no validation against JSON schema constraints","lastModifiedDate":"2022-10-03"},{"lineNumber":513,"author":{"gitId":"shenyih0ng"},"content":"                    // (min, max, enum, pattern...), this does not perform a strict JSON","lastModifiedDate":"2022-10-03"},{"lineNumber":514,"author":{"gitId":"shenyih0ng"},"content":"                    // validation, which means the \u0027match\u0027 count may be higher than it should be.","lastModifiedDate":"2022-10-03"},{"lineNumber":515,"author":{"gitId":"huzaifa1712"},"content":"                    matched \u003d true;","lastModifiedDate":"2022-10-12"},{"lineNumber":516,"author":{"gitId":"shenyih0ng"},"content":"                    log.log(Level.FINER, \"Input data matches schema \u0027PrereqTreeOneOf\u0027\");","lastModifiedDate":"2022-10-03"},{"lineNumber":517,"author":{"gitId":"shenyih0ng"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":518,"author":{"gitId":"shenyih0ng"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-10-03"},{"lineNumber":519,"author":{"gitId":"shenyih0ng"},"content":"                // deserialization failed, continue","lastModifiedDate":"2022-10-03"},{"lineNumber":520,"author":{"gitId":"shenyih0ng"},"content":"                log.log(Level.FINER, \"Input data does not match schema \u0027PrereqTreeOneOf\u0027\", e);","lastModifiedDate":"2022-10-03"},{"lineNumber":521,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":522,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":523,"author":{"gitId":"shenyih0ng"},"content":"            // deserialize PrereqTreeOneOf1","lastModifiedDate":"2022-10-03"},{"lineNumber":524,"author":{"gitId":"shenyih0ng"},"content":"            try {","lastModifiedDate":"2022-10-03"},{"lineNumber":525,"author":{"gitId":"huzaifa1712"},"content":"                boolean attemptParsing \u003d !matched;","lastModifiedDate":"2022-10-12"},{"lineNumber":526,"author":{"gitId":"shenyih0ng"},"content":"                // ensure that we respect type coercion as set on the client ObjectMapper","lastModifiedDate":"2022-10-03"},{"lineNumber":527,"author":{"gitId":"shenyih0ng"},"content":"                if (PrereqTreeOneOf1.class.equals(Integer.class) || PrereqTreeOneOf1.class.equals(Long.class)","lastModifiedDate":"2022-10-07"},{"lineNumber":528,"author":{"gitId":"shenyih0ng"},"content":"                        || PrereqTreeOneOf1.class.equals(Float.class) || PrereqTreeOneOf1.class.equals(Double.class)","lastModifiedDate":"2022-10-07"},{"lineNumber":529,"author":{"gitId":"shenyih0ng"},"content":"                        || PrereqTreeOneOf1.class.equals(Boolean.class) || PrereqTreeOneOf1.class.equals(String.class)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":530,"author":{"gitId":"shenyih0ng"},"content":"                    attemptParsing \u003d typeCoercion;","lastModifiedDate":"2022-10-03"},{"lineNumber":531,"author":{"gitId":"shenyih0ng"},"content":"                    if (!attemptParsing) {","lastModifiedDate":"2022-10-03"},{"lineNumber":532,"author":{"gitId":"shenyih0ng"},"content":"                        attemptParsing |\u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":533,"author":{"gitId":"shenyih0ng"},"content":"                                ((PrereqTreeOneOf1.class.equals(Integer.class) || PrereqTreeOneOf1.class.equals(Long.class))","lastModifiedDate":"2022-10-07"},{"lineNumber":534,"author":{"gitId":"shenyih0ng"},"content":"                                        \u0026\u0026 token \u003d\u003d JsonToken.VALUE_NUMBER_INT);","lastModifiedDate":"2022-10-07"},{"lineNumber":535,"author":{"gitId":"shenyih0ng"},"content":"                        attemptParsing |\u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":536,"author":{"gitId":"shenyih0ng"},"content":"                                ((PrereqTreeOneOf1.class.equals(Float.class) || PrereqTreeOneOf1.class.equals(Double.class))","lastModifiedDate":"2022-10-07"},{"lineNumber":537,"author":{"gitId":"shenyih0ng"},"content":"                                        \u0026\u0026 token \u003d\u003d JsonToken.VALUE_NUMBER_FLOAT);","lastModifiedDate":"2022-10-07"},{"lineNumber":538,"author":{"gitId":"shenyih0ng"},"content":"                        attemptParsing |\u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":539,"author":{"gitId":"shenyih0ng"},"content":"                                (PrereqTreeOneOf1.class.equals(Boolean.class) \u0026\u0026 (token \u003d\u003d JsonToken.VALUE_FALSE","lastModifiedDate":"2022-10-07"},{"lineNumber":540,"author":{"gitId":"shenyih0ng"},"content":"                                        || token \u003d\u003d JsonToken.VALUE_TRUE));","lastModifiedDate":"2022-10-07"},{"lineNumber":541,"author":{"gitId":"shenyih0ng"},"content":"                        attemptParsing |\u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":542,"author":{"gitId":"shenyih0ng"},"content":"                                (PrereqTreeOneOf1.class.equals(String.class) \u0026\u0026 token \u003d\u003d JsonToken.VALUE_STRING);","lastModifiedDate":"2022-10-07"},{"lineNumber":543,"author":{"gitId":"shenyih0ng"},"content":"                    }","lastModifiedDate":"2022-10-03"},{"lineNumber":544,"author":{"gitId":"shenyih0ng"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":545,"author":{"gitId":"shenyih0ng"},"content":"                if (attemptParsing) {","lastModifiedDate":"2022-10-03"},{"lineNumber":546,"author":{"gitId":"shenyih0ng"},"content":"                    deserialized \u003d tree.traverse(jp.getCodec()).readValueAs(PrereqTreeOneOf1.class);","lastModifiedDate":"2022-10-03"},{"lineNumber":547,"author":{"gitId":"shenyih0ng"},"content":"                    // TODO: there is no validation against JSON schema constraints","lastModifiedDate":"2022-10-03"},{"lineNumber":548,"author":{"gitId":"shenyih0ng"},"content":"                    // (min, max, enum, pattern...), this does not perform a strict JSON","lastModifiedDate":"2022-10-03"},{"lineNumber":549,"author":{"gitId":"shenyih0ng"},"content":"                    // validation, which means the \u0027match\u0027 count may be higher than it should be.","lastModifiedDate":"2022-10-03"},{"lineNumber":550,"author":{"gitId":"huzaifa1712"},"content":"                    matched \u003d true;","lastModifiedDate":"2022-10-12"},{"lineNumber":551,"author":{"gitId":"shenyih0ng"},"content":"                    log.log(Level.FINER, \"Input data matches schema \u0027PrereqTreeOneOf1\u0027\");","lastModifiedDate":"2022-10-03"},{"lineNumber":552,"author":{"gitId":"shenyih0ng"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":553,"author":{"gitId":"shenyih0ng"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-10-03"},{"lineNumber":554,"author":{"gitId":"shenyih0ng"},"content":"                // deserialization failed, continue","lastModifiedDate":"2022-10-03"},{"lineNumber":555,"author":{"gitId":"shenyih0ng"},"content":"                log.log(Level.FINER, \"Input data does not match schema \u0027PrereqTreeOneOf1\u0027\", e);","lastModifiedDate":"2022-10-03"},{"lineNumber":556,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":557,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":558,"author":{"gitId":"shenyih0ng"},"content":"            // deserialize String","lastModifiedDate":"2022-10-03"},{"lineNumber":559,"author":{"gitId":"shenyih0ng"},"content":"            try {","lastModifiedDate":"2022-10-03"},{"lineNumber":560,"author":{"gitId":"huzaifa1712"},"content":"                boolean attemptParsing \u003d !matched;","lastModifiedDate":"2022-10-12"},{"lineNumber":561,"author":{"gitId":"shenyih0ng"},"content":"                // ensure that we respect type coercion as set on the client ObjectMapper","lastModifiedDate":"2022-10-03"},{"lineNumber":562,"author":{"gitId":"shenyih0ng"},"content":"                if (String.class.equals(Integer.class) || String.class.equals(Long.class) || String.class.equals(","lastModifiedDate":"2022-10-07"},{"lineNumber":563,"author":{"gitId":"shenyih0ng"},"content":"                        Float.class) || String.class.equals(Double.class) || String.class.equals(Boolean.class)","lastModifiedDate":"2022-10-07"},{"lineNumber":564,"author":{"gitId":"shenyih0ng"},"content":"                        || String.class.equals(String.class)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":565,"author":{"gitId":"shenyih0ng"},"content":"                    attemptParsing \u003d typeCoercion;","lastModifiedDate":"2022-10-03"},{"lineNumber":566,"author":{"gitId":"shenyih0ng"},"content":"                    if (!attemptParsing) {","lastModifiedDate":"2022-10-03"},{"lineNumber":567,"author":{"gitId":"shenyih0ng"},"content":"                        attemptParsing |\u003d ((String.class.equals(Integer.class) || String.class.equals(Long.class))","lastModifiedDate":"2022-10-07"},{"lineNumber":568,"author":{"gitId":"shenyih0ng"},"content":"                                \u0026\u0026 token \u003d\u003d JsonToken.VALUE_NUMBER_INT);","lastModifiedDate":"2022-10-07"},{"lineNumber":569,"author":{"gitId":"shenyih0ng"},"content":"                        attemptParsing |\u003d ((String.class.equals(Float.class) || String.class.equals(Double.class))","lastModifiedDate":"2022-10-07"},{"lineNumber":570,"author":{"gitId":"shenyih0ng"},"content":"                                \u0026\u0026 token \u003d\u003d JsonToken.VALUE_NUMBER_FLOAT);","lastModifiedDate":"2022-10-07"},{"lineNumber":571,"author":{"gitId":"shenyih0ng"},"content":"                        attemptParsing |\u003d (String.class.equals(Boolean.class) \u0026\u0026 (token \u003d\u003d JsonToken.VALUE_FALSE","lastModifiedDate":"2022-10-07"},{"lineNumber":572,"author":{"gitId":"shenyih0ng"},"content":"                                || token \u003d\u003d JsonToken.VALUE_TRUE));","lastModifiedDate":"2022-10-07"},{"lineNumber":573,"author":{"gitId":"shenyih0ng"},"content":"                        attemptParsing |\u003d (String.class.equals(String.class) \u0026\u0026 token \u003d\u003d JsonToken.VALUE_STRING);","lastModifiedDate":"2022-10-03"},{"lineNumber":574,"author":{"gitId":"shenyih0ng"},"content":"                    }","lastModifiedDate":"2022-10-03"},{"lineNumber":575,"author":{"gitId":"shenyih0ng"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":576,"author":{"gitId":"shenyih0ng"},"content":"                if (attemptParsing) {","lastModifiedDate":"2022-10-03"},{"lineNumber":577,"author":{"gitId":"shenyih0ng"},"content":"                    deserialized \u003d tree.traverse(jp.getCodec()).readValueAs(String.class);","lastModifiedDate":"2022-10-03"},{"lineNumber":578,"author":{"gitId":"shenyih0ng"},"content":"                    // TODO: there is no validation against JSON schema constraints","lastModifiedDate":"2022-10-03"},{"lineNumber":579,"author":{"gitId":"shenyih0ng"},"content":"                    // (min, max, enum, pattern...), this does not perform a strict JSON","lastModifiedDate":"2022-10-03"},{"lineNumber":580,"author":{"gitId":"shenyih0ng"},"content":"                    // validation, which means the \u0027match\u0027 count may be higher than it should be.","lastModifiedDate":"2022-10-03"},{"lineNumber":581,"author":{"gitId":"huzaifa1712"},"content":"                    matched \u003d true;","lastModifiedDate":"2022-10-12"},{"lineNumber":582,"author":{"gitId":"shenyih0ng"},"content":"                    log.log(Level.FINER, \"Input data matches schema \u0027String\u0027\");","lastModifiedDate":"2022-10-03"},{"lineNumber":583,"author":{"gitId":"shenyih0ng"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":584,"author":{"gitId":"shenyih0ng"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-10-03"},{"lineNumber":585,"author":{"gitId":"shenyih0ng"},"content":"                // deserialization failed, continue","lastModifiedDate":"2022-10-03"},{"lineNumber":586,"author":{"gitId":"shenyih0ng"},"content":"                log.log(Level.FINER, \"Input data does not match schema \u0027String\u0027\", e);","lastModifiedDate":"2022-10-03"},{"lineNumber":587,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":588,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":589,"author":{"gitId":"huzaifa1712"},"content":"            if (matched) {","lastModifiedDate":"2022-10-12"},{"lineNumber":590,"author":{"gitId":"shenyih0ng"},"content":"                PrereqTree ret \u003d new PrereqTree();","lastModifiedDate":"2022-10-03"},{"lineNumber":591,"author":{"gitId":"shenyih0ng"},"content":"                ret.setActualInstance(deserialized);","lastModifiedDate":"2022-10-03"},{"lineNumber":592,"author":{"gitId":"shenyih0ng"},"content":"                return ret;","lastModifiedDate":"2022-10-03"},{"lineNumber":593,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":594,"author":{"gitId":"huzaifa1712"},"content":"            throw new IOException(\"Failed deserialization for PrereqTree: 0 classes matched, expected 1\");","lastModifiedDate":"2022-10-12"},{"lineNumber":595,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":596,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":597,"author":{"gitId":"shenyih0ng"},"content":"        /**","lastModifiedDate":"2022-10-03"},{"lineNumber":598,"author":{"gitId":"shenyih0ng"},"content":"         * Handle deserialization of the \u0027null\u0027 value.","lastModifiedDate":"2022-10-03"},{"lineNumber":599,"author":{"gitId":"shenyih0ng"},"content":"         */","lastModifiedDate":"2022-10-03"},{"lineNumber":600,"author":{"gitId":"shenyih0ng"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":601,"author":{"gitId":"shenyih0ng"},"content":"        public PrereqTree getNullValue(DeserializationContext ctxt) throws JsonMappingException {","lastModifiedDate":"2022-10-03"},{"lineNumber":602,"author":{"gitId":"shenyih0ng"},"content":"            throw new JsonMappingException(ctxt.getParser(), \"PrereqTree cannot be null\");","lastModifiedDate":"2022-10-03"},{"lineNumber":603,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":604,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":605,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":606,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"},{"lineNumber":607,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"huzaifa1712":313,"shenyih0ng":294}},{"path":"src/main/java/org/openapitools/client/model/PrereqTreeOneOf.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"/*","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API contains data used to render \u003chttps://nusmods.com\u003e. It includes data on modules offered by NUS and their timetables, as well as information on the locations the classes take place in. You are welcome to use and experiment with the data, which is extracted from official APIs provided by the Registrar\u0027s Office.  The API consists of static JSON files scraped daily from the school\u0027s APIs. This means it only partially follow REST conventions, and all resources are read only. All successful responses will return JSON, and all endpoints end in `.json`.  The shape of the data returned by these endpoints are designed for NUSMods in mind. If you have any questions or find that you need the data in other shapes for other purposes, feel free to reach out to us:  - **Telegram**: \u003chttps://telegram.me/nusmods\u003e - **Mailing list**: \u003cnusmods@googlegroups.com\u003e (for security related issues please email \u003cmods@nusmods.com\u003e instead)  ## Fetching data  Any HTTP client can be used to fetch data from the API. HTTPS is preferred, but the server will also respond to HTTP requests. The server supports HTTP 1.1 as well as HTTP 2 over HTTPS, and supports gzip compression.  The API has no authentication, and is not rate limited. While the server can respond to a large number of requests simultaneously, we request that you be polite with resource usage so as not to disrupt nusmods.com, which relies on the same API server. In general there is no need to fetch data from the API more than once per day, as that is the frequency at which we update the data.  [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) headers are enabled on all endpoints, so client-side JavaScript can use also use the API.  ## TypeScript types  Since the NUSMods is written in TypeScript, typings are available in the source for the scraper. These may be easier to read than the documentation generated by Swagger.  - Module types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/modules.ts\u003e - Venue types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/venues.ts\u003e  ## Data  Below are some notes about the data returned from the API. Feel free to talk to us or create an issue if any of it is not clear.  ### Module data  Module endpoints return information on modules offered by NUS. Most of the module data is self-explanatory, but some of the data are more complex and is explained here.  #### Lessons  Each lesson in a timetable has a lesson type `lessonType` and class number `ClassNo`. Every student must take one of each lesson type offered by the module. For example, this module offers two tutorials and one lecture. That means the student must attend the lecture, and can choose one of the two tutorials to attend.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"01\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1100\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"COM1-0207\\\"     },     {       \\\"classNo\\\": \\\"02\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Friday\\\",       \\\"startTime\\\": \\\"0900\\\",       \\\"endTime\\\": \\\"1000\\\",       \\\"venue\\\": \\\"COM1-0209\\\"     }   ] } ```  Each lesson has a `classNo` key. There can be multiple lessons of the same type and class number, in which case students must attend both. In this example, students can choose to attend either lecture group 1 on Tuesdays and Wednesdays, or lecture group 2 on Mondays and Wednesdays.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1400\\\",       \\\"endTime\\\": \\\"1500\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Monday\\\",       \\\"startTime\\\": \\\"1000\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1500\\\",       \\\"endTime\\\": \\\"1600\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     }   ] } ```  #### Lesson Weeks  The `weeks` key on lessons can return data in one of two forms.  Weeks is usually a sorted array of numbers. In this case it represents the school weeks the lesson occurs on, from 1 to 13.  Some classes have lessons outside of the school timetable. In this case a `WeekRange` object is returned. The object will always contain a `start` and `end` key representing the start and end date of lessons. The example below has classes every week from 17th Jan to 18th April.  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-04-18\\\" } ```  Optionally it can also include `weekInterval`, a positive integer describing the number of weeks between each lesson, and `weeks`, an array of positive integers describing the weeks on which the lesson will fall, with week 1 being the starting date. If these are not present you can assume lessons will occur every week.  The following example has lessons on 17th Jan (week 1), 24th Jan (week 2), 7th Feb (week 4) and 21st Feb (week 6).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-21\\\",   \\\"weeks\\\": [1, 2, 4, 6] } ```  The following example has lessons on 17th Jan (week 1), 31st Jan (week 3), 14th Feb (week 5) and 28th Feb (week 7).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-28\\\",   \\\"weekInterval\\\": 2 } ```  #### Workload  The `workload` key can return data in one of two forms.  Workload is usually a **5-tuple of numbers**, describing the estimated number of hours per week the student is expected to put in for the module for **lectures, tutorials, laboratory, projects/fieldwork, and preparatory work** respectively. For example, a workload of `[2, 1, 1, 3, 3]` means the student should spend every week  - 2 hours in lectures - 1 hour in tutorials - 1 hour at the lab - 3 hours doing project work - 3 hours preparing for classes  Each module credit represents 2.5 hours of work each week, so the standard 4 MC module represents 10 hours of work each week. Module credit may not be integers.  Note that this is only an estimate, and may be outdated or differ significantly in reality. Some modules also incorrectly lists the **total** workload hours instead of weekly, so very large values may show up.  This value is parsed from a string provided by the school, and occasionally this field will contain unusual values which cannot be parsed. In this case this field will contain the original **string** instead, which should be displayed as-is to the user.  #### Prerequisite, corequisite and preclusions  These three keys determine whether a student can take a module.  **Prerequisites** are requirements you have to meet before you can take a module. These are usually in the form of other modules (see prerequisite tree below for a machine readable format), but can also be things like \u0027taken A-level H2 math\u0027 or \u002770 MCs and above\u0027.  **Preclusions** refer to modules or requirements that cannot be taken if this module is taken, and vice versa. These are usually modules whose content overlaps significantly with this module, and can usually be used to replace each other to fulfill prerequisites.  **Corequisites** are modules that must be taken together with this module in the same semester. This usually refer to twined modules - modules which have linked syllabuses.  #### Prerequisite Tree  The `prereqTree` key is return on the individual module endpoint (`/modules/{moduleCode`). Not all modules have prerequisites, and some have prerequisites that cannot be properly represented as a tree, in which case this key will not appear.  This describes the prerequisites that need to be fulfilled before this module can be taken. The data structure is recursive and represents a tree.  ```json {   \\\"and\\\": [     \\\"CS1231\\\",     {       \\\"or\\\": [\\\"CS1010S\\\", \\\"CS1010X\\\"]     }   ] } ```  In the example, this module requires CS1231 and either CS1010S or CS1010X. This can be visualized as  ```            ┌ CS1231 ── all of ─┤            │         ┌ CS1010            └ one of ─┤                      └ CS1010X ```  The module information also contains the inverse of this, that is, modules whose requirements are fulfilled by this module (taking this module will allow you to take these modules in the following semester). The data is found on the `fulfillRequirements` key as an array of module codes.  ### Venue data  Venue data is simply the module timetable restructured to show the lessons happening at each classroom.  The venue list endpoint returns a list of all locations that are used in the semester. Note that this is not a comprehensive list of locations, but rather just a list of venues that appears in module lessons.  The venue information endpoint returns the full class and occupancy information about a venue. The `classes` key contains a list of lessons similar to the `timetable` key in module data, but without a `venue` key and with `moduleCode`.","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":" * The version of the OpenAPI document: 2.0.0","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":" * Contact: nusmods@googlegroups.com","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":" * https://openapi-generator.tech","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":" * Do not edit the class manually.","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"package org.openapitools.client.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"import java.util.List;","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonInclude;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonPropertyOrder;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"import io.swagger.annotations.ApiModelProperty;","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":" * PrereqTreeOneOf","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"@JsonPropertyOrder({","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"    PrereqTreeOneOf.JSON_PROPERTY_OR","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"})","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"@javax.annotation.processing.Generated(value \u003d \"org.openapitools.codegen.languages.JavaClientCodegen\", date \u003d \"2022-10-03T22:22:26.802458+08:00[Asia/Singapore]\")","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"public class PrereqTreeOneOf {","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_OR \u003d \"or\";","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"    private List\u003cPrereqTree\u003e or \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"    public PrereqTreeOneOf() {","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"    public PrereqTreeOneOf or(List\u003cPrereqTree\u003e or) {","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"        this.or \u003d or;","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"    public PrereqTreeOneOf addOrItem(PrereqTree orItem) {","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"        this.or.add(orItem);","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"     * Get or","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"     * @return or","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_OR)","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"    public List\u003cPrereqTree\u003e getOr() {","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"        return or;","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_OR)","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"shenyih0ng"},"content":"    public void setOr(List\u003cPrereqTree\u003e or) {","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"shenyih0ng"},"content":"        this.or \u003d or;","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"shenyih0ng"},"content":"     * Return true if this PrereqTree_oneOf object is equal to o.","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"shenyih0ng"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"shenyih0ng"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"shenyih0ng"},"content":"            return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"shenyih0ng"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"shenyih0ng"},"content":"            return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"shenyih0ng"},"content":"        PrereqTreeOneOf prereqTreeOneOf \u003d (PrereqTreeOneOf) o;","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"shenyih0ng"},"content":"        return Objects.equals(this.or, prereqTreeOneOf.or);","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"shenyih0ng"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"shenyih0ng"},"content":"        return Objects.hash(or);","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"shenyih0ng"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"shenyih0ng"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"class PrereqTreeOneOf {\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    or: \").append(toIndentedString(or)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"}\");","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"shenyih0ng"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"shenyih0ng"},"content":"     * Convert the given object to string with each line indented by 4 spaces (except the first line).","lastModifiedDate":"2022-10-07"},{"lineNumber":105,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"shenyih0ng"},"content":"    private String toIndentedString(Object o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"shenyih0ng"},"content":"        if (o \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"shenyih0ng"},"content":"            return \"null\";","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"shenyih0ng"},"content":"        return o.toString().replace(\"\\n\", \"\\n    \");","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"shenyih0ng":114}},{"path":"src/main/java/org/openapitools/client/model/PrereqTreeOneOf1.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"/*","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API contains data used to render \u003chttps://nusmods.com\u003e. It includes data on modules offered by NUS and their timetables, as well as information on the locations the classes take place in. You are welcome to use and experiment with the data, which is extracted from official APIs provided by the Registrar\u0027s Office.  The API consists of static JSON files scraped daily from the school\u0027s APIs. This means it only partially follow REST conventions, and all resources are read only. All successful responses will return JSON, and all endpoints end in `.json`.  The shape of the data returned by these endpoints are designed for NUSMods in mind. If you have any questions or find that you need the data in other shapes for other purposes, feel free to reach out to us:  - **Telegram**: \u003chttps://telegram.me/nusmods\u003e - **Mailing list**: \u003cnusmods@googlegroups.com\u003e (for security related issues please email \u003cmods@nusmods.com\u003e instead)  ## Fetching data  Any HTTP client can be used to fetch data from the API. HTTPS is preferred, but the server will also respond to HTTP requests. The server supports HTTP 1.1 as well as HTTP 2 over HTTPS, and supports gzip compression.  The API has no authentication, and is not rate limited. While the server can respond to a large number of requests simultaneously, we request that you be polite with resource usage so as not to disrupt nusmods.com, which relies on the same API server. In general there is no need to fetch data from the API more than once per day, as that is the frequency at which we update the data.  [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) headers are enabled on all endpoints, so client-side JavaScript can use also use the API.  ## TypeScript types  Since the NUSMods is written in TypeScript, typings are available in the source for the scraper. These may be easier to read than the documentation generated by Swagger.  - Module types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/modules.ts\u003e - Venue types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/venues.ts\u003e  ## Data  Below are some notes about the data returned from the API. Feel free to talk to us or create an issue if any of it is not clear.  ### Module data  Module endpoints return information on modules offered by NUS. Most of the module data is self-explanatory, but some of the data are more complex and is explained here.  #### Lessons  Each lesson in a timetable has a lesson type `lessonType` and class number `ClassNo`. Every student must take one of each lesson type offered by the module. For example, this module offers two tutorials and one lecture. That means the student must attend the lecture, and can choose one of the two tutorials to attend.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"01\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1100\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"COM1-0207\\\"     },     {       \\\"classNo\\\": \\\"02\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Friday\\\",       \\\"startTime\\\": \\\"0900\\\",       \\\"endTime\\\": \\\"1000\\\",       \\\"venue\\\": \\\"COM1-0209\\\"     }   ] } ```  Each lesson has a `classNo` key. There can be multiple lessons of the same type and class number, in which case students must attend both. In this example, students can choose to attend either lecture group 1 on Tuesdays and Wednesdays, or lecture group 2 on Mondays and Wednesdays.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1400\\\",       \\\"endTime\\\": \\\"1500\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Monday\\\",       \\\"startTime\\\": \\\"1000\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1500\\\",       \\\"endTime\\\": \\\"1600\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     }   ] } ```  #### Lesson Weeks  The `weeks` key on lessons can return data in one of two forms.  Weeks is usually a sorted array of numbers. In this case it represents the school weeks the lesson occurs on, from 1 to 13.  Some classes have lessons outside of the school timetable. In this case a `WeekRange` object is returned. The object will always contain a `start` and `end` key representing the start and end date of lessons. The example below has classes every week from 17th Jan to 18th April.  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-04-18\\\" } ```  Optionally it can also include `weekInterval`, a positive integer describing the number of weeks between each lesson, and `weeks`, an array of positive integers describing the weeks on which the lesson will fall, with week 1 being the starting date. If these are not present you can assume lessons will occur every week.  The following example has lessons on 17th Jan (week 1), 24th Jan (week 2), 7th Feb (week 4) and 21st Feb (week 6).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-21\\\",   \\\"weeks\\\": [1, 2, 4, 6] } ```  The following example has lessons on 17th Jan (week 1), 31st Jan (week 3), 14th Feb (week 5) and 28th Feb (week 7).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-28\\\",   \\\"weekInterval\\\": 2 } ```  #### Workload  The `workload` key can return data in one of two forms.  Workload is usually a **5-tuple of numbers**, describing the estimated number of hours per week the student is expected to put in for the module for **lectures, tutorials, laboratory, projects/fieldwork, and preparatory work** respectively. For example, a workload of `[2, 1, 1, 3, 3]` means the student should spend every week  - 2 hours in lectures - 1 hour in tutorials - 1 hour at the lab - 3 hours doing project work - 3 hours preparing for classes  Each module credit represents 2.5 hours of work each week, so the standard 4 MC module represents 10 hours of work each week. Module credit may not be integers.  Note that this is only an estimate, and may be outdated or differ significantly in reality. Some modules also incorrectly lists the **total** workload hours instead of weekly, so very large values may show up.  This value is parsed from a string provided by the school, and occasionally this field will contain unusual values which cannot be parsed. In this case this field will contain the original **string** instead, which should be displayed as-is to the user.  #### Prerequisite, corequisite and preclusions  These three keys determine whether a student can take a module.  **Prerequisites** are requirements you have to meet before you can take a module. These are usually in the form of other modules (see prerequisite tree below for a machine readable format), but can also be things like \u0027taken A-level H2 math\u0027 or \u002770 MCs and above\u0027.  **Preclusions** refer to modules or requirements that cannot be taken if this module is taken, and vice versa. These are usually modules whose content overlaps significantly with this module, and can usually be used to replace each other to fulfill prerequisites.  **Corequisites** are modules that must be taken together with this module in the same semester. This usually refer to twined modules - modules which have linked syllabuses.  #### Prerequisite Tree  The `prereqTree` key is return on the individual module endpoint (`/modules/{moduleCode`). Not all modules have prerequisites, and some have prerequisites that cannot be properly represented as a tree, in which case this key will not appear.  This describes the prerequisites that need to be fulfilled before this module can be taken. The data structure is recursive and represents a tree.  ```json {   \\\"and\\\": [     \\\"CS1231\\\",     {       \\\"or\\\": [\\\"CS1010S\\\", \\\"CS1010X\\\"]     }   ] } ```  In the example, this module requires CS1231 and either CS1010S or CS1010X. This can be visualized as  ```            ┌ CS1231 ── all of ─┤            │         ┌ CS1010            └ one of ─┤                      └ CS1010X ```  The module information also contains the inverse of this, that is, modules whose requirements are fulfilled by this module (taking this module will allow you to take these modules in the following semester). The data is found on the `fulfillRequirements` key as an array of module codes.  ### Venue data  Venue data is simply the module timetable restructured to show the lessons happening at each classroom.  The venue list endpoint returns a list of all locations that are used in the semester. Note that this is not a comprehensive list of locations, but rather just a list of venues that appears in module lessons.  The venue information endpoint returns the full class and occupancy information about a venue. The `classes` key contains a list of lessons similar to the `timetable` key in module data, but without a `venue` key and with `moduleCode`.","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":" * The version of the OpenAPI document: 2.0.0","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":" * Contact: nusmods@googlegroups.com","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":" * https://openapi-generator.tech","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":" * Do not edit the class manually.","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"package org.openapitools.client.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"import java.util.List;","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonInclude;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonPropertyOrder;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"import io.swagger.annotations.ApiModelProperty;","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":" * PrereqTreeOneOf1","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"@JsonPropertyOrder({","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"    PrereqTreeOneOf1.JSON_PROPERTY_AND","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"})","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"@javax.annotation.processing.Generated(value \u003d \"org.openapitools.codegen.languages.JavaClientCodegen\", date \u003d \"2022-10-03T22:22:26.802458+08:00[Asia/Singapore]\")","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"public class PrereqTreeOneOf1 {","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_AND \u003d \"and\";","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"    private List\u003cPrereqTree\u003e and \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"    public PrereqTreeOneOf1() {","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"    public PrereqTreeOneOf1 and(List\u003cPrereqTree\u003e and) {","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"        this.and \u003d and;","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"    public PrereqTreeOneOf1 addAndItem(PrereqTree andItem) {","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"        this.and.add(andItem);","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"     * Get and","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"     * @return and","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_AND)","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"    public List\u003cPrereqTree\u003e getAnd() {","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"        return and;","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_AND)","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"shenyih0ng"},"content":"    public void setAnd(List\u003cPrereqTree\u003e and) {","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"shenyih0ng"},"content":"        this.and \u003d and;","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"shenyih0ng"},"content":"     * Return true if this PrereqTree_oneOf_1 object is equal to o.","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"shenyih0ng"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"shenyih0ng"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"shenyih0ng"},"content":"            return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"shenyih0ng"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"shenyih0ng"},"content":"            return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"shenyih0ng"},"content":"        PrereqTreeOneOf1 prereqTreeOneOf1 \u003d (PrereqTreeOneOf1) o;","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"shenyih0ng"},"content":"        return Objects.equals(this.and, prereqTreeOneOf1.and);","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"shenyih0ng"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"shenyih0ng"},"content":"        return Objects.hash(and);","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"shenyih0ng"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"shenyih0ng"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"class PrereqTreeOneOf1 {\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    and: \").append(toIndentedString(and)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"}\");","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"shenyih0ng"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"shenyih0ng"},"content":"     * Convert the given object to string with each line indented by 4 spaces (except the first line).","lastModifiedDate":"2022-10-07"},{"lineNumber":105,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"shenyih0ng"},"content":"    private String toIndentedString(Object o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"shenyih0ng"},"content":"        if (o \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"shenyih0ng"},"content":"            return \"null\";","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"shenyih0ng"},"content":"        return o.toString().replace(\"\\n\", \"\\n    \");","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"shenyih0ng":114}},{"path":"src/main/java/org/openapitools/client/model/SemesterData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"/*","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API contains data used to render \u003chttps://nusmods.com\u003e. It includes data on modules offered by NUS and their timetables, as well as information on the locations the classes take place in. You are welcome to use and experiment with the data, which is extracted from official APIs provided by the Registrar\u0027s Office.  The API consists of static JSON files scraped daily from the school\u0027s APIs. This means it only partially follow REST conventions, and all resources are read only. All successful responses will return JSON, and all endpoints end in `.json`.  The shape of the data returned by these endpoints are designed for NUSMods in mind. If you have any questions or find that you need the data in other shapes for other purposes, feel free to reach out to us:  - **Telegram**: \u003chttps://telegram.me/nusmods\u003e - **Mailing list**: \u003cnusmods@googlegroups.com\u003e (for security related issues please email \u003cmods@nusmods.com\u003e instead)  ## Fetching data  Any HTTP client can be used to fetch data from the API. HTTPS is preferred, but the server will also respond to HTTP requests. The server supports HTTP 1.1 as well as HTTP 2 over HTTPS, and supports gzip compression.  The API has no authentication, and is not rate limited. While the server can respond to a large number of requests simultaneously, we request that you be polite with resource usage so as not to disrupt nusmods.com, which relies on the same API server. In general there is no need to fetch data from the API more than once per day, as that is the frequency at which we update the data.  [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) headers are enabled on all endpoints, so client-side JavaScript can use also use the API.  ## TypeScript types  Since the NUSMods is written in TypeScript, typings are available in the source for the scraper. These may be easier to read than the documentation generated by Swagger.  - Module types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/modules.ts\u003e - Venue types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/venues.ts\u003e  ## Data  Below are some notes about the data returned from the API. Feel free to talk to us or create an issue if any of it is not clear.  ### Module data  Module endpoints return information on modules offered by NUS. Most of the module data is self-explanatory, but some of the data are more complex and is explained here.  #### Lessons  Each lesson in a timetable has a lesson type `lessonType` and class number `ClassNo`. Every student must take one of each lesson type offered by the module. For example, this module offers two tutorials and one lecture. That means the student must attend the lecture, and can choose one of the two tutorials to attend.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"01\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1100\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"COM1-0207\\\"     },     {       \\\"classNo\\\": \\\"02\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Friday\\\",       \\\"startTime\\\": \\\"0900\\\",       \\\"endTime\\\": \\\"1000\\\",       \\\"venue\\\": \\\"COM1-0209\\\"     }   ] } ```  Each lesson has a `classNo` key. There can be multiple lessons of the same type and class number, in which case students must attend both. In this example, students can choose to attend either lecture group 1 on Tuesdays and Wednesdays, or lecture group 2 on Mondays and Wednesdays.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1400\\\",       \\\"endTime\\\": \\\"1500\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Monday\\\",       \\\"startTime\\\": \\\"1000\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1500\\\",       \\\"endTime\\\": \\\"1600\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     }   ] } ```  #### Lesson Weeks  The `weeks` key on lessons can return data in one of two forms.  Weeks is usually a sorted array of numbers. In this case it represents the school weeks the lesson occurs on, from 1 to 13.  Some classes have lessons outside of the school timetable. In this case a `WeekRange` object is returned. The object will always contain a `start` and `end` key representing the start and end date of lessons. The example below has classes every week from 17th Jan to 18th April.  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-04-18\\\" } ```  Optionally it can also include `weekInterval`, a positive integer describing the number of weeks between each lesson, and `weeks`, an array of positive integers describing the weeks on which the lesson will fall, with week 1 being the starting date. If these are not present you can assume lessons will occur every week.  The following example has lessons on 17th Jan (week 1), 24th Jan (week 2), 7th Feb (week 4) and 21st Feb (week 6).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-21\\\",   \\\"weeks\\\": [1, 2, 4, 6] } ```  The following example has lessons on 17th Jan (week 1), 31st Jan (week 3), 14th Feb (week 5) and 28th Feb (week 7).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-28\\\",   \\\"weekInterval\\\": 2 } ```  #### Workload  The `workload` key can return data in one of two forms.  Workload is usually a **5-tuple of numbers**, describing the estimated number of hours per week the student is expected to put in for the module for **lectures, tutorials, laboratory, projects/fieldwork, and preparatory work** respectively. For example, a workload of `[2, 1, 1, 3, 3]` means the student should spend every week  - 2 hours in lectures - 1 hour in tutorials - 1 hour at the lab - 3 hours doing project work - 3 hours preparing for classes  Each module credit represents 2.5 hours of work each week, so the standard 4 MC module represents 10 hours of work each week. Module credit may not be integers.  Note that this is only an estimate, and may be outdated or differ significantly in reality. Some modules also incorrectly lists the **total** workload hours instead of weekly, so very large values may show up.  This value is parsed from a string provided by the school, and occasionally this field will contain unusual values which cannot be parsed. In this case this field will contain the original **string** instead, which should be displayed as-is to the user.  #### Prerequisite, corequisite and preclusions  These three keys determine whether a student can take a module.  **Prerequisites** are requirements you have to meet before you can take a module. These are usually in the form of other modules (see prerequisite tree below for a machine readable format), but can also be things like \u0027taken A-level H2 math\u0027 or \u002770 MCs and above\u0027.  **Preclusions** refer to modules or requirements that cannot be taken if this module is taken, and vice versa. These are usually modules whose content overlaps significantly with this module, and can usually be used to replace each other to fulfill prerequisites.  **Corequisites** are modules that must be taken together with this module in the same semester. This usually refer to twined modules - modules which have linked syllabuses.  #### Prerequisite Tree  The `prereqTree` key is return on the individual module endpoint (`/modules/{moduleCode`). Not all modules have prerequisites, and some have prerequisites that cannot be properly represented as a tree, in which case this key will not appear.  This describes the prerequisites that need to be fulfilled before this module can be taken. The data structure is recursive and represents a tree.  ```json {   \\\"and\\\": [     \\\"CS1231\\\",     {       \\\"or\\\": [\\\"CS1010S\\\", \\\"CS1010X\\\"]     }   ] } ```  In the example, this module requires CS1231 and either CS1010S or CS1010X. This can be visualized as  ```            ┌ CS1231 ── all of ─┤            │         ┌ CS1010            └ one of ─┤                      └ CS1010X ```  The module information also contains the inverse of this, that is, modules whose requirements are fulfilled by this module (taking this module will allow you to take these modules in the following semester). The data is found on the `fulfillRequirements` key as an array of module codes.  ### Venue data  Venue data is simply the module timetable restructured to show the lessons happening at each classroom.  The venue list endpoint returns a list of all locations that are used in the semester. Note that this is not a comprehensive list of locations, but rather just a list of venues that appears in module lessons.  The venue information endpoint returns the full class and occupancy information about a venue. The `classes` key contains a list of lessons similar to the `timetable` key in module data, but without a `venue` key and with `moduleCode`.","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":" * The version of the OpenAPI document: 2.0.0","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":" * Contact: nusmods@googlegroups.com","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":" * https://openapi-generator.tech","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":" * Do not edit the class manually.","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"package org.openapitools.client.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"import java.time.OffsetDateTime;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"import java.util.List;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonInclude;","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonPropertyOrder;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"import io.swagger.annotations.ApiModelProperty;","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":" * SemesterData","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"@JsonPropertyOrder({","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"    SemesterData.JSON_PROPERTY_SEMESTER,","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"    SemesterData.JSON_PROPERTY_EXAM_DATE,","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"    SemesterData.JSON_PROPERTY_EXAM_DURATION,","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"    SemesterData.JSON_PROPERTY_TIMETABLE","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"})","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"@javax.annotation.processing.Generated(value \u003d \"org.openapitools.codegen.languages.JavaClientCodegen\", date \u003d \"2022-10-03T22:22:26.802458+08:00[Asia/Singapore]\")","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"public class SemesterData {","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_SEMESTER \u003d \"semester\";","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_EXAM_DATE \u003d \"examDate\";","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_EXAM_DURATION \u003d \"examDuration\";","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_TIMETABLE \u003d \"timetable\";","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"    private BigDecimal semester;","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"    private OffsetDateTime examDate;","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"    private BigDecimal examDuration;","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"    private List\u003cLesson\u003e timetable \u003d null;","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"    public SemesterData() {","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"    public SemesterData semester(BigDecimal semester) {","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"        this.semester \u003d semester;","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"     * Get semester","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"     * @return semester","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"1\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_SEMESTER)","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"    public BigDecimal getSemester() {","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"shenyih0ng"},"content":"        return semester;","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_SEMESTER)","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"shenyih0ng"},"content":"    public void setSemester(BigDecimal semester) {","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"shenyih0ng"},"content":"        this.semester \u003d semester;","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"shenyih0ng"},"content":"    public SemesterData examDate(OffsetDateTime examDate) {","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"shenyih0ng"},"content":"        this.examDate \u003d examDate;","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"shenyih0ng"},"content":"     * Get examDate","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":88,"author":{"gitId":"shenyih0ng"},"content":"     * @return examDate","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nullable","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"2018-11-27T09:00Z\", value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_EXAM_DATE)","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"shenyih0ng"},"content":"    public OffsetDateTime getExamDate() {","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"shenyih0ng"},"content":"        return examDate;","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_EXAM_DATE)","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"shenyih0ng"},"content":"    public void setExamDate(OffsetDateTime examDate) {","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"shenyih0ng"},"content":"        this.examDate \u003d examDate;","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"shenyih0ng"},"content":"    public SemesterData examDuration(BigDecimal examDuration) {","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"shenyih0ng"},"content":"        this.examDuration \u003d examDuration;","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"shenyih0ng"},"content":"     * Get examDuration","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":115,"author":{"gitId":"shenyih0ng"},"content":"     * @return examDuration","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nullable","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"120\", value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_EXAM_DURATION)","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"shenyih0ng"},"content":"    public BigDecimal getExamDuration() {","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"shenyih0ng"},"content":"        return examDuration;","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_EXAM_DURATION)","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":129,"author":{"gitId":"shenyih0ng"},"content":"    public void setExamDuration(BigDecimal examDuration) {","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"shenyih0ng"},"content":"        this.examDuration \u003d examDuration;","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"shenyih0ng"},"content":"    public SemesterData timetable(List\u003cLesson\u003e timetable) {","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"shenyih0ng"},"content":"        this.timetable \u003d timetable;","lastModifiedDate":"2022-10-03"},{"lineNumber":136,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":138,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":139,"author":{"gitId":"shenyih0ng"},"content":"    public SemesterData addTimetableItem(Lesson timetableItem) {","lastModifiedDate":"2022-10-03"},{"lineNumber":140,"author":{"gitId":"shenyih0ng"},"content":"        if (this.timetable \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":141,"author":{"gitId":"shenyih0ng"},"content":"            this.timetable \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-03"},{"lineNumber":142,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":143,"author":{"gitId":"shenyih0ng"},"content":"        this.timetable.add(timetableItem);","lastModifiedDate":"2022-10-03"},{"lineNumber":144,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":145,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":146,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":147,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":148,"author":{"gitId":"shenyih0ng"},"content":"     * Get timetable","lastModifiedDate":"2022-10-03"},{"lineNumber":149,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":150,"author":{"gitId":"shenyih0ng"},"content":"     * @return timetable","lastModifiedDate":"2022-10-03"},{"lineNumber":151,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":152,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nullable","lastModifiedDate":"2022-10-03"},{"lineNumber":153,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":154,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_TIMETABLE)","lastModifiedDate":"2022-10-03"},{"lineNumber":155,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":156,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":157,"author":{"gitId":"shenyih0ng"},"content":"    public List\u003cLesson\u003e getTimetable() {","lastModifiedDate":"2022-10-03"},{"lineNumber":158,"author":{"gitId":"shenyih0ng"},"content":"        return timetable;","lastModifiedDate":"2022-10-03"},{"lineNumber":159,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":160,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":161,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":162,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_TIMETABLE)","lastModifiedDate":"2022-10-03"},{"lineNumber":163,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":164,"author":{"gitId":"shenyih0ng"},"content":"    public void setTimetable(List\u003cLesson\u003e timetable) {","lastModifiedDate":"2022-10-03"},{"lineNumber":165,"author":{"gitId":"shenyih0ng"},"content":"        this.timetable \u003d timetable;","lastModifiedDate":"2022-10-03"},{"lineNumber":166,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":167,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":168,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":169,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":170,"author":{"gitId":"shenyih0ng"},"content":"     * Return true if this SemesterData object is equal to o.","lastModifiedDate":"2022-10-03"},{"lineNumber":171,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":172,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":173,"author":{"gitId":"shenyih0ng"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":174,"author":{"gitId":"shenyih0ng"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":175,"author":{"gitId":"shenyih0ng"},"content":"            return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":176,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":177,"author":{"gitId":"shenyih0ng"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":178,"author":{"gitId":"shenyih0ng"},"content":"            return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":179,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":180,"author":{"gitId":"shenyih0ng"},"content":"        SemesterData semesterData \u003d (SemesterData) o;","lastModifiedDate":"2022-10-03"},{"lineNumber":181,"author":{"gitId":"shenyih0ng"},"content":"        return Objects.equals(this.semester, semesterData.semester) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":182,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.examDate, semesterData.examDate) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":183,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.examDuration, semesterData.examDuration) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":184,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.timetable, semesterData.timetable);","lastModifiedDate":"2022-10-03"},{"lineNumber":185,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":186,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":187,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":188,"author":{"gitId":"shenyih0ng"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":189,"author":{"gitId":"shenyih0ng"},"content":"        return Objects.hash(semester, examDate, examDuration, timetable);","lastModifiedDate":"2022-10-03"},{"lineNumber":190,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":191,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":192,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":193,"author":{"gitId":"shenyih0ng"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":194,"author":{"gitId":"shenyih0ng"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-03"},{"lineNumber":195,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"class SemesterData {\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":196,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    semester: \").append(toIndentedString(semester)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":197,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    examDate: \").append(toIndentedString(examDate)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":198,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    examDuration: \").append(toIndentedString(examDuration)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":199,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    timetable: \").append(toIndentedString(timetable)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":200,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"}\");","lastModifiedDate":"2022-10-03"},{"lineNumber":201,"author":{"gitId":"shenyih0ng"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-03"},{"lineNumber":202,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":203,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":204,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":205,"author":{"gitId":"shenyih0ng"},"content":"     * Convert the given object to string with each line indented by 4 spaces (except the first line).","lastModifiedDate":"2022-10-07"},{"lineNumber":206,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":207,"author":{"gitId":"shenyih0ng"},"content":"    private String toIndentedString(Object o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":208,"author":{"gitId":"shenyih0ng"},"content":"        if (o \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":209,"author":{"gitId":"shenyih0ng"},"content":"            return \"null\";","lastModifiedDate":"2022-10-03"},{"lineNumber":210,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":211,"author":{"gitId":"shenyih0ng"},"content":"        return o.toString().replace(\"\\n\", \"\\n    \");","lastModifiedDate":"2022-10-03"},{"lineNumber":212,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":213,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":214,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"},{"lineNumber":215,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"shenyih0ng":215}},{"path":"src/main/java/org/openapitools/client/model/VenueInformation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"/*","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API contains data used to render \u003chttps://nusmods.com\u003e. It includes data on modules offered by NUS and their timetables, as well as information on the locations the classes take place in. You are welcome to use and experiment with the data, which is extracted from official APIs provided by the Registrar\u0027s Office.  The API consists of static JSON files scraped daily from the school\u0027s APIs. This means it only partially follow REST conventions, and all resources are read only. All successful responses will return JSON, and all endpoints end in `.json`.  The shape of the data returned by these endpoints are designed for NUSMods in mind. If you have any questions or find that you need the data in other shapes for other purposes, feel free to reach out to us:  - **Telegram**: \u003chttps://telegram.me/nusmods\u003e - **Mailing list**: \u003cnusmods@googlegroups.com\u003e (for security related issues please email \u003cmods@nusmods.com\u003e instead)  ## Fetching data  Any HTTP client can be used to fetch data from the API. HTTPS is preferred, but the server will also respond to HTTP requests. The server supports HTTP 1.1 as well as HTTP 2 over HTTPS, and supports gzip compression.  The API has no authentication, and is not rate limited. While the server can respond to a large number of requests simultaneously, we request that you be polite with resource usage so as not to disrupt nusmods.com, which relies on the same API server. In general there is no need to fetch data from the API more than once per day, as that is the frequency at which we update the data.  [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) headers are enabled on all endpoints, so client-side JavaScript can use also use the API.  ## TypeScript types  Since the NUSMods is written in TypeScript, typings are available in the source for the scraper. These may be easier to read than the documentation generated by Swagger.  - Module types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/modules.ts\u003e - Venue types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/venues.ts\u003e  ## Data  Below are some notes about the data returned from the API. Feel free to talk to us or create an issue if any of it is not clear.  ### Module data  Module endpoints return information on modules offered by NUS. Most of the module data is self-explanatory, but some of the data are more complex and is explained here.  #### Lessons  Each lesson in a timetable has a lesson type `lessonType` and class number `ClassNo`. Every student must take one of each lesson type offered by the module. For example, this module offers two tutorials and one lecture. That means the student must attend the lecture, and can choose one of the two tutorials to attend.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"01\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1100\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"COM1-0207\\\"     },     {       \\\"classNo\\\": \\\"02\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Friday\\\",       \\\"startTime\\\": \\\"0900\\\",       \\\"endTime\\\": \\\"1000\\\",       \\\"venue\\\": \\\"COM1-0209\\\"     }   ] } ```  Each lesson has a `classNo` key. There can be multiple lessons of the same type and class number, in which case students must attend both. In this example, students can choose to attend either lecture group 1 on Tuesdays and Wednesdays, or lecture group 2 on Mondays and Wednesdays.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1400\\\",       \\\"endTime\\\": \\\"1500\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Monday\\\",       \\\"startTime\\\": \\\"1000\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1500\\\",       \\\"endTime\\\": \\\"1600\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     }   ] } ```  #### Lesson Weeks  The `weeks` key on lessons can return data in one of two forms.  Weeks is usually a sorted array of numbers. In this case it represents the school weeks the lesson occurs on, from 1 to 13.  Some classes have lessons outside of the school timetable. In this case a `WeekRange` object is returned. The object will always contain a `start` and `end` key representing the start and end date of lessons. The example below has classes every week from 17th Jan to 18th April.  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-04-18\\\" } ```  Optionally it can also include `weekInterval`, a positive integer describing the number of weeks between each lesson, and `weeks`, an array of positive integers describing the weeks on which the lesson will fall, with week 1 being the starting date. If these are not present you can assume lessons will occur every week.  The following example has lessons on 17th Jan (week 1), 24th Jan (week 2), 7th Feb (week 4) and 21st Feb (week 6).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-21\\\",   \\\"weeks\\\": [1, 2, 4, 6] } ```  The following example has lessons on 17th Jan (week 1), 31st Jan (week 3), 14th Feb (week 5) and 28th Feb (week 7).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-28\\\",   \\\"weekInterval\\\": 2 } ```  #### Workload  The `workload` key can return data in one of two forms.  Workload is usually a **5-tuple of numbers**, describing the estimated number of hours per week the student is expected to put in for the module for **lectures, tutorials, laboratory, projects/fieldwork, and preparatory work** respectively. For example, a workload of `[2, 1, 1, 3, 3]` means the student should spend every week  - 2 hours in lectures - 1 hour in tutorials - 1 hour at the lab - 3 hours doing project work - 3 hours preparing for classes  Each module credit represents 2.5 hours of work each week, so the standard 4 MC module represents 10 hours of work each week. Module credit may not be integers.  Note that this is only an estimate, and may be outdated or differ significantly in reality. Some modules also incorrectly lists the **total** workload hours instead of weekly, so very large values may show up.  This value is parsed from a string provided by the school, and occasionally this field will contain unusual values which cannot be parsed. In this case this field will contain the original **string** instead, which should be displayed as-is to the user.  #### Prerequisite, corequisite and preclusions  These three keys determine whether a student can take a module.  **Prerequisites** are requirements you have to meet before you can take a module. These are usually in the form of other modules (see prerequisite tree below for a machine readable format), but can also be things like \u0027taken A-level H2 math\u0027 or \u002770 MCs and above\u0027.  **Preclusions** refer to modules or requirements that cannot be taken if this module is taken, and vice versa. These are usually modules whose content overlaps significantly with this module, and can usually be used to replace each other to fulfill prerequisites.  **Corequisites** are modules that must be taken together with this module in the same semester. This usually refer to twined modules - modules which have linked syllabuses.  #### Prerequisite Tree  The `prereqTree` key is return on the individual module endpoint (`/modules/{moduleCode`). Not all modules have prerequisites, and some have prerequisites that cannot be properly represented as a tree, in which case this key will not appear.  This describes the prerequisites that need to be fulfilled before this module can be taken. The data structure is recursive and represents a tree.  ```json {   \\\"and\\\": [     \\\"CS1231\\\",     {       \\\"or\\\": [\\\"CS1010S\\\", \\\"CS1010X\\\"]     }   ] } ```  In the example, this module requires CS1231 and either CS1010S or CS1010X. This can be visualized as  ```            ┌ CS1231 ── all of ─┤            │         ┌ CS1010            └ one of ─┤                      └ CS1010X ```  The module information also contains the inverse of this, that is, modules whose requirements are fulfilled by this module (taking this module will allow you to take these modules in the following semester). The data is found on the `fulfillRequirements` key as an array of module codes.  ### Venue data  Venue data is simply the module timetable restructured to show the lessons happening at each classroom.  The venue list endpoint returns a list of all locations that are used in the semester. Note that this is not a comprehensive list of locations, but rather just a list of venues that appears in module lessons.  The venue information endpoint returns the full class and occupancy information about a venue. The `classes` key contains a list of lessons similar to the `timetable` key in module data, but without a `venue` key and with `moduleCode`.","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":" * The version of the OpenAPI document: 2.0.0","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":" * Contact: nusmods@googlegroups.com","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":" * https://openapi-generator.tech","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":" * Do not edit the class manually.","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"package org.openapitools.client.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"import java.util.List;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonInclude;","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonPropertyOrder;","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"import io.swagger.annotations.ApiModelProperty;","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":" * VenueInformation","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"@JsonPropertyOrder({","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"    VenueInformation.JSON_PROPERTY_DAY,","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"    VenueInformation.JSON_PROPERTY_CLASSES,","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"    VenueInformation.JSON_PROPERTY_AVAILABILITY","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"})","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"@javax.annotation.processing.Generated(value \u003d \"org.openapitools.codegen.languages.JavaClientCodegen\", date \u003d \"2022-10-03T22:22:26.802458+08:00[Asia/Singapore]\")","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"public class VenueInformation {","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_DAY \u003d \"day\";","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_CLASSES \u003d \"classes\";","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_AVAILABILITY \u003d \"availability\";","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"    private DayEnum day;","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"    private List\u003cVenueLesson\u003e classes \u003d null;","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"    private Map\u003cString, InnerEnum\u003e availability \u003d null;","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"    public VenueInformation() {","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"    public VenueInformation day(DayEnum day) {","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"        this.day \u003d day;","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"     * Get day","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"     * @return day","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nullable","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_DAY)","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"    public DayEnum getDay() {","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"        return day;","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_DAY)","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"shenyih0ng"},"content":"    public void setDay(DayEnum day) {","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"shenyih0ng"},"content":"        this.day \u003d day;","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"shenyih0ng"},"content":"    public VenueInformation classes(List\u003cVenueLesson\u003e classes) {","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"shenyih0ng"},"content":"        this.classes \u003d classes;","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"shenyih0ng"},"content":"    public VenueInformation addClassesItem(VenueLesson classesItem) {","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"shenyih0ng"},"content":"        if (this.classes \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"shenyih0ng"},"content":"            this.classes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"shenyih0ng"},"content":"        this.classes.add(classesItem);","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"shenyih0ng"},"content":"     * Get classes","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":93,"author":{"gitId":"shenyih0ng"},"content":"     * @return classes","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nullable","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_CLASSES)","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"shenyih0ng"},"content":"    public List\u003cVenueLesson\u003e getClasses() {","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"shenyih0ng"},"content":"        return classes;","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_CLASSES)","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"shenyih0ng"},"content":"    public void setClasses(List\u003cVenueLesson\u003e classes) {","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"shenyih0ng"},"content":"        this.classes \u003d classes;","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"shenyih0ng"},"content":"    public VenueInformation availability(Map\u003cString, InnerEnum\u003e availability) {","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"shenyih0ng"},"content":"        this.availability \u003d availability;","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"shenyih0ng"},"content":"    public VenueInformation putAvailabilityItem(String key, InnerEnum availabilityItem) {","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"shenyih0ng"},"content":"        if (this.availability \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"shenyih0ng"},"content":"            this.availability \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"shenyih0ng"},"content":"        this.availability.put(key, availabilityItem);","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"shenyih0ng"},"content":"     * Get availability","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":126,"author":{"gitId":"shenyih0ng"},"content":"     * @return availability","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nullable","lastModifiedDate":"2022-10-03"},{"lineNumber":129,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"{\\\"0900\\\":\\\"occupied\\\",\\\"0930\\\":\\\"occupied\\\",\\\"1000\\\":\\\"occupied\\\"}\", value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_AVAILABILITY)","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"shenyih0ng"},"content":"    public Map\u003cString, InnerEnum\u003e getAvailability() {","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"shenyih0ng"},"content":"        return availability;","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":136,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_AVAILABILITY)","lastModifiedDate":"2022-10-03"},{"lineNumber":138,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":139,"author":{"gitId":"shenyih0ng"},"content":"    public void setAvailability(Map\u003cString, InnerEnum\u003e availability) {","lastModifiedDate":"2022-10-03"},{"lineNumber":140,"author":{"gitId":"shenyih0ng"},"content":"        this.availability \u003d availability;","lastModifiedDate":"2022-10-03"},{"lineNumber":141,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":142,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":143,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":144,"author":{"gitId":"shenyih0ng"},"content":"     * Return true if this VenueInformation object is equal to o.","lastModifiedDate":"2022-10-03"},{"lineNumber":145,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":146,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":147,"author":{"gitId":"shenyih0ng"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":148,"author":{"gitId":"shenyih0ng"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":149,"author":{"gitId":"shenyih0ng"},"content":"            return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":150,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":151,"author":{"gitId":"shenyih0ng"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":152,"author":{"gitId":"shenyih0ng"},"content":"            return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":153,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":154,"author":{"gitId":"shenyih0ng"},"content":"        VenueInformation venueInformation \u003d (VenueInformation) o;","lastModifiedDate":"2022-10-03"},{"lineNumber":155,"author":{"gitId":"shenyih0ng"},"content":"        return Objects.equals(this.day, venueInformation.day) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":156,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.classes, venueInformation.classes) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":157,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.availability, venueInformation.availability);","lastModifiedDate":"2022-10-03"},{"lineNumber":158,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":159,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":160,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":161,"author":{"gitId":"shenyih0ng"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":162,"author":{"gitId":"shenyih0ng"},"content":"        return Objects.hash(day, classes, availability);","lastModifiedDate":"2022-10-03"},{"lineNumber":163,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":164,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":165,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":166,"author":{"gitId":"shenyih0ng"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":167,"author":{"gitId":"shenyih0ng"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-03"},{"lineNumber":168,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"class VenueInformation {\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":169,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    day: \").append(toIndentedString(day)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":170,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    classes: \").append(toIndentedString(classes)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":171,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    availability: \").append(toIndentedString(availability)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":172,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"}\");","lastModifiedDate":"2022-10-03"},{"lineNumber":173,"author":{"gitId":"shenyih0ng"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-03"},{"lineNumber":174,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":175,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":176,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":177,"author":{"gitId":"shenyih0ng"},"content":"     * Convert the given object to string with each line indented by 4 spaces (except the first line).","lastModifiedDate":"2022-10-07"},{"lineNumber":178,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":179,"author":{"gitId":"shenyih0ng"},"content":"    private String toIndentedString(Object o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":180,"author":{"gitId":"shenyih0ng"},"content":"        if (o \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":181,"author":{"gitId":"shenyih0ng"},"content":"            return \"null\";","lastModifiedDate":"2022-10-03"},{"lineNumber":182,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":183,"author":{"gitId":"shenyih0ng"},"content":"        return o.toString().replace(\"\\n\", \"\\n    \");","lastModifiedDate":"2022-10-03"},{"lineNumber":184,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":185,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":186,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":187,"author":{"gitId":"shenyih0ng"},"content":"     * Gets or Sets day","lastModifiedDate":"2022-10-07"},{"lineNumber":188,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":189,"author":{"gitId":"shenyih0ng"},"content":"    public enum DayEnum {","lastModifiedDate":"2022-10-07"},{"lineNumber":190,"author":{"gitId":"shenyih0ng"},"content":"        MONDAY(\"Monday\"),","lastModifiedDate":"2022-10-07"},{"lineNumber":191,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":192,"author":{"gitId":"shenyih0ng"},"content":"        TUESDAY(\"Tuesday\"),","lastModifiedDate":"2022-10-07"},{"lineNumber":193,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":194,"author":{"gitId":"shenyih0ng"},"content":"        WEDNESDAY(\"Wednesday\"),","lastModifiedDate":"2022-10-07"},{"lineNumber":195,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":196,"author":{"gitId":"shenyih0ng"},"content":"        THURSDAY(\"Thursday\"),","lastModifiedDate":"2022-10-07"},{"lineNumber":197,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":198,"author":{"gitId":"shenyih0ng"},"content":"        FRIDAY(\"Friday\"),","lastModifiedDate":"2022-10-07"},{"lineNumber":199,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":200,"author":{"gitId":"shenyih0ng"},"content":"        SATURDAY(\"Saturday\");","lastModifiedDate":"2022-10-07"},{"lineNumber":201,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":202,"author":{"gitId":"shenyih0ng"},"content":"        private String value;","lastModifiedDate":"2022-10-07"},{"lineNumber":203,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":204,"author":{"gitId":"shenyih0ng"},"content":"        DayEnum(String value) {","lastModifiedDate":"2022-10-07"},{"lineNumber":205,"author":{"gitId":"shenyih0ng"},"content":"            this.value \u003d value;","lastModifiedDate":"2022-10-07"},{"lineNumber":206,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":207,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":208,"author":{"gitId":"shenyih0ng"},"content":"        @JsonCreator","lastModifiedDate":"2022-10-07"},{"lineNumber":209,"author":{"gitId":"shenyih0ng"},"content":"        public static DayEnum fromValue(String value) {","lastModifiedDate":"2022-10-07"},{"lineNumber":210,"author":{"gitId":"shenyih0ng"},"content":"            for (DayEnum b : DayEnum.values()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":211,"author":{"gitId":"shenyih0ng"},"content":"                if (b.value.equals(value)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":212,"author":{"gitId":"shenyih0ng"},"content":"                    return b;","lastModifiedDate":"2022-10-07"},{"lineNumber":213,"author":{"gitId":"shenyih0ng"},"content":"                }","lastModifiedDate":"2022-10-07"},{"lineNumber":214,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-07"},{"lineNumber":215,"author":{"gitId":"shenyih0ng"},"content":"            throw new IllegalArgumentException(\"Unexpected value \u0027\" + value + \"\u0027\");","lastModifiedDate":"2022-10-07"},{"lineNumber":216,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":217,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":218,"author":{"gitId":"shenyih0ng"},"content":"        @JsonValue","lastModifiedDate":"2022-10-07"},{"lineNumber":219,"author":{"gitId":"shenyih0ng"},"content":"        public String getValue() {","lastModifiedDate":"2022-10-07"},{"lineNumber":220,"author":{"gitId":"shenyih0ng"},"content":"            return value;","lastModifiedDate":"2022-10-07"},{"lineNumber":221,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":222,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":223,"author":{"gitId":"shenyih0ng"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":224,"author":{"gitId":"shenyih0ng"},"content":"        public String toString() {","lastModifiedDate":"2022-10-07"},{"lineNumber":225,"author":{"gitId":"shenyih0ng"},"content":"            return String.valueOf(value);","lastModifiedDate":"2022-10-07"},{"lineNumber":226,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":227,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":228,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":229,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":230,"author":{"gitId":"shenyih0ng"},"content":"     * Gets or Sets inner","lastModifiedDate":"2022-10-07"},{"lineNumber":231,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":232,"author":{"gitId":"shenyih0ng"},"content":"    public enum InnerEnum {","lastModifiedDate":"2022-10-07"},{"lineNumber":233,"author":{"gitId":"shenyih0ng"},"content":"        OCCUPIED(\"occupied\");","lastModifiedDate":"2022-10-07"},{"lineNumber":234,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":235,"author":{"gitId":"shenyih0ng"},"content":"        private String value;","lastModifiedDate":"2022-10-07"},{"lineNumber":236,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":237,"author":{"gitId":"shenyih0ng"},"content":"        InnerEnum(String value) {","lastModifiedDate":"2022-10-07"},{"lineNumber":238,"author":{"gitId":"shenyih0ng"},"content":"            this.value \u003d value;","lastModifiedDate":"2022-10-07"},{"lineNumber":239,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":240,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":241,"author":{"gitId":"shenyih0ng"},"content":"        @JsonCreator","lastModifiedDate":"2022-10-07"},{"lineNumber":242,"author":{"gitId":"shenyih0ng"},"content":"        public static InnerEnum fromValue(String value) {","lastModifiedDate":"2022-10-07"},{"lineNumber":243,"author":{"gitId":"shenyih0ng"},"content":"            for (InnerEnum b : InnerEnum.values()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":244,"author":{"gitId":"shenyih0ng"},"content":"                if (b.value.equals(value)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":245,"author":{"gitId":"shenyih0ng"},"content":"                    return b;","lastModifiedDate":"2022-10-07"},{"lineNumber":246,"author":{"gitId":"shenyih0ng"},"content":"                }","lastModifiedDate":"2022-10-07"},{"lineNumber":247,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-07"},{"lineNumber":248,"author":{"gitId":"shenyih0ng"},"content":"            throw new IllegalArgumentException(\"Unexpected value \u0027\" + value + \"\u0027\");","lastModifiedDate":"2022-10-07"},{"lineNumber":249,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":250,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":251,"author":{"gitId":"shenyih0ng"},"content":"        @JsonValue","lastModifiedDate":"2022-10-07"},{"lineNumber":252,"author":{"gitId":"shenyih0ng"},"content":"        public String getValue() {","lastModifiedDate":"2022-10-07"},{"lineNumber":253,"author":{"gitId":"shenyih0ng"},"content":"            return value;","lastModifiedDate":"2022-10-07"},{"lineNumber":254,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":255,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":256,"author":{"gitId":"shenyih0ng"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":257,"author":{"gitId":"shenyih0ng"},"content":"        public String toString() {","lastModifiedDate":"2022-10-07"},{"lineNumber":258,"author":{"gitId":"shenyih0ng"},"content":"            return String.valueOf(value);","lastModifiedDate":"2022-10-07"},{"lineNumber":259,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":260,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":261,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":262,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"},{"lineNumber":263,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"shenyih0ng":263}},{"path":"src/main/java/org/openapitools/client/model/VenueLesson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"/*","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API contains data used to render \u003chttps://nusmods.com\u003e. It includes data on modules offered by NUS and their timetables, as well as information on the locations the classes take place in. You are welcome to use and experiment with the data, which is extracted from official APIs provided by the Registrar\u0027s Office.  The API consists of static JSON files scraped daily from the school\u0027s APIs. This means it only partially follow REST conventions, and all resources are read only. All successful responses will return JSON, and all endpoints end in `.json`.  The shape of the data returned by these endpoints are designed for NUSMods in mind. If you have any questions or find that you need the data in other shapes for other purposes, feel free to reach out to us:  - **Telegram**: \u003chttps://telegram.me/nusmods\u003e - **Mailing list**: \u003cnusmods@googlegroups.com\u003e (for security related issues please email \u003cmods@nusmods.com\u003e instead)  ## Fetching data  Any HTTP client can be used to fetch data from the API. HTTPS is preferred, but the server will also respond to HTTP requests. The server supports HTTP 1.1 as well as HTTP 2 over HTTPS, and supports gzip compression.  The API has no authentication, and is not rate limited. While the server can respond to a large number of requests simultaneously, we request that you be polite with resource usage so as not to disrupt nusmods.com, which relies on the same API server. In general there is no need to fetch data from the API more than once per day, as that is the frequency at which we update the data.  [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) headers are enabled on all endpoints, so client-side JavaScript can use also use the API.  ## TypeScript types  Since the NUSMods is written in TypeScript, typings are available in the source for the scraper. These may be easier to read than the documentation generated by Swagger.  - Module types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/modules.ts\u003e - Venue types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/venues.ts\u003e  ## Data  Below are some notes about the data returned from the API. Feel free to talk to us or create an issue if any of it is not clear.  ### Module data  Module endpoints return information on modules offered by NUS. Most of the module data is self-explanatory, but some of the data are more complex and is explained here.  #### Lessons  Each lesson in a timetable has a lesson type `lessonType` and class number `ClassNo`. Every student must take one of each lesson type offered by the module. For example, this module offers two tutorials and one lecture. That means the student must attend the lecture, and can choose one of the two tutorials to attend.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"01\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1100\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"COM1-0207\\\"     },     {       \\\"classNo\\\": \\\"02\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Friday\\\",       \\\"startTime\\\": \\\"0900\\\",       \\\"endTime\\\": \\\"1000\\\",       \\\"venue\\\": \\\"COM1-0209\\\"     }   ] } ```  Each lesson has a `classNo` key. There can be multiple lessons of the same type and class number, in which case students must attend both. In this example, students can choose to attend either lecture group 1 on Tuesdays and Wednesdays, or lecture group 2 on Mondays and Wednesdays.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1400\\\",       \\\"endTime\\\": \\\"1500\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Monday\\\",       \\\"startTime\\\": \\\"1000\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1500\\\",       \\\"endTime\\\": \\\"1600\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     }   ] } ```  #### Lesson Weeks  The `weeks` key on lessons can return data in one of two forms.  Weeks is usually a sorted array of numbers. In this case it represents the school weeks the lesson occurs on, from 1 to 13.  Some classes have lessons outside of the school timetable. In this case a `WeekRange` object is returned. The object will always contain a `start` and `end` key representing the start and end date of lessons. The example below has classes every week from 17th Jan to 18th April.  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-04-18\\\" } ```  Optionally it can also include `weekInterval`, a positive integer describing the number of weeks between each lesson, and `weeks`, an array of positive integers describing the weeks on which the lesson will fall, with week 1 being the starting date. If these are not present you can assume lessons will occur every week.  The following example has lessons on 17th Jan (week 1), 24th Jan (week 2), 7th Feb (week 4) and 21st Feb (week 6).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-21\\\",   \\\"weeks\\\": [1, 2, 4, 6] } ```  The following example has lessons on 17th Jan (week 1), 31st Jan (week 3), 14th Feb (week 5) and 28th Feb (week 7).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-28\\\",   \\\"weekInterval\\\": 2 } ```  #### Workload  The `workload` key can return data in one of two forms.  Workload is usually a **5-tuple of numbers**, describing the estimated number of hours per week the student is expected to put in for the module for **lectures, tutorials, laboratory, projects/fieldwork, and preparatory work** respectively. For example, a workload of `[2, 1, 1, 3, 3]` means the student should spend every week  - 2 hours in lectures - 1 hour in tutorials - 1 hour at the lab - 3 hours doing project work - 3 hours preparing for classes  Each module credit represents 2.5 hours of work each week, so the standard 4 MC module represents 10 hours of work each week. Module credit may not be integers.  Note that this is only an estimate, and may be outdated or differ significantly in reality. Some modules also incorrectly lists the **total** workload hours instead of weekly, so very large values may show up.  This value is parsed from a string provided by the school, and occasionally this field will contain unusual values which cannot be parsed. In this case this field will contain the original **string** instead, which should be displayed as-is to the user.  #### Prerequisite, corequisite and preclusions  These three keys determine whether a student can take a module.  **Prerequisites** are requirements you have to meet before you can take a module. These are usually in the form of other modules (see prerequisite tree below for a machine readable format), but can also be things like \u0027taken A-level H2 math\u0027 or \u002770 MCs and above\u0027.  **Preclusions** refer to modules or requirements that cannot be taken if this module is taken, and vice versa. These are usually modules whose content overlaps significantly with this module, and can usually be used to replace each other to fulfill prerequisites.  **Corequisites** are modules that must be taken together with this module in the same semester. This usually refer to twined modules - modules which have linked syllabuses.  #### Prerequisite Tree  The `prereqTree` key is return on the individual module endpoint (`/modules/{moduleCode`). Not all modules have prerequisites, and some have prerequisites that cannot be properly represented as a tree, in which case this key will not appear.  This describes the prerequisites that need to be fulfilled before this module can be taken. The data structure is recursive and represents a tree.  ```json {   \\\"and\\\": [     \\\"CS1231\\\",     {       \\\"or\\\": [\\\"CS1010S\\\", \\\"CS1010X\\\"]     }   ] } ```  In the example, this module requires CS1231 and either CS1010S or CS1010X. This can be visualized as  ```            ┌ CS1231 ── all of ─┤            │         ┌ CS1010            └ one of ─┤                      └ CS1010X ```  The module information also contains the inverse of this, that is, modules whose requirements are fulfilled by this module (taking this module will allow you to take these modules in the following semester). The data is found on the `fulfillRequirements` key as an array of module codes.  ### Venue data  Venue data is simply the module timetable restructured to show the lessons happening at each classroom.  The venue list endpoint returns a list of all locations that are used in the semester. Note that this is not a comprehensive list of locations, but rather just a list of venues that appears in module lessons.  The venue information endpoint returns the full class and occupancy information about a venue. The `classes` key contains a list of lessons similar to the `timetable` key in module data, but without a `venue` key and with `moduleCode`.","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":" * The version of the OpenAPI document: 2.0.0","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":" * Contact: nusmods@googlegroups.com","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":" * https://openapi-generator.tech","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":" * Do not edit the class manually.","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"package org.openapitools.client.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonInclude;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonPropertyOrder;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"import io.swagger.annotations.ApiModelProperty;","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":" * VenueLesson","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"@JsonPropertyOrder({","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"    VenueLesson.JSON_PROPERTY_CLASS_NO,","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"    VenueLesson.JSON_PROPERTY_START_TIME,","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"    VenueLesson.JSON_PROPERTY_END_TIME,","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"    VenueLesson.JSON_PROPERTY_WEEKS,","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"    VenueLesson.JSON_PROPERTY_VENUE,","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"    VenueLesson.JSON_PROPERTY_DAY,","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"    VenueLesson.JSON_PROPERTY_LESSON_TYPE,","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"    VenueLesson.JSON_PROPERTY_SIZE,","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"    VenueLesson.JSON_PROPERTY_MODULE_CODE","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"})","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"@javax.annotation.processing.Generated(value \u003d \"org.openapitools.codegen.languages.JavaClientCodegen\", date \u003d \"2022-10-03T22:22:26.802458+08:00[Asia/Singapore]\")","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"public class VenueLesson {","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_CLASS_NO \u003d \"classNo\";","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_START_TIME \u003d \"startTime\";","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_END_TIME \u003d \"endTime\";","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_WEEKS \u003d \"weeks\";","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_VENUE \u003d \"venue\";","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_DAY \u003d \"day\";","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_LESSON_TYPE \u003d \"lessonType\";","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_SIZE \u003d \"size\";","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_MODULE_CODE \u003d \"moduleCode\";","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"    private String classNo;","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"    private String startTime;","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"    private String endTime;","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"    private LessonWeeks weeks;","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"    private String venue;","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"    private String day;","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"    private String lessonType;","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"    private BigDecimal size;","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"    private String moduleCode;","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"    public VenueLesson() {","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"    public VenueLesson classNo(String classNo) {","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"        this.classNo \u003d classNo;","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"shenyih0ng"},"content":"     * Get classNo","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"shenyih0ng"},"content":"     * @return classNo","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"08\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_CLASS_NO)","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"shenyih0ng"},"content":"    public String getClassNo() {","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"shenyih0ng"},"content":"        return classNo;","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_CLASS_NO)","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"shenyih0ng"},"content":"    public void setClassNo(String classNo) {","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"shenyih0ng"},"content":"        this.classNo \u003d classNo;","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"shenyih0ng"},"content":"    public VenueLesson startTime(String startTime) {","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"shenyih0ng"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"shenyih0ng"},"content":"     * Get startTime","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":100,"author":{"gitId":"shenyih0ng"},"content":"     * @return startTime","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"1100\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_START_TIME)","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"shenyih0ng"},"content":"    public String getStartTime() {","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"shenyih0ng"},"content":"        return startTime;","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_START_TIME)","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"shenyih0ng"},"content":"    public void setStartTime(String startTime) {","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"shenyih0ng"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"shenyih0ng"},"content":"    public VenueLesson endTime(String endTime) {","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"shenyih0ng"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"shenyih0ng"},"content":"     * Get endTime","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":127,"author":{"gitId":"shenyih0ng"},"content":"     * @return endTime","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":129,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"1200\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_END_TIME)","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"shenyih0ng"},"content":"    public String getEndTime() {","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"shenyih0ng"},"content":"        return endTime;","lastModifiedDate":"2022-10-03"},{"lineNumber":136,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":138,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":139,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_END_TIME)","lastModifiedDate":"2022-10-03"},{"lineNumber":140,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":141,"author":{"gitId":"shenyih0ng"},"content":"    public void setEndTime(String endTime) {","lastModifiedDate":"2022-10-03"},{"lineNumber":142,"author":{"gitId":"shenyih0ng"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2022-10-03"},{"lineNumber":143,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":144,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":145,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":146,"author":{"gitId":"shenyih0ng"},"content":"    public VenueLesson weeks(LessonWeeks weeks) {","lastModifiedDate":"2022-10-03"},{"lineNumber":147,"author":{"gitId":"shenyih0ng"},"content":"        this.weeks \u003d weeks;","lastModifiedDate":"2022-10-03"},{"lineNumber":148,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":149,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":150,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":151,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":152,"author":{"gitId":"shenyih0ng"},"content":"     * Get weeks","lastModifiedDate":"2022-10-03"},{"lineNumber":153,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":154,"author":{"gitId":"shenyih0ng"},"content":"     * @return weeks","lastModifiedDate":"2022-10-03"},{"lineNumber":155,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":156,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":157,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":158,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_WEEKS)","lastModifiedDate":"2022-10-03"},{"lineNumber":159,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":160,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":161,"author":{"gitId":"shenyih0ng"},"content":"    public LessonWeeks getWeeks() {","lastModifiedDate":"2022-10-03"},{"lineNumber":162,"author":{"gitId":"shenyih0ng"},"content":"        return weeks;","lastModifiedDate":"2022-10-03"},{"lineNumber":163,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":164,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":165,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":166,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_WEEKS)","lastModifiedDate":"2022-10-03"},{"lineNumber":167,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":168,"author":{"gitId":"shenyih0ng"},"content":"    public void setWeeks(LessonWeeks weeks) {","lastModifiedDate":"2022-10-03"},{"lineNumber":169,"author":{"gitId":"shenyih0ng"},"content":"        this.weeks \u003d weeks;","lastModifiedDate":"2022-10-03"},{"lineNumber":170,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":171,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":172,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":173,"author":{"gitId":"shenyih0ng"},"content":"    public VenueLesson venue(String venue) {","lastModifiedDate":"2022-10-03"},{"lineNumber":174,"author":{"gitId":"shenyih0ng"},"content":"        this.venue \u003d venue;","lastModifiedDate":"2022-10-03"},{"lineNumber":175,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":176,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":177,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":178,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":179,"author":{"gitId":"shenyih0ng"},"content":"     * Get venue","lastModifiedDate":"2022-10-03"},{"lineNumber":180,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":181,"author":{"gitId":"shenyih0ng"},"content":"     * @return venue","lastModifiedDate":"2022-10-03"},{"lineNumber":182,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":183,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":184,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"COM1-0208\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":185,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_VENUE)","lastModifiedDate":"2022-10-03"},{"lineNumber":186,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":187,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":188,"author":{"gitId":"shenyih0ng"},"content":"    public String getVenue() {","lastModifiedDate":"2022-10-03"},{"lineNumber":189,"author":{"gitId":"shenyih0ng"},"content":"        return venue;","lastModifiedDate":"2022-10-03"},{"lineNumber":190,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":191,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":192,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":193,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_VENUE)","lastModifiedDate":"2022-10-03"},{"lineNumber":194,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":195,"author":{"gitId":"shenyih0ng"},"content":"    public void setVenue(String venue) {","lastModifiedDate":"2022-10-03"},{"lineNumber":196,"author":{"gitId":"shenyih0ng"},"content":"        this.venue \u003d venue;","lastModifiedDate":"2022-10-03"},{"lineNumber":197,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":198,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":199,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":200,"author":{"gitId":"shenyih0ng"},"content":"    public VenueLesson day(String day) {","lastModifiedDate":"2022-10-03"},{"lineNumber":201,"author":{"gitId":"shenyih0ng"},"content":"        this.day \u003d day;","lastModifiedDate":"2022-10-03"},{"lineNumber":202,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":203,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":204,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":205,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":206,"author":{"gitId":"shenyih0ng"},"content":"     * Get day","lastModifiedDate":"2022-10-03"},{"lineNumber":207,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":208,"author":{"gitId":"shenyih0ng"},"content":"     * @return day","lastModifiedDate":"2022-10-03"},{"lineNumber":209,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":210,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nullable","lastModifiedDate":"2022-10-03"},{"lineNumber":211,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"Friday\", value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":212,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_DAY)","lastModifiedDate":"2022-10-03"},{"lineNumber":213,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":214,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":215,"author":{"gitId":"shenyih0ng"},"content":"    public String getDay() {","lastModifiedDate":"2022-10-03"},{"lineNumber":216,"author":{"gitId":"shenyih0ng"},"content":"        return day;","lastModifiedDate":"2022-10-03"},{"lineNumber":217,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":218,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":219,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":220,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_DAY)","lastModifiedDate":"2022-10-03"},{"lineNumber":221,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":222,"author":{"gitId":"shenyih0ng"},"content":"    public void setDay(String day) {","lastModifiedDate":"2022-10-03"},{"lineNumber":223,"author":{"gitId":"shenyih0ng"},"content":"        this.day \u003d day;","lastModifiedDate":"2022-10-03"},{"lineNumber":224,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":225,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":226,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":227,"author":{"gitId":"shenyih0ng"},"content":"    public VenueLesson lessonType(String lessonType) {","lastModifiedDate":"2022-10-03"},{"lineNumber":228,"author":{"gitId":"shenyih0ng"},"content":"        this.lessonType \u003d lessonType;","lastModifiedDate":"2022-10-03"},{"lineNumber":229,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":230,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":231,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":232,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":233,"author":{"gitId":"shenyih0ng"},"content":"     * Get lessonType","lastModifiedDate":"2022-10-03"},{"lineNumber":234,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":235,"author":{"gitId":"shenyih0ng"},"content":"     * @return lessonType","lastModifiedDate":"2022-10-03"},{"lineNumber":236,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":237,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":238,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"Tutorial\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":239,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_LESSON_TYPE)","lastModifiedDate":"2022-10-03"},{"lineNumber":240,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":241,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":242,"author":{"gitId":"shenyih0ng"},"content":"    public String getLessonType() {","lastModifiedDate":"2022-10-03"},{"lineNumber":243,"author":{"gitId":"shenyih0ng"},"content":"        return lessonType;","lastModifiedDate":"2022-10-03"},{"lineNumber":244,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":245,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":246,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":247,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_LESSON_TYPE)","lastModifiedDate":"2022-10-03"},{"lineNumber":248,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":249,"author":{"gitId":"shenyih0ng"},"content":"    public void setLessonType(String lessonType) {","lastModifiedDate":"2022-10-03"},{"lineNumber":250,"author":{"gitId":"shenyih0ng"},"content":"        this.lessonType \u003d lessonType;","lastModifiedDate":"2022-10-03"},{"lineNumber":251,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":252,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":253,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":254,"author":{"gitId":"shenyih0ng"},"content":"    public VenueLesson size(BigDecimal size) {","lastModifiedDate":"2022-10-03"},{"lineNumber":255,"author":{"gitId":"shenyih0ng"},"content":"        this.size \u003d size;","lastModifiedDate":"2022-10-03"},{"lineNumber":256,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":257,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":258,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":259,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":260,"author":{"gitId":"shenyih0ng"},"content":"     * Get size","lastModifiedDate":"2022-10-03"},{"lineNumber":261,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":262,"author":{"gitId":"shenyih0ng"},"content":"     * @return size","lastModifiedDate":"2022-10-03"},{"lineNumber":263,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":264,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nullable","lastModifiedDate":"2022-10-03"},{"lineNumber":265,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"30\", value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":266,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_SIZE)","lastModifiedDate":"2022-10-03"},{"lineNumber":267,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":268,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":269,"author":{"gitId":"shenyih0ng"},"content":"    public BigDecimal getSize() {","lastModifiedDate":"2022-10-03"},{"lineNumber":270,"author":{"gitId":"shenyih0ng"},"content":"        return size;","lastModifiedDate":"2022-10-03"},{"lineNumber":271,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":272,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":273,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":274,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_SIZE)","lastModifiedDate":"2022-10-03"},{"lineNumber":275,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":276,"author":{"gitId":"shenyih0ng"},"content":"    public void setSize(BigDecimal size) {","lastModifiedDate":"2022-10-03"},{"lineNumber":277,"author":{"gitId":"shenyih0ng"},"content":"        this.size \u003d size;","lastModifiedDate":"2022-10-03"},{"lineNumber":278,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":279,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":280,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":281,"author":{"gitId":"shenyih0ng"},"content":"    public VenueLesson moduleCode(String moduleCode) {","lastModifiedDate":"2022-10-03"},{"lineNumber":282,"author":{"gitId":"shenyih0ng"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-10-03"},{"lineNumber":283,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":284,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":285,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":286,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":287,"author":{"gitId":"shenyih0ng"},"content":"     * Get moduleCode","lastModifiedDate":"2022-10-03"},{"lineNumber":288,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":289,"author":{"gitId":"shenyih0ng"},"content":"     * @return moduleCode","lastModifiedDate":"2022-10-03"},{"lineNumber":290,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":291,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":292,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"CS1010S\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":293,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_MODULE_CODE)","lastModifiedDate":"2022-10-03"},{"lineNumber":294,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":295,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":296,"author":{"gitId":"shenyih0ng"},"content":"    public String getModuleCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":297,"author":{"gitId":"shenyih0ng"},"content":"        return moduleCode;","lastModifiedDate":"2022-10-03"},{"lineNumber":298,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":299,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":300,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":301,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_MODULE_CODE)","lastModifiedDate":"2022-10-03"},{"lineNumber":302,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":303,"author":{"gitId":"shenyih0ng"},"content":"    public void setModuleCode(String moduleCode) {","lastModifiedDate":"2022-10-03"},{"lineNumber":304,"author":{"gitId":"shenyih0ng"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-10-03"},{"lineNumber":305,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":306,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":307,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":308,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":309,"author":{"gitId":"shenyih0ng"},"content":"     * Return true if this VenueLesson object is equal to o.","lastModifiedDate":"2022-10-03"},{"lineNumber":310,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":311,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":312,"author":{"gitId":"shenyih0ng"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":313,"author":{"gitId":"shenyih0ng"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":314,"author":{"gitId":"shenyih0ng"},"content":"            return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":315,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":316,"author":{"gitId":"shenyih0ng"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":317,"author":{"gitId":"shenyih0ng"},"content":"            return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":318,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":319,"author":{"gitId":"shenyih0ng"},"content":"        VenueLesson venueLesson \u003d (VenueLesson) o;","lastModifiedDate":"2022-10-03"},{"lineNumber":320,"author":{"gitId":"shenyih0ng"},"content":"        return Objects.equals(this.classNo, venueLesson.classNo) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":321,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.startTime, venueLesson.startTime) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":322,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.endTime, venueLesson.endTime) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":323,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.weeks, venueLesson.weeks) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":324,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.venue, venueLesson.venue) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":325,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.day, venueLesson.day) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":326,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.lessonType, venueLesson.lessonType) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":327,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.size, venueLesson.size) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":328,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.moduleCode, venueLesson.moduleCode);","lastModifiedDate":"2022-10-03"},{"lineNumber":329,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":330,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":331,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":332,"author":{"gitId":"shenyih0ng"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":333,"author":{"gitId":"shenyih0ng"},"content":"        return Objects.hash(classNo, startTime, endTime, weeks, venue, day, lessonType, size, moduleCode);","lastModifiedDate":"2022-10-03"},{"lineNumber":334,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":335,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":336,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":337,"author":{"gitId":"shenyih0ng"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":338,"author":{"gitId":"shenyih0ng"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-03"},{"lineNumber":339,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"class VenueLesson {\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":340,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    classNo: \").append(toIndentedString(classNo)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":341,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    startTime: \").append(toIndentedString(startTime)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":342,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    endTime: \").append(toIndentedString(endTime)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":343,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    weeks: \").append(toIndentedString(weeks)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":344,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    venue: \").append(toIndentedString(venue)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":345,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    day: \").append(toIndentedString(day)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":346,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    lessonType: \").append(toIndentedString(lessonType)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":347,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    size: \").append(toIndentedString(size)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":348,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    moduleCode: \").append(toIndentedString(moduleCode)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":349,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"}\");","lastModifiedDate":"2022-10-03"},{"lineNumber":350,"author":{"gitId":"shenyih0ng"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-03"},{"lineNumber":351,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":352,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":353,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":354,"author":{"gitId":"shenyih0ng"},"content":"     * Convert the given object to string with each line indented by 4 spaces (except the first line).","lastModifiedDate":"2022-10-07"},{"lineNumber":355,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":356,"author":{"gitId":"shenyih0ng"},"content":"    private String toIndentedString(Object o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":357,"author":{"gitId":"shenyih0ng"},"content":"        if (o \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":358,"author":{"gitId":"shenyih0ng"},"content":"            return \"null\";","lastModifiedDate":"2022-10-03"},{"lineNumber":359,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":360,"author":{"gitId":"shenyih0ng"},"content":"        return o.toString().replace(\"\\n\", \"\\n    \");","lastModifiedDate":"2022-10-03"},{"lineNumber":361,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":362,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":363,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"},{"lineNumber":364,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"shenyih0ng":364}},{"path":"src/main/java/org/openapitools/client/model/VenueLessonAllOf.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"/*","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API contains data used to render \u003chttps://nusmods.com\u003e. It includes data on modules offered by NUS and their timetables, as well as information on the locations the classes take place in. You are welcome to use and experiment with the data, which is extracted from official APIs provided by the Registrar\u0027s Office.  The API consists of static JSON files scraped daily from the school\u0027s APIs. This means it only partially follow REST conventions, and all resources are read only. All successful responses will return JSON, and all endpoints end in `.json`.  The shape of the data returned by these endpoints are designed for NUSMods in mind. If you have any questions or find that you need the data in other shapes for other purposes, feel free to reach out to us:  - **Telegram**: \u003chttps://telegram.me/nusmods\u003e - **Mailing list**: \u003cnusmods@googlegroups.com\u003e (for security related issues please email \u003cmods@nusmods.com\u003e instead)  ## Fetching data  Any HTTP client can be used to fetch data from the API. HTTPS is preferred, but the server will also respond to HTTP requests. The server supports HTTP 1.1 as well as HTTP 2 over HTTPS, and supports gzip compression.  The API has no authentication, and is not rate limited. While the server can respond to a large number of requests simultaneously, we request that you be polite with resource usage so as not to disrupt nusmods.com, which relies on the same API server. In general there is no need to fetch data from the API more than once per day, as that is the frequency at which we update the data.  [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) headers are enabled on all endpoints, so client-side JavaScript can use also use the API.  ## TypeScript types  Since the NUSMods is written in TypeScript, typings are available in the source for the scraper. These may be easier to read than the documentation generated by Swagger.  - Module types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/modules.ts\u003e - Venue types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/venues.ts\u003e  ## Data  Below are some notes about the data returned from the API. Feel free to talk to us or create an issue if any of it is not clear.  ### Module data  Module endpoints return information on modules offered by NUS. Most of the module data is self-explanatory, but some of the data are more complex and is explained here.  #### Lessons  Each lesson in a timetable has a lesson type `lessonType` and class number `ClassNo`. Every student must take one of each lesson type offered by the module. For example, this module offers two tutorials and one lecture. That means the student must attend the lecture, and can choose one of the two tutorials to attend.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"01\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1100\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"COM1-0207\\\"     },     {       \\\"classNo\\\": \\\"02\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Friday\\\",       \\\"startTime\\\": \\\"0900\\\",       \\\"endTime\\\": \\\"1000\\\",       \\\"venue\\\": \\\"COM1-0209\\\"     }   ] } ```  Each lesson has a `classNo` key. There can be multiple lessons of the same type and class number, in which case students must attend both. In this example, students can choose to attend either lecture group 1 on Tuesdays and Wednesdays, or lecture group 2 on Mondays and Wednesdays.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1400\\\",       \\\"endTime\\\": \\\"1500\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Monday\\\",       \\\"startTime\\\": \\\"1000\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1500\\\",       \\\"endTime\\\": \\\"1600\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     }   ] } ```  #### Lesson Weeks  The `weeks` key on lessons can return data in one of two forms.  Weeks is usually a sorted array of numbers. In this case it represents the school weeks the lesson occurs on, from 1 to 13.  Some classes have lessons outside of the school timetable. In this case a `WeekRange` object is returned. The object will always contain a `start` and `end` key representing the start and end date of lessons. The example below has classes every week from 17th Jan to 18th April.  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-04-18\\\" } ```  Optionally it can also include `weekInterval`, a positive integer describing the number of weeks between each lesson, and `weeks`, an array of positive integers describing the weeks on which the lesson will fall, with week 1 being the starting date. If these are not present you can assume lessons will occur every week.  The following example has lessons on 17th Jan (week 1), 24th Jan (week 2), 7th Feb (week 4) and 21st Feb (week 6).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-21\\\",   \\\"weeks\\\": [1, 2, 4, 6] } ```  The following example has lessons on 17th Jan (week 1), 31st Jan (week 3), 14th Feb (week 5) and 28th Feb (week 7).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-28\\\",   \\\"weekInterval\\\": 2 } ```  #### Workload  The `workload` key can return data in one of two forms.  Workload is usually a **5-tuple of numbers**, describing the estimated number of hours per week the student is expected to put in for the module for **lectures, tutorials, laboratory, projects/fieldwork, and preparatory work** respectively. For example, a workload of `[2, 1, 1, 3, 3]` means the student should spend every week  - 2 hours in lectures - 1 hour in tutorials - 1 hour at the lab - 3 hours doing project work - 3 hours preparing for classes  Each module credit represents 2.5 hours of work each week, so the standard 4 MC module represents 10 hours of work each week. Module credit may not be integers.  Note that this is only an estimate, and may be outdated or differ significantly in reality. Some modules also incorrectly lists the **total** workload hours instead of weekly, so very large values may show up.  This value is parsed from a string provided by the school, and occasionally this field will contain unusual values which cannot be parsed. In this case this field will contain the original **string** instead, which should be displayed as-is to the user.  #### Prerequisite, corequisite and preclusions  These three keys determine whether a student can take a module.  **Prerequisites** are requirements you have to meet before you can take a module. These are usually in the form of other modules (see prerequisite tree below for a machine readable format), but can also be things like \u0027taken A-level H2 math\u0027 or \u002770 MCs and above\u0027.  **Preclusions** refer to modules or requirements that cannot be taken if this module is taken, and vice versa. These are usually modules whose content overlaps significantly with this module, and can usually be used to replace each other to fulfill prerequisites.  **Corequisites** are modules that must be taken together with this module in the same semester. This usually refer to twined modules - modules which have linked syllabuses.  #### Prerequisite Tree  The `prereqTree` key is return on the individual module endpoint (`/modules/{moduleCode`). Not all modules have prerequisites, and some have prerequisites that cannot be properly represented as a tree, in which case this key will not appear.  This describes the prerequisites that need to be fulfilled before this module can be taken. The data structure is recursive and represents a tree.  ```json {   \\\"and\\\": [     \\\"CS1231\\\",     {       \\\"or\\\": [\\\"CS1010S\\\", \\\"CS1010X\\\"]     }   ] } ```  In the example, this module requires CS1231 and either CS1010S or CS1010X. This can be visualized as  ```            ┌ CS1231 ── all of ─┤            │         ┌ CS1010            └ one of ─┤                      └ CS1010X ```  The module information also contains the inverse of this, that is, modules whose requirements are fulfilled by this module (taking this module will allow you to take these modules in the following semester). The data is found on the `fulfillRequirements` key as an array of module codes.  ### Venue data  Venue data is simply the module timetable restructured to show the lessons happening at each classroom.  The venue list endpoint returns a list of all locations that are used in the semester. Note that this is not a comprehensive list of locations, but rather just a list of venues that appears in module lessons.  The venue information endpoint returns the full class and occupancy information about a venue. The `classes` key contains a list of lessons similar to the `timetable` key in module data, but without a `venue` key and with `moduleCode`.","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":" * The version of the OpenAPI document: 2.0.0","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":" * Contact: nusmods@googlegroups.com","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":" * https://openapi-generator.tech","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":" * Do not edit the class manually.","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"package org.openapitools.client.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonInclude;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonPropertyOrder;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"import io.swagger.annotations.ApiModelProperty;","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":" * VenueLessonAllOf","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"@JsonPropertyOrder({","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"    VenueLessonAllOf.JSON_PROPERTY_MODULE_CODE","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"})","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"@javax.annotation.processing.Generated(value \u003d \"org.openapitools.codegen.languages.JavaClientCodegen\", date \u003d \"2022-10-03T22:22:26.802458+08:00[Asia/Singapore]\")","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"public class VenueLessonAllOf {","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_MODULE_CODE \u003d \"moduleCode\";","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"    private String moduleCode;","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"    public VenueLessonAllOf() {","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"    public VenueLessonAllOf moduleCode(String moduleCode) {","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"     * Get moduleCode","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"     * @return moduleCode","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"CS1010S\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_MODULE_CODE)","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"    public String getModuleCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"        return moduleCode;","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_MODULE_CODE)","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"    public void setModuleCode(String moduleCode) {","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"     * Return true if this VenueLesson_allOf object is equal to o.","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"shenyih0ng"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"shenyih0ng"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"shenyih0ng"},"content":"            return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"shenyih0ng"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"shenyih0ng"},"content":"            return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"shenyih0ng"},"content":"        VenueLessonAllOf venueLessonAllOf \u003d (VenueLessonAllOf) o;","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"shenyih0ng"},"content":"        return Objects.equals(this.moduleCode, venueLessonAllOf.moduleCode);","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"shenyih0ng"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"shenyih0ng"},"content":"        return Objects.hash(moduleCode);","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"shenyih0ng"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"shenyih0ng"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"class VenueLessonAllOf {\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    moduleCode: \").append(toIndentedString(moduleCode)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"}\");","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"shenyih0ng"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"shenyih0ng"},"content":"     * Convert the given object to string with each line indented by 4 spaces (except the first line).","lastModifiedDate":"2022-10-07"},{"lineNumber":98,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"shenyih0ng"},"content":"    private String toIndentedString(Object o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"shenyih0ng"},"content":"        if (o \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"shenyih0ng"},"content":"            return \"null\";","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"shenyih0ng"},"content":"        return o.toString().replace(\"\\n\", \"\\n    \");","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"shenyih0ng":107}},{"path":"src/main/java/org/openapitools/client/model/WeekRange.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"/*","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API contains data used to render \u003chttps://nusmods.com\u003e. It includes data on modules offered by NUS and their timetables, as well as information on the locations the classes take place in. You are welcome to use and experiment with the data, which is extracted from official APIs provided by the Registrar\u0027s Office.  The API consists of static JSON files scraped daily from the school\u0027s APIs. This means it only partially follow REST conventions, and all resources are read only. All successful responses will return JSON, and all endpoints end in `.json`.  The shape of the data returned by these endpoints are designed for NUSMods in mind. If you have any questions or find that you need the data in other shapes for other purposes, feel free to reach out to us:  - **Telegram**: \u003chttps://telegram.me/nusmods\u003e - **Mailing list**: \u003cnusmods@googlegroups.com\u003e (for security related issues please email \u003cmods@nusmods.com\u003e instead)  ## Fetching data  Any HTTP client can be used to fetch data from the API. HTTPS is preferred, but the server will also respond to HTTP requests. The server supports HTTP 1.1 as well as HTTP 2 over HTTPS, and supports gzip compression.  The API has no authentication, and is not rate limited. While the server can respond to a large number of requests simultaneously, we request that you be polite with resource usage so as not to disrupt nusmods.com, which relies on the same API server. In general there is no need to fetch data from the API more than once per day, as that is the frequency at which we update the data.  [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) headers are enabled on all endpoints, so client-side JavaScript can use also use the API.  ## TypeScript types  Since the NUSMods is written in TypeScript, typings are available in the source for the scraper. These may be easier to read than the documentation generated by Swagger.  - Module types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/modules.ts\u003e - Venue types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/venues.ts\u003e  ## Data  Below are some notes about the data returned from the API. Feel free to talk to us or create an issue if any of it is not clear.  ### Module data  Module endpoints return information on modules offered by NUS. Most of the module data is self-explanatory, but some of the data are more complex and is explained here.  #### Lessons  Each lesson in a timetable has a lesson type `lessonType` and class number `ClassNo`. Every student must take one of each lesson type offered by the module. For example, this module offers two tutorials and one lecture. That means the student must attend the lecture, and can choose one of the two tutorials to attend.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"01\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1100\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"COM1-0207\\\"     },     {       \\\"classNo\\\": \\\"02\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Friday\\\",       \\\"startTime\\\": \\\"0900\\\",       \\\"endTime\\\": \\\"1000\\\",       \\\"venue\\\": \\\"COM1-0209\\\"     }   ] } ```  Each lesson has a `classNo` key. There can be multiple lessons of the same type and class number, in which case students must attend both. In this example, students can choose to attend either lecture group 1 on Tuesdays and Wednesdays, or lecture group 2 on Mondays and Wednesdays.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1400\\\",       \\\"endTime\\\": \\\"1500\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Monday\\\",       \\\"startTime\\\": \\\"1000\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1500\\\",       \\\"endTime\\\": \\\"1600\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     }   ] } ```  #### Lesson Weeks  The `weeks` key on lessons can return data in one of two forms.  Weeks is usually a sorted array of numbers. In this case it represents the school weeks the lesson occurs on, from 1 to 13.  Some classes have lessons outside of the school timetable. In this case a `WeekRange` object is returned. The object will always contain a `start` and `end` key representing the start and end date of lessons. The example below has classes every week from 17th Jan to 18th April.  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-04-18\\\" } ```  Optionally it can also include `weekInterval`, a positive integer describing the number of weeks between each lesson, and `weeks`, an array of positive integers describing the weeks on which the lesson will fall, with week 1 being the starting date. If these are not present you can assume lessons will occur every week.  The following example has lessons on 17th Jan (week 1), 24th Jan (week 2), 7th Feb (week 4) and 21st Feb (week 6).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-21\\\",   \\\"weeks\\\": [1, 2, 4, 6] } ```  The following example has lessons on 17th Jan (week 1), 31st Jan (week 3), 14th Feb (week 5) and 28th Feb (week 7).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-28\\\",   \\\"weekInterval\\\": 2 } ```  #### Workload  The `workload` key can return data in one of two forms.  Workload is usually a **5-tuple of numbers**, describing the estimated number of hours per week the student is expected to put in for the module for **lectures, tutorials, laboratory, projects/fieldwork, and preparatory work** respectively. For example, a workload of `[2, 1, 1, 3, 3]` means the student should spend every week  - 2 hours in lectures - 1 hour in tutorials - 1 hour at the lab - 3 hours doing project work - 3 hours preparing for classes  Each module credit represents 2.5 hours of work each week, so the standard 4 MC module represents 10 hours of work each week. Module credit may not be integers.  Note that this is only an estimate, and may be outdated or differ significantly in reality. Some modules also incorrectly lists the **total** workload hours instead of weekly, so very large values may show up.  This value is parsed from a string provided by the school, and occasionally this field will contain unusual values which cannot be parsed. In this case this field will contain the original **string** instead, which should be displayed as-is to the user.  #### Prerequisite, corequisite and preclusions  These three keys determine whether a student can take a module.  **Prerequisites** are requirements you have to meet before you can take a module. These are usually in the form of other modules (see prerequisite tree below for a machine readable format), but can also be things like \u0027taken A-level H2 math\u0027 or \u002770 MCs and above\u0027.  **Preclusions** refer to modules or requirements that cannot be taken if this module is taken, and vice versa. These are usually modules whose content overlaps significantly with this module, and can usually be used to replace each other to fulfill prerequisites.  **Corequisites** are modules that must be taken together with this module in the same semester. This usually refer to twined modules - modules which have linked syllabuses.  #### Prerequisite Tree  The `prereqTree` key is return on the individual module endpoint (`/modules/{moduleCode`). Not all modules have prerequisites, and some have prerequisites that cannot be properly represented as a tree, in which case this key will not appear.  This describes the prerequisites that need to be fulfilled before this module can be taken. The data structure is recursive and represents a tree.  ```json {   \\\"and\\\": [     \\\"CS1231\\\",     {       \\\"or\\\": [\\\"CS1010S\\\", \\\"CS1010X\\\"]     }   ] } ```  In the example, this module requires CS1231 and either CS1010S or CS1010X. This can be visualized as  ```            ┌ CS1231 ── all of ─┤            │         ┌ CS1010            └ one of ─┤                      └ CS1010X ```  The module information also contains the inverse of this, that is, modules whose requirements are fulfilled by this module (taking this module will allow you to take these modules in the following semester). The data is found on the `fulfillRequirements` key as an array of module codes.  ### Venue data  Venue data is simply the module timetable restructured to show the lessons happening at each classroom.  The venue list endpoint returns a list of all locations that are used in the semester. Note that this is not a comprehensive list of locations, but rather just a list of venues that appears in module lessons.  The venue information endpoint returns the full class and occupancy information about a venue. The `classes` key contains a list of lessons similar to the `timetable` key in module data, but without a `venue` key and with `moduleCode`.","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":" * The version of the OpenAPI document: 2.0.0","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":" * Contact: nusmods@googlegroups.com","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":" * https://openapi-generator.tech","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":" * Do not edit the class manually.","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"package org.openapitools.client.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"import java.util.List;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonInclude;","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.annotation.JsonPropertyOrder;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"import io.swagger.annotations.ApiModelProperty;","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":" * WeekRange","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"@JsonPropertyOrder({","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"    WeekRange.JSON_PROPERTY_START,","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"    WeekRange.JSON_PROPERTY_END,","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"    WeekRange.JSON_PROPERTY_WEEK_INTERVAL,","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"    WeekRange.JSON_PROPERTY_WEEKS","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"})","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"@javax.annotation.processing.Generated(value \u003d \"org.openapitools.codegen.languages.JavaClientCodegen\", date \u003d \"2022-10-03T22:22:26.802458+08:00[Asia/Singapore]\")","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"public class WeekRange {","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_START \u003d \"start\";","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_END \u003d \"end\";","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_WEEK_INTERVAL \u003d \"weekInterval\";","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"    public static final String JSON_PROPERTY_WEEKS \u003d \"weeks\";","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"    private LocalDate start;","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"    private LocalDate end;","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"    private BigDecimal weekInterval \u003d new BigDecimal(\"1\");","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"    private List\u003cBigDecimal\u003e weeks \u003d null;","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"    public WeekRange() {","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"    public WeekRange start(LocalDate start) {","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"        this.start \u003d start;","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"     * Get start","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"     * @return start","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"Thu Jan 17 08:00:00 SGT 2019\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_START)","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"    public LocalDate getStart() {","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"shenyih0ng"},"content":"        return start;","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_START)","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"shenyih0ng"},"content":"    public void setStart(LocalDate start) {","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"shenyih0ng"},"content":"        this.start \u003d start;","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"shenyih0ng"},"content":"    public WeekRange end(LocalDate end) {","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"shenyih0ng"},"content":"        this.end \u003d end;","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"shenyih0ng"},"content":"     * Get end","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":88,"author":{"gitId":"shenyih0ng"},"content":"     * @return end","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nonnull","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"Thu Jun 20 08:00:00 SGT 2019\", required \u003d true, value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_END)","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"shenyih0ng"},"content":"    public LocalDate getEnd() {","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"shenyih0ng"},"content":"        return end;","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_END)","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.ALWAYS)","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"shenyih0ng"},"content":"    public void setEnd(LocalDate end) {","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"shenyih0ng"},"content":"        this.end \u003d end;","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"shenyih0ng"},"content":"    public WeekRange weekInterval(BigDecimal weekInterval) {","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"shenyih0ng"},"content":"        this.weekInterval \u003d weekInterval;","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"shenyih0ng"},"content":"     * Get weekInterval","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":115,"author":{"gitId":"shenyih0ng"},"content":"     * @return weekInterval","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nullable","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"2\", value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_WEEK_INTERVAL)","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"shenyih0ng"},"content":"    public BigDecimal getWeekInterval() {","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"shenyih0ng"},"content":"        return weekInterval;","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_WEEK_INTERVAL)","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":129,"author":{"gitId":"shenyih0ng"},"content":"    public void setWeekInterval(BigDecimal weekInterval) {","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"shenyih0ng"},"content":"        this.weekInterval \u003d weekInterval;","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"shenyih0ng"},"content":"    public WeekRange weeks(List\u003cBigDecimal\u003e weeks) {","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"shenyih0ng"},"content":"        this.weeks \u003d weeks;","lastModifiedDate":"2022-10-03"},{"lineNumber":136,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":138,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":139,"author":{"gitId":"shenyih0ng"},"content":"    public WeekRange addWeeksItem(BigDecimal weeksItem) {","lastModifiedDate":"2022-10-03"},{"lineNumber":140,"author":{"gitId":"shenyih0ng"},"content":"        if (this.weeks \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":141,"author":{"gitId":"shenyih0ng"},"content":"            this.weeks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-03"},{"lineNumber":142,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":143,"author":{"gitId":"shenyih0ng"},"content":"        this.weeks.add(weeksItem);","lastModifiedDate":"2022-10-03"},{"lineNumber":144,"author":{"gitId":"shenyih0ng"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":145,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":146,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":147,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":148,"author":{"gitId":"shenyih0ng"},"content":"     * Get weeks","lastModifiedDate":"2022-10-03"},{"lineNumber":149,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":150,"author":{"gitId":"shenyih0ng"},"content":"     * @return weeks","lastModifiedDate":"2022-10-03"},{"lineNumber":151,"author":{"gitId":"shenyih0ng"},"content":"     **/","lastModifiedDate":"2022-10-03"},{"lineNumber":152,"author":{"gitId":"shenyih0ng"},"content":"    @javax.annotation.Nullable","lastModifiedDate":"2022-10-03"},{"lineNumber":153,"author":{"gitId":"shenyih0ng"},"content":"    @ApiModelProperty(example \u003d \"[1,2,4,5,6]\", value \u003d \"\")","lastModifiedDate":"2022-10-03"},{"lineNumber":154,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_WEEKS)","lastModifiedDate":"2022-10-03"},{"lineNumber":155,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":156,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":157,"author":{"gitId":"shenyih0ng"},"content":"    public List\u003cBigDecimal\u003e getWeeks() {","lastModifiedDate":"2022-10-03"},{"lineNumber":158,"author":{"gitId":"shenyih0ng"},"content":"        return weeks;","lastModifiedDate":"2022-10-03"},{"lineNumber":159,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":160,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":161,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":162,"author":{"gitId":"shenyih0ng"},"content":"    @JsonProperty(JSON_PROPERTY_WEEKS)","lastModifiedDate":"2022-10-03"},{"lineNumber":163,"author":{"gitId":"shenyih0ng"},"content":"    @JsonInclude(value \u003d JsonInclude.Include.USE_DEFAULTS)","lastModifiedDate":"2022-10-03"},{"lineNumber":164,"author":{"gitId":"shenyih0ng"},"content":"    public void setWeeks(List\u003cBigDecimal\u003e weeks) {","lastModifiedDate":"2022-10-03"},{"lineNumber":165,"author":{"gitId":"shenyih0ng"},"content":"        this.weeks \u003d weeks;","lastModifiedDate":"2022-10-03"},{"lineNumber":166,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":167,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":168,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":169,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":170,"author":{"gitId":"shenyih0ng"},"content":"     * Return true if this WeekRange object is equal to o.","lastModifiedDate":"2022-10-03"},{"lineNumber":171,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":172,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":173,"author":{"gitId":"shenyih0ng"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":174,"author":{"gitId":"shenyih0ng"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":175,"author":{"gitId":"shenyih0ng"},"content":"            return true;","lastModifiedDate":"2022-10-03"},{"lineNumber":176,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":177,"author":{"gitId":"shenyih0ng"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":178,"author":{"gitId":"shenyih0ng"},"content":"            return false;","lastModifiedDate":"2022-10-03"},{"lineNumber":179,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":180,"author":{"gitId":"shenyih0ng"},"content":"        WeekRange weekRange \u003d (WeekRange) o;","lastModifiedDate":"2022-10-03"},{"lineNumber":181,"author":{"gitId":"shenyih0ng"},"content":"        return Objects.equals(this.start, weekRange.start) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":182,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.end, weekRange.end) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":183,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.weekInterval, weekRange.weekInterval) \u0026\u0026","lastModifiedDate":"2022-10-03"},{"lineNumber":184,"author":{"gitId":"shenyih0ng"},"content":"            Objects.equals(this.weeks, weekRange.weeks);","lastModifiedDate":"2022-10-03"},{"lineNumber":185,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":186,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":187,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":188,"author":{"gitId":"shenyih0ng"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-03"},{"lineNumber":189,"author":{"gitId":"shenyih0ng"},"content":"        return Objects.hash(start, end, weekInterval, weeks);","lastModifiedDate":"2022-10-03"},{"lineNumber":190,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":191,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":192,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":193,"author":{"gitId":"shenyih0ng"},"content":"    public String toString() {","lastModifiedDate":"2022-10-03"},{"lineNumber":194,"author":{"gitId":"shenyih0ng"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-03"},{"lineNumber":195,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"class WeekRange {\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":196,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    start: \").append(toIndentedString(start)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":197,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    end: \").append(toIndentedString(end)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":198,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    weekInterval: \").append(toIndentedString(weekInterval)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":199,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"    weeks: \").append(toIndentedString(weeks)).append(\"\\n\");","lastModifiedDate":"2022-10-03"},{"lineNumber":200,"author":{"gitId":"shenyih0ng"},"content":"        sb.append(\"}\");","lastModifiedDate":"2022-10-03"},{"lineNumber":201,"author":{"gitId":"shenyih0ng"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-03"},{"lineNumber":202,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":203,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":204,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":205,"author":{"gitId":"shenyih0ng"},"content":"     * Convert the given object to string with each line indented by 4 spaces (except the first line).","lastModifiedDate":"2022-10-07"},{"lineNumber":206,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":207,"author":{"gitId":"shenyih0ng"},"content":"    private String toIndentedString(Object o) {","lastModifiedDate":"2022-10-03"},{"lineNumber":208,"author":{"gitId":"shenyih0ng"},"content":"        if (o \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":209,"author":{"gitId":"shenyih0ng"},"content":"            return \"null\";","lastModifiedDate":"2022-10-03"},{"lineNumber":210,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":211,"author":{"gitId":"shenyih0ng"},"content":"        return o.toString().replace(\"\\n\", \"\\n    \");","lastModifiedDate":"2022-10-03"},{"lineNumber":212,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":213,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":214,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"},{"lineNumber":215,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"shenyih0ng":215}},{"path":"src/main/java/org/openapitools/client/model/Workload.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"/*","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":" * NUSMods API contains data used to render \u003chttps://nusmods.com\u003e. It includes data on modules offered by NUS and their timetables, as well as information on the locations the classes take place in. You are welcome to use and experiment with the data, which is extracted from official APIs provided by the Registrar\u0027s Office.  The API consists of static JSON files scraped daily from the school\u0027s APIs. This means it only partially follow REST conventions, and all resources are read only. All successful responses will return JSON, and all endpoints end in `.json`.  The shape of the data returned by these endpoints are designed for NUSMods in mind. If you have any questions or find that you need the data in other shapes for other purposes, feel free to reach out to us:  - **Telegram**: \u003chttps://telegram.me/nusmods\u003e - **Mailing list**: \u003cnusmods@googlegroups.com\u003e (for security related issues please email \u003cmods@nusmods.com\u003e instead)  ## Fetching data  Any HTTP client can be used to fetch data from the API. HTTPS is preferred, but the server will also respond to HTTP requests. The server supports HTTP 1.1 as well as HTTP 2 over HTTPS, and supports gzip compression.  The API has no authentication, and is not rate limited. While the server can respond to a large number of requests simultaneously, we request that you be polite with resource usage so as not to disrupt nusmods.com, which relies on the same API server. In general there is no need to fetch data from the API more than once per day, as that is the frequency at which we update the data.  [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) headers are enabled on all endpoints, so client-side JavaScript can use also use the API.  ## TypeScript types  Since the NUSMods is written in TypeScript, typings are available in the source for the scraper. These may be easier to read than the documentation generated by Swagger.  - Module types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/modules.ts\u003e - Venue types: \u003chttps://github.com/nusmodifications/nusmods/blob/master/scrapers/nus-v2/src/types/venues.ts\u003e  ## Data  Below are some notes about the data returned from the API. Feel free to talk to us or create an issue if any of it is not clear.  ### Module data  Module endpoints return information on modules offered by NUS. Most of the module data is self-explanatory, but some of the data are more complex and is explained here.  #### Lessons  Each lesson in a timetable has a lesson type `lessonType` and class number `ClassNo`. Every student must take one of each lesson type offered by the module. For example, this module offers two tutorials and one lecture. That means the student must attend the lecture, and can choose one of the two tutorials to attend.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"01\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1100\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"COM1-0207\\\"     },     {       \\\"classNo\\\": \\\"02\\\",       \\\"lessonType\\\": \\\"Tutorial\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Friday\\\",       \\\"startTime\\\": \\\"0900\\\",       \\\"endTime\\\": \\\"1000\\\",       \\\"venue\\\": \\\"COM1-0209\\\"     }   ] } ```  Each lesson has a `classNo` key. There can be multiple lessons of the same type and class number, in which case students must attend both. In this example, students can choose to attend either lecture group 1 on Tuesdays and Wednesdays, or lecture group 2 on Mondays and Wednesdays.  ```json {   \\\"timetable\\\": [     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Tuesday\\\",       \\\"startTime\\\": \\\"1600\\\",       \\\"endTime\\\": \\\"1800\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"1\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1400\\\",       \\\"endTime\\\": \\\"1500\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Monday\\\",       \\\"startTime\\\": \\\"1000\\\",       \\\"endTime\\\": \\\"1200\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     },     {       \\\"classNo\\\": \\\"2\\\",       \\\"lessonType\\\": \\\"Lecture\\\",       \\\"weeks\\\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13],       \\\"day\\\": \\\"Wednesday\\\",       \\\"startTime\\\": \\\"1500\\\",       \\\"endTime\\\": \\\"1600\\\",       \\\"venue\\\": \\\"I3-AUD\\\"     }   ] } ```  #### Lesson Weeks  The `weeks` key on lessons can return data in one of two forms.  Weeks is usually a sorted array of numbers. In this case it represents the school weeks the lesson occurs on, from 1 to 13.  Some classes have lessons outside of the school timetable. In this case a `WeekRange` object is returned. The object will always contain a `start` and `end` key representing the start and end date of lessons. The example below has classes every week from 17th Jan to 18th April.  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-04-18\\\" } ```  Optionally it can also include `weekInterval`, a positive integer describing the number of weeks between each lesson, and `weeks`, an array of positive integers describing the weeks on which the lesson will fall, with week 1 being the starting date. If these are not present you can assume lessons will occur every week.  The following example has lessons on 17th Jan (week 1), 24th Jan (week 2), 7th Feb (week 4) and 21st Feb (week 6).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-21\\\",   \\\"weeks\\\": [1, 2, 4, 6] } ```  The following example has lessons on 17th Jan (week 1), 31st Jan (week 3), 14th Feb (week 5) and 28th Feb (week 7).  ``` json \\\"weeks\\\": {   \\\"start\\\": \\\"2019-01-17\\\",   \\\"end\\\": \\\"2019-02-28\\\",   \\\"weekInterval\\\": 2 } ```  #### Workload  The `workload` key can return data in one of two forms.  Workload is usually a **5-tuple of numbers**, describing the estimated number of hours per week the student is expected to put in for the module for **lectures, tutorials, laboratory, projects/fieldwork, and preparatory work** respectively. For example, a workload of `[2, 1, 1, 3, 3]` means the student should spend every week  - 2 hours in lectures - 1 hour in tutorials - 1 hour at the lab - 3 hours doing project work - 3 hours preparing for classes  Each module credit represents 2.5 hours of work each week, so the standard 4 MC module represents 10 hours of work each week. Module credit may not be integers.  Note that this is only an estimate, and may be outdated or differ significantly in reality. Some modules also incorrectly lists the **total** workload hours instead of weekly, so very large values may show up.  This value is parsed from a string provided by the school, and occasionally this field will contain unusual values which cannot be parsed. In this case this field will contain the original **string** instead, which should be displayed as-is to the user.  #### Prerequisite, corequisite and preclusions  These three keys determine whether a student can take a module.  **Prerequisites** are requirements you have to meet before you can take a module. These are usually in the form of other modules (see prerequisite tree below for a machine readable format), but can also be things like \u0027taken A-level H2 math\u0027 or \u002770 MCs and above\u0027.  **Preclusions** refer to modules or requirements that cannot be taken if this module is taken, and vice versa. These are usually modules whose content overlaps significantly with this module, and can usually be used to replace each other to fulfill prerequisites.  **Corequisites** are modules that must be taken together with this module in the same semester. This usually refer to twined modules - modules which have linked syllabuses.  #### Prerequisite Tree  The `prereqTree` key is return on the individual module endpoint (`/modules/{moduleCode`). Not all modules have prerequisites, and some have prerequisites that cannot be properly represented as a tree, in which case this key will not appear.  This describes the prerequisites that need to be fulfilled before this module can be taken. The data structure is recursive and represents a tree.  ```json {   \\\"and\\\": [     \\\"CS1231\\\",     {       \\\"or\\\": [\\\"CS1010S\\\", \\\"CS1010X\\\"]     }   ] } ```  In the example, this module requires CS1231 and either CS1010S or CS1010X. This can be visualized as  ```            ┌ CS1231 ── all of ─┤            │         ┌ CS1010            └ one of ─┤                      └ CS1010X ```  The module information also contains the inverse of this, that is, modules whose requirements are fulfilled by this module (taking this module will allow you to take these modules in the following semester). The data is found on the `fulfillRequirements` key as an array of module codes.  ### Venue data  Venue data is simply the module timetable restructured to show the lessons happening at each classroom.  The venue list endpoint returns a list of all locations that are used in the semester. Note that this is not a comprehensive list of locations, but rather just a list of venues that appears in module lessons.  The venue information endpoint returns the full class and occupancy information about a venue. The `classes` key contains a list of lessons similar to the `timetable` key in module data, but without a `venue` key and with `moduleCode`.","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":" * The version of the OpenAPI document: 2.0.0","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":" * Contact: nusmods@googlegroups.com","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" *","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":" * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":" * https://openapi-generator.tech","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":" * Do not edit the class manually.","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"package org.openapitools.client.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"import java.util.List;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"import org.openapitools.client.JSON;","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.core.JsonGenerator;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.core.JsonParser;","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.core.JsonToken;","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.JsonMappingException;","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.JsonNode;","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.MapperFeature;","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.SerializerProvider;","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.annotation.JsonDeserialize;","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.annotation.JsonSerialize;","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.deser.std.StdDeserializer;","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"import com.fasterxml.jackson.databind.ser.std.StdSerializer;","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"@javax.annotation.processing.Generated(value \u003d \"org.openapitools.codegen.languages.JavaClientCodegen\", date \u003d \"2022-10-03T22:22:26.802458+08:00[Asia/Singapore]\")","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"@JsonDeserialize(using \u003d Workload.WorkloadDeserializer.class)","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"@JsonSerialize(using \u003d Workload.WorkloadSerializer.class)","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"public class Workload extends AbstractOpenApiSchema {","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"    // store a list of schema names defined in oneOf","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"    public static final Map\u003cString, Class\u003c?\u003e\u003e schemas \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"    private static final Logger log \u003d Logger.getLogger(Workload.class.getName());","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"    static {","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"        schemas.put(\"List\u003cBigDecimal\u003e\", List.class);","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"        schemas.put(\"String\", String.class);","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"        JSON.registerDescendants(Workload.class, Collections.unmodifiableMap(schemas));","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"    public Workload() {","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"        super(\"oneOf\", Boolean.FALSE);","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"    public Workload(List\u003cBigDecimal\u003e o) {","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"        super(\"oneOf\", Boolean.FALSE);","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"        setActualInstance(o);","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"    public Workload(String o) {","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"        super(\"oneOf\", Boolean.FALSE);","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"        setActualInstance(o);","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"shenyih0ng"},"content":"    public Map\u003cString, Class\u003c?\u003e\u003e getSchemas() {","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"shenyih0ng"},"content":"        return Workload.schemas;","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"shenyih0ng"},"content":"     * Get the actual instance, which can be the following: List\u003cBigDecimal\u003e, String","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"shenyih0ng"},"content":"     * @return The actual instance (List\u003cBigDecimal\u003e, String)","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"shenyih0ng"},"content":"    public Object getActualInstance() {","lastModifiedDate":"2022-10-07"},{"lineNumber":82,"author":{"gitId":"shenyih0ng"},"content":"        return super.getActualInstance();","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":84,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":85,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":86,"author":{"gitId":"shenyih0ng"},"content":"     * Set the instance that matches the oneOf child schema, check the instance parameter is valid against the oneOf","lastModifiedDate":"2022-10-07"},{"lineNumber":87,"author":{"gitId":"shenyih0ng"},"content":"     * child schemas: List\u003cBigDecimal\u003e, String","lastModifiedDate":"2022-10-07"},{"lineNumber":88,"author":{"gitId":"shenyih0ng"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":89,"author":{"gitId":"shenyih0ng"},"content":"     * It could be an instance of the \u0027oneOf\u0027 schemas. The oneOf child schemas may themselves be a composed schema","lastModifiedDate":"2022-10-07"},{"lineNumber":90,"author":{"gitId":"shenyih0ng"},"content":"     * (allOf, anyOf, oneOf).","lastModifiedDate":"2022-10-07"},{"lineNumber":91,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":92,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":93,"author":{"gitId":"shenyih0ng"},"content":"    public void setActualInstance(Object instance) {","lastModifiedDate":"2022-10-07"},{"lineNumber":94,"author":{"gitId":"shenyih0ng"},"content":"        if (JSON.isInstanceOf(List.class, instance, new HashSet\u003cClass\u003c?\u003e\u003e())) {","lastModifiedDate":"2022-10-07"},{"lineNumber":95,"author":{"gitId":"shenyih0ng"},"content":"            super.setActualInstance(instance);","lastModifiedDate":"2022-10-07"},{"lineNumber":96,"author":{"gitId":"shenyih0ng"},"content":"            return;","lastModifiedDate":"2022-10-07"},{"lineNumber":97,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":98,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"shenyih0ng"},"content":"        if (JSON.isInstanceOf(String.class, instance, new HashSet\u003cClass\u003c?\u003e\u003e())) {","lastModifiedDate":"2022-10-07"},{"lineNumber":100,"author":{"gitId":"shenyih0ng"},"content":"            super.setActualInstance(instance);","lastModifiedDate":"2022-10-07"},{"lineNumber":101,"author":{"gitId":"shenyih0ng"},"content":"            return;","lastModifiedDate":"2022-10-07"},{"lineNumber":102,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":103,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":104,"author":{"gitId":"shenyih0ng"},"content":"        throw new RuntimeException(\"Invalid instance type. Must be List\u003cBigDecimal\u003e, String\");","lastModifiedDate":"2022-10-07"},{"lineNumber":105,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":106,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":107,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":108,"author":{"gitId":"shenyih0ng"},"content":"     * Get the actual instance of `List\u003cBigDecimal\u003e`. If the actual instance is not `List\u003cBigDecimal\u003e`, the","lastModifiedDate":"2022-10-07"},{"lineNumber":109,"author":{"gitId":"shenyih0ng"},"content":"     * ClassCastException will be thrown.","lastModifiedDate":"2022-10-07"},{"lineNumber":110,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":111,"author":{"gitId":"shenyih0ng"},"content":"     * @return The actual instance of `List\u003cBigDecimal\u003e`","lastModifiedDate":"2022-10-07"},{"lineNumber":112,"author":{"gitId":"shenyih0ng"},"content":"     * @throws ClassCastException if the instance is not `List\u003cBigDecimal\u003e`","lastModifiedDate":"2022-10-07"},{"lineNumber":113,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":114,"author":{"gitId":"shenyih0ng"},"content":"    public List\u003cBigDecimal\u003e getList() throws ClassCastException {","lastModifiedDate":"2022-10-07"},{"lineNumber":115,"author":{"gitId":"shenyih0ng"},"content":"        return (List\u003cBigDecimal\u003e) super.getActualInstance();","lastModifiedDate":"2022-10-07"},{"lineNumber":116,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":117,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":118,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":119,"author":{"gitId":"shenyih0ng"},"content":"     * Get the actual instance of `String`. If the actual instance is not `String`, the ClassCastException will be","lastModifiedDate":"2022-10-07"},{"lineNumber":120,"author":{"gitId":"shenyih0ng"},"content":"     * thrown.","lastModifiedDate":"2022-10-07"},{"lineNumber":121,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":122,"author":{"gitId":"shenyih0ng"},"content":"     * @return The actual instance of `String`","lastModifiedDate":"2022-10-07"},{"lineNumber":123,"author":{"gitId":"shenyih0ng"},"content":"     * @throws ClassCastException if the instance is not `String`","lastModifiedDate":"2022-10-07"},{"lineNumber":124,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":125,"author":{"gitId":"shenyih0ng"},"content":"    public String getString() throws ClassCastException {","lastModifiedDate":"2022-10-07"},{"lineNumber":126,"author":{"gitId":"shenyih0ng"},"content":"        return (String) super.getActualInstance();","lastModifiedDate":"2022-10-07"},{"lineNumber":127,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":128,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":129,"author":{"gitId":"shenyih0ng"},"content":"    public static class WorkloadSerializer extends StdSerializer\u003cWorkload\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":131,"author":{"gitId":"shenyih0ng"},"content":"        public WorkloadSerializer(Class\u003cWorkload\u003e t) {","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"shenyih0ng"},"content":"            super(t);","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"shenyih0ng"},"content":"        public WorkloadSerializer() {","lastModifiedDate":"2022-10-03"},{"lineNumber":136,"author":{"gitId":"shenyih0ng"},"content":"            this(null);","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":138,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":139,"author":{"gitId":"shenyih0ng"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":140,"author":{"gitId":"shenyih0ng"},"content":"        public void serialize(Workload value, JsonGenerator jgen, SerializerProvider provider)","lastModifiedDate":"2022-10-07"},{"lineNumber":141,"author":{"gitId":"shenyih0ng"},"content":"            throws IOException, JsonProcessingException {","lastModifiedDate":"2022-10-07"},{"lineNumber":142,"author":{"gitId":"shenyih0ng"},"content":"            jgen.writeObject(value.getActualInstance());","lastModifiedDate":"2022-10-03"},{"lineNumber":143,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":144,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":145,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":146,"author":{"gitId":"shenyih0ng"},"content":"    public static class WorkloadDeserializer extends StdDeserializer\u003cWorkload\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":147,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":148,"author":{"gitId":"shenyih0ng"},"content":"        public WorkloadDeserializer() {","lastModifiedDate":"2022-10-03"},{"lineNumber":149,"author":{"gitId":"shenyih0ng"},"content":"            this(Workload.class);","lastModifiedDate":"2022-10-03"},{"lineNumber":150,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":151,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":152,"author":{"gitId":"shenyih0ng"},"content":"        public WorkloadDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2022-10-03"},{"lineNumber":153,"author":{"gitId":"shenyih0ng"},"content":"            super(vc);","lastModifiedDate":"2022-10-03"},{"lineNumber":154,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":155,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":156,"author":{"gitId":"shenyih0ng"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":157,"author":{"gitId":"shenyih0ng"},"content":"        public Workload deserialize(JsonParser jp, DeserializationContext ctxt)","lastModifiedDate":"2022-10-07"},{"lineNumber":158,"author":{"gitId":"shenyih0ng"},"content":"            throws IOException, JsonProcessingException {","lastModifiedDate":"2022-10-07"},{"lineNumber":159,"author":{"gitId":"shenyih0ng"},"content":"            JsonNode tree \u003d jp.readValueAsTree();","lastModifiedDate":"2022-10-03"},{"lineNumber":160,"author":{"gitId":"shenyih0ng"},"content":"            Object deserialized \u003d null;","lastModifiedDate":"2022-10-03"},{"lineNumber":161,"author":{"gitId":"shenyih0ng"},"content":"            boolean typeCoercion \u003d ctxt.isEnabled(MapperFeature.ALLOW_COERCION_OF_SCALARS);","lastModifiedDate":"2022-10-03"},{"lineNumber":162,"author":{"gitId":"shenyih0ng"},"content":"            int match \u003d 0;","lastModifiedDate":"2022-10-03"},{"lineNumber":163,"author":{"gitId":"shenyih0ng"},"content":"            JsonToken token \u003d tree.traverse(jp.getCodec()).nextToken();","lastModifiedDate":"2022-10-03"},{"lineNumber":164,"author":{"gitId":"shenyih0ng"},"content":"            // deserialize List\u003cBigDecimal\u003e","lastModifiedDate":"2022-10-03"},{"lineNumber":165,"author":{"gitId":"shenyih0ng"},"content":"            try {","lastModifiedDate":"2022-10-03"},{"lineNumber":166,"author":{"gitId":"shenyih0ng"},"content":"                boolean attemptParsing \u003d true;","lastModifiedDate":"2022-10-03"},{"lineNumber":167,"author":{"gitId":"shenyih0ng"},"content":"                if (attemptParsing) {","lastModifiedDate":"2022-10-03"},{"lineNumber":168,"author":{"gitId":"shenyih0ng"},"content":"                    deserialized \u003d tree.traverse(jp.getCodec()).readValueAs(List.class);","lastModifiedDate":"2022-10-03"},{"lineNumber":169,"author":{"gitId":"shenyih0ng"},"content":"                    match++;","lastModifiedDate":"2022-10-03"},{"lineNumber":170,"author":{"gitId":"shenyih0ng"},"content":"                    log.log(Level.FINER, \"Input data matches schema \u0027List\u003cBigDecimal\u003e\u0027\");","lastModifiedDate":"2022-10-03"},{"lineNumber":171,"author":{"gitId":"shenyih0ng"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":172,"author":{"gitId":"shenyih0ng"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-10-03"},{"lineNumber":173,"author":{"gitId":"shenyih0ng"},"content":"                // deserialization failed, continue","lastModifiedDate":"2022-10-03"},{"lineNumber":174,"author":{"gitId":"shenyih0ng"},"content":"                log.log(Level.FINER, \"Input data does not match schema \u0027List\u003cBigDecimal\u003e\u0027\", e);","lastModifiedDate":"2022-10-03"},{"lineNumber":175,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":176,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":177,"author":{"gitId":"shenyih0ng"},"content":"            // deserialize String","lastModifiedDate":"2022-10-03"},{"lineNumber":178,"author":{"gitId":"shenyih0ng"},"content":"            try {","lastModifiedDate":"2022-10-03"},{"lineNumber":179,"author":{"gitId":"shenyih0ng"},"content":"                boolean attemptParsing \u003d true;","lastModifiedDate":"2022-10-03"},{"lineNumber":180,"author":{"gitId":"shenyih0ng"},"content":"                // ensure that we respect type coercion as set on the client ObjectMapper","lastModifiedDate":"2022-10-03"},{"lineNumber":181,"author":{"gitId":"shenyih0ng"},"content":"                if (String.class.equals(Integer.class) || String.class.equals(Long.class) || String.class.equals(","lastModifiedDate":"2022-10-07"},{"lineNumber":182,"author":{"gitId":"shenyih0ng"},"content":"                    Float.class) || String.class.equals(Double.class) || String.class.equals(Boolean.class)","lastModifiedDate":"2022-10-07"},{"lineNumber":183,"author":{"gitId":"shenyih0ng"},"content":"                    || String.class.equals(String.class)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":184,"author":{"gitId":"shenyih0ng"},"content":"                    attemptParsing \u003d typeCoercion;","lastModifiedDate":"2022-10-03"},{"lineNumber":185,"author":{"gitId":"shenyih0ng"},"content":"                    if (!attemptParsing) {","lastModifiedDate":"2022-10-03"},{"lineNumber":186,"author":{"gitId":"shenyih0ng"},"content":"                        attemptParsing |\u003d ((String.class.equals(Integer.class) || String.class.equals(Long.class))","lastModifiedDate":"2022-10-07"},{"lineNumber":187,"author":{"gitId":"shenyih0ng"},"content":"                            \u0026\u0026 token \u003d\u003d JsonToken.VALUE_NUMBER_INT);","lastModifiedDate":"2022-10-07"},{"lineNumber":188,"author":{"gitId":"shenyih0ng"},"content":"                        attemptParsing |\u003d ((String.class.equals(Float.class) || String.class.equals(Double.class))","lastModifiedDate":"2022-10-07"},{"lineNumber":189,"author":{"gitId":"shenyih0ng"},"content":"                            \u0026\u0026 token \u003d\u003d JsonToken.VALUE_NUMBER_FLOAT);","lastModifiedDate":"2022-10-07"},{"lineNumber":190,"author":{"gitId":"shenyih0ng"},"content":"                        attemptParsing |\u003d (String.class.equals(Boolean.class) \u0026\u0026 (token \u003d\u003d JsonToken.VALUE_FALSE","lastModifiedDate":"2022-10-07"},{"lineNumber":191,"author":{"gitId":"shenyih0ng"},"content":"                            || token \u003d\u003d JsonToken.VALUE_TRUE));","lastModifiedDate":"2022-10-07"},{"lineNumber":192,"author":{"gitId":"shenyih0ng"},"content":"                        attemptParsing |\u003d (String.class.equals(String.class) \u0026\u0026 token \u003d\u003d JsonToken.VALUE_STRING);","lastModifiedDate":"2022-10-03"},{"lineNumber":193,"author":{"gitId":"shenyih0ng"},"content":"                    }","lastModifiedDate":"2022-10-03"},{"lineNumber":194,"author":{"gitId":"shenyih0ng"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":195,"author":{"gitId":"shenyih0ng"},"content":"                if (attemptParsing) {","lastModifiedDate":"2022-10-03"},{"lineNumber":196,"author":{"gitId":"shenyih0ng"},"content":"                    deserialized \u003d tree.traverse(jp.getCodec()).readValueAs(String.class);","lastModifiedDate":"2022-10-03"},{"lineNumber":197,"author":{"gitId":"shenyih0ng"},"content":"                    // TODO: there is no validation against JSON schema constraints","lastModifiedDate":"2022-10-03"},{"lineNumber":198,"author":{"gitId":"shenyih0ng"},"content":"                    // (min, max, enum, pattern...), this does not perform a strict JSON","lastModifiedDate":"2022-10-03"},{"lineNumber":199,"author":{"gitId":"shenyih0ng"},"content":"                    // validation, which means the \u0027match\u0027 count may be higher than it should be.","lastModifiedDate":"2022-10-03"},{"lineNumber":200,"author":{"gitId":"shenyih0ng"},"content":"                    match++;","lastModifiedDate":"2022-10-03"},{"lineNumber":201,"author":{"gitId":"shenyih0ng"},"content":"                    log.log(Level.FINER, \"Input data matches schema \u0027String\u0027\");","lastModifiedDate":"2022-10-03"},{"lineNumber":202,"author":{"gitId":"shenyih0ng"},"content":"                }","lastModifiedDate":"2022-10-03"},{"lineNumber":203,"author":{"gitId":"shenyih0ng"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-10-03"},{"lineNumber":204,"author":{"gitId":"shenyih0ng"},"content":"                // deserialization failed, continue","lastModifiedDate":"2022-10-03"},{"lineNumber":205,"author":{"gitId":"shenyih0ng"},"content":"                log.log(Level.FINER, \"Input data does not match schema \u0027String\u0027\", e);","lastModifiedDate":"2022-10-03"},{"lineNumber":206,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":207,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":208,"author":{"gitId":"shenyih0ng"},"content":"            if (match \u003d\u003d 1) {","lastModifiedDate":"2022-10-03"},{"lineNumber":209,"author":{"gitId":"shenyih0ng"},"content":"                Workload ret \u003d new Workload();","lastModifiedDate":"2022-10-03"},{"lineNumber":210,"author":{"gitId":"shenyih0ng"},"content":"                ret.setActualInstance(deserialized);","lastModifiedDate":"2022-10-03"},{"lineNumber":211,"author":{"gitId":"shenyih0ng"},"content":"                return ret;","lastModifiedDate":"2022-10-03"},{"lineNumber":212,"author":{"gitId":"shenyih0ng"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":213,"author":{"gitId":"shenyih0ng"},"content":"            throw new IOException(","lastModifiedDate":"2022-10-07"},{"lineNumber":214,"author":{"gitId":"shenyih0ng"},"content":"                String.format(\"Failed deserialization for Workload: %d classes match result, expected 1\", match));","lastModifiedDate":"2022-10-07"},{"lineNumber":215,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":216,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":217,"author":{"gitId":"shenyih0ng"},"content":"        /**","lastModifiedDate":"2022-10-03"},{"lineNumber":218,"author":{"gitId":"shenyih0ng"},"content":"         * Handle deserialization of the \u0027null\u0027 value.","lastModifiedDate":"2022-10-03"},{"lineNumber":219,"author":{"gitId":"shenyih0ng"},"content":"         */","lastModifiedDate":"2022-10-03"},{"lineNumber":220,"author":{"gitId":"shenyih0ng"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":221,"author":{"gitId":"shenyih0ng"},"content":"        public Workload getNullValue(DeserializationContext ctxt) throws JsonMappingException {","lastModifiedDate":"2022-10-03"},{"lineNumber":222,"author":{"gitId":"shenyih0ng"},"content":"            throw new JsonMappingException(ctxt.getParser(), \"Workload cannot be null\");","lastModifiedDate":"2022-10-03"},{"lineNumber":223,"author":{"gitId":"shenyih0ng"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":224,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":225,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":226,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"},{"lineNumber":227,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"shenyih0ng":227}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":"\u003cStackPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"stack-pane\"","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"  xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"  \u003cTextField onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"    fx:id\u003d\"commandTextField\"/\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"-":6,"shenyih0ng":4}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"  -fx-border-color: transparent transparent derive(-fx-base, 80%) transparent;","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  -fx-graphic-text-gap: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"  -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"  -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"  -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"  -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"  -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"  -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"  -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"  -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"  -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"  -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"  -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"  -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"  -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"  -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"  -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":285,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"  -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"  -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":299,"author":{"gitId":"-"},"content":"  -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"  -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":306,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"  -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"  -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"  -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":317,"author":{"gitId":"-"},"content":"  -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":318,"author":{"gitId":"-"},"content":"  -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":319,"author":{"gitId":"-"},"content":"  -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":320,"author":{"gitId":"-"},"content":"  -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"  -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":323,"author":{"gitId":"-"},"content":"  -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"  -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"  -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"  -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":337,"author":{"gitId":"-"},"content":"  -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":338,"author":{"gitId":"-"},"content":"  -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"  -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"  -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"  -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"  -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"  -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"-":347,"shenyih0ng":1}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"\u003c?import javafx.scene.web.WebView?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"\u003cfx:root title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"         \u003cVBox prefHeight\u003d\"710.0\" prefWidth\u003d\"928.0\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"            \u003cHBox fx:id\u003d\"helpMessageContainer\" alignment\u003d\"CENTER\" prefHeight\u003d\"49.0\" prefWidth\u003d\"677.0\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"              \u003cchildren\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"                \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"                  \u003cHBox.margin\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"                    \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"                  \u003c/HBox.margin\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"                \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"                  \u003cHBox.margin\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"zupey"},"content":"                    \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"                  \u003c/HBox.margin\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"zupey"},"content":"                \u003c/Button\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"              \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"              \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"              \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"zupey"},"content":"               \u003cWebView fx:id\u003d\"webView\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"667.0\" prefWidth\u003d\"928.0\" stylesheets\u003d\"@OneDarkTheme.css\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"zupey"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"zupey"},"content":"         \u003c/VBox\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"zupey":15,"-":31,"shenyih0ng":5}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"  title\u003d\"CLIMods\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/18\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\"/\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"        \u003cMenuBar VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"menuBar\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"              fx:id\u003d\"helpMenuItem\"/\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"        \u003cSplitPane VBox.vgrow\u003d\"ALWAYS\" dividerPositions\u003d\"0.5\" fx:id\u003d\"modulePane\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"          \u003cVBox VBox.vgrow\u003d\"ALWAYS\" minWidth\u003d\"350\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"            fx:id\u003d\"moduleListPanel\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"            \u003cStackPane VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"moduleListPanelPlaceholder\"/\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"              \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"          \u003cVBox VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"pane-with-border\" fx:id\u003d\"savedModuleListPanel\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"            \u003cStackPane VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"savedModuleListPanelPlaceholder\"/\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"              \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\"/\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"        \u003cStackPane styleClass\u003d\"pane-with-border\" fx:id\u003d\"resultDisplayPlaceholder\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\"/\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":55,"author":{"gitId":"SeekSaveServe"},"content":"        \u003c!--Use a split pane to contain the panels --\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"        \u003cStackPane styleClass\u003d\"pane-with-border\" fx:id\u003d\"commandBoxPlaceholder\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\"/\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\"/\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"        \u003cURL value\u003d\"@OneDarkTheme.css\"/\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"        \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"shenyih0ng"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"SeekSaveServe":2,"-":38,"shenyih0ng":32}},{"path":"src/main/resources/view/ModuleListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeekSaveServe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"SeekSaveServe"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"SeekSaveServe"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"SeekSaveServe"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"SeekSaveServe"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"SeekSaveServe"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"SeekSaveServe"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"SeekSaveServe"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/18\"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"  fx:id\u003d\"cardPane\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"SeekSaveServe"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"    \u003cVBox GridPane.columnIndex\u003d\"0\" alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"        \u003cLabel style\u003d\"-fx-font-size: 20;\" maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"          maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"          text\u003d\"\\$moduleCode\" fx:id\u003d\"moduleCode\"/\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"        \u003cFlowPane alignment\u003d\"CENTER_LEFT\" hgap\u003d\"5\" fx:id\u003d\"moduleInfo\"/\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"SeekSaveServe"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"      \u003cLabel style\u003d\"-fx-font-size: 15;\" text\u003d\"\\$title\" fx:id\u003d\"title\"/\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"      \u003cLabel style\u003d\"-fx-font-size: 15;\" text\u003d\"\\$department\" fx:id\u003d\"department\"/\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\"/\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"SeekSaveServe"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"100\"/\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"    \u003crowConstraints\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"      \u003cRowConstraints/\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"    \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"SeekSaveServe"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"SeekSaveServe"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"SeekSaveServe":14,"shenyih0ng":20}},{"path":"src/main/resources/view/ModuleListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeekSaveServe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"SeekSaveServe"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"SeekSaveServe"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":"\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"  \u003cListView VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"moduleListView\"/\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"SeekSaveServe"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"SeekSaveServe":5,"shenyih0ng":2}},{"path":"src/main/resources/view/OneDarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeekSaveServe"},"content":".root {","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-text-fill: #FB9701;","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-weight: bold;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"SeekSaveServe"},"content":".background {","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: derive(#282C34, 20%);","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"SeekSaveServe"},"content":"  background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"SeekSaveServe"},"content":".label {","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-size: 11pt;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-text-fill: #555555;","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-opacity: 0.9;","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"SeekSaveServe"},"content":".label-bright {","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-size: 11pt;","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-opacity: 1;","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"SeekSaveServe"},"content":".label-header {","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-size: 32pt;","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-opacity: 1;","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"SeekSaveServe"},"content":".text-field {","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-size: 12pt;","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"SeekSaveServe"},"content":".tab-pane {","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-padding: 0 0 0 1;","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"SeekSaveServe"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-min-height: 0;","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-max-height: 0;","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"SeekSaveServe"},"content":".table-view {","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-base: #282C34;","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-control-inner-background: #282C34;","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: #282C34;","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-table-cell-border-color: transparent;","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-table-header-border-color: transparent;","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-padding: 5;","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"SeekSaveServe"},"content":".table-view .column-header-background {","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"SeekSaveServe"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-size: 35;","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-border-width: 0 0 1 0;","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"  -fx-border-color: transparent transparent derive(-fx-base, 80%) transparent;","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"SeekSaveServe"},"content":".table-view .column-header .label {","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-size: 20pt;","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-alignment: center-left;","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-opacity: 1;","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"SeekSaveServe"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: -fx-focus-color;","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"SeekSaveServe"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: derive(#282C34, 20%);","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"SeekSaveServe"},"content":".split-pane {","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-border-radius: 1;","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-border-width: 1;","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: derive(#282C34, 20%);","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"SeekSaveServe"},"content":".list-view {","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-insets: 0;","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-padding: 0;","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: derive(#282C34, 20%);","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"SeekSaveServe"},"content":".list-cell {","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-graphic-text-gap: 0;","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"SeekSaveServe"},"content":".list-cell:filled:even {","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: #3c3e3f;","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":106,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":107,"author":{"gitId":"SeekSaveServe"},"content":".list-cell:filled:odd {","lastModifiedDate":"2022-10-05"},{"lineNumber":108,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: #515658;","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":111,"author":{"gitId":"SeekSaveServe"},"content":".list-cell:filled:selected {","lastModifiedDate":"2022-10-05"},{"lineNumber":112,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: #424d5f;","lastModifiedDate":"2022-10-05"},{"lineNumber":113,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":114,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":115,"author":{"gitId":"SeekSaveServe"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2022-10-05"},{"lineNumber":116,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-border-color: #3e7b91;","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-border-width: 1;","lastModifiedDate":"2022-10-05"},{"lineNumber":118,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-weight: bold;","lastModifiedDate":"2022-10-05"},{"lineNumber":119,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":120,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":121,"author":{"gitId":"SeekSaveServe"},"content":".list-cell .label {","lastModifiedDate":"2022-10-05"},{"lineNumber":122,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2022-10-05"},{"lineNumber":123,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":124,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":125,"author":{"gitId":"SeekSaveServe"},"content":".cell_big_label {","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-size: 16px;","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-text-fill: #ffffff;","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-weight: bold;","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"SeekSaveServe"},"content":".cell_small_label {","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-size: 13px;","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-text-fill: #ffffff;","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"SeekSaveServe"},"content":".cell_tiny_label {","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-size: 10px;","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-text-fill: #ffffff;","lastModifiedDate":"2022-10-06"},{"lineNumber":142,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":143,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"SeekSaveServe"},"content":".button_module {","lastModifiedDate":"2022-10-06"},{"lineNumber":145,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-border-width: 0;","lastModifiedDate":"2022-10-06"},{"lineNumber":146,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-radius: 10px;","lastModifiedDate":"2022-10-06"},{"lineNumber":147,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-padding: 5;","lastModifiedDate":"2022-10-06"},{"lineNumber":148,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-size: 10;","lastModifiedDate":"2022-10-06"},{"lineNumber":149,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-weight: bold;","lastModifiedDate":"2022-10-06"},{"lineNumber":150,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":151,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":152,"author":{"gitId":"SeekSaveServe"},"content":".stack-pane {","lastModifiedDate":"2022-10-05"},{"lineNumber":153,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: derive(#282C34, 20%);","lastModifiedDate":"2022-10-05"},{"lineNumber":154,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":155,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":156,"author":{"gitId":"SeekSaveServe"},"content":".pane-with-border {","lastModifiedDate":"2022-10-05"},{"lineNumber":157,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: derive(#282C34, 20%);","lastModifiedDate":"2022-10-05"},{"lineNumber":158,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-border-color: derive(#282C34, 10%);","lastModifiedDate":"2022-10-05"},{"lineNumber":159,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-border-top-width: 1px;","lastModifiedDate":"2022-10-05"},{"lineNumber":160,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":161,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":162,"author":{"gitId":"SeekSaveServe"},"content":".status-bar {","lastModifiedDate":"2022-10-05"},{"lineNumber":163,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: derive(#282C34, 30%);","lastModifiedDate":"2022-10-05"},{"lineNumber":164,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":165,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":166,"author":{"gitId":"SeekSaveServe"},"content":".result-display {","lastModifiedDate":"2022-10-05"},{"lineNumber":167,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2022-10-05"},{"lineNumber":168,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-05"},{"lineNumber":169,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-size: 13pt;","lastModifiedDate":"2022-10-05"},{"lineNumber":170,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2022-10-05"},{"lineNumber":171,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":172,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":173,"author":{"gitId":"SeekSaveServe"},"content":".result-display .label {","lastModifiedDate":"2022-10-05"},{"lineNumber":174,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-text-fill: black !important;","lastModifiedDate":"2022-10-05"},{"lineNumber":175,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":176,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":177,"author":{"gitId":"SeekSaveServe"},"content":".status-bar .label {","lastModifiedDate":"2022-10-05"},{"lineNumber":178,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-05"},{"lineNumber":179,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2022-10-05"},{"lineNumber":180,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-padding: 4px;","lastModifiedDate":"2022-10-05"},{"lineNumber":181,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-pref-height: 30px;","lastModifiedDate":"2022-10-05"},{"lineNumber":182,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":183,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":184,"author":{"gitId":"SeekSaveServe"},"content":".status-bar-with-border {","lastModifiedDate":"2022-10-05"},{"lineNumber":185,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: derive(#282C34, 30%);","lastModifiedDate":"2022-10-05"},{"lineNumber":186,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-border-color: derive(#282C34, 25%);","lastModifiedDate":"2022-10-05"},{"lineNumber":187,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-border-width: 1px;","lastModifiedDate":"2022-10-05"},{"lineNumber":188,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":189,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":190,"author":{"gitId":"SeekSaveServe"},"content":".status-bar-with-border .label {","lastModifiedDate":"2022-10-05"},{"lineNumber":191,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2022-10-05"},{"lineNumber":192,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":193,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":194,"author":{"gitId":"SeekSaveServe"},"content":".grid-pane {","lastModifiedDate":"2022-10-05"},{"lineNumber":195,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: derive(#282C34, 30%);","lastModifiedDate":"2022-10-05"},{"lineNumber":196,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-border-color: derive(#282C34, 30%);","lastModifiedDate":"2022-10-05"},{"lineNumber":197,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-border-width: 1px;","lastModifiedDate":"2022-10-05"},{"lineNumber":198,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":199,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":200,"author":{"gitId":"SeekSaveServe"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2022-10-05"},{"lineNumber":201,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: derive(#282C34, 30%);","lastModifiedDate":"2022-10-05"},{"lineNumber":202,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":203,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":204,"author":{"gitId":"SeekSaveServe"},"content":".context-menu {","lastModifiedDate":"2022-10-05"},{"lineNumber":205,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: derive(#282C34, 50%);","lastModifiedDate":"2022-10-05"},{"lineNumber":206,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":207,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":208,"author":{"gitId":"SeekSaveServe"},"content":".context-menu .label {","lastModifiedDate":"2022-10-05"},{"lineNumber":209,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2022-10-05"},{"lineNumber":210,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":211,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":212,"author":{"gitId":"SeekSaveServe"},"content":".menu-bar {","lastModifiedDate":"2022-10-05"},{"lineNumber":213,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: derive(#282C34, 20%);","lastModifiedDate":"2022-10-05"},{"lineNumber":214,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":215,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":216,"author":{"gitId":"SeekSaveServe"},"content":".menu-bar .label {","lastModifiedDate":"2022-10-05"},{"lineNumber":217,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-size: 14pt;","lastModifiedDate":"2022-10-05"},{"lineNumber":218,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-05"},{"lineNumber":219,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2022-10-05"},{"lineNumber":220,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-opacity: 0.9;","lastModifiedDate":"2022-10-05"},{"lineNumber":221,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":222,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":223,"author":{"gitId":"SeekSaveServe"},"content":".menu .left-container {","lastModifiedDate":"2022-10-05"},{"lineNumber":224,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: black;","lastModifiedDate":"2022-10-05"},{"lineNumber":225,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":226,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":227,"author":{"gitId":"SeekSaveServe"},"content":"/*","lastModifiedDate":"2022-10-05"},{"lineNumber":228,"author":{"gitId":"SeekSaveServe"},"content":" * Metro style Push Button","lastModifiedDate":"2022-10-05"},{"lineNumber":229,"author":{"gitId":"SeekSaveServe"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2022-10-05"},{"lineNumber":230,"author":{"gitId":"SeekSaveServe"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2022-10-05"},{"lineNumber":231,"author":{"gitId":"SeekSaveServe"},"content":" */","lastModifiedDate":"2022-10-05"},{"lineNumber":232,"author":{"gitId":"SeekSaveServe"},"content":".button {","lastModifiedDate":"2022-10-05"},{"lineNumber":233,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-padding: 5 22 5 22;","lastModifiedDate":"2022-10-05"},{"lineNumber":234,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-border-color: #e2e2e2;","lastModifiedDate":"2022-10-05"},{"lineNumber":235,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-border-width: 2;","lastModifiedDate":"2022-10-05"},{"lineNumber":236,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-radius: 0;","lastModifiedDate":"2022-10-05"},{"lineNumber":237,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: #282C34;","lastModifiedDate":"2022-10-05"},{"lineNumber":238,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-10-05"},{"lineNumber":239,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-size: 11pt;","lastModifiedDate":"2022-10-05"},{"lineNumber":240,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-text-fill: #d8d8d8;","lastModifiedDate":"2022-10-05"},{"lineNumber":241,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2022-10-05"},{"lineNumber":242,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":243,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":244,"author":{"gitId":"SeekSaveServe"},"content":".button:hover {","lastModifiedDate":"2022-10-05"},{"lineNumber":245,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: #3a3a3a;","lastModifiedDate":"2022-10-05"},{"lineNumber":246,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":247,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":248,"author":{"gitId":"SeekSaveServe"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2022-10-05"},{"lineNumber":249,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: white;","lastModifiedDate":"2022-10-05"},{"lineNumber":250,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-text-fill: #282C34;","lastModifiedDate":"2022-10-05"},{"lineNumber":251,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":252,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":253,"author":{"gitId":"SeekSaveServe"},"content":".button:focused {","lastModifiedDate":"2022-10-05"},{"lineNumber":254,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-border-color: white, white;","lastModifiedDate":"2022-10-05"},{"lineNumber":255,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-border-width: 1, 1;","lastModifiedDate":"2022-10-05"},{"lineNumber":256,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2022-10-05"},{"lineNumber":257,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-border-radius: 0, 0;","lastModifiedDate":"2022-10-05"},{"lineNumber":258,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2022-10-05"},{"lineNumber":259,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":260,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":261,"author":{"gitId":"SeekSaveServe"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2022-10-05"},{"lineNumber":262,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-opacity: 0.4;","lastModifiedDate":"2022-10-05"},{"lineNumber":263,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: #282C34;","lastModifiedDate":"2022-10-05"},{"lineNumber":264,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2022-10-05"},{"lineNumber":265,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":266,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":267,"author":{"gitId":"SeekSaveServe"},"content":".button:default {","lastModifiedDate":"2022-10-05"},{"lineNumber":268,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: -fx-focus-color;","lastModifiedDate":"2022-10-05"},{"lineNumber":269,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-text-fill: #ffffff;","lastModifiedDate":"2022-10-05"},{"lineNumber":270,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":271,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":272,"author":{"gitId":"SeekSaveServe"},"content":".button:default:hover {","lastModifiedDate":"2022-10-05"},{"lineNumber":273,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2022-10-05"},{"lineNumber":274,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":275,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":276,"author":{"gitId":"SeekSaveServe"},"content":".dialog-pane {","lastModifiedDate":"2022-10-05"},{"lineNumber":277,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: #282C34;","lastModifiedDate":"2022-10-05"},{"lineNumber":278,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":279,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":280,"author":{"gitId":"SeekSaveServe"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2022-10-05"},{"lineNumber":281,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: #282C34;","lastModifiedDate":"2022-10-05"},{"lineNumber":282,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":283,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":284,"author":{"gitId":"SeekSaveServe"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2022-10-05"},{"lineNumber":285,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-size: 14px;","lastModifiedDate":"2022-10-05"},{"lineNumber":286,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-weight: bold;","lastModifiedDate":"2022-10-05"},{"lineNumber":287,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2022-10-05"},{"lineNumber":288,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":289,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":290,"author":{"gitId":"SeekSaveServe"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2022-10-05"},{"lineNumber":291,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: derive(#282C34, 25%);","lastModifiedDate":"2022-10-05"},{"lineNumber":292,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":293,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":294,"author":{"gitId":"SeekSaveServe"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2022-10-05"},{"lineNumber":295,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-size: 18px;","lastModifiedDate":"2022-10-05"},{"lineNumber":296,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-style: italic;","lastModifiedDate":"2022-10-05"},{"lineNumber":297,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-fill: white;","lastModifiedDate":"2022-10-05"},{"lineNumber":298,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2022-10-05"},{"lineNumber":299,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":300,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":301,"author":{"gitId":"SeekSaveServe"},"content":".scroll-bar {","lastModifiedDate":"2022-10-05"},{"lineNumber":302,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: derive(#282C34, 20%);","lastModifiedDate":"2022-10-05"},{"lineNumber":303,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":304,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":305,"author":{"gitId":"SeekSaveServe"},"content":".scroll-bar .thumb {","lastModifiedDate":"2022-10-05"},{"lineNumber":306,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: derive(#282C34, 50%);","lastModifiedDate":"2022-10-05"},{"lineNumber":307,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-insets: 3;","lastModifiedDate":"2022-10-05"},{"lineNumber":308,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":309,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":310,"author":{"gitId":"SeekSaveServe"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2022-10-05"},{"lineNumber":311,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2022-10-05"},{"lineNumber":312,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-10-05"},{"lineNumber":313,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":314,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":315,"author":{"gitId":"SeekSaveServe"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2022-10-05"},{"lineNumber":316,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-shape: \" \";","lastModifiedDate":"2022-10-05"},{"lineNumber":317,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":318,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":319,"author":{"gitId":"SeekSaveServe"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2022-10-05"},{"lineNumber":320,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-padding: 1 8 1 8;","lastModifiedDate":"2022-10-05"},{"lineNumber":321,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":322,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":323,"author":{"gitId":"SeekSaveServe"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2022-10-05"},{"lineNumber":324,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-padding: 8 1 8 1;","lastModifiedDate":"2022-10-05"},{"lineNumber":325,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":326,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":327,"author":{"gitId":"SeekSaveServe"},"content":"#cardPane {","lastModifiedDate":"2022-10-05"},{"lineNumber":328,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: #282C34;","lastModifiedDate":"2022-10-05"},{"lineNumber":329,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-border-width: 1;","lastModifiedDate":"2022-10-05"},{"lineNumber":330,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":331,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":332,"author":{"gitId":"SeekSaveServe"},"content":"#commandTypeLabel {","lastModifiedDate":"2022-10-05"},{"lineNumber":333,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-size: 11px;","lastModifiedDate":"2022-10-05"},{"lineNumber":334,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-text-fill: #F70D1A;","lastModifiedDate":"2022-10-05"},{"lineNumber":335,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":336,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":337,"author":{"gitId":"SeekSaveServe"},"content":"#commandTextField {","lastModifiedDate":"2022-10-05"},{"lineNumber":338,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: transparent derive(#282C34, 20%) transparent derive(#282C34, 20%);","lastModifiedDate":"2022-10-05"},{"lineNumber":339,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-insets: 0;","lastModifiedDate":"2022-10-05"},{"lineNumber":340,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-border-color: #282C34 #282C34 #ffffff #282C34;","lastModifiedDate":"2022-10-05"},{"lineNumber":341,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-border-insets: 0;","lastModifiedDate":"2022-10-05"},{"lineNumber":342,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-border-width: 1;","lastModifiedDate":"2022-10-05"},{"lineNumber":343,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-05"},{"lineNumber":344,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-size: 13pt;","lastModifiedDate":"2022-10-05"},{"lineNumber":345,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2022-10-05"},{"lineNumber":346,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":347,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":348,"author":{"gitId":"SeekSaveServe"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2022-10-05"},{"lineNumber":349,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2022-10-05"},{"lineNumber":350,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":351,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":352,"author":{"gitId":"SeekSaveServe"},"content":"#resultDisplay .content {","lastModifiedDate":"2022-10-05"},{"lineNumber":353,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: transparent, derive(#282C34, 20%), transparent, derive(#282C34, 20%);","lastModifiedDate":"2022-10-05"},{"lineNumber":354,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-radius: 0;","lastModifiedDate":"2022-10-05"},{"lineNumber":355,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":356,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":357,"author":{"gitId":"SeekSaveServe"},"content":"#tags {","lastModifiedDate":"2022-10-05"},{"lineNumber":358,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-hgap: 7;","lastModifiedDate":"2022-10-05"},{"lineNumber":359,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-vgap: 3;","lastModifiedDate":"2022-10-05"},{"lineNumber":360,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"},{"lineNumber":361,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":362,"author":{"gitId":"SeekSaveServe"},"content":"#tags .label {","lastModifiedDate":"2022-10-05"},{"lineNumber":363,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2022-10-05"},{"lineNumber":364,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-color: #3e7b91;","lastModifiedDate":"2022-10-05"},{"lineNumber":365,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-10-05"},{"lineNumber":366,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-border-radius: 2;","lastModifiedDate":"2022-10-05"},{"lineNumber":367,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-background-radius: 2;","lastModifiedDate":"2022-10-05"},{"lineNumber":368,"author":{"gitId":"SeekSaveServe"},"content":"  -fx-font-size: 11;","lastModifiedDate":"2022-10-05"},{"lineNumber":369,"author":{"gitId":"SeekSaveServe"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"SeekSaveServe":368,"shenyih0ng":1}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":"\u003cStackPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"  xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"  fx:id\u003d\"placeHolder\"\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"  \u003cTextArea editable\u003d\"false\" styleClass\u003d\"result-display\" fx:id\u003d\"resultDisplay\"/\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":5,"shenyih0ng":4}},{"path":"src/main/resources/view/SavedModuleListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeekSaveServe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"SeekSaveServe"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"SeekSaveServe"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"SeekSaveServe"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"SeekSaveServe"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"SeekSaveServe"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"SeekSaveServe"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"SeekSaveServe"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"SeekSaveServe"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"\u003cHBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" id\u003d\"cardPane\" maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"  maxWidth\u003d\"1.7976931348623157E308\" xmlns\u003d\"http://javafx.com/javafx/18\"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"  fx:id\u003d\"cardPane\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"SeekSaveServe"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"    \u003cVBox GridPane.columnIndex\u003d\"0\" alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"85\" prefWidth\u003d\"199.0\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"        \u003cLabel style\u003d\"-fx-font-size: 17;\" maxWidth\u003d\"1.7976931348623157E308\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"SeekSaveServe"},"content":"          text\u003d\"\\$moduleCode\" fx:id\u003d\"moduleCode\"/\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"SeekSaveServe"},"content":"          \u003cFlowPane alignment\u003d\"CENTER_LEFT\" fx:id\u003d\"ayData\"/\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"SeekSaveServe"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"      \u003cLabel text\u003d\"\\$lecture\" fx:id\u003d\"lecture\"/\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"      \u003cLabel text\u003d\"\\$tutorial\" fx:id\u003d\"tutorial\"/\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\"/\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"SeekSaveServe"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"100\"/\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"    \u003crowConstraints\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"      \u003cRowConstraints/\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"    \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"SeekSaveServe"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"SeekSaveServe"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"SeekSaveServe":16,"shenyih0ng":18}},{"path":"src/main/resources/view/SavedModuleListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"\u003cVBox xmlns:fx\u003d\"http://javafx.com/fxml/1\" xmlns\u003d\"http://javafx.com/javafx/18\"\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"SeekSaveServe"},"content":"  \u003cText style\u003d\"-fx-font-size: 18;\" fill\u003d\"#E06C75\" fontSmoothingType\u003d\"LCD\" strokeType\u003d\"OUTSIDE\"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"SeekSaveServe"},"content":"    strokeWidth\u003d\"0.0\" text\u003d\"My Modules\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"    \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"      \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"    \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"  \u003c/Text\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"  \u003cListView VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"moduleListView\"/\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"SeekSaveServe":2,"shenyih0ng":13}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"\u003cGridPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"status-bar\"","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"  xmlns\u003d\"http://javafx.com/javafx/8\"\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\"/\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\"/\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"-":9,"shenyih0ng":3}},{"path":"src/test/java/nus/climods/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"-":57,"shenyih0ng":2}},{"path":"src/test/java/nus/climods/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.commons.core;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":26,"shenyih0ng":1}},{"path":"src/test/java/nus/climods/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.commons.core;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import static nus.climods.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":133,"shenyih0ng":2}},{"path":"src/test/java/nus/climods/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.commons.core.index;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import static nus.climods.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":58,"shenyih0ng":2}},{"path":"src/test/java/nus/climods/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.commons.util;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import static nus.climods.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":34,"shenyih0ng":2}},{"path":"src/test/java/nus/climods/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.commons.util;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import static nus.climods.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"shenyih0ng"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException} if {@code","lastModifiedDate":"2022-10-07"},{"lineNumber":87,"author":{"gitId":"shenyih0ng"},"content":"     * objects} or any element of {@code objects} is null.","lastModifiedDate":"2022-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"shenyih0ng"},"content":"        assertThrows(NullPointerException.class, () -\u003e CollectionUtil.requireAllNonNull(objects));","lastModifiedDate":"2022-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"shenyih0ng"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException} if {@code","lastModifiedDate":"2022-10-07"},{"lineNumber":95,"author":{"gitId":"shenyih0ng"},"content":"     * collection} or any element of {@code collection} is null.","lastModifiedDate":"2022-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"shenyih0ng"},"content":"        assertThrows(NullPointerException.class, () -\u003e CollectionUtil.requireAllNonNull(collection));","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"shenyih0ng"},"content":"        CollectionUtil.requireAllNonNull(objects);","lastModifiedDate":"2022-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"shenyih0ng"},"content":"        CollectionUtil.requireAllNonNull(collection);","lastModifiedDate":"2022-10-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"-":97,"shenyih0ng":11}},{"path":"src/test/java/nus/climods/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.commons.util;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import static nus.climods.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.core.Config;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":112,"shenyih0ng":4}},{"path":"src/test/java/nus/climods/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.commons.util;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import static nus.climods.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":21,"shenyih0ng":2}},{"path":"src/test/java/nus/climods/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.commons.util;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.testutil.SerializableTestClass;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.testutil.TestUtil;","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":42,"shenyih0ng":3}},{"path":"src/test/java/nus/climods/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.commons.util;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import static nus.climods.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":140,"shenyih0ng":2}},{"path":"src/test/java/nus/climods/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"huzaifa1712"},"content":"package nus.climods.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"huzaifa1712"},"content":"import static nus.climods.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"huzaifa1712"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"huzaifa1712"},"content":"public class AddCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"huzaifa1712"},"content":"    // TODO: add more tests once we have infrastructure to compare expected vs actual model state","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"huzaifa1712"},"content":"    public void construct_nullModule_throwsException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"huzaifa1712"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"huzaifa1712"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"huzaifa1712":14}},{"path":"src/test/java/nus/climods/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"huzaifa1712"},"content":"package nus.climods.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"huzaifa1712"},"content":"import static nus.climods.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"huzaifa1712"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"huzaifa1712"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"huzaifa1712"},"content":"    // TODO: add more tests. harder to test since we need a way to test expected model state vs actual","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"huzaifa1712"},"content":"    public void construct_nullModule_throwsException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"huzaifa1712"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteCommand(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"huzaifa1712"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"huzaifa1712":14}},{"path":"src/test/java/nus/climods/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sarrrdin"},"content":"package nus.climods.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"sarrrdin"},"content":"import static nus.climods.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"sarrrdin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"sarrrdin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"sarrrdin"},"content":"import nus.climods.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"sarrrdin"},"content":"import nus.climods.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"sarrrdin"},"content":"import nus.climods.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"sarrrdin"},"content":"import nus.climods.model.module.ModuleList;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"sarrrdin"},"content":"import nus.climods.model.module.UniqueUserModuleList;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"sarrrdin"},"content":"public class ExitCommandTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"sarrrdin"},"content":"    private static final String testAcademicYear \u003d \"2022-2023\";","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"sarrrdin"},"content":"    private final Model model \u003d new ModelManager(new ModuleList(testAcademicYear), new UniqueUserModuleList(),","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"sarrrdin"},"content":"            new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"sarrrdin"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"sarrrdin"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"sarrrdin"},"content":"        String expectedMessage \u003d MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"sarrrdin"},"content":"        ExitCommand exitCommand \u003d new ExitCommand();","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"sarrrdin"},"content":"        CommandResult commandResult \u003d exitCommand.execute(model);","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"sarrrdin"},"content":"        assertEquals(commandResult.getFeedbackToUser(), expectedMessage);","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"sarrrdin"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"sarrrdin":28}},{"path":"src/test/java/nus/climods/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.commons.core.Messages;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.ModelManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.UserPrefs;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.module.Module;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.module.ModuleList;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.model.module.UniqueUserModuleList;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"class FindCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"    private static final String testAcademicYear \u003d \"2022-2023\";","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"huzaifa1712"},"content":"    private final Model model \u003d new ModelManager(new ModuleList(testAcademicYear), new UniqueUserModuleList(),","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"huzaifa1712"},"content":"            new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"    public void execute_zeroKeywords_noModulesFound() {","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_MODULES_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"        FindCommand command \u003d new FindCommand(Collections.emptyList());","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"        CommandResult commandResult \u003d command.execute(model);","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"        assertEquals(commandResult.getFeedbackToUser(), expectedMessage);","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredModuleList());","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"    public void execute_multipleKeywords_multipleModulesFound() {","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_MODULES_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"        FindCommand command \u003d new FindCommand(prepareSearchRegexes(\"CS2103\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"        CommandResult commandResult \u003d command.execute(model);","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"        assertEquals(commandResult.getFeedbackToUser(), expectedMessage);","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"        assertEquals(model.getFilteredModuleList().stream().map(Module::getCode).collect(Collectors.toList()),","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"            Arrays.asList(\"CS2103\", \"CS2103R\", \"CS2103T\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"    public void execute_regexKeywords_multipleModulesFound() {","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_MODULES_LISTED_OVERVIEW, 4);","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"        FindCommand command \u003d new FindCommand(prepareSearchRegexes(\"^CS210[0-3]$\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"        CommandResult commandResult \u003d command.execute(model);","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"        assertEquals(commandResult.getFeedbackToUser(), expectedMessage);","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"        assertEquals(model.getFilteredModuleList().stream().map(Module::getCode).collect(Collectors.toList()),","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"            Arrays.asList(\"CS2100\", \"CS2101\", \"CS2102\", \"CS2103\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"     * Parses {@code userInput} into a search regexes.","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"    private List\u003cPattern\u003e prepareSearchRegexes(String userInput) {","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"        return Arrays.stream(userInput.trim().split(\"\\\\s+\"))","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"            .map(token -\u003e Pattern.compile(token, Pattern.CASE_INSENSITIVE)).collect(Collectors.toList());","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"huzaifa1712":4,"shenyih0ng":66}},{"path":"src/test/java/nus/climods/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package nus.climods.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"import nus.climods.commons.core.Messages;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"import nus.climods.model.Model;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":"import nus.climods.model.ModelManager;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"import nus.climods.model.UserPrefs;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"import nus.climods.model.module.ModuleList;","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.model.module.UniqueUserModuleList;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"public class HelpCommandTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"    private static final String testAcademicYear \u003d \"2022-2023\";","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"huzaifa1712"},"content":"    private final Model model \u003d new ModelManager(new ModuleList(testAcademicYear), new UniqueUserModuleList(),","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"huzaifa1712"},"content":"            new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"    public void execute_help_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"        String expectedMessage \u003d Messages.MESSAGE_SHOW_HELP;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"        HelpCommand helpCommand \u003d new HelpCommand();","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"        CommandResult commandResult \u003d helpCommand.execute(model);","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"        assertEquals(commandResult.getFeedbackToUser(), expectedMessage);","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"huzaifa1712":3,"zupey":26}},{"path":"src/test/java/nus/climods/logic/commands/ModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"huzaifa1712"},"content":"package nus.climods.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"huzaifa1712"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"huzaifa1712"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"huzaifa1712"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.commons.core.GuiSettings;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.model.module.Module;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.model.module.ReadOnlyModuleList;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.model.module.UserModule;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"huzaifa1712"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"huzaifa1712"},"content":" * Model that returns true or false for hasModule","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"huzaifa1712"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"huzaifa1712"},"content":"class ModelStub implements Model {","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"huzaifa1712"},"content":"    private boolean hasModule;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"huzaifa1712"},"content":"    public ModelStub(boolean hasModule) {","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"huzaifa1712"},"content":"        this.hasModule \u003d hasModule;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"huzaifa1712"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"huzaifa1712"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"huzaifa1712"},"content":"        return null;","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"huzaifa1712"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"huzaifa1712"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"huzaifa1712"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"huzaifa1712"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"huzaifa1712"},"content":"        return null;","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"huzaifa1712"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"huzaifa1712"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"huzaifa1712"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"huzaifa1712"},"content":"    public ReadOnlyModuleList getModuleList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"huzaifa1712"},"content":"        return null;","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"huzaifa1712"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"huzaifa1712"},"content":"    public boolean hasUserModule(UserModule module) {","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"huzaifa1712"},"content":"        return hasModule;","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"huzaifa1712"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"huzaifa1712"},"content":"    public boolean filteredListhasUserModule(UserModule module) {","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"huzaifa1712"},"content":"        return hasModule;","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"huzaifa1712"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"huzaifa1712"},"content":"    public void deleteUserModule(UserModule target) {","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"huzaifa1712"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"huzaifa1712"},"content":"    public void addUserModule(UserModule module) {","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"huzaifa1712"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"huzaifa1712"},"content":"    public ObservableList\u003cUserModule\u003e getFilteredUserModuleList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"huzaifa1712"},"content":"        return null;","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"huzaifa1712"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"huzaifa1712"},"content":"    public void updateFilteredUserModuleList(Predicate\u003cUserModule\u003e predicate) {","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"huzaifa1712"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"huzaifa1712"},"content":"    public void updateFilteredModuleList(Optional\u003cString\u003e facultyCode, Optional\u003cBoolean\u003e hasUser) {","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"huzaifa1712"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"huzaifa1712"},"content":"    public ObservableList\u003cModule\u003e getFilteredModuleList() {","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"huzaifa1712"},"content":"        return null;","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":89,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"huzaifa1712"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"huzaifa1712"},"content":"    public void setFilteredModuleList(Predicate\u003cModule\u003e predicate) {","lastModifiedDate":"2022-10-13"},{"lineNumber":92,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"huzaifa1712"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"huzaifa1712":94}},{"path":"src/test/java/nus/climods/logic/commands/UserModuleStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"huzaifa1712"},"content":"package nus.climods.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.model.module.UserModule;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"huzaifa1712"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"huzaifa1712"},"content":" * Stub for UserModule","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"huzaifa1712"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"huzaifa1712"},"content":"public class UserModuleStub extends UserModule {","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"huzaifa1712"},"content":"    public String toString() {","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"huzaifa1712"},"content":"        return \"UserModuleStub\";","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"huzaifa1712"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"huzaifa1712":12}},{"path":"src/test/java/nus/climods/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"huzaifa1712"},"content":"package nus.climods.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"huzaifa1712"},"content":"import static nus.climods.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"huzaifa1712"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.logic.parser.parameters.ModuleCodeParameter;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"huzaifa1712"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"huzaifa1712"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"huzaifa1712"},"content":"    public void parse_emptyInput_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"huzaifa1712"},"content":"        assertParseFailure(parser, \"\", ModuleCodeParameter.INVALID_INPUT_MESSAGE);","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"huzaifa1712"},"content":"    public void parse_blankInput_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"huzaifa1712"},"content":"        assertParseFailure(parser, \"   \", ModuleCodeParameter.INVALID_INPUT_MESSAGE);","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"huzaifa1712"},"content":"    public void parse_invalidFormatTextOnly_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"huzaifa1712"},"content":"        String input \u003d \"CSFASS\";","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"huzaifa1712"},"content":"        assertParseFailure(parser, input, String.format(ModuleCodeParameter.PARSE_EXCEPTION_MESSAGE, input));","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"huzaifa1712"},"content":"    public void parse_invalidFormatNumFirst_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"huzaifa1712"},"content":"        String input \u003d \"210ergerg\";","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"huzaifa1712"},"content":"        assertParseFailure(parser, input, String.format(ModuleCodeParameter.PARSE_EXCEPTION_MESSAGE, input));","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"huzaifa1712"},"content":"    public void parse_invalidFormatNotEnoughNumber_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"huzaifa1712"},"content":"        String input \u003d \"CS210\";","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"huzaifa1712"},"content":"        assertParseFailure(parser, input, String.format(ModuleCodeParameter.PARSE_EXCEPTION_MESSAGE, input));","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"huzaifa1712"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"huzaifa1712":40}},{"path":"src/test/java/nus/climods/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.commands.Command;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"        Command expectedCommand) {","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"-":35,"shenyih0ng":4}},{"path":"src/test/java/nus/climods/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"huzaifa1712"},"content":"package nus.climods.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"huzaifa1712"},"content":"import static nus.climods.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"huzaifa1712"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.logic.parser.parameters.ModuleCodeParameter;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"huzaifa1712"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"huzaifa1712"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"huzaifa1712"},"content":"    public void parse_emptyInput_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"huzaifa1712"},"content":"        assertParseFailure(parser, \"\", ModuleCodeParameter.INVALID_INPUT_MESSAGE);","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"huzaifa1712"},"content":"    public void parse_blankInput_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"huzaifa1712"},"content":"        assertParseFailure(parser, \"   \", ModuleCodeParameter.INVALID_INPUT_MESSAGE);","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"huzaifa1712"},"content":"    public void parse_invalidFormatTextOnly_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"huzaifa1712"},"content":"        String input \u003d \"CSFASS\";","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"huzaifa1712"},"content":"        assertParseFailure(parser, input, String.format(ModuleCodeParameter.PARSE_EXCEPTION_MESSAGE, input));","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"huzaifa1712"},"content":"    public void parse_invalidFormatNumFirst_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"huzaifa1712"},"content":"        String input \u003d \"210ergerg\";","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"huzaifa1712"},"content":"        assertParseFailure(parser, input, String.format(ModuleCodeParameter.PARSE_EXCEPTION_MESSAGE, input));","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"huzaifa1712"},"content":"    public void parse_invalidFormatNotEnoughNumber_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"huzaifa1712"},"content":"        String input \u003d \"CS210\";","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"huzaifa1712"},"content":"        assertParseFailure(parser, input, String.format(ModuleCodeParameter.PARSE_EXCEPTION_MESSAGE, input));","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"huzaifa1712"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"huzaifa1712":41}},{"path":"src/test/java/nus/climods/logic/parser/ExitCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sarrrdin"},"content":"package nus.climods.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"sarrrdin"},"content":"import static nus.climods.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"sarrrdin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"sarrrdin"},"content":"import nus.climods.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"sarrrdin"},"content":"public class ExitCommandParserTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"sarrrdin"},"content":"    private final ExitCommandParser parser \u003d new ExitCommandParser();","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"sarrrdin"},"content":"    private final ExitCommand expectedExitCommand \u003d new ExitCommand();","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"sarrrdin"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"sarrrdin"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"sarrrdin"},"content":"    public void parse_randomArg_returnsExitCommand() {","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"sarrrdin"},"content":"        assertParseSuccess(parser, \"I love to write test cases!\", expectedExitCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"sarrrdin"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"sarrrdin"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"sarrrdin":17}},{"path":"src/test/java/nus/climods/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import static nus.climods.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"import static nus.climods.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":"import static nus.climods.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.logic.commands.FindCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"class FindCommandParserTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"    private final FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"            new FindCommand(Arrays.asList(Pattern.compile(\"software\"), Pattern.compile(\"engineering\")));","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"        assertParseSuccess(parser, \"software engineering\", expectedFindCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"        assertParseSuccess(parser, \" \\n software \\n \\t engineering  \\t\", expectedFindCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"    public void parse_validRegExArgs_returnsFindCommand() {","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"        FindCommand expectedFindCommand \u003d new FindCommand(Collections.singletonList(Pattern.compile(\"^CS2[0-9]00$\")));","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"        assertParseSuccess(parser, \"^CS2[0-9]00$\", expectedFindCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"    public void parse_invalidRegexKeyword_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"        assertParseFailure(parser, \"*\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"shenyih0ng":44}},{"path":"src/test/java/nus/climods/logic/parser/HelpCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package nus.climods.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import static nus.climods.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"import static nus.climods.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"import static nus.climods.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":"import nus.climods.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"class HelpCommandParserTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"    private final HelpCommandParser parser \u003d new HelpCommandParser();","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"    public void parse_emptyArg_returnsHelpCommand() {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"        HelpCommand expectedHelpCommand \u003d new HelpCommand();","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"        assertParseSuccess(parser, \"     \", expectedHelpCommand);","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"    @Test","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"zupey"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"            \"i love testing\",","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"zupey":28}},{"path":"src/test/java/nus/climods/logic/parser/parameters/CliParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"huzaifa1712"},"content":"package nus.climods.logic.parser.parameters;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"huzaifa1712"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"huzaifa1712"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"huzaifa1712"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"huzaifa1712"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"huzaifa1712"},"content":"import org.apache.commons.cli.CommandLine;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"huzaifa1712"},"content":"import org.apache.commons.cli.CommandLineParser;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"huzaifa1712"},"content":"import org.apache.commons.cli.DefaultParser;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"huzaifa1712"},"content":"import org.apache.commons.cli.Option;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"huzaifa1712"},"content":"import org.apache.commons.cli.Options;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"huzaifa1712"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"huzaifa1712"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"huzaifa1712"},"content":" * Includes test for RelaxedParser, and DefaultParser as well to verify expected behaviour","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"huzaifa1712"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"huzaifa1712"},"content":"public class CliParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"huzaifa1712"},"content":"    private static final String LAB_SHORT \u003d \"l\";","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"huzaifa1712"},"content":"    private static final String LAB_LONG \u003d \"lab\";","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"huzaifa1712"},"content":"    private static final String TUT_SHORT \u003d \"t\";","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"huzaifa1712"},"content":"    private static final String TUT_LONG \u003d \"tut\";","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"huzaifa1712"},"content":"    private static final Option LAB_OPTION \u003d Option.builder().option(LAB_SHORT).longOpt(LAB_LONG).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"huzaifa1712"},"content":"    private static final Option TUTORIAL_OPTION \u003d Option.builder().option(TUT_SHORT).longOpt(TUT_LONG).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"huzaifa1712"},"content":"    private static CommandLine defaultParse(String argsString) throws org.apache.commons.cli.ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"huzaifa1712"},"content":"        Options options \u003d new Options();","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"huzaifa1712"},"content":"        options.addOption(LAB_OPTION);","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"huzaifa1712"},"content":"        options.addOption(TUTORIAL_OPTION);","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"huzaifa1712"},"content":"        CommandLineParser defaultParser \u003d new DefaultParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"huzaifa1712"},"content":"        return defaultParser.parse(options, ParserUtil.convertArgumentStringToArray(argsString));","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"huzaifa1712"},"content":"    private static CommandLine relaxedParse(String argsString) throws org.apache.commons.cli.ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"huzaifa1712"},"content":"        Options options \u003d new Options();","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"huzaifa1712"},"content":"        options.addOption(LAB_OPTION);","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"huzaifa1712"},"content":"        options.addOption(TUTORIAL_OPTION);","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"huzaifa1712"},"content":"        CommandLineParser defaultParser \u003d new RelaxedParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"huzaifa1712"},"content":"        return defaultParser.parse(options, ParserUtil.convertArgumentStringToArray(argsString));","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"huzaifa1712"},"content":"    private static void hasLab(CommandLine cmd) {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"huzaifa1712"},"content":"        assertTrue(cmd.hasOption(LAB_OPTION));","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"huzaifa1712"},"content":"        assertTrue(cmd.hasOption(LAB_SHORT));","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"huzaifa1712"},"content":"        assertTrue(cmd.hasOption(LAB_LONG));","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"huzaifa1712"},"content":"    private static void noLab(CommandLine cmd) {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"huzaifa1712"},"content":"        assertFalse(cmd.hasOption(LAB_OPTION));","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"huzaifa1712"},"content":"        assertFalse(cmd.hasOption(LAB_SHORT));","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"huzaifa1712"},"content":"        assertFalse(cmd.hasOption(LAB_LONG));","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"huzaifa1712"},"content":"    private static void hasTutorial(CommandLine cmd) {","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"huzaifa1712"},"content":"        assertTrue(cmd.hasOption(TUTORIAL_OPTION));","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"huzaifa1712"},"content":"        assertTrue(cmd.hasOption(TUT_SHORT));","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"huzaifa1712"},"content":"        assertTrue(cmd.hasOption(TUT_LONG));","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"huzaifa1712"},"content":"    private static void noTutorial(CommandLine cmd) {","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"huzaifa1712"},"content":"        assertFalse(cmd.hasOption(TUTORIAL_OPTION));","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"huzaifa1712"},"content":"        assertFalse(cmd.hasOption(TUT_SHORT));","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"huzaifa1712"},"content":"        assertFalse(cmd.hasOption(TUT_LONG));","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"huzaifa1712"},"content":"    // Relaxed parse ignores unrecognised options","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"huzaifa1712"},"content":"    public void relaxedParseMultipleArguments_unrecognisedOptionStart_hasOptions() {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"huzaifa1712"},"content":"        String argsString \u003d \"-gibberish --lab --tut \";","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"huzaifa1712"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"huzaifa1712"},"content":"            CommandLine cmd \u003d relaxedParse(argsString);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"huzaifa1712"},"content":"            hasLab(cmd);","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"huzaifa1712"},"content":"            hasTutorial(cmd);","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"huzaifa1712"},"content":"        } catch (org.apache.commons.cli.ParseException e) {","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"huzaifa1712"},"content":"            fail();","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"huzaifa1712"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"huzaifa1712"},"content":"    public void relaxedParseMultipleArguments_unrecognisedOptionMiddle_hasOptions() {","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"huzaifa1712"},"content":"        String argsString \u003d \"--lab -gibberish --tut \";","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"huzaifa1712"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"huzaifa1712"},"content":"            CommandLine cmd \u003d relaxedParse(argsString);","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"huzaifa1712"},"content":"            hasLab(cmd);","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"huzaifa1712"},"content":"            hasTutorial(cmd);","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"huzaifa1712"},"content":"        } catch (org.apache.commons.cli.ParseException e) {","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"huzaifa1712"},"content":"            fail();","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"huzaifa1712"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"huzaifa1712"},"content":"    public void relaxedParseMultipleArguments_unrecognisedOptionEnd_hasOptions() {","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"huzaifa1712"},"content":"        String argsString \u003d \"--lab --tut -gibberish\";","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"huzaifa1712"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"huzaifa1712"},"content":"            CommandLine cmd \u003d relaxedParse(argsString);","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"huzaifa1712"},"content":"            hasLab(cmd);","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"huzaifa1712"},"content":"            hasTutorial(cmd);","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"huzaifa1712"},"content":"        } catch (org.apache.commons.cli.ParseException e) {","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"huzaifa1712"},"content":"            fail();","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"huzaifa1712"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"huzaifa1712"},"content":"    public void relaxedParseMultipleArguments_bothLongOption_hasBothOptions() {","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"huzaifa1712"},"content":"        String argsString \u003d \"--lab --tut\";","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"huzaifa1712"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"huzaifa1712"},"content":"            CommandLine cmd \u003d relaxedParse(argsString);","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"huzaifa1712"},"content":"            hasLab(cmd);","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"huzaifa1712"},"content":"            hasTutorial(cmd);","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"huzaifa1712"},"content":"        } catch (org.apache.commons.cli.ParseException e) {","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"huzaifa1712"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"huzaifa1712"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"huzaifa1712"},"content":"    public void relaxedParseMultipleArguments_oneShortOption_hasBothOptions() {","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"huzaifa1712"},"content":"        String argsString \u003d \"--t -lab\";","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"huzaifa1712"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"huzaifa1712"},"content":"            CommandLine cmd \u003d relaxedParse(argsString);","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"huzaifa1712"},"content":"            hasLab(cmd);","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"huzaifa1712"},"content":"            hasTutorial(cmd);","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"huzaifa1712"},"content":"        } catch (org.apache.commons.cli.ParseException e) {","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"huzaifa1712"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"huzaifa1712"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"huzaifa1712"},"content":"    public void relaxedParseMultipleArguments_oneMissing_hasOnlyOne() {","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"huzaifa1712"},"content":"        String argsString \u003d \"-lab\";","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"huzaifa1712"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"huzaifa1712"},"content":"            CommandLine cmd \u003d relaxedParse(argsString);","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"huzaifa1712"},"content":"            hasLab(cmd);","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"huzaifa1712"},"content":"            noTutorial(cmd);","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"huzaifa1712"},"content":"        } catch (org.apache.commons.cli.ParseException e) {","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"huzaifa1712"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"huzaifa1712"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"huzaifa1712"},"content":"    public void relaxedParseMultipleArguments_bothMissing_hasNone() {","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"huzaifa1712"},"content":"        String argsString \u003d \"gibberish\";","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"huzaifa1712"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"huzaifa1712"},"content":"            CommandLine cmd \u003d relaxedParse(argsString);","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"huzaifa1712"},"content":"            noLab(cmd);","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"huzaifa1712"},"content":"            noTutorial(cmd);","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"huzaifa1712"},"content":"        } catch (org.apache.commons.cli.ParseException e) {","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"huzaifa1712"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"huzaifa1712"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"huzaifa1712"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"shenyih0ng"},"content":"     * IMPORTANT: Even if recognised options exist, DefaultParser throws ParseException if any unrecognised option is","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"shenyih0ng"},"content":"     * there","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"huzaifa1712"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"huzaifa1712"},"content":"    public void defaultParseMultipleArguments_unrecognisedOptionStart_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"huzaifa1712"},"content":"        String argsString \u003d \"-gibberish --lab --tut \";","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"huzaifa1712"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"huzaifa1712"},"content":"            defaultParse(argsString);","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"huzaifa1712"},"content":"            fail();","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"huzaifa1712"},"content":"        } catch (org.apache.commons.cli.ParseException e) {","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"huzaifa1712"},"content":"            assertEquals(\"Unrecognized option: -gibberish\", (e.getMessage()));","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"huzaifa1712"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"huzaifa1712"},"content":"    public void defaultParseMultipleArguments_unrecognisedOptionMiddle_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":175,"author":{"gitId":"huzaifa1712"},"content":"        String argsString \u003d \"--lab -gibberish --tut \";","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"huzaifa1712"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"huzaifa1712"},"content":"            defaultParse(argsString);","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"huzaifa1712"},"content":"            fail();","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"huzaifa1712"},"content":"        } catch (org.apache.commons.cli.ParseException e) {","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"huzaifa1712"},"content":"            assertEquals(\"Unrecognized option: -gibberish\", e.getMessage());","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"huzaifa1712"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":185,"author":{"gitId":"huzaifa1712"},"content":"    public void defaultParseMultipleArguments_unrecognisedOptionEnd_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":186,"author":{"gitId":"huzaifa1712"},"content":"        String argsString \u003d \"--lab --tut -gibberish\";","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"huzaifa1712"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"huzaifa1712"},"content":"            defaultParse(argsString);","lastModifiedDate":"2022-10-10"},{"lineNumber":189,"author":{"gitId":"huzaifa1712"},"content":"            fail();","lastModifiedDate":"2022-10-10"},{"lineNumber":190,"author":{"gitId":"huzaifa1712"},"content":"        } catch (org.apache.commons.cli.ParseException e) {","lastModifiedDate":"2022-10-10"},{"lineNumber":191,"author":{"gitId":"huzaifa1712"},"content":"            assertEquals(\"Unrecognized option: -gibberish\", e.getMessage());","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"huzaifa1712"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":193,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":194,"author":{"gitId":"huzaifa1712"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"huzaifa1712":191,"shenyih0ng":3}},{"path":"src/test/java/nus/climods/logic/parser/parameters/ModuleCodeParameterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"huzaifa1712"},"content":"package nus.climods.logic.parser.parameters;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"huzaifa1712"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"huzaifa1712"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"huzaifa1712"},"content":"import nus.climods.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"huzaifa1712"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"huzaifa1712"},"content":" * Tests for ModuleCodeParameter class","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"huzaifa1712"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"huzaifa1712"},"content":"public class ModuleCodeParameterTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"huzaifa1712"},"content":"    private static final String EMPTY_INPUT_MESSAGE \u003d \"Empty module code is not valid\";","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"huzaifa1712"},"content":"    private ModuleCodeParameter createModuleCodeParameter(String argsString) {","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"huzaifa1712"},"content":"        return new ModuleCodeParameter(argsString);","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"huzaifa1712"},"content":"    public void parseModuleCode_validInput_returnsModuleCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"huzaifa1712"},"content":"        String argsString \u003d \" CS2102\";","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"huzaifa1712"},"content":"        ModuleCodeParameter mcp \u003d createModuleCodeParameter(argsString);","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"huzaifa1712"},"content":"        try {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"huzaifa1712"},"content":"            String mc \u003d mcp.getArgValue();","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"huzaifa1712"},"content":"            assertEquals(\"CS2102\", mc);","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"huzaifa1712"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"huzaifa1712"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"huzaifa1712"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"huzaifa1712"},"content":"    public void parseModuleCode_validInputWithoutSpace_returnsModuleCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"huzaifa1712"},"content":"        String argsString \u003d \"CS2103\";","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"huzaifa1712"},"content":"        ModuleCodeParameter mcp \u003d createModuleCodeParameter(argsString);","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"huzaifa1712"},"content":"        try {","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"huzaifa1712"},"content":"            String mc \u003d mcp.getArgValue();","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"huzaifa1712"},"content":"            assertEquals(\"CS2103\", mc);","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"huzaifa1712"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"huzaifa1712"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"huzaifa1712"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"huzaifa1712"},"content":"    public void parseModuleCode_validInputLowerCasereturnsModuleCode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"huzaifa1712"},"content":"        String argsString \u003d \"cs2103\";","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"huzaifa1712"},"content":"        ModuleCodeParameter mcp \u003d createModuleCodeParameter(argsString);","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"huzaifa1712"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"huzaifa1712"},"content":"            String mc \u003d mcp.getArgValue();","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"huzaifa1712"},"content":"            assertEquals(argsString, mc);","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"huzaifa1712"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"huzaifa1712"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"huzaifa1712"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"huzaifa1712"},"content":"    public void parseModuleCode_validInputWithOtherArguments_returnsModuleCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"huzaifa1712"},"content":"        String argsString \u003d \"CS2106 xxx\";","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"huzaifa1712"},"content":"        ModuleCodeParameter mcp \u003d createModuleCodeParameter(argsString);","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"huzaifa1712"},"content":"        try {","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"huzaifa1712"},"content":"            String mc \u003d mcp.getArgValue();","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"huzaifa1712"},"content":"            assertEquals(\"CS2106\", mc);","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"huzaifa1712"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"huzaifa1712"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"huzaifa1712"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"huzaifa1712"},"content":"    public void parseModuleCode_invalidInput_throwsParseException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"huzaifa1712"},"content":"        String argsString \u003d \"notmc\";","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"huzaifa1712"},"content":"        ModuleCodeParameter mcp \u003d createModuleCodeParameter(argsString);","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"huzaifa1712"},"content":"        try {","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"huzaifa1712"},"content":"            String mc \u003d mcp.getArgValue();","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"huzaifa1712"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"huzaifa1712"},"content":"            assertEquals(String.format(ModuleCodeParameter.PARSE_EXCEPTION_MESSAGE, argsString), e.getMessage());","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"huzaifa1712"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"huzaifa1712"},"content":"    public void parseModuleCode_invalidInputEmptyStringDefaultMessage_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"huzaifa1712"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"huzaifa1712"},"content":"        ModuleCodeParameter mcp \u003d createModuleCodeParameter(argsString);","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"huzaifa1712"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"huzaifa1712"},"content":"            String mc \u003d mcp.getArgValue();","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"huzaifa1712"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"huzaifa1712"},"content":"            assertEquals(ModuleCodeParameter.INVALID_INPUT_MESSAGE, e.getMessage());","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"huzaifa1712"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"huzaifa1712"},"content":"    public void parseModuleCode_invalidInputEmptyStringCustomMessage_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"huzaifa1712"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"huzaifa1712"},"content":"        ModuleCodeParameter mcp \u003d createModuleCodeParameter(argsString);","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"huzaifa1712"},"content":"        try {","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"huzaifa1712"},"content":"            mcp.setEmptyInputMessage(EMPTY_INPUT_MESSAGE);","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"huzaifa1712"},"content":"            String mc \u003d mcp.getArgValue();","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"huzaifa1712"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"huzaifa1712"},"content":"            assertEquals(EMPTY_INPUT_MESSAGE, e.getMessage());","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"huzaifa1712"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"huzaifa1712"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"huzaifa1712":108,"shenyih0ng":1}},{"path":"src/test/java/nus/climods/model/module/ModuleStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.model.module;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":" * A stub for {@link Module}.","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"public class ModuleStub extends Module {","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"    private final String title;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"    private final String code;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"     * Constructor for ModuleStub class.","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"     * @param title module title","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"     * @param code module code","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"    public ModuleStub(String title, String code) {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"        super(null);","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"        this.code \u003d code;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"    public String getTitle() {","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"        return this.title;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"    public String getCode() {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"        return this.code;","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"shenyih0ng":31}},{"path":"src/test/java/nus/climods/model/module/predicate/ModuleContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.model.module.predicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"shenyih0ng"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.module.Module;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.model.module.ModuleStub;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"class ModuleContainsKeywordsPredicateTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"    public void equals() {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"        List\u003cPattern\u003e firstSearchRegexList \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"            Collections.singletonList(Pattern.compile(\"software\", Pattern.CASE_INSENSITIVE));","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"        List\u003cPattern\u003e secondSearchRegexList \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"            Collections.singletonList(Pattern.compile(\"engineering\", Pattern.CASE_INSENSITIVE));","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"        ModuleContainsKeywordsPredicate firstPredicate \u003d new ModuleContainsKeywordsPredicate(firstSearchRegexList);","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"        ModuleContainsKeywordsPredicate secondPredicate \u003d new ModuleContainsKeywordsPredicate(secondSearchRegexList);","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"        ModuleContainsKeywordsPredicate firstPredicateCopy \u003d new ModuleContainsKeywordsPredicate(firstSearchRegexList);","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"        assertEquals(firstPredicate, firstPredicateCopy);","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"        assertNotEquals(firstPredicate, secondPredicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"    public void test_moduleContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"        Module testModule \u003d new ModuleStub(\"Software Engineering\", \"CS2103\");","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"        // Single keyword","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"        ModuleContainsKeywordsPredicate predicate \u003d new ModuleContainsKeywordsPredicate(","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"            Collections.singletonList(Pattern.compile(\"software\", Pattern.CASE_INSENSITIVE)));","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"shenyih0ng"},"content":"        assertTrue(predicate.test(testModule));","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"shenyih0ng"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"shenyih0ng"},"content":"        predicate \u003d new ModuleContainsKeywordsPredicate(","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"shenyih0ng"},"content":"            Arrays.asList(Pattern.compile(\"software\", Pattern.CASE_INSENSITIVE),","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"shenyih0ng"},"content":"                Pattern.compile(\"engineering\", Pattern.CASE_INSENSITIVE)));","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"shenyih0ng"},"content":"        assertTrue(predicate.test(testModule));","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"shenyih0ng"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"shenyih0ng"},"content":"        predicate \u003d new ModuleContainsKeywordsPredicate(","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"shenyih0ng"},"content":"            Arrays.asList(Pattern.compile(\"software\", Pattern.CASE_INSENSITIVE),","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"shenyih0ng"},"content":"                Pattern.compile(\"testing\", Pattern.CASE_INSENSITIVE)));","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"shenyih0ng"},"content":"        assertTrue(predicate.test(testModule));","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"    public void test_moduleDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"shenyih0ng"},"content":"        Module testModule \u003d new ModuleStub(\"Software Engineering\", \"CS2103\");","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"shenyih0ng"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"shenyih0ng"},"content":"        ModuleContainsKeywordsPredicate predicate \u003d new ModuleContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"shenyih0ng"},"content":"        assertFalse(predicate.test(testModule));","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"shenyih0ng"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"shenyih0ng"},"content":"        predicate \u003d new ModuleContainsKeywordsPredicate(","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"shenyih0ng"},"content":"            Collections.singletonList(Pattern.compile(\"hardware\", Pattern.CASE_INSENSITIVE)));","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"shenyih0ng"},"content":"        assertFalse(predicate.test(testModule));","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"shenyih0ng":76}},{"path":"src/test/java/nus/climods/storage/module/JsonModuleSummaryListStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zupey"},"content":"package nus.climods.storage.module;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"zupey"},"content":"import static nus.climods.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"zupey"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"zupey"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"zupey"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"zupey"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"zupey"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"zupey"},"content":"import java.util.List;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"zupey"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"zupey"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"zupey"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"zupey"},"content":"import org.openapitools.client.api.ModulesApi;","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"zupey"},"content":"import org.openapitools.client.model.ModuleCondensed;","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"zupey"},"content":"import nus.climods.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"zupey"},"content":"import nus.climods.model.module.ReadOnlyModuleSummaryList;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.storage.module.summary.JsonModuleSummaryListStorage;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"zupey"},"content":"class JsonModuleSummaryListStorageTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"zupey"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonModuleSummaryListStorageTest\");","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"zupey"},"content":"    @TempDir","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"zupey"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"zupey"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"zupey"},"content":"    public void readModuleSummary_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"zupey"},"content":"        assertThrows(NullPointerException.class, () -\u003e readModuleSummaryList(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"zupey"},"content":"    private Optional\u003cReadOnlyModuleSummaryList\u003e readModuleSummaryList(String filePath) throws Exception {","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"zupey"},"content":"        return new JsonModuleSummaryListStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"zupey"},"content":"            .readModuleSummaryList(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"zupey"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"zupey"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"zupey"},"content":"            ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"zupey"},"content":"            : null;","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"zupey"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"zupey"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"zupey"},"content":"        assertFalse(readModuleSummaryList(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"zupey"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"zupey"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"zupey"},"content":"        assertThrows(DataConversionException.class, () -\u003e readModuleSummaryList(","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"zupey"},"content":"            \"notJsonFormatModuleSummaryList.json\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"zupey"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"zupey"},"content":"    public void readValidJsonFormat_success() throws Exception {","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"zupey"},"content":"        assertTrue(readModuleSummaryList(\"validJsonFormatModuleSummaryList.json\").isPresent());","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"zupey"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"shenyih0ng"},"content":"     * Calls the API to fetch the module list data and saves in a temporary folder. Then, checks that the data received","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"shenyih0ng"},"content":"     * from API is the same as the data read from storage.","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"shenyih0ng"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"zupey"},"content":"     * @throws Exception any exception that may occur.","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"zupey"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"zupey"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"zupey"},"content":"    public void saveAndReadModuleSummaryList_success() throws Exception {","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"zupey"},"content":"        Path filePath \u003d testFolder.resolve(\"TempModuleSummaryList.json\");","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"zupey"},"content":"        ModulesApi modulesApi \u003d new ModulesApi();","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"zupey"},"content":"        List\u003cModuleCondensed\u003e data \u003d modulesApi.acadYearModuleListJsonGet(\"2022-2023\");","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"zupey"},"content":"        JsonModuleSummaryListStorage jsonAcadYearModuleListStorage \u003d new JsonModuleSummaryListStorage(filePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"zupey"},"content":"        jsonAcadYearModuleListStorage.saveModuleSummaryList(data);","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"zupey"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"zupey"},"content":"        Optional\u003cReadOnlyModuleSummaryList\u003e optionalReadBack \u003d jsonAcadYearModuleListStorage","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"zupey"},"content":"            .readModuleSummaryList(filePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"zupey"},"content":"        assertTrue(optionalReadBack.isPresent());","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"zupey"},"content":"        ReadOnlyModuleSummaryList readBack \u003d optionalReadBack.get();","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"zupey"},"content":"        List\u003cModuleCondensed\u003e readBackData \u003d readBack.getModuleList();","lastModifiedDate":"2022-10-08"},{"lineNumber":81,"author":{"gitId":"zupey"},"content":"        assertEquals(data, readBackData);","lastModifiedDate":"2022-10-08"},{"lineNumber":82,"author":{"gitId":"zupey"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":83,"author":{"gitId":"zupey"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"zupey":78,"shenyih0ng":5}},{"path":"src/test/java/nus/climods/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.testutil;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception. This is a wrapper method that","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"     * invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency with our custom {@link","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"     * #assertThrows(Class, String, Executable)} method. To standardize API calls in this project, users should use this","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"     * method instead of {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call {@link #assertThrows(Class,","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"     * Executable)} instead.","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"-":26,"shenyih0ng":7}},{"path":"src/test/java/nus/climods/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.testutil;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":71,"shenyih0ng":2}},{"path":"src/test/java/nus/climods/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.testutil;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path. Creates the sandbox folder if","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"     * it doesn\u0027t exist.","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":27,"shenyih0ng":3}},{"path":"src/test/java/nus/climods/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.ui;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":" * A test object which can be constructed via an FXML file. Unlike other JavaFX classes, this class can be constructed","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":" * without the JavaFX toolkit being initialized.","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"    public TestFxmlObject() {","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":31,"shenyih0ng":5}},{"path":"src/test/java/nus/climods/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package nus.climods.ui;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import static nus.climods.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"import nus.climods.MainApp;","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"shenyih0ng"},"content":"     * UiPart used for testing. It should only be used with invalid FXML files or the valid file located at {@link","lastModifiedDate":"2022-10-07"},{"lineNumber":87,"author":{"gitId":"shenyih0ng"},"content":"     * VALID_FILE_PATH}.","lastModifiedDate":"2022-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":109,"shenyih0ng":5}},{"path":"src/test/java/org/openapitools/client/api/ModulesApiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shenyih0ng"},"content":"package org.openapitools.client.api;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"shenyih0ng"},"content":"import java.util.List;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"shenyih0ng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"shenyih0ng"},"content":"import org.openapitools.client.ApiException;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"SeekSaveServe"},"content":"import org.openapitools.client.model.Module;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"shenyih0ng"},"content":"import org.openapitools.client.model.ModuleCondensed;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"shenyih0ng"},"content":"import org.openapitools.client.model.ModuleInformation;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"shenyih0ng"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"shenyih0ng"},"content":" * API tests for ModulesApi","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"shenyih0ng"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"shenyih0ng"},"content":"public class ModulesApiTest {","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"shenyih0ng"},"content":"    private final ModulesApi api \u003d new ModulesApi();","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"shenyih0ng"},"content":"    @Test","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"shenyih0ng"},"content":"    public void acadYearModuleInfoJsonGetTest() throws ApiException {","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"shenyih0ng"},"content":"        String acadYear \u003d \"2022-2023\";","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"shenyih0ng"},"content":"        List\u003cModuleInformation\u003e response \u003d api.acadYearModuleInfoJsonGet(acadYear);","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"shenyih0ng"},"content":"        assertTrue(response.size() \u003e 0);","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"shenyih0ng"},"content":"    @Test","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"shenyih0ng"},"content":"    public void acadYearModuleListJsonGetTest() throws ApiException {","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"shenyih0ng"},"content":"        String acadYear \u003d \"2022-2023\";","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"shenyih0ng"},"content":"        List\u003cModuleCondensed\u003e response \u003d api.acadYearModuleListJsonGet(acadYear);","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"shenyih0ng"},"content":"        assertTrue(response.size() \u003e 0);","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"shenyih0ng"},"content":"    @Test","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"shenyih0ng"},"content":"    public void acadYearModulesModuleCodeJsonGetTest() throws ApiException {","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"shenyih0ng"},"content":"        String acadYear \u003d \"2022-2023\";","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"shenyih0ng"},"content":"        String moduleCode \u003d \"CS2103\";","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"shenyih0ng"},"content":"        Module response \u003d api.acadYearModulesModuleCodeJsonGet(acadYear, moduleCode);","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"shenyih0ng"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"shenyih0ng"},"content":"        assertEquals(response.getTitle(), \"Software Engineering\");","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"shenyih0ng"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"shenyih0ng"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"SeekSaveServe":1,"shenyih0ng":44}},{"path":"src/test/java/org/openapitools/client/api/VenuesApiTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"huzaifa1712"},"content":"package org.openapitools.client.api;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"huzaifa1712"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"huzaifa1712"},"content":"import java.math.BigDecimal;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"huzaifa1712"},"content":"import java.util.List;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"huzaifa1712"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"huzaifa1712"},"content":"import org.openapitools.client.ApiException;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"huzaifa1712"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"huzaifa1712"},"content":" * API tests for VenuesAPI","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"huzaifa1712"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"huzaifa1712"},"content":"public class VenuesApiTest {","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"huzaifa1712"},"content":"    private final VenuesApi api \u003d new VenuesApi();","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"huzaifa1712"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"huzaifa1712"},"content":"     * Test that list of all venues for academic year and semester can be retrieved","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"huzaifa1712"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"huzaifa1712"},"content":"     * @throws ApiException if error occured during request","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"huzaifa1712"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"huzaifa1712"},"content":"    public void acadYearSemestersVenuesGetTest() throws ApiException {","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"huzaifa1712"},"content":"        String acadYear \u003d \"2022-2023\";","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"huzaifa1712"},"content":"        BigDecimal semester \u003d BigDecimal.valueOf(1);","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"huzaifa1712"},"content":"        List\u003cString\u003e venues \u003d api.acadYearSemestersSemesterVenuesJsonGet(acadYear, semester);","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"huzaifa1712"},"content":"        assertTrue(venues.size() \u003e 0);","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"huzaifa1712"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"huzaifa1712"},"content":"     * Test that detailed information for all venues in given academic year and semester can be retrieved","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"huzaifa1712"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"huzaifa1712"},"content":"     * @throws ApiException if error occured during request","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"huzaifa1712"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"huzaifa1712"},"content":"    @Test","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"huzaifa1712"},"content":"    public void acadYearSemestersDetailedVenuesGetTest() throws ApiException {","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"huzaifa1712"},"content":"        String acadYear \u003d \"2022-2023\";","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"huzaifa1712"},"content":"        BigDecimal semester \u003d BigDecimal.valueOf(1);","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"huzaifa1712"},"content":"        List\u003cString\u003e detailedVenues \u003d api.acadYearSemestersSemesterVenuesJsonGet(acadYear, semester);","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"huzaifa1712"},"content":"        assertTrue(detailedVenues.size() \u003e 0);","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"huzaifa1712"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"huzaifa1712"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"huzaifa1712"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"huzaifa1712":47}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"\u003c?import nus.climods.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":"\u003c/TestFxmlObject\u003e","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"-":2,"shenyih0ng":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"shenyih0ng"},"content":"\u003c?import nus.climods.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"shenyih0ng"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml\" type\u003d\"nus.climods.ui.TestFxmlObject\"","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"shenyih0ng"},"content":"  xmlns\u003d\"http://javafx.com/javafx\"\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":4,"shenyih0ng":3}}]
