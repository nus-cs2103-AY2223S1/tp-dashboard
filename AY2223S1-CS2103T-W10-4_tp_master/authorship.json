[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"# ModtRekt","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W10-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W10-4/tp/actions)","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"* This is **a project for Software Engineering (SE) students** under CS2103T at NUS.","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"* ModtRekt is a desktop app for students of NUS:","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"  * to manage their modules,","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"  * to keep track of their tasks, and,","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"  * used via a command line interface (CLI) while still having the benefits of a graphical user interface (GUI).","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"* It is named after the module registration system used by NUS students, named ModReg.","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"* We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"* For the detailed documentation of this project, see the **[ModtRekt Product Website](https://ay2223s1-cs2103t-w10-4.github.io/tp/)**.","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jontmy":11,"-":3,"HoJunHao2000":1}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"mainClassName \u003d \u0027modtrekt.Main\u0027","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"run {","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"jontmy"},"content":"    implementation \u0027com.beust:jcommander:1.82\u0027","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"jontmy"},"content":"    archiveFileName \u003d \u0027modtrekt.jar\u0027","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jontmy":7,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"# About Us","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":"ModtRekt is a tool for students of NUS to manage their modules and tasks.","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"### Jonathan Tay Ming-Yang","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"\u003cimg src\u003d\"images/jontmy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"domoberzin"},"content":"[[github](https://github.com/jontmy)]","lastModifiedDate":"2022-09-25"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":"[[portfolio](team/jontmy.md)]","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"domoberzin"},"content":"* Role: Team lead","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"domoberzin"},"content":"* Responsibilities: Deliverables and deadlines, Scheduling and tracking","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"domoberzin"},"content":"### Ho Jun Hao","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"domoberzin"},"content":"\u003cimg src\u003d\"images/hojunhao2000.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"domoberzin"},"content":"[[github](http://github.com/hojunhao2000)]","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"domoberzin"},"content":"[[portfolio](team/hojunhao2000.md)]","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"domoberzin"},"content":"* Role: Developer","lastModifiedDate":"2022-09-25"},{"lineNumber":32,"author":{"gitId":"domoberzin"},"content":"* Responsibilities: Code quality","lastModifiedDate":"2022-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"domoberzin"},"content":"### Marciano Renzo William","lastModifiedDate":"2022-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"domoberzin"},"content":"\u003cimg src\u003d\"images/midnightfeverrr.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"domoberzin"},"content":"[[github](http://github.com/midnightfeverrr)] [[portfolio](team/midnightfeverrr.md)]","lastModifiedDate":"2022-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"domoberzin"},"content":"* Responsibilities: Testing","lastModifiedDate":"2022-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"domoberzin"},"content":"### Dominic Berzin Chua Way Gin","lastModifiedDate":"2022-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"domoberzin"},"content":"\u003cimg src\u003d\"images/domoberzin.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"domoberzin"},"content":"[[github](http://github.com/domoberzin)]","lastModifiedDate":"2022-09-25"},{"lineNumber":48,"author":{"gitId":"domoberzin"},"content":"[[portfolio](team/domoberzin.md)]","lastModifiedDate":"2022-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"domoberzin"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2022-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"domoberzin"},"content":"### David Gareth Ong","lastModifiedDate":"2022-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"domoberzin"},"content":"\u003cimg src\u003d\"images/vvidday.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"domoberzin"},"content":"[[github](http://github.com/vvidday)]","lastModifiedDate":"2022-09-25"},{"lineNumber":58,"author":{"gitId":"domoberzin"},"content":"[[portfolio](team/vvidday.md)]","lastModifiedDate":"2022-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"domoberzin"},"content":"* Responsibilities: Integration","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"domoberzin":30,"-":31}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"domoberzin"},"content":"# Table of Contents ","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"1. [Acknowledgements](#acknowledgements)","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"2. [Setting up, getting started](#setting-up-getting-started)","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":"3. [Design](#design)","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":"   - [Architecture](#architecture)","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":"   - [UI component](#ui-component)","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"   - [Logic component](#logic-component)","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"   - [Model component](#model-component)","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"domoberzin"},"content":"   - [Storage component](#storage-component)","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"   - [Common classes](#common-classes)","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"domoberzin"},"content":"4. [Implementation](#implementation)","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"   - [Module Features](#module-features)","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"domoberzin"},"content":"     - [Add Module](#add-module)","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"domoberzin"},"content":"     - [Remove Module](#remove-module)","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":"     - [Navigation](#navigation)","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"domoberzin"},"content":"   - [Task/Deadline Features](#taskdeadline-features)","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"domoberzin"},"content":"     - [Add Task](#add-task)","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"domoberzin"},"content":"     - [Remove Task](#remove-task)","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"domoberzin"},"content":"     - [Edit Task](#edit-task)","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"domoberzin"},"content":"     - [Task Archival](#task-archival)","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"domoberzin"},"content":"     - [Task Listing](#task-listing)","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"domoberzin"},"content":"5. [Documentation, logging, testing, configuration, dev-ops](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"domoberzin"},"content":"6. [Appendix: Requirements](#appendix-requirements)","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"domoberzin"},"content":"   - [Product Scope](#product-scope)","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"domoberzin"},"content":"   - [User Stories](#user-stories)","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"domoberzin"},"content":"   - [Use Cases](#use-cases)","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"domoberzin"},"content":"   - [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"domoberzin"},"content":"   - [Glossary](#glossary)","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"domoberzin"},"content":"7. [Appendix: Instructions for manual testing](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"midnightfeverrr"},"content":"Refer to the guide [_here_](SettingUp.md).","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"vvidday"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete -m 1` to remove the module with index `1`.","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"vvidday"},"content":"Note that while our program has both tasks and modules, the flow of logic for doing operations (i.e. delete, add etc.) on them are similar. Therefore, although the following sections only illustrate the components in the context of modules, they are similar when applied in the context of tasks as well.","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"vvidday"},"content":"The sections below give more details of each component. As stated above, tasks are omitted in place of modules in the following sections due to the similarity between them.","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"midnightfeverrr"},"content":"**API** : [`Ui.java`](https://github.com/AY2223S1-CS2103T-W10-4/tp/blob/master/src/main/java/modtrekt/ui/Ui.java)","lastModifiedDate":"2022-10-17"},{"lineNumber":102,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":103,"author":{"gitId":"midnightfeverrr"},"content":"Section by : [Marciano](https://github.com/midnightfeverrr)","lastModifiedDate":"2022-10-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"midnightfeverrr"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `ModuleListPanel`, `StatusBarFooter` etc.","lastModifiedDate":"2022-10-17"},{"lineNumber":108,"author":{"gitId":"midnightfeverrr"},"content":"All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between","lastModifiedDate":"2022-10-17"},{"lineNumber":109,"author":{"gitId":"midnightfeverrr"},"content":"classes that represent parts of the visible GUI.","lastModifiedDate":"2022-10-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"midnightfeverrr"},"content":"The `UI` component uses the JavaFx UI framework.","lastModifiedDate":"2022-10-17"},{"lineNumber":112,"author":{"gitId":"midnightfeverrr"},"content":"The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder.","lastModifiedDate":"2022-10-17"},{"lineNumber":113,"author":{"gitId":"midnightfeverrr"},"content":"For example, the layout of the [`MainWindow`](https://github.com/AY2223S1-CS2103T-W10-4/tp/blob/master/src/main/java/modtrekt/ui/MainWindow.java)","lastModifiedDate":"2022-10-17"},{"lineNumber":114,"author":{"gitId":"midnightfeverrr"},"content":"is specified in [`MainWindow.fxml`](https://github.com/AY2223S1-CS2103T-W10-4/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2022-10-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"midnightfeverrr"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2022-10-17"},{"lineNumber":119,"author":{"gitId":"midnightfeverrr"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2022-10-17"},{"lineNumber":120,"author":{"gitId":"midnightfeverrr"},"content":"* Keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2022-10-17"},{"lineNumber":121,"author":{"gitId":"midnightfeverrr"},"content":"* Depends on some classes in the `Model` component, as it displays `Module` object residing in the `Model`.","lastModifiedDate":"2022-10-17"},{"lineNumber":122,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":123,"author":{"gitId":"midnightfeverrr"},"content":"#### MainWindow","lastModifiedDate":"2022-10-17"},{"lineNumber":124,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":125,"author":{"gitId":"midnightfeverrr"},"content":"The `MainWindow` class is the hub for all UI components which are listed below:","lastModifiedDate":"2022-10-17"},{"lineNumber":126,"author":{"gitId":"midnightfeverrr"},"content":"* `CommandBox` - Command box to get user input.","lastModifiedDate":"2022-10-17"},{"lineNumber":127,"author":{"gitId":"midnightfeverrr"},"content":"* `ResultDisplay` - Displays the message returned by the command entered. (Soon to contain avatar image)","lastModifiedDate":"2022-10-17"},{"lineNumber":128,"author":{"gitId":"midnightfeverrr"},"content":"* `ModuleListPanel` - Panel displaying the modules input to the system.","lastModifiedDate":"2022-10-17"},{"lineNumber":129,"author":{"gitId":"midnightfeverrr"},"content":"* `TaskListPanel` - Panel displaying the task input to the system (According to the respective module).","lastModifiedDate":"2022-10-17"},{"lineNumber":130,"author":{"gitId":"midnightfeverrr"},"content":"* `ProfileSidePanel` - Panel displaying the user\u0027s profile and fundamental details.","lastModifiedDate":"2022-10-17"},{"lineNumber":131,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":132,"author":{"gitId":"midnightfeverrr"},"content":"The `MainWindow` coordinates the backend of the system to the frontend of the system to make visible changes to the interface.","lastModifiedDate":"2022-10-17"},{"lineNumber":133,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":134,"author":{"gitId":"midnightfeverrr"},"content":"This is done through the `executeCommand(String commandText)` method. Upon user input, the logic class executes the","lastModifiedDate":"2022-10-17"},{"lineNumber":135,"author":{"gitId":"midnightfeverrr"},"content":"respective command and the model is updated to reflect the changes.","lastModifiedDate":"2022-10-17"},{"lineNumber":136,"author":{"gitId":"midnightfeverrr"},"content":"Subsequently, after the model has been updated, the following UI classes `ResultDisplay` is refreshed as a result.","lastModifiedDate":"2022-10-17"},{"lineNumber":137,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":138,"author":{"gitId":"midnightfeverrr"},"content":"#### CommandBox","lastModifiedDate":"2022-10-17"},{"lineNumber":139,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":140,"author":{"gitId":"midnightfeverrr"},"content":"The `CommandBox` class contains an editable JavaFX Component `TextArea`, which allows user to input user commands.","lastModifiedDate":"2022-10-17"},{"lineNumber":141,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":142,"author":{"gitId":"midnightfeverrr"},"content":"#### ResultDisplay","lastModifiedDate":"2022-10-17"},{"lineNumber":143,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":144,"author":{"gitId":"midnightfeverrr"},"content":"The `ResultDisplay` class shows the message returned from the user\u0027s input.","lastModifiedDate":"2022-10-17"},{"lineNumber":145,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":146,"author":{"gitId":"midnightfeverrr"},"content":"![Structure of the UI Component](images/ResultDisplayHandleCommand.png)","lastModifiedDate":"2022-10-17"},{"lineNumber":147,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":148,"author":{"gitId":"midnightfeverrr"},"content":"1. Command is executed on `MainWindow`.","lastModifiedDate":"2022-10-17"},{"lineNumber":149,"author":{"gitId":"midnightfeverrr"},"content":"2. `MainWindow` calls the method `executeCommand`, which refreshes the resultant message displayed in `ResultDisplay`.","lastModifiedDate":"2022-10-17"},{"lineNumber":150,"author":{"gitId":"midnightfeverrr"},"content":"3. `ResultDisplay` updates its JavaFX `TextArea` according to the `CommandResult` of the command given.","lastModifiedDate":"2022-10-17"},{"lineNumber":151,"author":{"gitId":"midnightfeverrr"},"content":"In this case, the `TextArea` will display the message returned as a result of the command.","lastModifiedDate":"2022-10-17"},{"lineNumber":152,"author":{"gitId":"midnightfeverrr"},"content":"4. ResultDisplay displays visible change on the interface.","lastModifiedDate":"2022-10-17"},{"lineNumber":153,"author":{"gitId":"midnightfeverrr"},"content":"5. `executeCommand` ends execution.","lastModifiedDate":"2022-10-17"},{"lineNumber":154,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":155,"author":{"gitId":"midnightfeverrr"},"content":"#### ModuleListPanel","lastModifiedDate":"2022-10-17"},{"lineNumber":156,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":157,"author":{"gitId":"midnightfeverrr"},"content":"The `ModuleListPanel` class contains `ListView\u003cModule\u003e` JavaFX component displaying a list view of the component inside.","lastModifiedDate":"2022-10-17"},{"lineNumber":158,"author":{"gitId":"midnightfeverrr"},"content":"In this case, the list inside is a list of `ModuleCard` class.","lastModifiedDate":"2022-10-17"},{"lineNumber":159,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":160,"author":{"gitId":"midnightfeverrr"},"content":"The contents of the list are dependent on the `modules` that the user\u0027s data. Each module input by the user will be displayed","lastModifiedDate":"2022-10-17"},{"lineNumber":161,"author":{"gitId":"midnightfeverrr"},"content":"as a `ModuleCard` object, presented in the form of `ListView`.","lastModifiedDate":"2022-10-17"},{"lineNumber":162,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":163,"author":{"gitId":"midnightfeverrr"},"content":"#### TaskListPanel","lastModifiedDate":"2022-10-17"},{"lineNumber":164,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":165,"author":{"gitId":"midnightfeverrr"},"content":"The `TaskListPanel` class contains `ListView\u003cTask\u003e` JavaFX component displaying a list view of the component inside.","lastModifiedDate":"2022-10-17"},{"lineNumber":166,"author":{"gitId":"midnightfeverrr"},"content":"In this case, the list inside is a list of `TaskCard` class.","lastModifiedDate":"2022-10-17"},{"lineNumber":167,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":168,"author":{"gitId":"midnightfeverrr"},"content":"The contents of the list are dependent on the `tasks` that the user\u0027s data. Each module input by the user will be displayed","lastModifiedDate":"2022-10-17"},{"lineNumber":169,"author":{"gitId":"midnightfeverrr"},"content":"as a `TaskCard` object, presented in the form of `ListView`.","lastModifiedDate":"2022-10-17"},{"lineNumber":170,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":171,"author":{"gitId":"midnightfeverrr"},"content":"#### ProfileSidePanel","lastModifiedDate":"2022-10-17"},{"lineNumber":172,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":173,"author":{"gitId":"midnightfeverrr"},"content":"The `ProfileSidePanel` class contains the user\u0027s profile and (proposed) CAP. The following information is displayed in on the object:","lastModifiedDate":"2022-10-17"},{"lineNumber":174,"author":{"gitId":"midnightfeverrr"},"content":"* `Course` name","lastModifiedDate":"2022-10-17"},{"lineNumber":175,"author":{"gitId":"midnightfeverrr"},"content":"* Inspiring quote","lastModifiedDate":"2022-10-17"},{"lineNumber":176,"author":{"gitId":"midnightfeverrr"},"content":"* (Proposed) Modular Credit completed by user","lastModifiedDate":"2022-10-17"},{"lineNumber":177,"author":{"gitId":"midnightfeverrr"},"content":"* (Proposed) Current Cumulative Average Point (CAP)","lastModifiedDate":"2022-10-17"},{"lineNumber":178,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":179,"author":{"gitId":"midnightfeverrr"},"content":"#### Other Components","lastModifiedDate":"2022-10-17"},{"lineNumber":180,"author":{"gitId":"midnightfeverrr"},"content":"In addition to the main UI components in the `MainWindow` class, these are other UI Components:","lastModifiedDate":"2022-10-17"},{"lineNumber":181,"author":{"gitId":"midnightfeverrr"},"content":"* `ModuleCard` - Individual card containing the relevant information of the module.","lastModifiedDate":"2022-10-17"},{"lineNumber":182,"author":{"gitId":"midnightfeverrr"},"content":"List of ModuleCard contained in the ModuleListPanel.","lastModifiedDate":"2022-10-17"},{"lineNumber":183,"author":{"gitId":"midnightfeverrr"},"content":"* `TaskCard` - Individual card containing the relevant information of the task.","lastModifiedDate":"2022-10-17"},{"lineNumber":184,"author":{"gitId":"midnightfeverrr"},"content":"List of TaskCards contained in the TaskListPanel.","lastModifiedDate":"2022-10-17"},{"lineNumber":185,"author":{"gitId":"midnightfeverrr"},"content":"* `HelpWindow` - Pop-up window containing the link the User Guide, as well as a (proposed) list of all the commands in the application.","lastModifiedDate":"2022-10-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":196,"author":{"gitId":"vvidday"},"content":"1. When `Logic` is called upon to execute a command, it uses the `ModtrektParser` class to parse the user command.","lastModifiedDate":"2022-10-20"},{"lineNumber":197,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":198,"author":{"gitId":"vvidday"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add or remove a module).","lastModifiedDate":"2022-10-20"},{"lineNumber":199,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":201,"author":{"gitId":"domoberzin"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete -m 1\")` API call.","lastModifiedDate":"2022-10-19"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"domoberzin"},"content":"![Interactions Inside the Logic Component for the `delete -m 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2022-10-19"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"vvidday"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `RemoveCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-10-20"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"vvidday"},"content":"* When called upon to parse a user command, the `ModtrektParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `ModtrektParser` returns back as a `Command` object.","lastModifiedDate":"2022-10-20"},{"lineNumber":214,"author":{"gitId":"vvidday"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `RemoveCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2022-10-20"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"domoberzin"},"content":"**API** : [`Model.java`](https://github.com/AY2223S1-CS2103T-W10-4/tp/blob/master/src/main/java/modtrekt/model/Model.java)","lastModifiedDate":"2022-10-19"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"HoJunHao2000"},"content":"* stores the address book data i.e., all `Module` objects (which are contained in a `UniqueModuleList` object).","lastModifiedDate":"2022-10-09"},{"lineNumber":225,"author":{"gitId":"HoJunHao2000"},"content":"* stores the currently \u0027selected\u0027 `Module` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cModule\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-10-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":229,"author":{"gitId":"HoJunHao2000"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `ModuleList`, which `Module` references. This allows `ModuleList` to only require one `Tag` object per unique tag, instead of each `Module` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"domoberzin"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S1-CS2103T-W10-4/tp/blob/master/src/main/java/modtrekt/storage/Storage.java)","lastModifiedDate":"2022-10-19"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"HoJunHao2000"},"content":"* inherits from both `ModuleListStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-10-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"vvidday"},"content":"Classes used by multiple components are in the `modtrekt.commons` package.","lastModifiedDate":"2022-10-20"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":258,"author":{"gitId":"jontmy"},"content":"### Module Features","lastModifiedDate":"2022-10-20"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"domoberzin"},"content":"Section by : [Ho Jun Hao](https://github.com/hojunhao2000)","lastModifiedDate":"2022-10-22"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":262,"author":{"gitId":"jontmy"},"content":"### Add module","lastModifiedDate":"2022-10-20"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"HoJunHao2000"},"content":"In this section, the functionality of `add` module feature, expected execution path, and the interactions between","lastModifiedDate":"2022-10-19"},{"lineNumber":265,"author":{"gitId":"HoJunHao2000"},"content":"`AddCommand`, `AddCommandParser`, and other objects will be discussed.","lastModifiedDate":"2022-10-19"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"vvidday"},"content":"#### What is the add module feature","lastModifiedDate":"2022-10-21"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"HoJunHao2000"},"content":"The `add` module features allows users to add a module that they have taken or are currently taking into the","lastModifiedDate":"2022-10-19"},{"lineNumber":270,"author":{"gitId":"HoJunHao2000"},"content":"`ModuleList`.","lastModifiedDate":"2022-10-19"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"HoJunHao2000"},"content":"In order to add tasks or deadlines related to the module, a module would have to be created.","lastModifiedDate":"2022-10-19"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"HoJunHao2000"},"content":"Information regarding module can be recognised in the CLI using tags","lastModifiedDate":"2022-10-19"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"HoJunHao2000"},"content":"These tags are:","lastModifiedDate":"2022-10-19"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"HoJunHao2000"},"content":"- `-m \u003cmodule_name\u003e`","lastModifiedDate":"2022-10-19"},{"lineNumber":279,"author":{"gitId":"HoJunHao2000"},"content":"- `-c \u003cmodule_code\u003e`","lastModifiedDate":"2022-10-19"},{"lineNumber":280,"author":{"gitId":"HoJunHao2000"},"content":"- `-cr \u003cmodule_credit\u003e`","lastModifiedDate":"2022-10-19"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"vvidday"},"content":"#### Design considerations","lastModifiedDate":"2022-10-21"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"HoJunHao2000"},"content":"**Aspect 1: How many modules are added:**","lastModifiedDate":"2022-10-19"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"HoJunHao2000"},"content":"* **Alternative 1 (current choice):** Add 1 module added per AddCommand.","lastModifiedDate":"2022-10-19"},{"lineNumber":287,"author":{"gitId":"HoJunHao2000"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2022-10-19"},{"lineNumber":288,"author":{"gitId":"HoJunHao2000"},"content":"  * Cons: May have to type more to add multiple modules.","lastModifiedDate":"2022-10-19"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"HoJunHao2000"},"content":"* **Alternative 2:** Add multiple modules per AddCommand.","lastModifiedDate":"2022-10-19"},{"lineNumber":291,"author":{"gitId":"HoJunHao2000"},"content":"  * Pros: Convenient for user.","lastModifiedDate":"2022-10-19"},{"lineNumber":292,"author":{"gitId":"HoJunHao2000"},"content":"  * Cons: More complicated, may require much more parsing.","lastModifiedDate":"2022-10-19"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"HoJunHao2000"},"content":"We decided to go with the alternative 1 to keep the logic simple and easier to work with. To tackle the cons we tried to","lastModifiedDate":"2022-10-19"},{"lineNumber":295,"author":{"gitId":"HoJunHao2000"},"content":"reduce the compulsory AddCommand parameters.","lastModifiedDate":"2022-10-19"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"HoJunHao2000"},"content":"**Aspect 2: What parameters do we need:**","lastModifiedDate":"2022-10-19"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"HoJunHao2000"},"content":"* **Alternative 1:** Manually add all the required parameters.","lastModifiedDate":"2022-10-19"},{"lineNumber":300,"author":{"gitId":"HoJunHao2000"},"content":"    * Pros: Able to add modules that are not on NUSMods.","lastModifiedDate":"2022-10-19"},{"lineNumber":301,"author":{"gitId":"HoJunHao2000"},"content":"    * Cons: Troublesome to add multiple parameters.","lastModifiedDate":"2022-10-19"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"HoJunHao2000"},"content":"* **Alternative 2:** Only require module code and fetch the relevant information from NUSMods API.","lastModifiedDate":"2022-10-19"},{"lineNumber":304,"author":{"gitId":"HoJunHao2000"},"content":"    * Pros: Convenient for user as the only module code is required for the parameter.","lastModifiedDate":"2022-10-19"},{"lineNumber":305,"author":{"gitId":"HoJunHao2000"},"content":"    * Cons: If the NUSMods API server is down, users would not be able to add their modules.","lastModifiedDate":"2022-10-19"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"HoJunHao2000"},"content":"We decided to go implement both alternatives as we wanted to give users greater flexibility.","lastModifiedDate":"2022-10-19"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"vvidday"},"content":"#### Current implementation","lastModifiedDate":"2022-10-21"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"HoJunHao2000"},"content":"The diagram below showcases the path execution for when adding a module","lastModifiedDate":"2022-10-19"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"HoJunHao2000"},"content":"\u003cimg src\u003d\"images/ModulePUMLs/AddModule/ModuleAddPathExecution.png\" width\u003d\"800\" /\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"HoJunHao2000"},"content":"The diagram below shows how the add command work with input `add -m -c CS2103T`","lastModifiedDate":"2022-10-19"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"HoJunHao2000"},"content":"\u003cimg src\u003d\"images/ModulePUMLs/AddModule/ModuleAddSequenceDiagram.png\" width\u003d\"1200\" /\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"HoJunHao2000"},"content":"The arguments are first parsed through `ModtrektParser` to identify the command word. The command word will help","lastModifiedDate":"2022-10-19"},{"lineNumber":320,"author":{"gitId":"HoJunHao2000"},"content":"identify the type of `Parser` needed to parse the rest of the arguments. In this case it is `AddCommandParser`. After","lastModifiedDate":"2022-10-19"},{"lineNumber":321,"author":{"gitId":"HoJunHao2000"},"content":"obtaining the module code, the argument would be passed to static method `ModuleParser:fetchModule()`. This would fetch","lastModifiedDate":"2022-10-19"},{"lineNumber":322,"author":{"gitId":"HoJunHao2000"},"content":"the module details from NUSMods and return a `Module`. The module would be used to instantiate an `AddCommand`. When the","lastModifiedDate":"2022-10-19"},{"lineNumber":323,"author":{"gitId":"HoJunHao2000"},"content":"`AddCommand` is executed, the `Model` would add the module to the `ModuleList`.","lastModifiedDate":"2022-10-19"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"jontmy"},"content":"### Remove Module","lastModifiedDate":"2022-10-20"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"HoJunHao2000"},"content":"In this section, the functionality of `remove` module feature, expected execution path, and the interactions between the","lastModifiedDate":"2022-10-19"},{"lineNumber":328,"author":{"gitId":"HoJunHao2000"},"content":"`RemoveCommand`, `RemoveCommandParser`, and other objects will be discussed.","lastModifiedDate":"2022-10-19"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"vvidday"},"content":"#### What is the remove module feature","lastModifiedDate":"2022-10-21"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"HoJunHao2000"},"content":"The `remove` module features allows users to remove a module that they have taken or mistakenly inputted into","lastModifiedDate":"2022-10-19"},{"lineNumber":333,"author":{"gitId":"HoJunHao2000"},"content":"`ModuleList`.","lastModifiedDate":"2022-10-19"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"HoJunHao2000"},"content":"Removal of a `Module` would remove all `Task` and `Deadline` associated with it.","lastModifiedDate":"2022-10-19"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"vvidday"},"content":"#### Design considerations","lastModifiedDate":"2022-10-21"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"HoJunHao2000"},"content":"**Aspect: How are modules removed:**","lastModifiedDate":"2022-10-19"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"HoJunHao2000"},"content":"* **Alternative 1 (current choice):** Using their index in the list.","lastModifiedDate":"2022-10-19"},{"lineNumber":342,"author":{"gitId":"HoJunHao2000"},"content":"    * Pros: Easier for user to select.","lastModifiedDate":"2022-10-19"},{"lineNumber":343,"author":{"gitId":"HoJunHao2000"},"content":"    * Cons: May be hard to find module especially if module list is long. More complicated as index may change","lastModifiedDate":"2022-10-19"},{"lineNumber":344,"author":{"gitId":"HoJunHao2000"},"content":"    especially after modifying the module list","lastModifiedDate":"2022-10-19"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"HoJunHao2000"},"content":"* **Alternative 2:** Using the module code.","lastModifiedDate":"2022-10-19"},{"lineNumber":347,"author":{"gitId":"HoJunHao2000"},"content":"    * Pros: User need not list the modules to find exact module to remove.","lastModifiedDate":"2022-10-19"},{"lineNumber":348,"author":{"gitId":"HoJunHao2000"},"content":"    * Cons: User needs to type more.","lastModifiedDate":"2022-10-19"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"HoJunHao2000"},"content":"We decided to go with the alternative 1 as it would be faster for users to type inputs. Furthermore, at any point, it is","lastModifiedDate":"2022-10-19"},{"lineNumber":351,"author":{"gitId":"HoJunHao2000"},"content":"unlikely that users will take so many modules such that the GUI is unable to display all the modules. We also have an","lastModifiedDate":"2022-10-19"},{"lineNumber":352,"author":{"gitId":"HoJunHao2000"},"content":"archive feature that would remove previously taken modules so that it would not clutter up the GUI.","lastModifiedDate":"2022-10-19"},{"lineNumber":353,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":354,"author":{"gitId":"vvidday"},"content":"#### Current implementation","lastModifiedDate":"2022-10-21"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"HoJunHao2000"},"content":"The diagram below showcases the path execution for when removing a module","lastModifiedDate":"2022-10-19"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"HoJunHao2000"},"content":"\u003cimg src\u003d\"images/ModulePUMLs/RemoveModule/ModuleRemovePathExecution.png\" width\u003d\"800\" /\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"HoJunHao2000"},"content":"The diagram below shows how the remove command work with input `remove -m 1`","lastModifiedDate":"2022-10-19"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"HoJunHao2000"},"content":"\u003cimg src\u003d\"images/ModulePUMLs/RemoveModule/ModuleRemoveSequenceDiagram.png\" width\u003d\"1200\" /\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"HoJunHao2000"},"content":"The arguments are first parsed through `ModtrektParser` to identify the command word. The command word will help","lastModifiedDate":"2022-10-19"},{"lineNumber":365,"author":{"gitId":"HoJunHao2000"},"content":"identify the type of `Parser` needed to parse the rest of the arguments. In this case it is `RemoveCommandParser`. After","lastModifiedDate":"2022-10-19"},{"lineNumber":366,"author":{"gitId":"HoJunHao2000"},"content":"obtaining the index, it would be used to instantiate a `RemoveCommand`. When the `RemoveCommand` is executed, it would","lastModifiedDate":"2022-10-19"},{"lineNumber":367,"author":{"gitId":"HoJunHao2000"},"content":"first obtain the `Module` using the index. Then it would remove the `Module` from the `ModuleList`. Using the saved","lastModifiedDate":"2022-10-19"},{"lineNumber":368,"author":{"gitId":"HoJunHao2000"},"content":"`Module` it would then remove all `Task` in the `TaskBook` with the `Module`.","lastModifiedDate":"2022-10-19"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"vvidday"},"content":"### Navigation","lastModifiedDate":"2022-10-20"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":372,"author":{"gitId":"domoberzin"},"content":"Section by : [David](https://github.com/vvidday)","lastModifiedDate":"2022-10-22"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":374,"author":{"gitId":"vvidday"},"content":"#### Change Current Module","lastModifiedDate":"2022-10-20"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":376,"author":{"gitId":"vvidday"},"content":"The `cd` command allows users to set a module as the **current module**, which accomplishes two things:","lastModifiedDate":"2022-10-20"},{"lineNumber":377,"author":{"gitId":"vvidday"},"content":"* Firstly, it filters the current task list in the UI to only show tasks from the corresponding module","lastModifiedDate":"2022-10-20"},{"lineNumber":378,"author":{"gitId":"vvidday"},"content":"* Additionally, all further commands are parsed in the context of the corresponding module. For instance, commands that require a task index, such as `remove -t 1`, will now base the index on the *updated filtered* task list.","lastModifiedDate":"2022-10-20"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":380,"author":{"gitId":"vvidday"},"content":"The relevant commands are:","lastModifiedDate":"2022-10-20"},{"lineNumber":381,"author":{"gitId":"vvidday"},"content":"* **`cd \u003cmodule code\u003e`** sets the current module to the module with the specified module code","lastModifiedDate":"2022-10-20"},{"lineNumber":382,"author":{"gitId":"vvidday"},"content":"* **`cd ..`** sets the current module to `null`, if it is not already `null`","lastModifiedDate":"2022-10-20"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":384,"author":{"gitId":"vvidday"},"content":"#### Design Considerations","lastModifiedDate":"2022-10-20"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":386,"author":{"gitId":"vvidday"},"content":"The syntax and command word were aspects that we took into consideration in the design process.","lastModifiedDate":"2022-10-20"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":388,"author":{"gitId":"vvidday"},"content":"1. **Using the shorthand word `cd` and similar syntax e.g. `cd ..` (Current Implementation)**","lastModifiedDate":"2022-10-20"},{"lineNumber":389,"author":{"gitId":"vvidday"},"content":"  * Pro: Users who are familiar with CLI applications will be able to use similar syntax for navigation inside the application","lastModifiedDate":"2022-10-20"},{"lineNumber":390,"author":{"gitId":"vvidday"},"content":"  * Pro: Users will be able to navigate through the application faster, due to the shorter command word and syntax","lastModifiedDate":"2022-10-20"},{"lineNumber":391,"author":{"gitId":"vvidday"},"content":"  * Con: Users who are not familiar with CLI applications would have to remember a specific command word that may not be very intuitive","lastModifiedDate":"2022-10-20"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":393,"author":{"gitId":"vvidday"},"content":"2. **Using a longer command word e.g. `enter` and `exit`**","lastModifiedDate":"2022-10-20"},{"lineNumber":394,"author":{"gitId":"vvidday"},"content":"  * Pro: The command word is more universally intuitive, especially for users who are not familiar with CLI applications","lastModifiedDate":"2022-10-20"},{"lineNumber":395,"author":{"gitId":"vvidday"},"content":"  * Con: Users who are already familiar with CLI applications will have to relearn navigation using a different command","lastModifiedDate":"2022-10-20"},{"lineNumber":396,"author":{"gitId":"vvidday"},"content":"  * Con: Users will have to type out a longer command word and syntax, which will reduce the speed at which a user can navigate through the application","lastModifiedDate":"2022-10-20"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":398,"author":{"gitId":"vvidday"},"content":"Taking into account that our [target user profile](#product-scope) is one that is familiar with using CLI apps, we chose option 1 as it provided the most benefit for such a user. In particular, it contributes to the goal of allowing the user to accomplish tasks (in this case navigation) in a shorter time using the CLI.","lastModifiedDate":"2022-10-20"},{"lineNumber":399,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":400,"author":{"gitId":"vvidday"},"content":"#### Current implementation","lastModifiedDate":"2022-10-20"},{"lineNumber":401,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":402,"author":{"gitId":"vvidday"},"content":"The current module is a `ModCode` stored as a variable in [ModelManager](https://github.com/AY2223S1-CS2103T-W10-4/tp/blob/master/src/main/java/modtrekt/model/ModelManager.java). Its value is used as part of a custom predicate that is used to call `Model::updateFilteredTaskList`, in order to filter the tasks to only display those belonging to the corresponding module.","lastModifiedDate":"2022-10-20"},{"lineNumber":403,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":404,"author":{"gitId":"vvidday"},"content":"The following activity diagram shows the execution and control flow for the `cd` command.","lastModifiedDate":"2022-10-20"},{"lineNumber":405,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":406,"author":{"gitId":"vvidday"},"content":"\u003cimg src\u003d\"images/CdActivityDiagram.png\" width\u003d\"1000\" /\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":407,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":408,"author":{"gitId":"vvidday"},"content":"As seen from the diagram, when the user enters the command `cd ..` to exit from the currently selected module, a check is performed to determine whether there *is* a current module.","lastModifiedDate":"2022-10-20"},{"lineNumber":409,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":410,"author":{"gitId":"vvidday"},"content":"In the case where there is no current module, i.e. the user is already at the \u0027root\u0027 (and all modules/tasks are listed), an error message is shown to the user alerting them of this fact. This improves the user experience as it prevents the case of a user repeatedly entering the `cd ..` command and wondering why the display never changes.","lastModifiedDate":"2022-10-20"},{"lineNumber":411,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":412,"author":{"gitId":"vvidday"},"content":"The sequence diagram below shows the flow of the interactions between the different components upon execution of the command `cd CS2106`.","lastModifiedDate":"2022-10-20"},{"lineNumber":413,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":414,"author":{"gitId":"vvidday"},"content":"In the diagram, the predicates `modulePredicate` and `taskPredicate` are the custom predicates used to filter the module and task lists, respectively. They are within the `setCurrentModule` method in `Model`.","lastModifiedDate":"2022-10-20"},{"lineNumber":415,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":416,"author":{"gitId":"vvidday"},"content":"\u003cimg src\u003d\"images/CdSequenceDiagram.png\" width\u003d\"1000\" /\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":417,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":418,"author":{"gitId":"jontmy"},"content":"### Tasks","lastModifiedDate":"2022-10-20"},{"lineNumber":419,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":420,"author":{"gitId":"vvidday"},"content":"### Task/Deadline Features","lastModifiedDate":"2022-10-21"},{"lineNumber":421,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":422,"author":{"gitId":"domoberzin"},"content":"Section by : [Dominic](https://github.com/domoberzin)","lastModifiedDate":"2022-10-22"},{"lineNumber":423,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":424,"author":{"gitId":"vvidday"},"content":"### Add task","lastModifiedDate":"2022-10-21"},{"lineNumber":425,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":426,"author":{"gitId":"domoberzin"},"content":"In this section, the functionality of `add` task feature, expected execution path, and the interactions between","lastModifiedDate":"2022-10-20"},{"lineNumber":427,"author":{"gitId":"domoberzin"},"content":"`AddTaskCommand`, `AddDeadlineCommand`, `AddTaskCommandParser`, and other objects will be discussed.","lastModifiedDate":"2022-10-20"},{"lineNumber":428,"author":{"gitId":"domoberzin"},"content":"Deadlines are an extension of tasks, and have a due date. For the most part, their implementations are","lastModifiedDate":"2022-10-20"},{"lineNumber":429,"author":{"gitId":"domoberzin"},"content":"similar, and areas where they differ will be highlighted. As such, please consider deadline to be synonymous","lastModifiedDate":"2022-10-20"},{"lineNumber":430,"author":{"gitId":"domoberzin"},"content":"with task, unless explicitly stated.","lastModifiedDate":"2022-10-20"},{"lineNumber":431,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":432,"author":{"gitId":"vvidday"},"content":"#### What is the add task feature","lastModifiedDate":"2022-10-21"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"domoberzin"},"content":"The `add` task features allows users to add a task or a deadline that they have taken or are currently taking into the","lastModifiedDate":"2022-10-20"},{"lineNumber":435,"author":{"gitId":"domoberzin"},"content":"`TaskList`.","lastModifiedDate":"2022-10-20"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"domoberzin"},"content":"In order to add tasks or deadlines related to the module, a module would have to be created.","lastModifiedDate":"2022-10-20"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"domoberzin"},"content":"Additionally, the modules to which these tasks belong need to be specified within","lastModifiedDate":"2022-10-20"},{"lineNumber":440,"author":{"gitId":"domoberzin"},"content":"the command. If the user is CD-ed into the module, the module code will not","lastModifiedDate":"2022-10-20"},{"lineNumber":441,"author":{"gitId":"domoberzin"},"content":"be required in the command.","lastModifiedDate":"2022-10-20"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"domoberzin"},"content":"Information regarding tasks/deadlines can be recognised in the CLI using tags.","lastModifiedDate":"2022-10-21"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"domoberzin"},"content":"These tags are:","lastModifiedDate":"2022-10-20"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"domoberzin"},"content":"- `-t \u003ctask name/description\u003e`","lastModifiedDate":"2022-10-20"},{"lineNumber":448,"author":{"gitId":"domoberzin"},"content":"- `-d \u003cYYYY-MM-DD\u003e` (this is only required for adding deadlines)","lastModifiedDate":"2022-10-20"},{"lineNumber":449,"author":{"gitId":"domoberzin"},"content":"- `-c \u003cmodule_code\u003e`","lastModifiedDate":"2022-10-20"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"vvidday"},"content":"#### Design considerations","lastModifiedDate":"2022-10-21"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"domoberzin"},"content":"**Aspect 1: How many tasks are added:**","lastModifiedDate":"2022-10-20"},{"lineNumber":455,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":456,"author":{"gitId":"domoberzin"},"content":"* **Alternative 1 (current choice):** Add 1 task added per AddTaskCommand.","lastModifiedDate":"2022-10-20"},{"lineNumber":457,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"domoberzin"},"content":"  * Cons: May have to type more to add multiple tasks.","lastModifiedDate":"2022-10-20"},{"lineNumber":459,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":460,"author":{"gitId":"domoberzin"},"content":"* **Alternative 2:** Add multiple tasks per AddTaskCommand.","lastModifiedDate":"2022-10-20"},{"lineNumber":461,"author":{"gitId":"domoberzin"},"content":"  * Pros: Convenient for user.","lastModifiedDate":"2022-10-20"},{"lineNumber":462,"author":{"gitId":"domoberzin"},"content":"  * Cons: More complicated, may require much more parsing.","lastModifiedDate":"2022-10-20"},{"lineNumber":463,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":464,"author":{"gitId":"domoberzin"},"content":"We decided to go with the alternative 1 to keep the logic simple and easier to work with. To tackle the cons we tried to","lastModifiedDate":"2022-10-20"},{"lineNumber":465,"author":{"gitId":"domoberzin"},"content":"reduce the compulsory AddTaskCommand parameters.","lastModifiedDate":"2022-10-20"},{"lineNumber":466,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":467,"author":{"gitId":"domoberzin"},"content":"**Aspect 2: What parameters do we need:**","lastModifiedDate":"2022-10-20"},{"lineNumber":468,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":469,"author":{"gitId":"domoberzin"},"content":"* **Alternative 1:** Add task by specifying module index instead of code.","lastModifiedDate":"2022-10-20"},{"lineNumber":470,"author":{"gitId":"domoberzin"},"content":"  * Pros: Less verbosity in the command, user can go off of the displayed index.","lastModifiedDate":"2022-10-20"},{"lineNumber":471,"author":{"gitId":"domoberzin"},"content":"  * Cons: Slightly more complicated as more errors need to be handled (invalid index etc.). Users","lastModifiedDate":"2022-10-20"},{"lineNumber":472,"author":{"gitId":"domoberzin"},"content":"    may also be more prone to adding the task to the wrong module.","lastModifiedDate":"2022-10-20"},{"lineNumber":473,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":474,"author":{"gitId":"domoberzin"},"content":"* **Alternative 2:** Require the user to specify the module code.","lastModifiedDate":"2022-10-20"},{"lineNumber":475,"author":{"gitId":"domoberzin"},"content":"  * Pros: Reduces the chance of error by the user, users will not need to remember the module index.","lastModifiedDate":"2022-10-20"},{"lineNumber":476,"author":{"gitId":"domoberzin"},"content":"  * Cons: User has to type more information in the command.","lastModifiedDate":"2022-10-20"},{"lineNumber":477,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":478,"author":{"gitId":"domoberzin"},"content":"We decided to implement alternative 2 in order to reduce the chance of user error and reduce the","lastModifiedDate":"2022-10-20"},{"lineNumber":479,"author":{"gitId":"domoberzin"},"content":"potential for bugs.","lastModifiedDate":"2022-10-20"},{"lineNumber":480,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":481,"author":{"gitId":"vvidday"},"content":"#### Current implementation","lastModifiedDate":"2022-10-21"},{"lineNumber":482,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":483,"author":{"gitId":"domoberzin"},"content":"The diagram below showcases the path execution for adding a task, when a user is **NOT** CD-ed","lastModifiedDate":"2022-10-21"},{"lineNumber":484,"author":{"gitId":"domoberzin"},"content":"into a module. For ease of understanding, we will be adding a task instead of a deadline. Note that","lastModifiedDate":"2022-10-20"},{"lineNumber":485,"author":{"gitId":"domoberzin"},"content":"the flow is exactly the same for both tasks and deadlines.","lastModifiedDate":"2022-10-20"},{"lineNumber":486,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":487,"author":{"gitId":"domoberzin"},"content":"\u003cimg src\u003d\"images/TaskPUMLs/AddTask/TaskAddPathExecution.png\" width\u003d\"800\" /\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":488,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":489,"author":{"gitId":"domoberzin"},"content":"The diagram below shows how the add command work with input `add -m -c CS2103T`","lastModifiedDate":"2022-10-20"},{"lineNumber":490,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":491,"author":{"gitId":"domoberzin"},"content":"\u003cimg src\u003d\"images/TaskPUMLs/AddTask/TaskAddSequenceDiagram.png\" width\u003d\"1200\" /\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":492,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":493,"author":{"gitId":"domoberzin"},"content":"The arguments are first parsed through `ModtrektParser` to identify the command word. The command word will help","lastModifiedDate":"2022-10-20"},{"lineNumber":494,"author":{"gitId":"domoberzin"},"content":"identify the type of `Parser` needed to parse the rest of the arguments. In this case it is `AddTaskCommandParser`. After","lastModifiedDate":"2022-10-20"},{"lineNumber":495,"author":{"gitId":"domoberzin"},"content":"parsing the arguments, a deadline or a task object is created, depending on the presence of a deadline flag. The task","lastModifiedDate":"2022-10-20"},{"lineNumber":496,"author":{"gitId":"domoberzin"},"content":"would be used to instantiate an `AddTaskCommand`. When the `AddTaskCommand` is executed, the `Model` would add the task","lastModifiedDate":"2022-10-20"},{"lineNumber":497,"author":{"gitId":"domoberzin"},"content":"to the `TaskList`. After adding the task, the `Model` invokes its own method to update the task count of the module","lastModifiedDate":"2022-10-20"},{"lineNumber":498,"author":{"gitId":"domoberzin"},"content":"whose code is associated with the task.","lastModifiedDate":"2022-10-20"},{"lineNumber":499,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":500,"author":{"gitId":"vvidday"},"content":"### Remove Task","lastModifiedDate":"2022-10-21"},{"lineNumber":501,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":502,"author":{"gitId":"domoberzin"},"content":"In this section, the functionality of `remove` task feature, expected execution path, and the interactions between the","lastModifiedDate":"2022-10-20"},{"lineNumber":503,"author":{"gitId":"domoberzin"},"content":"`RemoveTaskCommand`, `RemoveTaskCommandParser`, and other objects will be discussed.","lastModifiedDate":"2022-10-20"},{"lineNumber":504,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":505,"author":{"gitId":"vvidday"},"content":"#### What is the remove task feature","lastModifiedDate":"2022-10-21"},{"lineNumber":506,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":507,"author":{"gitId":"domoberzin"},"content":"The `remove` task features allows users to remove a task/deadline that they have taken or mistakenly inputted into","lastModifiedDate":"2022-10-20"},{"lineNumber":508,"author":{"gitId":"domoberzin"},"content":"`TaskList`.","lastModifiedDate":"2022-10-20"},{"lineNumber":509,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":510,"author":{"gitId":"domoberzin"},"content":"Removal of a `Task` would result in the reduction of the task count of the `Module` with the module code the task","lastModifiedDate":"2022-10-20"},{"lineNumber":511,"author":{"gitId":"domoberzin"},"content":"is associated with.","lastModifiedDate":"2022-10-20"},{"lineNumber":512,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":513,"author":{"gitId":"vvidday"},"content":"#### Current implementation","lastModifiedDate":"2022-10-21"},{"lineNumber":514,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":515,"author":{"gitId":"domoberzin"},"content":"The diagram below showcases the path execution for when removing a task","lastModifiedDate":"2022-10-20"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":517,"author":{"gitId":"domoberzin"},"content":"\u003cimg src\u003d\"images/TaskPUMLs/RemoveTask/TaskRemovePathExecution.png\" width\u003d\"800\" /\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":519,"author":{"gitId":"domoberzin"},"content":"The diagram below shows how the remove command work with input `remove -t 1`","lastModifiedDate":"2022-10-20"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":521,"author":{"gitId":"domoberzin"},"content":"\u003cimg src\u003d\"images/TaskPUMLs/RemoveTask/TaskRemoveSequenceDiagram.png\" width\u003d\"1200\" /\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":523,"author":{"gitId":"domoberzin"},"content":"The arguments are first parsed through `ModtrektParser` to identify the command word. The command word will help","lastModifiedDate":"2022-10-20"},{"lineNumber":524,"author":{"gitId":"domoberzin"},"content":"identify the type of `Parser` needed to parse the rest of the arguments. In this case it is `RemoveTaskCommandParser`. After","lastModifiedDate":"2022-10-20"},{"lineNumber":525,"author":{"gitId":"domoberzin"},"content":"obtaining the index, it would be used to instantiate a `RemoveTaskCommand`. When the `RemoveTaskCommand` is executed, it would","lastModifiedDate":"2022-10-20"},{"lineNumber":526,"author":{"gitId":"domoberzin"},"content":"first obtain the `Task` using the index. Then it would remove the `Task` from the `TaskList`. Using the saved","lastModifiedDate":"2022-10-20"},{"lineNumber":527,"author":{"gitId":"domoberzin"},"content":"`Task` it would then reduce the task count of the `Module` whose code is equal to that of the removed `Task`.","lastModifiedDate":"2022-10-20"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":529,"author":{"gitId":"vvidday"},"content":"### Edit Task","lastModifiedDate":"2022-10-21"},{"lineNumber":530,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":531,"author":{"gitId":"domoberzin"},"content":"In this section, the functionality of `edit` task feature, expected execution path, and the interactions between the","lastModifiedDate":"2022-10-21"},{"lineNumber":532,"author":{"gitId":"domoberzin"},"content":"`EditTaskCommand`, `EditTaskCommandParser`, and other objects will be discussed.","lastModifiedDate":"2022-10-21"},{"lineNumber":533,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":534,"author":{"gitId":"vvidday"},"content":"#### What is the edit task feature","lastModifiedDate":"2022-10-21"},{"lineNumber":535,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":536,"author":{"gitId":"domoberzin"},"content":"The `edit` task features allows users to edit a task/deadline that they have erroneously added.","lastModifiedDate":"2022-10-21"},{"lineNumber":537,"author":{"gitId":"domoberzin"},"content":"This allows them to update details of the task, such as the due date, description and module code.","lastModifiedDate":"2022-10-21"},{"lineNumber":538,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":539,"author":{"gitId":"domoberzin"},"content":"Editing a task has no effect on the task count of a module, as it is a replacement of an existing task.","lastModifiedDate":"2022-10-21"},{"lineNumber":540,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":541,"author":{"gitId":"vvidday"},"content":"#### Design considerations","lastModifiedDate":"2022-10-21"},{"lineNumber":542,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":543,"author":{"gitId":"domoberzin"},"content":"**Aspect 1: Whether editing tasks should be allowed:**","lastModifiedDate":"2022-10-21"},{"lineNumber":544,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":545,"author":{"gitId":"domoberzin"},"content":"* **Alternative 1 (current choice):** Allow editing of tasks.","lastModifiedDate":"2022-10-21"},{"lineNumber":546,"author":{"gitId":"domoberzin"},"content":"  * Pros: Allows users to change partial details in the event of a small error.","lastModifiedDate":"2022-10-21"},{"lineNumber":547,"author":{"gitId":"domoberzin"},"content":"  * Cons: Have to parse a varying amount of optional arguments.","lastModifiedDate":"2022-10-21"},{"lineNumber":548,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":549,"author":{"gitId":"domoberzin"},"content":"* **Alternative 2:** No edit command, user would have to delete and re-add their task.","lastModifiedDate":"2022-10-21"},{"lineNumber":550,"author":{"gitId":"domoberzin"},"content":"  * Pros: Convenient for development, less bug-prone.","lastModifiedDate":"2022-10-21"},{"lineNumber":551,"author":{"gitId":"domoberzin"},"content":"  * Cons: Inconvenient and troublesome for the user.","lastModifiedDate":"2022-10-21"},{"lineNumber":552,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":553,"author":{"gitId":"domoberzin"},"content":"We decided to go with the alternative 1 to give our users the best experience possible.","lastModifiedDate":"2022-10-21"},{"lineNumber":554,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":555,"author":{"gitId":"vvidday"},"content":"#### Current implementation","lastModifiedDate":"2022-10-21"},{"lineNumber":556,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":557,"author":{"gitId":"domoberzin"},"content":"The diagram below showcases the path execution for when edit a task","lastModifiedDate":"2022-10-21"},{"lineNumber":558,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":559,"author":{"gitId":"domoberzin"},"content":"\u003cimg src\u003d\"images/TaskPUMLs/EditTask/TaskEditPathExecution.png\" width\u003d\"800\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":560,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":561,"author":{"gitId":"domoberzin"},"content":"The diagram below shows how the remove command work with input `edit -t 1 -c CS2103T -ds Assignmet 2`","lastModifiedDate":"2022-10-21"},{"lineNumber":562,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":563,"author":{"gitId":"domoberzin"},"content":"Note that the sequence diagram has been kept simple, as the logic flow for `addTask(t)` and","lastModifiedDate":"2022-10-21"},{"lineNumber":564,"author":{"gitId":"domoberzin"},"content":"`removeTask(t)` have been covered in greater detail in the earlier diagrams.","lastModifiedDate":"2022-10-21"},{"lineNumber":565,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":566,"author":{"gitId":"domoberzin"},"content":"\u003cimg src\u003d\"images/TaskPUMLs/EditTask/TaskEditSequenceDiagram.png\" width\u003d\"1200\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":567,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":568,"author":{"gitId":"domoberzin"},"content":"The arguments are first parsed through `ModtrektParser` to identify the command word. The command word will help","lastModifiedDate":"2022-10-21"},{"lineNumber":569,"author":{"gitId":"domoberzin"},"content":"identify the type of `Parser` needed to parse the rest of the arguments. In this case it is `EditTaskCommandParser`. After","lastModifiedDate":"2022-10-21"},{"lineNumber":570,"author":{"gitId":"domoberzin"},"content":"obtaining the index, it would be used to instantiate a `EditTaskCommand`. When the `EditTaskCommand` is executed, it would","lastModifiedDate":"2022-10-21"},{"lineNumber":571,"author":{"gitId":"domoberzin"},"content":"first obtain the `Task` using the index. Then it would remove the `Task` from the `TaskList`. It would also create a new Task","lastModifiedDate":"2022-10-21"},{"lineNumber":572,"author":{"gitId":"domoberzin"},"content":"with the information specified by the user.  The `TaskList` is subsequently updated and the user can now see the updated","lastModifiedDate":"2022-10-21"},{"lineNumber":573,"author":{"gitId":"domoberzin"},"content":"task details in the list.","lastModifiedDate":"2022-10-21"},{"lineNumber":574,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":575,"author":{"gitId":"vvidday"},"content":"### Task archival","lastModifiedDate":"2022-10-21"},{"lineNumber":576,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":577,"author":{"gitId":"domoberzin"},"content":"Section by : [Jonathan](https://github.com/jontmy)","lastModifiedDate":"2022-10-22"},{"lineNumber":578,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":579,"author":{"gitId":"jontmy"},"content":"Task archival allows users to selectively hide tasks that they have completed.","lastModifiedDate":"2022-10-20"},{"lineNumber":580,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":581,"author":{"gitId":"jontmy"},"content":"Every task in the task book will be in either the archived or unarchived state.","lastModifiedDate":"2022-10-20"},{"lineNumber":582,"author":{"gitId":"jontmy"},"content":"New tasks will be created in the unarchived state.","lastModifiedDate":"2022-10-20"},{"lineNumber":583,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":584,"author":{"gitId":"jontmy"},"content":"In this section, we will discuss the management of archived/unarchived state, as well as the","lastModifiedDate":"2022-10-20"},{"lineNumber":585,"author":{"gitId":"jontmy"},"content":"interactions between the commands, their parsers, and the UI.","lastModifiedDate":"2022-10-20"},{"lineNumber":586,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":587,"author":{"gitId":"jontmy"},"content":"The relevant commands for this section are:","lastModifiedDate":"2022-10-20"},{"lineNumber":588,"author":{"gitId":"jontmy"},"content":"* **`archive -t \u003ctask index\u003e`**  archives the task visible in the UI with the specified index.","lastModifiedDate":"2022-10-20"},{"lineNumber":589,"author":{"gitId":"jontmy"},"content":"* **`unarchive -t \u003ctask index\u003e`** unarchives the task visible in the UI with the specified index.","lastModifiedDate":"2022-10-20"},{"lineNumber":590,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":591,"author":{"gitId":"vvidday"},"content":"#### Design considerations","lastModifiedDate":"2022-10-21"},{"lineNumber":592,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":593,"author":{"gitId":"jontmy"},"content":"There was an alternative we considered for users to select the task to archive:","lastModifiedDate":"2022-10-20"},{"lineNumber":594,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":595,"author":{"gitId":"jontmy"},"content":"* **Alternative 1:** Using the task name:","lastModifiedDate":"2022-10-20"},{"lineNumber":596,"author":{"gitId":"jontmy"},"content":"    * Pro: Users do not have to search for a task and its index.","lastModifiedDate":"2022-10-20"},{"lineNumber":597,"author":{"gitId":"jontmy"},"content":"    * Pro: Users can archive tasks that aren\u0027t visible in the UI.","lastModifiedDate":"2022-10-20"},{"lineNumber":598,"author":{"gitId":"jontmy"},"content":"    * Con: Users have to type a significant amount to disambiguate tasks by their name.","lastModifiedDate":"2022-10-20"},{"lineNumber":599,"author":{"gitId":"jontmy"},"content":"    * Con: Users have to remember the task names which may be difficult if there are many tasks.","lastModifiedDate":"2022-10-20"},{"lineNumber":600,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":601,"author":{"gitId":"jontmy"},"content":"* **Alternative 2:** Using the task index of the current module (current implementation):","lastModifiedDate":"2022-10-20"},{"lineNumber":602,"author":{"gitId":"jontmy"},"content":"    * Pro: Users can archive tasks by their index easily without much typing.","lastModifiedDate":"2022-10-20"},{"lineNumber":603,"author":{"gitId":"jontmy"},"content":"    * Con: Users now have to use `cd` to change the current module tied to the task they want to archive.","lastModifiedDate":"2022-10-20"},{"lineNumber":604,"author":{"gitId":"jontmy"},"content":"    * Con: Users now have to use `ls` and `ls -A` to view the tasks to archive or unarchive respectively.","lastModifiedDate":"2022-10-20"},{"lineNumber":605,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":606,"author":{"gitId":"jontmy"},"content":"Seeing as we prioritize a CLI, we chose the second option as it would be simpler for users,","lastModifiedDate":"2022-10-20"},{"lineNumber":607,"author":{"gitId":"jontmy"},"content":"even though the `cd` and `ls` commands add a bit of overhead.","lastModifiedDate":"2022-10-20"},{"lineNumber":608,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":609,"author":{"gitId":"vvidday"},"content":"#### Current implementation","lastModifiedDate":"2022-10-21"},{"lineNumber":610,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":611,"author":{"gitId":"jontmy"},"content":"Archival state is handled in the `Task` class via a boolean flag `isArchived`.","lastModifiedDate":"2022-10-20"},{"lineNumber":612,"author":{"gitId":"jontmy"},"content":"Because `Task` is immutable, the methods `Task::archive` and `Task::unarchive` return a new `Task`","lastModifiedDate":"2022-10-20"},{"lineNumber":613,"author":{"gitId":"jontmy"},"content":"with the archival state changed instead of mutating the `isArchived` variable directly.","lastModifiedDate":"2022-10-20"},{"lineNumber":614,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":615,"author":{"gitId":"jontmy"},"content":"The following activity diagram shows the execution and control flow of the `archive` command.","lastModifiedDate":"2022-10-20"},{"lineNumber":616,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":617,"author":{"gitId":"jontmy"},"content":"\u003cimg src\u003d\"images/tasks/ArchivalActivityDiagram.png\" width\u003d\"1000\" /\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":618,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":619,"author":{"gitId":"jontmy"},"content":"Notice how we explicitly prevent an archived task from being archived again. Even though archiving an archived task","lastModifiedDate":"2022-10-20"},{"lineNumber":620,"author":{"gitId":"jontmy"},"content":"is inconsequential from a data perspective (nothing in a `Task` changes other than the creation of a new instance),","lastModifiedDate":"2022-10-20"},{"lineNumber":621,"author":{"gitId":"jontmy"},"content":"it is still a user error that should be handled:","lastModifiedDate":"2022-10-20"},{"lineNumber":622,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":623,"author":{"gitId":"jontmy"},"content":"\u003e Suppose that a user intended to _unarchive_ a task, but accidentally entered the `archive` command instead.","lastModifiedDate":"2022-10-20"},{"lineNumber":624,"author":{"gitId":"jontmy"},"content":"By displaying an error instead of silently accepting the erroneous command, the user is notified and","lastModifiedDate":"2022-10-20"},{"lineNumber":625,"author":{"gitId":"jontmy"},"content":"can enter the correct command next—this results in better UX!","lastModifiedDate":"2022-10-20"},{"lineNumber":626,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":627,"author":{"gitId":"jontmy"},"content":"The classes directly involved in setting the archival state from user input are:","lastModifiedDate":"2022-10-20"},{"lineNumber":628,"author":{"gitId":"jontmy"},"content":"* `ArchiveTaskCommand` and `UnarchiveTaskCommand` which are the commands that when executed, archive and unarchive tasks respectively.","lastModifiedDate":"2022-10-20"},{"lineNumber":629,"author":{"gitId":"jontmy"},"content":"* `ArchiveTaskCommandParser` and `UnarchiveTaskCommandParser` which parse user input for their respective commands.","lastModifiedDate":"2022-10-20"},{"lineNumber":630,"author":{"gitId":"jontmy"},"content":"* `ModtrektParser` which parses the command word and delegates the parsing to the correct parser.","lastModifiedDate":"2022-10-20"},{"lineNumber":631,"author":{"gitId":"jontmy"},"content":"* `LogicManager` which executes the commands.","lastModifiedDate":"2022-10-20"},{"lineNumber":632,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":633,"author":{"gitId":"jontmy"},"content":"For brevity, we omit the diagrams and explanations for task unarchival—it is the direct inverse of archival,","lastModifiedDate":"2022-10-20"},{"lineNumber":634,"author":{"gitId":"jontmy"},"content":"such that the control flow is exactly the same: just replace \"archive\" and its derivatives","lastModifiedDate":"2022-10-20"},{"lineNumber":635,"author":{"gitId":"jontmy"},"content":"with \"unarchive\", and vice versa.","lastModifiedDate":"2022-10-20"},{"lineNumber":636,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":637,"author":{"gitId":"vvidday"},"content":"### Task listing","lastModifiedDate":"2022-10-21"},{"lineNumber":638,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":639,"author":{"gitId":"domoberzin"},"content":"Section by : [Jonathan](https://github.com/jontmy)","lastModifiedDate":"2022-10-22"},{"lineNumber":640,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":641,"author":{"gitId":"jontmy"},"content":"Task listing allows users to view the tasks they have created which belong to a module.","lastModifiedDate":"2022-10-20"},{"lineNumber":642,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":643,"author":{"gitId":"jontmy"},"content":"The relevant commands for this section are:","lastModifiedDate":"2022-10-20"},{"lineNumber":644,"author":{"gitId":"jontmy"},"content":"* **`cd`** sets the current module to view tasks for.","lastModifiedDate":"2022-10-20"},{"lineNumber":645,"author":{"gitId":"jontmy"},"content":"* **`ls`** displays only the unarchived tasks for the current module in the UI.","lastModifiedDate":"2022-10-20"},{"lineNumber":646,"author":{"gitId":"jontmy"},"content":"* **`ls -a`** displays all the tasks for the current module, including the ones archived, in the UI.","lastModifiedDate":"2022-10-20"},{"lineNumber":647,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"vvidday"},"content":"#### Current implementation","lastModifiedDate":"2022-10-21"},{"lineNumber":649,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"jontmy"},"content":"We check for the presence of the `-a` flag to decide whether to display archived tasks.","lastModifiedDate":"2022-10-20"},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"jontmy"},"content":"The predicates defined by `Model.SHOW_ALL_TASKS` and `Model.HIDE_ARCHIVED_TASKS` are used to filter","lastModifiedDate":"2022-10-20"},{"lineNumber":653,"author":{"gitId":"jontmy"},"content":"the tasks displayed in the UI via the `updateFilteredTaskList` method in the `Model` interface.","lastModifiedDate":"2022-10-20"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"jontmy"},"content":"The sequence diagram below details the interactions between the command, parser, and the model","lastModifiedDate":"2022-10-20"},{"lineNumber":656,"author":{"gitId":"jontmy"},"content":"for the`ls` and `ls -a` commands:","lastModifiedDate":"2022-10-20"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"jontmy"},"content":"\u003cimg src\u003d\"images/tasks/ListingSequenceDiagram.png\" width\u003d\"1000\" /\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":665,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":666,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":667,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":668,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"vvidday"},"content":"* is an undergraduate studying at NUS","lastModifiedDate":"2022-09-25"},{"lineNumber":679,"author":{"gitId":"vvidday"},"content":"* has a need to track their modules","lastModifiedDate":"2022-09-25"},{"lineNumber":680,"author":{"gitId":"vvidday"},"content":"* has a need to track tasks and deadlines from their modules","lastModifiedDate":"2022-09-25"},{"lineNumber":681,"author":{"gitId":"vvidday"},"content":"* prefers desktop apps over other types","lastModifiedDate":"2022-09-25"},{"lineNumber":682,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":684,"author":{"gitId":"vvidday"},"content":"* familiar and reasonably comfortable using CLI apps","lastModifiedDate":"2022-09-25"},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"vvidday"},"content":"**Value proposition**: manage modules and tasks/deadlines for each module faster than a typical GUI driven app","lastModifiedDate":"2022-09-25"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"vvidday"},"content":"| Category         | Priority | As a ...                           | I want to ...                                                                             | So that I can ...                                                 |","lastModifiedDate":"2022-09-25"},{"lineNumber":694,"author":{"gitId":"domoberzin"},"content":"|------------------|----------|------------------------------------|-------------------------------------------------------------------------------------------|-------------------------------------------------------------------|","lastModifiedDate":"2022-10-19"},{"lineNumber":695,"author":{"gitId":"vvidday"},"content":"| Onboarding       | `***`    | first time user learning the app   | see the basic commands in the welcome message                                             | start adding modules and tasks immediately                        |","lastModifiedDate":"2022-09-25"},{"lineNumber":696,"author":{"gitId":"domoberzin"},"content":"| Onboarding       | `***`    | first time user exploring the app  | see the app working with sample data                                                      | see how the app looks in action                                   |","lastModifiedDate":"2022-10-19"},{"lineNumber":697,"author":{"gitId":"domoberzin"},"content":"| UI/UX            | `**`     | impatient user                     | utilise commands to quickly be reminded of deadlines                                      | save time locating my deadlines                                   |","lastModifiedDate":"2022-10-19"},{"lineNumber":698,"author":{"gitId":"domoberzin"},"content":"| UI/UX            | `***`    | advanced user                      | use shortcuts or shorthand commands to add tasks and deadlines                            | accomplish these tasks in a shorter amount of time                |","lastModifiedDate":"2022-10-19"},{"lineNumber":699,"author":{"gitId":"domoberzin"},"content":"| UI/UX            | `***`    | experienced user                   | quickly add and filter out all my tasks and deadlines using the commands instead of a GUI | these actions are much faster                                     |","lastModifiedDate":"2022-10-19"},{"lineNumber":700,"author":{"gitId":"domoberzin"},"content":"| UI/UX            | `***`    | novice user                        | use a help command to get a summary of the available commands and how to use them         | learn which commands to use                                       |","lastModifiedDate":"2022-10-19"},{"lineNumber":701,"author":{"gitId":"domoberzin"},"content":"| UI/UX            | `***`    | beginner user                      | see clear and complete error messages when I provide invalid input                        | correct my mistakes                                               |","lastModifiedDate":"2022-10-19"},{"lineNumber":702,"author":{"gitId":"domoberzin"},"content":"| Module Planning  | `***`    | NUS freshie                        | add/mark the modules that I plan to take                                                  | organize my study plan                                            |","lastModifiedDate":"2022-10-19"},{"lineNumber":703,"author":{"gitId":"vvidday"},"content":"| Module Planning  | `***`    | user                               | delete the modules that I added                                                           | fix my mistakes if needed                                         |","lastModifiedDate":"2022-09-25"},{"lineNumber":704,"author":{"gitId":"domoberzin"},"content":"| Tasks / Deadline | `**`     | student overwhelmed by assignments | sort my deadlines                                                                         | prioritise the ones that are due the soonest                      |","lastModifiedDate":"2022-10-19"},{"lineNumber":705,"author":{"gitId":"domoberzin"},"content":"| Tasks / Deadline | `**`     | student overwhelmed by tasks       | assign priority ratings to various tasks                                                  | prioritise the ones that I deem are more important                |","lastModifiedDate":"2022-10-19"},{"lineNumber":706,"author":{"gitId":"domoberzin"},"content":"| Tasks / Deadline | `**`     | student overwhelmed by tasks       | sort tasks via priority ratings                                                           | figure out which ones to work on first                            |","lastModifiedDate":"2022-10-19"},{"lineNumber":707,"author":{"gitId":"domoberzin"},"content":"| Tasks / Deadline | `***`    | second time user                   | add a task                                                                                | so that I can keep track of the things I need to do for a module  |","lastModifiedDate":"2022-10-19"},{"lineNumber":708,"author":{"gitId":"domoberzin"},"content":"| Tasks / Deadline | `***`    | second time user                   | add a deadline                                                                            | so that I can keep track of tasks with a due date                 |","lastModifiedDate":"2022-10-19"},{"lineNumber":709,"author":{"gitId":"domoberzin"},"content":"| Tasks / Deadline | `***`    | user                               | choose which modules to add my tasks and deadlines to                                     | organise my tasks and deadlines according to modules              |","lastModifiedDate":"2022-10-19"},{"lineNumber":710,"author":{"gitId":"domoberzin"},"content":"| Tasks / Deadline | `***`    | user                               | view my tasks and deadlines per module                                                    | see my tasks and deadlines in an organised manner                 |","lastModifiedDate":"2022-10-19"},{"lineNumber":711,"author":{"gitId":"domoberzin"},"content":"| Tasks / Deadline | `***`    | user                               | change the module of a specific task or deadline                                          | move my tasks and deadlines around if I make a mistake            |","lastModifiedDate":"2022-10-19"},{"lineNumber":712,"author":{"gitId":"domoberzin"},"content":"| Tasks / Deadline | `***`    | clumsy user                        | delete tasks and deadlines                                                                | ensure my homepage is not cluttered with unused items             |","lastModifiedDate":"2022-10-19"},{"lineNumber":713,"author":{"gitId":"domoberzin"},"content":"| Tasks / Deadline | `**`     | novice user                        | archive tasks and deadlines that are completed                                            | refer to them in future                                           |","lastModifiedDate":"2022-10-19"},{"lineNumber":714,"author":{"gitId":"domoberzin"},"content":"| Tasks / Deadline | `***`    | novice user                        | change a deadline that I had created                                                      | adjust the due date accordingly in the event the deadline changes |","lastModifiedDate":"2022-10-19"},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":717,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"HoJunHao2000"},"content":"(For all use cases below, the **System** is the `ModtRekt` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-25"},{"lineNumber":719,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"HoJunHao2000"},"content":"**Use case: View all active tasks and deadlines**","lastModifiedDate":"2022-09-25"},{"lineNumber":721,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"HoJunHao2000"},"content":"1. User requests to view all active tasks and deadlines","lastModifiedDate":"2022-09-25"},{"lineNumber":725,"author":{"gitId":"HoJunHao2000"},"content":"2. ModtRekt shows all active tasks and deadlines, categorised into modules","lastModifiedDate":"2022-09-25"},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":731,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":732,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"domoberzin"},"content":"  * 2a.1 ModtRekt displays an empty list.","lastModifiedDate":"2022-10-19"},{"lineNumber":734,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":735,"author":{"gitId":"HoJunHao2000"},"content":"    Use case ends","lastModifiedDate":"2022-09-25"},{"lineNumber":736,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":737,"author":{"gitId":"HoJunHao2000"},"content":"**Use case: Add a task**","lastModifiedDate":"2022-09-25"},{"lineNumber":738,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":739,"author":{"gitId":"HoJunHao2000"},"content":"**MSS**","lastModifiedDate":"2022-09-25"},{"lineNumber":740,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":741,"author":{"gitId":"domoberzin"},"content":"1. User requests to add a task and specifies the module for the task","lastModifiedDate":"2022-10-19"},{"lineNumber":742,"author":{"gitId":"domoberzin"},"content":"2. ModtRekt adds the task","lastModifiedDate":"2022-10-19"},{"lineNumber":743,"author":{"gitId":"domoberzin"},"content":"3. Task count of the module is updated, and the task is added to the displayed list","lastModifiedDate":"2022-10-19"},{"lineNumber":744,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":745,"author":{"gitId":"HoJunHao2000"},"content":"    Use case ends.","lastModifiedDate":"2022-09-25"},{"lineNumber":746,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":747,"author":{"gitId":"HoJunHao2000"},"content":"**Extensions**","lastModifiedDate":"2022-09-25"},{"lineNumber":748,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":749,"author":{"gitId":"domoberzin"},"content":"* 2a. The module list is empty","lastModifiedDate":"2022-10-19"},{"lineNumber":750,"author":{"gitId":"domoberzin"},"content":"  * 2a1. ModtRekt shows an error message when the command is entered","lastModifiedDate":"2022-10-19"},{"lineNumber":751,"author":{"gitId":"HoJunHao2000"},"content":"  ","lastModifiedDate":"2022-09-25"},{"lineNumber":752,"author":{"gitId":"HoJunHao2000"},"content":"     Use case ends.","lastModifiedDate":"2022-09-25"},{"lineNumber":753,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":754,"author":{"gitId":"domoberzin"},"content":"* 3a. The given module code is invalid","lastModifiedDate":"2022-10-19"},{"lineNumber":755,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":756,"author":{"gitId":"domoberzin"},"content":"    * 3a1. ModtRekt shows an error message when the command is entered","lastModifiedDate":"2022-10-19"},{"lineNumber":757,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":758,"author":{"gitId":"domoberzin"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-19"},{"lineNumber":759,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":760,"author":{"gitId":"HoJunHao2000"},"content":"**Use case: Add a deadline**","lastModifiedDate":"2022-09-25"},{"lineNumber":761,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":762,"author":{"gitId":"HoJunHao2000"},"content":"**MSS**","lastModifiedDate":"2022-09-25"},{"lineNumber":763,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":764,"author":{"gitId":"domoberzin"},"content":"1. User requests to add a deadline and specifies the module for the deadline","lastModifiedDate":"2022-10-19"},{"lineNumber":765,"author":{"gitId":"domoberzin"},"content":"2. ModtRekt adds the deadline","lastModifiedDate":"2022-10-19"},{"lineNumber":766,"author":{"gitId":"domoberzin"},"content":"3. Task count of the module is updated, and the deadline is added to the displayed list","lastModifiedDate":"2022-10-19"},{"lineNumber":767,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":768,"author":{"gitId":"HoJunHao2000"},"content":"    Use case ends.","lastModifiedDate":"2022-09-25"},{"lineNumber":769,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":770,"author":{"gitId":"HoJunHao2000"},"content":"**Extensions**","lastModifiedDate":"2022-09-25"},{"lineNumber":771,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":772,"author":{"gitId":"domoberzin"},"content":"* 2a. The module list is empty","lastModifiedDate":"2022-10-19"},{"lineNumber":773,"author":{"gitId":"domoberzin"},"content":"    * 2a1. ModtRekt shows an error message when the command is entered","lastModifiedDate":"2022-10-19"},{"lineNumber":774,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":775,"author":{"gitId":"HoJunHao2000"},"content":"      Use case ends.","lastModifiedDate":"2022-09-25"},{"lineNumber":776,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":777,"author":{"gitId":"domoberzin"},"content":"* 3a. The given module code is invalid","lastModifiedDate":"2022-10-19"},{"lineNumber":778,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":779,"author":{"gitId":"domoberzin"},"content":"    * 3a1. ModtRekt shows an error message when the command is entered","lastModifiedDate":"2022-10-19"},{"lineNumber":780,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":781,"author":{"gitId":"domoberzin"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2022-10-19"},{"lineNumber":782,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":783,"author":{"gitId":"HoJunHao2000"},"content":"**Use case: Remove a task**","lastModifiedDate":"2022-09-25"},{"lineNumber":784,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":785,"author":{"gitId":"HoJunHao2000"},"content":"**MSS**","lastModifiedDate":"2022-09-25"},{"lineNumber":786,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":787,"author":{"gitId":"HoJunHao2000"},"content":"1. User requests to remove a task","lastModifiedDate":"2022-09-25"},{"lineNumber":788,"author":{"gitId":"domoberzin"},"content":"2. ModtRekt shows a list of tasks","lastModifiedDate":"2022-10-19"},{"lineNumber":789,"author":{"gitId":"domoberzin"},"content":"3. User requests to remove a specific task via index","lastModifiedDate":"2022-10-19"},{"lineNumber":790,"author":{"gitId":"domoberzin"},"content":"4. ModtRekt removes the task","lastModifiedDate":"2022-10-19"},{"lineNumber":791,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":792,"author":{"gitId":"HoJunHao2000"},"content":"    Use case ends.","lastModifiedDate":"2022-09-25"},{"lineNumber":793,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":794,"author":{"gitId":"HoJunHao2000"},"content":"**Extensions**","lastModifiedDate":"2022-09-25"},{"lineNumber":795,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":796,"author":{"gitId":"domoberzin"},"content":"* 2a. The task list is empty.","lastModifiedDate":"2022-10-19"},{"lineNumber":797,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":798,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":799,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":800,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":801,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":802,"author":{"gitId":"HoJunHao2000"},"content":"    * 3a1. ModtRekt shows an error message.","lastModifiedDate":"2022-09-25"},{"lineNumber":803,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":804,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":805,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":806,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":807,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":808,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":809,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":810,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":811,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":812,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":813,"author":{"gitId":"midnightfeverrr"},"content":"2. Should be able to hold up to 100 modules without a noticeable sluggishness in performance (i.e. should take less than 1 second to load)","lastModifiedDate":"2022-09-25"},{"lineNumber":814,"author":{"gitId":"midnightfeverrr"},"content":"3. A user with above 80 wpm typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2022-09-25"},{"lineNumber":815,"author":{"gitId":"midnightfeverrr"},"content":"4. The interface should be user-friendly enough such that a user who has never seen the user guide should be able to use it.","lastModifiedDate":"2022-09-25"},{"lineNumber":816,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":817,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":818,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":819,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":820,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":821,"author":{"gitId":"midnightfeverrr"},"content":"_**Mainstream OS**_","lastModifiedDate":"2022-09-25"},{"lineNumber":822,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":823,"author":{"gitId":"midnightfeverrr"},"content":"Windows, Linux, Unix, OS-X","lastModifiedDate":"2022-09-25"},{"lineNumber":824,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":825,"author":{"gitId":"midnightfeverrr"},"content":"_**Private contact detail**_","lastModifiedDate":"2022-09-25"},{"lineNumber":826,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":827,"author":{"gitId":"midnightfeverrr"},"content":"A contact detail that is not meant to be shared with others","lastModifiedDate":"2022-09-25"},{"lineNumber":828,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":829,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":830,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":831,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":832,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":833,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":834,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":835,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":836,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":837,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":838,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":839,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":840,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":841,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":842,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":843,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":844,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":845,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":846,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":847,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":848,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":849,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":850,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":851,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":852,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":853,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":854,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":855,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":856,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":857,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":858,"author":{"gitId":"domoberzin"},"content":"### Removing a task","lastModifiedDate":"2022-10-19"},{"lineNumber":859,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":860,"author":{"gitId":"domoberzin"},"content":"1. Removing a task while all tasks are being shown","lastModifiedDate":"2022-10-19"},{"lineNumber":861,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":862,"author":{"gitId":"domoberzin"},"content":"    1. Prerequisites: All tasks (archived and active) are shown, and user is not currently cd-ed into a module.","lastModifiedDate":"2022-10-19"},{"lineNumber":863,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":864,"author":{"gitId":"vvidday"},"content":"    1. Test case: `remove -t 1`\u003cbr\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":865,"author":{"gitId":"domoberzin"},"content":"       Expected: First task is deleted from the list. Details of the deleted task shown in the status message.","lastModifiedDate":"2022-10-19"},{"lineNumber":866,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":867,"author":{"gitId":"vvidday"},"content":"    1. Test case: `remove -t 0`\u003cbr\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":868,"author":{"gitId":"domoberzin"},"content":"       Expected: No task is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2022-10-19"},{"lineNumber":869,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":870,"author":{"gitId":"vvidday"},"content":"    1. Other incorrect remove commands to try: `remove`, `remove -t x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":871,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":872,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":873,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":874,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":875,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":876,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":877,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":878,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":879,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":880,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":881,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"vvidday":83,"domoberzin":212,"jontmy":75,"-":308,"midnightfeverrr":87,"HoJunHao2000":116}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"HoJunHao2000"},"content":"   1. Run the `Main` and try a few commands.","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"HoJunHao2000"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [ModuleList’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"-":53,"HoJunHao2000":2}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   e.g. `seedu.address.commons.StringUtilTest`","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"HoJunHao2000"},"content":"   e.g. `StorageManagerTest`","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"HoJunHao2000"},"content":"   e.g. `LogicManagerTest`","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"-":34,"HoJunHao2000":2}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"# ModtRekt User Guide","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":"ModtRekt is a **desktop app for managing modules and tasks, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":"# Table of Contents","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"- [UI Mockups](#ui-mockups)","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"domoberzin"},"content":"- [Features](#features)","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"## UI Mockups","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"## Quick Start","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"1. Ensure you have Java 11 or above installed on your computer.","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"1. Download the latest `ModtRekt.jar` from [here](https://github.com/AY2223S1-CS2103T-W10-4/tp/releases).","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"1. Copy the file to the folder you want to use as the home folder for your module tracker.","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"1. Double-click the file to start the app. The GUI similar to the screenshot above should appear in a few seconds. Note how the app contains some sample data.","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"1. Type the command in the command box and press `Enter` to execute it. e.g. typing `help` and pressing `Enter` will open the help window.","lastModifiedDate":"2022-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"1.  Here are some example commands you can try:","lastModifiedDate":"2022-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"    1. `list`: Lists all the active tasks.","lastModifiedDate":"2022-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"    1. `add module CS2103T`: Adds a module called CS2103T to the module tracker.","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"    1. `cd CS2103T`: Sets the current module page to CS2103T.","lastModifiedDate":"2022-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"    1. `add task ip week 6 -d 16/09/2022`: Adds a task called ip week 6, with a deadline of 16/09/2022, to the module tracker.","lastModifiedDate":"2022-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"    1. `remove task 1`: Removes the first task of CS2103T.","lastModifiedDate":"2022-09-25"},{"lineNumber":44,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"    1. `exit` : Exits the app.","lastModifiedDate":"2022-09-25"},{"lineNumber":46,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":47,"author":{"gitId":"jontmy"},"content":"    1. Refer to the Features below for details of each command.","lastModifiedDate":"2022-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"vvidday"},"content":"### General","lastModifiedDate":"2022-09-25"},{"lineNumber":57,"author":{"gitId":"vvidday"},"content":"`help`","lastModifiedDate":"2022-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"vvidday"},"content":"Shows a message which explains the basic commands and links to the user guide.","lastModifiedDate":"2022-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"vvidday"},"content":"### Modules","lastModifiedDate":"2022-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"vvidday"},"content":"### Adding a module: `add module`","lastModifiedDate":"2022-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"vvidday"},"content":"Adds a module to the program.","lastModifiedDate":"2022-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"vvidday"},"content":"Format: `add module \u003cmodule code\u003e`","lastModifiedDate":"2022-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":69,"author":{"gitId":"vvidday"},"content":"Shorthand: `add -m \u003cmodule code\u003e`","lastModifiedDate":"2022-09-25"},{"lineNumber":70,"author":{"gitId":"vvidday"},"content":"- The module code is case insensitive e.g. `cs2103t` will match **CS2103T**","lastModifiedDate":"2022-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"vvidday"},"content":"- `add module CS2103T`","lastModifiedDate":"2022-09-25"},{"lineNumber":74,"author":{"gitId":"vvidday"},"content":"- `add -m CS2103T`","lastModifiedDate":"2022-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"vvidday"},"content":"### Removing a module: `remove module`","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"vvidday"},"content":"Deletes a module from the program.","lastModifiedDate":"2022-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"vvidday"},"content":"Format: `remove module \u003cmodule code\u003e`","lastModifiedDate":"2022-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"vvidday"},"content":"Shorthand: `rm -m \u003cmodule code\u003e`","lastModifiedDate":"2022-09-25"},{"lineNumber":83,"author":{"gitId":"vvidday"},"content":"- The module code is case insensitive e.g. `cs2103t` will match **CS2103T**","lastModifiedDate":"2022-09-25"},{"lineNumber":84,"author":{"gitId":"vvidday"},"content":"- Module code must match an existing module.","lastModifiedDate":"2022-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"vvidday"},"content":"- `remove module CS2103T`","lastModifiedDate":"2022-09-25"},{"lineNumber":88,"author":{"gitId":"vvidday"},"content":"- `rm -m CS2103T`","lastModifiedDate":"2022-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"vvidday"},"content":"### Entering a module: `cd`","lastModifiedDate":"2022-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"vvidday"},"content":"Sets the current module page to the specified module.","lastModifiedDate":"2022-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"vvidday"},"content":"Format: `cd \u003cmodule code\u003e`","lastModifiedDate":"2022-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"vvidday"},"content":"Allows user to view information relating to the specified module.","lastModifiedDate":"2022-09-25"},{"lineNumber":97,"author":{"gitId":"vvidday"},"content":"- Scopes the user’s actions to the specified module.","lastModifiedDate":"2022-09-25"},{"lineNumber":98,"author":{"gitId":"vvidday"},"content":"- The module code is case insensitive e.g. `cs2103t` will match **CS2103T**","lastModifiedDate":"2022-09-25"},{"lineNumber":99,"author":{"gitId":"vvidday"},"content":"- Module code must match an existing module.","lastModifiedDate":"2022-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"vvidday"},"content":"- `cd CS2103T`","lastModifiedDate":"2022-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"vvidday"},"content":"### Listing all modules: `list modules`","lastModifiedDate":"2022-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"vvidday"},"content":"Lists all the modules added by the user.","lastModifiedDate":"2022-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"vvidday"},"content":"Format: `list modules`","lastModifiedDate":"2022-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"vvidday"},"content":"Shorthand: `ls -m`","lastModifiedDate":"2022-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"vvidday"},"content":"- `list modules`","lastModifiedDate":"2022-09-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"HoJunHao2000"},"content":"### Tasks","lastModifiedDate":"2022-09-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":117,"author":{"gitId":"HoJunHao2000"},"content":"### Adding a task: `add task`","lastModifiedDate":"2022-09-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":119,"author":{"gitId":"HoJunHao2000"},"content":"Adds a task under specific module.","lastModifiedDate":"2022-09-26"},{"lineNumber":120,"author":{"gitId":"HoJunHao2000"},"content":"- User must be within a module page.","lastModifiedDate":"2022-09-26"},{"lineNumber":121,"author":{"gitId":"HoJunHao2000"},"content":"- User may optionally include a deadline for the task by specifying the -d flag along with the deadline in DD/MM/YYYY format.","lastModifiedDate":"2022-09-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":123,"author":{"gitId":"HoJunHao2000"},"content":"Format: `add task \u003ctask\u003e [-d \u003cdeadline\u003e]`","lastModifiedDate":"2022-09-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":125,"author":{"gitId":"HoJunHao2000"},"content":"Shorthand: `add -t \u003ctask\u003e [-d \u003cdeadline\u003e]`","lastModifiedDate":"2022-09-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-09-26"},{"lineNumber":128,"author":{"gitId":"HoJunHao2000"},"content":"- `add task do ip tasks -d 15/09/2022`","lastModifiedDate":"2022-09-26"},{"lineNumber":129,"author":{"gitId":"HoJunHao2000"},"content":"- `add -t do ip tasks`","lastModifiedDate":"2022-09-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":131,"author":{"gitId":"HoJunHao2000"},"content":"### Removing a task: `remove task`","lastModifiedDate":"2022-09-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":133,"author":{"gitId":"HoJunHao2000"},"content":"Removes a task under a specific module.","lastModifiedDate":"2022-09-26"},{"lineNumber":134,"author":{"gitId":"HoJunHao2000"},"content":"- User must be within a module page.","lastModifiedDate":"2022-09-26"},{"lineNumber":135,"author":{"gitId":"HoJunHao2000"},"content":"- Index must be a valid integer. Users may use the list tasks command to find the indexes of their tasks.","lastModifiedDate":"2022-09-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":137,"author":{"gitId":"HoJunHao2000"},"content":"Format: `remove task \u003ctask index\u003e`","lastModifiedDate":"2022-09-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":139,"author":{"gitId":"HoJunHao2000"},"content":"Shorthand: `rm -t \u003ctask index\u003e`","lastModifiedDate":"2022-09-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-09-26"},{"lineNumber":142,"author":{"gitId":"HoJunHao2000"},"content":"- `remove task 1`","lastModifiedDate":"2022-09-26"},{"lineNumber":143,"author":{"gitId":"HoJunHao2000"},"content":"- `rm -t 1`","lastModifiedDate":"2022-09-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":145,"author":{"gitId":"HoJunHao2000"},"content":"### Listing all tasks: `list tasks`","lastModifiedDate":"2022-09-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":147,"author":{"gitId":"HoJunHao2000"},"content":"Lists all tasks under either all modules or a specific module.","lastModifiedDate":"2022-09-26"},{"lineNumber":148,"author":{"gitId":"HoJunHao2000"},"content":"- Module code is inferred from the current module page if the user is currently within a module page.","lastModifiedDate":"2022-09-26"},{"lineNumber":149,"author":{"gitId":"HoJunHao2000"},"content":"- The module code is case insensitive e.g. cs2103t will match CS2103T","lastModifiedDate":"2022-09-26"},{"lineNumber":150,"author":{"gitId":"HoJunHao2000"},"content":"- Module code must match an existing module.","lastModifiedDate":"2022-09-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":153,"author":{"gitId":"HoJunHao2000"},"content":"Format: `list tasks [-m \u003cmodule code\u003e]`","lastModifiedDate":"2022-09-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":155,"author":{"gitId":"HoJunHao2000"},"content":"Shorthand: `ls -t [-m \u003cmodule code\u003e]`","lastModifiedDate":"2022-09-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":157,"author":{"gitId":"HoJunHao2000"},"content":"Examples:","lastModifiedDate":"2022-09-26"},{"lineNumber":158,"author":{"gitId":"HoJunHao2000"},"content":"- `list tasks -m cs2103t`","lastModifiedDate":"2022-09-26"},{"lineNumber":159,"author":{"gitId":"HoJunHao2000"},"content":"- `ls -t -m CS2103T`","lastModifiedDate":"2022-09-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"HoJunHao2000"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous ModuleList home folder.","lastModifiedDate":"2022-10-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"midnightfeverrr"},"content":"## Command summary","lastModifiedDate":"2022-09-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":172,"author":{"gitId":"midnightfeverrr"},"content":"```\u003c \u003e``` for mandatory arguments","lastModifiedDate":"2022-09-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"midnightfeverrr"},"content":"```[ ]``` for optional arguments","lastModifiedDate":"2022-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"midnightfeverrr"},"content":"### General","lastModifiedDate":"2022-09-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"midnightfeverrr"},"content":"|       Action        | Format          | Examples        |","lastModifiedDate":"2022-09-25"},{"lineNumber":179,"author":{"gitId":"midnightfeverrr"},"content":"|:-------------------:|-----------------|-----------------|","lastModifiedDate":"2022-09-25"},{"lineNumber":180,"author":{"gitId":"midnightfeverrr"},"content":"| **List Everything** | `list`\u003cbr/\u003e`ls` | `list`\u003cbr/\u003e`ls` |","lastModifiedDate":"2022-09-25"},{"lineNumber":181,"author":{"gitId":"midnightfeverrr"},"content":"|      **Help**       | `help`\u003cbr/\u003e`h`  | `help`\u003cbr/\u003e`h`  |","lastModifiedDate":"2022-09-25"},{"lineNumber":182,"author":{"gitId":"midnightfeverrr"},"content":"|      **Exit**       | `exit`          | `exit`          |","lastModifiedDate":"2022-09-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"midnightfeverrr"},"content":"### Modules","lastModifiedDate":"2022-09-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"midnightfeverrr"},"content":"|        Action        | Format                                              | Examples                                    |","lastModifiedDate":"2022-09-25"},{"lineNumber":187,"author":{"gitId":"midnightfeverrr"},"content":"|:--------------------:|-----------------------------------------------------|---------------------------------------------|","lastModifiedDate":"2022-09-25"},{"lineNumber":188,"author":{"gitId":"midnightfeverrr"},"content":"|   **Add a Module**   | `add module \u003cmod. code\u003e`\u003cbr/\u003e`add -m \u003cmod. code\u003e`   | `add module CS2103T`\u003cbr/\u003e`add -m CS2103T`   |","lastModifiedDate":"2022-09-25"},{"lineNumber":189,"author":{"gitId":"midnightfeverrr"},"content":"| **Remove a Module**  | `remove module \u003cmod. code\u003e`\u003cbr/\u003e`rm -m \u003cmod, code\u003e` | `remove module CS2103T`\u003cbr/\u003e`rm -m cS2103t` |","lastModifiedDate":"2022-09-25"},{"lineNumber":190,"author":{"gitId":"midnightfeverrr"},"content":"|  **Go to a Module**  | `cd \u003cmod, code\u003e`                                    | `cd CS2103T`                                |","lastModifiedDate":"2022-09-25"},{"lineNumber":191,"author":{"gitId":"midnightfeverrr"},"content":"| **List All Modules** | `list modules` \u003cbr/\u003e `ls -m`                        | `list modules`\u003cbr/\u003e`ls -m`                  |","lastModifiedDate":"2022-09-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"midnightfeverrr"},"content":"### Tasks","lastModifiedDate":"2022-09-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"midnightfeverrr"},"content":"|       Action       | Format                                                                              | Examples                                                                          |","lastModifiedDate":"2022-09-25"},{"lineNumber":196,"author":{"gitId":"midnightfeverrr"},"content":"|:------------------:|-------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------|","lastModifiedDate":"2022-09-25"},{"lineNumber":197,"author":{"gitId":"midnightfeverrr"},"content":"|   **Add a Task**   | `add task \u003cdescription\u003e [-d \u003cdeadline\u003e]`\u003cbr/\u003e`add -t \u003cdescription\u003e [-d \u003cdeadline\u003e]` | `add task do ip tasks deadline 15/09/2022`\u003cbr/\u003e`add -t do ip tasks -d 15/09/2022` |","lastModifiedDate":"2022-09-25"},{"lineNumber":198,"author":{"gitId":"midnightfeverrr"},"content":"| **Remove a Task**  | `remove task \u003cindex\u003e `\u003cbr/\u003e`rm -t \u003cindex\u003e`                                          | `remove task 1`\u003cbr/\u003e`rm -t 1`                                                     |","lastModifiedDate":"2022-09-25"},{"lineNumber":199,"author":{"gitId":"midnightfeverrr"},"content":"| **List All Tasks** | `list tasks` \u003cbr/\u003e `ls -t`                                                          | `list tasks`\u003cbr/\u003e`ls -t`                                                          |","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"vvidday":32,"domoberzin":10,"jontmy":17,"-":90,"midnightfeverrr":22,"HoJunHao2000":28}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"jontmy"},"content":"    content: \"ModtRekt\";","lastModifiedDate":"2022-09-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"jontmy":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":"user -[USER_COLOR]\u003e ui : \"delete -m 1\"","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"domoberzin"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete -m 1\")","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteModule(m)","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"domoberzin"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveModuleList(moduleList)","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"domoberzin":4,"-":34}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":"ModuleList *-right-\u003e \"1\" UniqueModuleList","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"UniqueModuleList -right-\u003e Module","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"Module *--\u003e ModCode","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"Module *--\u003e ModName","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"domoberzin"},"content":"Module *--\u003e ModCredit","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"Module *--\u003e ModTaskCount","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"domoberzin":4,"-":9,"HoJunHao2000":2}},{"path":"docs/diagrams/CdActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"@startuml","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"start","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":":User executes the command to change the current module;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":":ModtRekt parses the command looking for the argument;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"if () then ([argument is `..`])","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"    if () then ([current module is already null])","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"        :display no current module error message;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"    else ([else])","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"        :set current module to null;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"        :remove existing filter on module and task list;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"    endif","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"else ([else])","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"    if () then ([argument is a valid module code])","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"        :set current module to specified module code;","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"        :filter module and task list according to specified module code;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"    else ([else])","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":"        :display invalid argument error message;","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"    endif","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"endif","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"stop","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"@enduml","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"vvidday":25}},{"path":"docs/diagrams/CdSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"@startuml","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"!include ./style.puml","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"\u003cstyle\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"\u003c/style\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"participant \":ModtrektParser\" as ModtrektParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"participant \":CdCommandParser\" as CdCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"participant \":CdModuleCommand\" as CdModuleCommand LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"participant \":ModCode\" as ModCode MODEL_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"[-\u003e LogicManager : execute(\"cd CS2106\")","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"activate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":"LogicManager -\u003e ModtrektParser : parseCommand(\"cd CS2106\")","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"activate ModtrektParser","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"create CdCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"ModtrektParser -\u003e CdCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"activate CdCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"CdCommandParser --\u003e ModtrektParser","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"deactivate CdCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"vvidday"},"content":"ModtrektParser -\u003e CdCommandParser : parse(\"CS2106\")","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"vvidday"},"content":"activate CdCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"vvidday"},"content":"create ModCode","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"vvidday"},"content":"CdCommandParser -\u003e ModCode","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"vvidday"},"content":"activate ModCode","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"vvidday"},"content":"ModCode --\u003e CdCommandParser : moduleCode","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"vvidday"},"content":"deactivate ModCode","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"vvidday"},"content":"create CdModuleCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"vvidday"},"content":"CdCommandParser -\u003e CdModuleCommand : CdModuleCommand(moduleCode)","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"vvidday"},"content":"activate CdModuleCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"vvidday"},"content":"CdModuleCommand --\u003e CdCommandParser : command","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"vvidday"},"content":"deactivate CdModuleCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"vvidday"},"content":"CdCommandParser --\u003e ModtrektParser : command","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"vvidday"},"content":"deactivate CdCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"vvidday"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"vvidday"},"content":"CdCommandParser -[hidden]-\u003e ModtrektParser","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"vvidday"},"content":"destroy CdCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"vvidday"},"content":"ModtrektParser --\u003e LogicManager : command","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"vvidday"},"content":"deactivate ModtrektParser","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"vvidday"},"content":"LogicManager -\u003e CdModuleCommand : execute()","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"vvidday"},"content":"activate CdModuleCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"vvidday"},"content":"CdModuleCommand -\u003e Model : setCurrentModule(moduleCode)","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"vvidday"},"content":"activate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"vvidday"},"content":"Model -\u003e Model : updateFilteredModuleList(modulePredicate)","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"vvidday"},"content":"activate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"vvidday"},"content":"Model --\u003e Model","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"vvidday"},"content":"deactivate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"vvidday"},"content":"Model -\u003e Model : updateFilteredTaskList(taskPredicate)","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"vvidday"},"content":"activate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"vvidday"},"content":"Model --\u003e Model","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"vvidday"},"content":"deactivate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"vvidday"},"content":"Model --\u003e CdModuleCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"vvidday"},"content":"deactivate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"vvidday"},"content":"create CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"vvidday"},"content":"CdModuleCommand -\u003e CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"vvidday"},"content":"activate CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"vvidday"},"content":"CommandResult --\u003e CdModuleCommand : result","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"vvidday"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"vvidday"},"content":"CdModuleCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"vvidday"},"content":"deactivate CdModuleCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"vvidday"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"vvidday"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"vvidday"},"content":"@enduml","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"vvidday":89}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"if () then ([command commits ModuleList])","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"    :Save ModuleList to","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"    ModuleListStateList;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"domoberzin":1,"-":12,"HoJunHao2000":2}},{"path":"docs/diagrams/ComponentManagers.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"Class ModuleManager","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"LogicManager .up.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"HoJunHao2000"},"content":"ModuleManager .up.|\u003e Model","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"-":29,"HoJunHao2000":2}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"participant \":ModtRektParser\" as ModtRektParser LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"participant \":RemoveCommandParser\" as RemoveCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":"participant \"d:RemoveCommand\" as RemoveCommand LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"[-\u003e LogicManager : execute(\"delete -m 1\")","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":"LogicManager -\u003e ModtRektParser : parseCommand(\"delete -m 1\")","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"domoberzin"},"content":"activate ModtRektParser","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"domoberzin"},"content":"create RemoveCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"domoberzin"},"content":"ModtRektParser -\u003e RemoveCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"domoberzin"},"content":"activate RemoveCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"domoberzin"},"content":"RemoveCommandParser --\u003e ModtRektParser","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"domoberzin"},"content":"deactivate RemoveCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"domoberzin"},"content":"ModtRektParser -\u003e RemoveCommandParser : parse(\"1\")","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"domoberzin"},"content":"activate RemoveCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"domoberzin"},"content":"create RemoveCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"domoberzin"},"content":"RemoveCommandParser -\u003e RemoveCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"domoberzin"},"content":"activate RemoveCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"domoberzin"},"content":"RemoveCommand --\u003e RemoveCommandParser : d","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"domoberzin"},"content":"deactivate RemoveCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"domoberzin"},"content":"RemoveCommandParser --\u003e ModtRektParser : d","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"domoberzin"},"content":"deactivate RemoveCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"domoberzin"},"content":"RemoveCommandParser -[hidden]-\u003e ModtRektParser","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"domoberzin"},"content":"destroy RemoveCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"domoberzin"},"content":"ModtRektParser --\u003e LogicManager : d","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"domoberzin"},"content":"deactivate ModtRektParser","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"domoberzin"},"content":"LogicManager -\u003e RemoveCommand : execute()","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"domoberzin"},"content":"activate RemoveCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"domoberzin"},"content":"RemoveCommand -\u003e Model : deleteModule(1)","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"domoberzin"},"content":"Model --\u003e RemoveCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"domoberzin"},"content":"RemoveCommand -\u003e CommandResult","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"domoberzin"},"content":"CommandResult --\u003e RemoveCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"domoberzin"},"content":"RemoveCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"domoberzin"},"content":"deactivate RemoveCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"domoberzin":32,"-":37}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":"Class ModtRektParser","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"domoberzin"},"content":"LogicManager -right-\u003e\"1\" ModtRektParser","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"domoberzin"},"content":"ModtRektParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"domoberzin"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nRemoveCommand, etc","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"domoberzin":4,"-":42}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyModuleList\" as ReadOnlyModuleList","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"Class ModuleList","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"Class ModuleManager","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"Class UniqueModuleList","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"Class Module","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"domoberzin"},"content":"Class ModCode","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"domoberzin"},"content":"Class ModName","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":"Class ModTaskCount","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"domoberzin"},"content":"Class ModCredit","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"HoJunHao2000"},"content":"ModuleList .up.|\u003e ReadOnlyModuleList","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"HoJunHao2000"},"content":"ModuleManager .up.|\u003e Model","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"HoJunHao2000"},"content":"Model .left.\u003e ReadOnlyModuleList","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"HoJunHao2000"},"content":"ModuleManager -left-\u003e \"1\" ModuleList","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"HoJunHao2000"},"content":"ModuleManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"HoJunHao2000"},"content":"ModuleList *--\u003e \"1\" UniqueModuleList","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"HoJunHao2000"},"content":"UniqueModuleList --\u003e \"~* all\" Module","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"domoberzin"},"content":"Module *--\u003e ModTaskCount","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"domoberzin"},"content":"Module *--\u003e ModCredit","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"domoberzin"},"content":"Module *--\u003e ModName","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"domoberzin"},"content":"Module *--\u003e ModCode","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"HoJunHao2000"},"content":"ModuleManager --\u003e\"~* filtered\" Module","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"domoberzin":8,"-":22,"HoJunHao2000":13}},{"path":"docs/diagrams/ModulePUMLs/ModuleAdd/ModuleAddPathExecution.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"@startuml","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"HoJunHao2000"},"content":"start","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":":User executes add module command;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":":ModtRekt parse the command looking for tags;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"HoJunHao2000"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"if () then ([contains all valid tags])","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"    :check if parameter inputs are valid;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"    if () then ([valid inputs])","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"        :add module to ModuleList;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"        :display add success message;","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"    else ([else])","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"        :display invalid input error message;","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"    endif","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"HoJunHao2000"},"content":"else ([else])","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":"    :display invalid format message;","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"HoJunHao2000"},"content":"endif","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"HoJunHao2000"},"content":"stop","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"HoJunHao2000"},"content":"@enduml","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"HoJunHao2000":21}},{"path":"docs/diagrams/ModulePUMLs/ModuleAdd/ModuleAddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"@startuml","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"HoJunHao2000"},"content":"!include ../../style.puml","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"HoJunHao2000"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"HoJunHao2000"},"content":"participant \":ModtrektParser\" as ModtrektParser LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"participant \"a:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nModuleParser\" as ModuleParser LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"end box","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"participant \":ModuleList\" as ModuleList MODEL_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"HoJunHao2000"},"content":"end box","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"HoJunHao2000"},"content":"[-\u003e LogicManager : execute(\"add -m -c CS2103T\")","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"HoJunHao2000"},"content":"activate LogicManager","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"HoJunHao2000"},"content":"LogicManager -\u003e ModtrektParser : parseCommand(\"add -m -c CS2103T\")","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"HoJunHao2000"},"content":"activate ModtrektParser","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"HoJunHao2000"},"content":"create AddCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"HoJunHao2000"},"content":"ModtrektParser -\u003e AddCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"HoJunHao2000"},"content":"activate AddCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"HoJunHao2000"},"content":"AddCommandParser --\u003e ModtrektParser","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"HoJunHao2000"},"content":"deactivate AddCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"HoJunHao2000"},"content":"ModtrektParser -\u003e AddCommandParser : parse(\"CS2103T\")","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"HoJunHao2000"},"content":"activate AddCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"HoJunHao2000"},"content":"create ModuleParser","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"HoJunHao2000"},"content":"AddCommandParser -\u003e ModuleParser : fetchModule(CS2103T)","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"HoJunHao2000"},"content":"activate ModuleParser","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"HoJunHao2000"},"content":"ModuleParser --\u003e AddCommandParser : m","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"HoJunHao2000"},"content":"deactivate ModuleParser","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"HoJunHao2000"},"content":"create AddCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"HoJunHao2000"},"content":"AddCommandParser -\u003e AddCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"HoJunHao2000"},"content":"activate AddCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"HoJunHao2000"},"content":"AddCommand --\u003e AddCommandParser : a","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"HoJunHao2000"},"content":"deactivate AddCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"HoJunHao2000"},"content":"AddCommandParser --\u003e ModtrektParser : a","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"HoJunHao2000"},"content":"deactivate AddCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"HoJunHao2000"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"HoJunHao2000"},"content":"AddCommandParser -[hidden]-\u003e ModtrektParser","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"HoJunHao2000"},"content":"destroy AddCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"HoJunHao2000"},"content":"ModtrektParser --\u003e LogicManager : a","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"HoJunHao2000"},"content":"deactivate ModtrektParser","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"HoJunHao2000"},"content":"LogicManager -\u003e AddCommand : execute()","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"HoJunHao2000"},"content":"activate AddCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"HoJunHao2000"},"content":"AddCommand -\u003e Model : addModule(Module)","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"HoJunHao2000"},"content":"activate Model","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"HoJunHao2000"},"content":"Model -\u003e ModuleList : add(module)","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"HoJunHao2000"},"content":"activate ModuleList","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"HoJunHao2000"},"content":"ModuleList --\u003e Model","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"HoJunHao2000"},"content":"deactivate ModuleList","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"HoJunHao2000"},"content":"Model --\u003e AddCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"HoJunHao2000"},"content":"deactivate Model","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"HoJunHao2000"},"content":"create CommandResult","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"HoJunHao2000"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"HoJunHao2000"},"content":"activate CommandResult","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"HoJunHao2000"},"content":"CommandResult --\u003e AddCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"HoJunHao2000"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-19"},{"lineNumber":79,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"HoJunHao2000"},"content":"AddCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-19"},{"lineNumber":81,"author":{"gitId":"HoJunHao2000"},"content":"deactivate AddCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":82,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":83,"author":{"gitId":"HoJunHao2000"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"HoJunHao2000"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"HoJunHao2000"},"content":"@enduml","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"HoJunHao2000":85}},{"path":"docs/diagrams/ModulePUMLs/ModuleRemove/ModuleRemovePathExecution.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"@startuml","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"HoJunHao2000"},"content":"start","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":":User executes remove module command;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":":ModtRekt parse the command looking for tags;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"HoJunHao2000"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"if () then ([contains all valid tags])","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"    :check if parameter inputs are valid;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"    if () then ([valid inputs])","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"        :remove module from ModuleList;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"        :display remove success message;","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"    else ([else])","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"        :display invalid input error message;","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"    endif","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"HoJunHao2000"},"content":"else ([else])","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":"    :display invalid format message;","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"HoJunHao2000"},"content":"endif","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"HoJunHao2000"},"content":"stop","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"HoJunHao2000"},"content":"@enduml","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"HoJunHao2000":21}},{"path":"docs/diagrams/ModulePUMLs/ModuleRemove/ModuleRemoveSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"@startuml","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"HoJunHao2000"},"content":"!include ../../style.puml","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"HoJunHao2000"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"HoJunHao2000"},"content":"participant \":ModtrektParser\" as ModtrektParser LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":"participant \":RemoveCommandParser\" as RemoveCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"participant \"d:RemoveCommand\" as RemoveCommand LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"end box","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"participant \":ModuleList\" as ModuleList MODEL_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"participant \":TaskBook\" as TaskBook MODEL_COLOR","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"end box","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":"[-\u003e LogicManager : execute(\"remove -m 1\")","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"HoJunHao2000"},"content":"activate LogicManager","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"HoJunHao2000"},"content":"LogicManager -\u003e ModtrektParser : parseCommand(\"remove -m 1\")","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"HoJunHao2000"},"content":"activate ModtrektParser","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"HoJunHao2000"},"content":"create RemoveCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"HoJunHao2000"},"content":"ModtrektParser -\u003e RemoveCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"HoJunHao2000"},"content":"activate RemoveCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"HoJunHao2000"},"content":"RemoveCommandParser --\u003e ModtrektParser","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"HoJunHao2000"},"content":"deactivate RemoveCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"HoJunHao2000"},"content":"ModtrektParser -\u003e RemoveCommandParser : parse(\"1\")","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"HoJunHao2000"},"content":"activate RemoveCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"HoJunHao2000"},"content":"create RemoveCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"HoJunHao2000"},"content":"RemoveCommandParser -\u003e RemoveCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"HoJunHao2000"},"content":"activate RemoveCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"HoJunHao2000"},"content":"RemoveCommand --\u003e RemoveCommandParser : d","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"HoJunHao2000"},"content":"deactivate RemoveCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"HoJunHao2000"},"content":"RemoveCommandParser --\u003e ModtrektParser : d","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"HoJunHao2000"},"content":"deactivate RemoveCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"HoJunHao2000"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"HoJunHao2000"},"content":"RemoveCommandParser -[hidden]-\u003e ModtrektParser","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"HoJunHao2000"},"content":"destroy RemoveCommandParser","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"HoJunHao2000"},"content":"ModtrektParser --\u003e LogicManager : d","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"HoJunHao2000"},"content":"deactivate ModtrektParser","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"HoJunHao2000"},"content":"LogicManager -\u003e RemoveCommand : execute()","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"HoJunHao2000"},"content":"activate RemoveCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"HoJunHao2000"},"content":"RemoveCommand -\u003e Model : deleteModule(Module)","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"HoJunHao2000"},"content":"activate Model","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"HoJunHao2000"},"content":"Model -\u003e ModuleList : removeModule(Module)","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"HoJunHao2000"},"content":"activate ModuleList","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"HoJunHao2000"},"content":"ModuleList --\u003e Model","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"HoJunHao2000"},"content":"deactivate ModuleList","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"HoJunHao2000"},"content":"Model --\u003e RemoveCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"HoJunHao2000"},"content":"deactivate Model","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"HoJunHao2000"},"content":"RemoveCommand -\u003e Model : deleteTasksOfModule(Module)","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"HoJunHao2000"},"content":"activate Model","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"HoJunHao2000"},"content":"Model -\u003e TaskBook : deleteTasksOfModule(Module)","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"HoJunHao2000"},"content":"activate TaskBook","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"HoJunHao2000"},"content":"TaskBook --\u003e Model","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"HoJunHao2000"},"content":"deactivate TaskBook","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"HoJunHao2000"},"content":"Model --\u003e RemoveCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"HoJunHao2000"},"content":"deactivate Model","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"HoJunHao2000"},"content":"create CommandResult","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"HoJunHao2000"},"content":"RemoveCommand -\u003e CommandResult","lastModifiedDate":"2022-10-19"},{"lineNumber":79,"author":{"gitId":"HoJunHao2000"},"content":"activate CommandResult","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":81,"author":{"gitId":"HoJunHao2000"},"content":"CommandResult --\u003e RemoveCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":82,"author":{"gitId":"HoJunHao2000"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-19"},{"lineNumber":83,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"HoJunHao2000"},"content":"RemoveCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"HoJunHao2000"},"content":"deactivate RemoveCommand","lastModifiedDate":"2022-10-19"},{"lineNumber":86,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":87,"author":{"gitId":"HoJunHao2000"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-19"},{"lineNumber":88,"author":{"gitId":"HoJunHao2000"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-19"},{"lineNumber":89,"author":{"gitId":"HoJunHao2000"},"content":"@enduml","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"HoJunHao2000":89}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"Class ModtRektParser","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"domoberzin"},"content":"HiddenOutside ..\u003e ModtRektParser","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"domoberzin"},"content":"ModtRektParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"domoberzin"},"content":"ModtRektParser ..\u003e Command : returns \u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"domoberzin"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand etc","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"domoberzin"},"content":"note left of XYZCommandParser: XYZCommandParser \u003d AddCommandParser, \\nRemoveCommandParser, etc","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"domoberzin":6,"-":34}},{"path":"docs/diagrams/ResultDisplayHandleCommand.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"midnightfeverrr"},"content":"@startuml","lastModifiedDate":"2022-10-17"},{"lineNumber":2,"author":{"gitId":"midnightfeverrr"},"content":"!include style.puml","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"midnightfeverrr"},"content":"autoactivate on","lastModifiedDate":"2022-10-17"},{"lineNumber":4,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":5,"author":{"gitId":"midnightfeverrr"},"content":"box UI UI_COLOR_T1","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"midnightfeverrr"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"midnightfeverrr"},"content":"participant \":ResultDisplay\" as ResultDisplay UI_COLOR","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"midnightfeverrr"},"content":"end box","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"midnightfeverrr"},"content":"[-\u003e MainWindow : executeCommand(\"add -m -c CS2103T\")","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"midnightfeverrr"},"content":"activate MainWindow","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"midnightfeverrr"},"content":"MainWindow -\u003e MainWindow : executeCommand(feedbackToUser)","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"midnightfeverrr"},"content":"MainWindow -\u003e ResultDisplay : setFeedbackToUser(feedbackToUser)","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"midnightfeverrr"},"content":"activate ResultDisplay","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"midnightfeverrr"},"content":"return","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"midnightfeverrr"},"content":"deactivate ResultDisplay","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"midnightfeverrr"},"content":"deactivate","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"midnightfeverrr"},"content":"[\u003c-- MainWindow : return CommandResult","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"midnightfeverrr"},"content":"deactivate MainWindow","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"midnightfeverrr"},"content":"@enduml","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"midnightfeverrr":24}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"HoJunHao2000"},"content":"package \"ModuleList Storage\" #F4F6F6{","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModuleListStorage\" as ModuleListStorage","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"HoJunHao2000"},"content":"Class JsonModuleListStorage","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"HoJunHao2000"},"content":"Class JsonSerializableModuleList","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"HoJunHao2000"},"content":"Class JsonAdaptedModule","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"HoJunHao2000"},"content":"StorageManager -up-\u003e \"1\" ModuleListStorage","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"HoJunHao2000"},"content":"Storage -right-|\u003e ModuleListStorage","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"HoJunHao2000"},"content":"JsonModuleListStorage .up.|\u003e ModuleListStorage","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"HoJunHao2000"},"content":"JsonModuleListStorage ..\u003e JsonSerializableModuleList","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"HoJunHao2000"},"content":"JsonSerializableModuleList --\u003e \"*\" JsonAdaptedModule","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":30,"HoJunHao2000":10}},{"path":"docs/diagrams/TaskPUMLs/AddTask/TaskAddPathExecution.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"domoberzin"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"domoberzin"},"content":"start","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"domoberzin"},"content":":User executes add task command;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"domoberzin"},"content":":ModtRekt parse the command looking for tags;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":"if () then ([contains all valid tags])","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":"    :check if parameter inputs are valid;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"    if () then ([contains deadline tag])","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"        if () then ([valid inputs])","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"domoberzin"},"content":"            :add deadline to TaskList;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"            :display add success message;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"domoberzin"},"content":"        else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"            :display invalid format message;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"domoberzin"},"content":"            endif","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"domoberzin"},"content":"    else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":"        if () then ([valid inputs])","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"domoberzin"},"content":"            :add task to TaskList;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"domoberzin"},"content":"            :display add success message;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"domoberzin"},"content":"        else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"domoberzin"},"content":"            :display invalid format message;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"domoberzin"},"content":"            endif","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"domoberzin"},"content":"    endif","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"domoberzin"},"content":"    else ([else])","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"domoberzin"},"content":"        :display invalid format message;","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"domoberzin"},"content":"        endif","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"domoberzin"},"content":"stop","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"domoberzin"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"domoberzin":30}},{"path":"docs/diagrams/TaskPUMLs/AddTask/TaskAddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"domoberzin"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"domoberzin"},"content":"!include ../../style.puml","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"domoberzin"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"domoberzin"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"participant \":ModtrektParser\" as ModtrektParser LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"participant \":AddTaskCommandParser\" as AddTaskCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":"participant \"a:AddTaskCommand\" as AddTaskCommand LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"domoberzin"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"domoberzin"},"content":"participant \"task:Task\" as Task MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"participant \":Module\" as Module MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"domoberzin"},"content":"participant \":TaskList\" as TaskList MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"domoberzin"},"content":"participant \":ModuleList\" as ModuleList MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"domoberzin"},"content":"[-\u003e LogicManager : execute(\"add -t Assignment 1 -c CS2103T\")","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"domoberzin"},"content":"activate LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"domoberzin"},"content":"LogicManager -\u003e ModtrektParser : parseCommand(\"add -t Assignment 1 -c CS2103T\")","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"domoberzin"},"content":"activate ModtrektParser","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"domoberzin"},"content":"create AddTaskCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"domoberzin"},"content":"ModtrektParser -\u003e AddTaskCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"domoberzin"},"content":"activate AddTaskCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"domoberzin"},"content":"AddTaskCommandParser --\u003e ModtrektParser","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"domoberzin"},"content":"ModtrektParser -\u003e AddTaskCommandParser : parse(\"Assignment 1 -c CS2103T\")","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"domoberzin"},"content":"create Task","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"domoberzin"},"content":"AddTaskCommandParser -\u003e Task : Task()","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"domoberzin"},"content":"activate Task","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"domoberzin"},"content":"Task --\u003e AddTaskCommandParser : task","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"domoberzin"},"content":"deactivate Task","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"domoberzin"},"content":"create AddTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"domoberzin"},"content":"AddTaskCommandParser -\u003e AddTaskCommand : AddTaskCommand(task)","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"domoberzin"},"content":"activate AddTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"domoberzin"},"content":"AddTaskCommand --\u003e AddTaskCommandParser : a","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"domoberzin"},"content":"deactivate AddTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"domoberzin"},"content":"AddTaskCommandParser --\u003e ModtrektParser : a","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"domoberzin"},"content":"deactivate AddTaskCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"domoberzin"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"domoberzin"},"content":"AddTaskCommandParser -[hidden]-\u003e ModtrektParser","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"domoberzin"},"content":"destroy AddTaskCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"domoberzin"},"content":"ModtrektParser --\u003e LogicManager : a","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"domoberzin"},"content":"deactivate ModtrektParser","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"domoberzin"},"content":"LogicManager -\u003e AddTaskCommand : execute()","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"domoberzin"},"content":"activate AddTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"domoberzin"},"content":"AddTaskCommand -\u003e Model : addTask(task)","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"domoberzin"},"content":"activate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"domoberzin"},"content":"Model -\u003e TaskList : add(task)","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"domoberzin"},"content":"activate TaskList","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"domoberzin"},"content":"TaskList --\u003e Model","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"domoberzin"},"content":"deactivate TaskList","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"domoberzin"},"content":"Model -\u003e Model : updateModuleTask(task)","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"domoberzin"},"content":"activate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"domoberzin"},"content":"Model -\u003e Task : getModule()","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"domoberzin"},"content":"activate Task","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"domoberzin"},"content":"Task --\u003e Model: moduleCode","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"domoberzin"},"content":"deactivate Task","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"domoberzin"},"content":"Model -\u003e Model : parseModuleFromCode(moduleCode)","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"domoberzin"},"content":"activate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"domoberzin"},"content":"Model -\u003e ModuleList : getModuleFromCode(moduleCode)","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"domoberzin"},"content":"activate ModuleList","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"domoberzin"},"content":"ModuleList --\u003e Model : module","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"domoberzin"},"content":"deactivate ModuleList","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"domoberzin"},"content":"deactivate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"domoberzin"},"content":"Model -\u003e Module: updateTaskCount(module)","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"domoberzin"},"content":"activate Module","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"domoberzin"},"content":"Module --\u003e Model","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"domoberzin"},"content":"deactivate Module","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"domoberzin"},"content":"deactivate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"domoberzin"},"content":"Model --\u003e AddTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"domoberzin"},"content":"deactivate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"domoberzin"},"content":"create CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"domoberzin"},"content":"AddTaskCommand -\u003e CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"domoberzin"},"content":"activate CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"domoberzin"},"content":"CommandResult --\u003e AddTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"domoberzin"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"domoberzin"},"content":"AddTaskCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"domoberzin"},"content":"deactivate AddTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"domoberzin"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"domoberzin"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"domoberzin"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"domoberzin":107}},{"path":"docs/diagrams/TaskPUMLs/EditTask/TaskEditPathExecution.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"domoberzin"},"content":"@startuml","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"domoberzin"},"content":"start","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"domoberzin"},"content":":User executes add edit command;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"domoberzin"},"content":":ModtRekt parse the command looking for tags;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":"if () then ([contains all valid tags])","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":"    :check if parameter inputs are valid;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"    if () then ([valid inputs])","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"        :edit task in TaskList;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"domoberzin"},"content":"        :display edit success message;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"    else ([else])","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"domoberzin"},"content":"        :display invalid input error message;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"    endif","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"domoberzin"},"content":"else ([else])","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"domoberzin"},"content":"    :display invalid format message;","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":"endif","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"domoberzin"},"content":"stop","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"domoberzin"},"content":"@enduml","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"domoberzin":21}},{"path":"docs/diagrams/TaskPUMLs/EditTask/TaskEditSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"domoberzin"},"content":"@startuml","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"domoberzin"},"content":"!include ../../style.puml","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"domoberzin"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"domoberzin"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"participant \":ModtrektParser\" as ModtrektParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"participant \":EditTaskCommandParser\" as EditTaskCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":"participant \"a:EditTaskCommand\" as EditTaskCommand LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"domoberzin"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"domoberzin"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"domoberzin"},"content":"[-\u003e LogicManager : execute(\"edit -t 1 -c CS2103T -ds Assignment 2\")","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"domoberzin"},"content":"activate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"domoberzin"},"content":"LogicManager -\u003e ModtrektParser : parseCommand(\"edit -t 1 -c CS2103T -ds Assignment 2\")","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"domoberzin"},"content":"activate ModtrektParser","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"domoberzin"},"content":"create EditTaskCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"domoberzin"},"content":"ModtrektParser -\u003e EditTaskCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"domoberzin"},"content":"activate EditTaskCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"domoberzin"},"content":"EditTaskCommandParser --\u003e ModtrektParser","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"domoberzin"},"content":"ModtrektParser -\u003e EditTaskCommandParser : parse(\"-t 1 -c CS2103T -ds Assignment 2\")","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"domoberzin"},"content":"create EditTaskCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"domoberzin"},"content":"EditTaskCommandParser -\u003e EditTaskCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"domoberzin"},"content":"activate EditTaskCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"domoberzin"},"content":"EditTaskCommand --\u003e EditTaskCommandParser : a","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"domoberzin"},"content":"deactivate EditTaskCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"domoberzin"},"content":"EditTaskCommandParser --\u003e ModtrektParser : a","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"domoberzin"},"content":"deactivate EditTaskCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"domoberzin"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"domoberzin"},"content":"EditTaskCommandParser -[hidden]-\u003e ModtrektParser","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"domoberzin"},"content":"destroy EditTaskCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"domoberzin"},"content":"ModtrektParser --\u003e LogicManager : a","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"domoberzin"},"content":"deactivate ModtrektParser","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"domoberzin"},"content":"LogicManager -\u003e EditTaskCommand : execute()","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"domoberzin"},"content":"activate EditTaskCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"domoberzin"},"content":"EditTaskCommand -\u003e Model : deleteTask(task)","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"domoberzin"},"content":"activate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"domoberzin"},"content":"deactivate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"domoberzin"},"content":"Model --\u003e EditTaskCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"domoberzin"},"content":"deactivate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"domoberzin"},"content":"EditTaskCommand -\u003e Model : addTask(newTask)","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"domoberzin"},"content":"activate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"domoberzin"},"content":"Model --\u003e EditTaskCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"domoberzin"},"content":"deactivate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"domoberzin"},"content":"create CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"domoberzin"},"content":"EditTaskCommand -\u003e CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"domoberzin"},"content":"activate CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"domoberzin"},"content":"CommandResult --\u003e EditTaskCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"domoberzin"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"domoberzin"},"content":"EditTaskCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"domoberzin"},"content":"deactivate EditTaskCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"domoberzin"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"domoberzin"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"domoberzin"},"content":"@enduml","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"domoberzin":76}},{"path":"docs/diagrams/TaskPUMLs/RemoveTask/TaskRemovePathExecution.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"domoberzin"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"domoberzin"},"content":"start","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"domoberzin"},"content":":User executes remove task command;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"domoberzin"},"content":":ModtRekt parse the command looking for tags;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":"if () then ([contains all valid tags])","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":"    :check if parameter inputs are valid;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"    if () then ([valid inputs])","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"        :remove task from TaskList;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"domoberzin"},"content":"        :display remove success message;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"    else ([else])","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"domoberzin"},"content":"        :display invalid input error message;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"    endif","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"domoberzin"},"content":"else ([else])","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"domoberzin"},"content":"    :display invalid format message;","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":"endif","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"domoberzin"},"content":"stop","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"domoberzin"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"domoberzin":21}},{"path":"docs/diagrams/TaskPUMLs/RemoveTask/TaskRemoveSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"domoberzin"},"content":"@startuml","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"domoberzin"},"content":"!include ../../style.puml","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"domoberzin"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"domoberzin"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"participant \":ModtrektParser\" as ModtrektParser LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"participant \":RemoveTaskCommandParser\" as RemoveTaskCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":"participant \"a:RemoveTaskCommand\" as RemoveTaskCommand LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"domoberzin"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"domoberzin"},"content":"participant \"task:Task\" as Task MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"participant \":Module\" as Module MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"domoberzin"},"content":"participant \":TaskList\" as TaskList MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"domoberzin"},"content":"participant \":ModuleList\" as ModuleList MODEL_COLOR","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":"end box","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"domoberzin"},"content":"[-\u003e LogicManager : execute(\"remove -t 1\")","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"domoberzin"},"content":"activate LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"domoberzin"},"content":"LogicManager -\u003e ModtrektParser : parseCommand(\"remove -t 1\")","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"domoberzin"},"content":"activate ModtrektParser","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"domoberzin"},"content":"create RemoveTaskCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"domoberzin"},"content":"ModtrektParser -\u003e RemoveTaskCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"domoberzin"},"content":"activate RemoveTaskCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"domoberzin"},"content":"RemoveTaskCommandParser --\u003e ModtrektParser","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"domoberzin"},"content":"ModtrektParser -\u003e RemoveTaskCommandParser : parse(\"1\")","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"domoberzin"},"content":"create RemoveTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"domoberzin"},"content":"RemoveTaskCommandParser -\u003e RemoveTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"domoberzin"},"content":"activate RemoveTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"domoberzin"},"content":"RemoveTaskCommand --\u003e RemoveTaskCommandParser : a","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"domoberzin"},"content":"deactivate RemoveTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"domoberzin"},"content":"RemoveTaskCommandParser --\u003e ModtrektParser : a","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"domoberzin"},"content":"deactivate RemoveTaskCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"domoberzin"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"domoberzin"},"content":"RemoveTaskCommandParser -[hidden]-\u003e ModtrektParser","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"domoberzin"},"content":"destroy RemoveTaskCommandParser","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"domoberzin"},"content":"ModtrektParser --\u003e LogicManager : a","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"domoberzin"},"content":"deactivate ModtrektParser","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"domoberzin"},"content":"LogicManager -\u003e RemoveTaskCommand : execute()","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"domoberzin"},"content":"activate RemoveTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"domoberzin"},"content":"RemoveTaskCommand -\u003e Model : deleteTask(task)","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"domoberzin"},"content":"activate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"domoberzin"},"content":"Model -\u003e TaskList : removeTask(task)","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"domoberzin"},"content":"activate TaskList","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"domoberzin"},"content":"TaskList --\u003e Model :","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"domoberzin"},"content":"deactivate TaskList","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"domoberzin"},"content":"Model -\u003e Model : updateModuleTask(task)","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"domoberzin"},"content":"activate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"domoberzin"},"content":"Model -\u003e Task : getModule()","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"domoberzin"},"content":"activate Task","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"domoberzin"},"content":"Task --\u003e Model: moduleCode","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"domoberzin"},"content":"deactivate Task","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"domoberzin"},"content":"Model -\u003e Model : parseModuleFromCode(moduleCode)","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"domoberzin"},"content":"activate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"domoberzin"},"content":"Model -\u003e ModuleList : getModuleFromCode(moduleCode)","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"domoberzin"},"content":"activate ModuleList","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"domoberzin"},"content":"ModuleList --\u003e Model : module","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"domoberzin"},"content":"deactivate ModuleList","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"domoberzin"},"content":"deactivate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"domoberzin"},"content":"Model -\u003e Module: updateTaskCount(module)","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"domoberzin"},"content":"activate Module","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"domoberzin"},"content":"Module --\u003e Model","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"domoberzin"},"content":"deactivate Module","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"domoberzin"},"content":"deactivate TaskList","lastModifiedDate":"2022-10-20"},{"lineNumber":86,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"domoberzin"},"content":"deactivate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"domoberzin"},"content":"Model --\u003e RemoveTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"domoberzin"},"content":"deactivate Model","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"domoberzin"},"content":"create CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"domoberzin"},"content":"RemoveTaskCommand -\u003e CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"domoberzin"},"content":"activate CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"domoberzin"},"content":"CommandResult --\u003e RemoveTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"domoberzin"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"domoberzin"},"content":"RemoveTaskCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"domoberzin"},"content":"deactivate RemoveTaskCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"domoberzin"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"domoberzin"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"domoberzin"},"content":"@enduml","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"domoberzin":103}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"midnightfeverrr"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"midnightfeverrr"},"content":"Class ProfileSidePanel","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"midnightfeverrr"},"content":"Class TaskListPanel","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"midnightfeverrr"},"content":"Class StatusBar","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"midnightfeverrr"},"content":"Class ModuleCard","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"midnightfeverrr"},"content":"Class ModuleListPanel","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"midnightfeverrr"},"content":"Class TaskCard","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"midnightfeverrr"},"content":"UiManager -down-\u003e MainWindow","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"midnightfeverrr"},"content":"MainWindow *-down-\u003e \"1\" StatusBar","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"midnightfeverrr"},"content":"MainWindow *-down-\u003e \"1\" ProfileSidePanel","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"midnightfeverrr"},"content":"MainWindow *-down-\u003e \"1\" TaskListPanel","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"HoJunHao2000"},"content":"MainWindow *-down-\u003e \"1\" ModuleListPanel","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"midnightfeverrr"},"content":"ModuleListPanel o-down-\u003e \"*\" ModuleCard","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"midnightfeverrr"},"content":"TaskListPanel o-down-\u003e \"*\" TaskCard","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"HoJunHao2000"},"content":"ModuleListPanel --|\u003e UiPart","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"HoJunHao2000"},"content":"ModuleCard --|\u003e UiPart","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"midnightfeverrr"},"content":"StatusBar --|\u003e UiPart","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"midnightfeverrr"},"content":"ProfileSidePanel --|\u003e UiPart","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"midnightfeverrr"},"content":"TaskListPanel --|\u003e UiPart","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"midnightfeverrr"},"content":"TaskCard --|\u003e UiPart","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"midnightfeverrr"},"content":"UiManager -right-\u003e \"1\" Logic","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"midnightfeverrr"},"content":"UiManager -left-\u003e Model","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"midnightfeverrr"},"content":"MainWindow ..\u003e Model","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"midnightfeverrr"},"content":"ResultDisplay -[hidden]left- StatusBar","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":42,"midnightfeverrr":21,"HoJunHao2000":3}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"    class State1 as \"__ab0:ModuleList__\"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"    class State2 as \"__ab1:ModuleList__\"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"    class State3 as \"__ab2:ModuleList__\"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":17,"HoJunHao2000":3}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"    class State1 as \"__ab0:ModuleList__\"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"    class State2 as \"__ab1:ModuleList__\"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"    class State3 as \"__ab2:ModuleList__\"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":19,"HoJunHao2000":3}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"    class State1 as \"__ab0:ModuleList__\"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"    class State2 as \"__ab1:ModuleList__\"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"    class State3 as \"__ab2:ModuleList__\"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":17,"HoJunHao2000":3}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"    class State1 as \"__ab0:ModuleList__\"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"    class State2 as \"__ab1:ModuleList__\"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"    class State3 as \"__ab2:ModuleList__\"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":17,"HoJunHao2000":3}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"    class State1 as \"__ab0:ModuleList__\"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"    class State2 as \"__ab1:ModuleList__\"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"    class State3 as \"__ab2:ModuleList__\"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":17,"HoJunHao2000":3}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"    class State1 as \"__ab0:ModuleList__\"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"    class State2 as \"__ab1:ModuleList__\"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"    class State3 as \"__ab3:ModuleList__\"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"note right on link: State ab2 deleted.","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":18,"HoJunHao2000":3}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"HoJunHao2000"},"content":"participant \":ModuleListParser\" as ModuleListParser LOGIC_COLOR","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"participant \":VersionedModuleList\" as VersionedModuleList MODEL_COLOR","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"HoJunHao2000"},"content":"LogicManager -\u003e ModuleListParser : parseCommand(undo)","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":"activate ModuleListParser","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"HoJunHao2000"},"content":"ModuleListParser -\u003e UndoCommand","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"HoJunHao2000"},"content":"UndoCommand --\u003e ModuleListParser","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"HoJunHao2000"},"content":"ModuleListParser --\u003e LogicManager : u","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"HoJunHao2000"},"content":"deactivate ModuleListParser","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"HoJunHao2000"},"content":"UndoCommand -\u003e Model : undoModuleList()","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"HoJunHao2000"},"content":"Model -\u003e VersionedModuleList : undo()","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"HoJunHao2000"},"content":"activate VersionedModuleList","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"HoJunHao2000"},"content":"VersionedModuleList -\u003e VersionedModuleList :resetData(ReadOnlyModuleList)","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"HoJunHao2000"},"content":"VersionedModuleList --\u003e Model :","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"HoJunHao2000"},"content":"deactivate VersionedModuleList","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":39,"HoJunHao2000":14}},{"path":"docs/diagrams/tasks/ArchivalActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"@startuml","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"start","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":":User executes the command to archive a task;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":":ModtRekt parses the command looking for tags;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"if () then ([contains all valid tags])","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"    :check if task index argument is valid;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"    if () then ([valid task index])","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"        if () then ([task is not already archived])","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"            :archive task;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"            :display archival success message;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"        else ([else])","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"            :display invalid archival state error message;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"        endif","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"    else ([else])","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"        :display invalid input error message;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"    endif","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":"else ([else])","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"    :display invalid format message;","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"endif","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"stop","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"@enduml","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"vvidday":25}},{"path":"docs/diagrams/tasks/ListingSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"@startuml","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"!include ../style.puml","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"participant \":ModtrektParser\" as ModtrektParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"participant \":ListTasks\\nCommandParser\" as ListTasksCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"participant \":ListTasksCommand\" as ListTasksCommand LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nArgumentTokenizer\" as ArgumentTokenizer LOGIC_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"end box","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"[-\u003e LogicManager : execute(cmd)","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"activate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":"LogicManager -\u003e ModtrektParser : parseCommand(cmd)","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"activate ModtrektParser","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"create ListTasksCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"ModtrektParser -\u003e ListTasksCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"activate ListTasksCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"ListTasksCommandParser --\u003e ModtrektParser","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"deactivate ListTasksCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"vvidday"},"content":"ModtrektParser -\u003e ListTasksCommandParser : parse(flags)","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"vvidday"},"content":"activate ListTasksCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"vvidday"},"content":"create ArgumentTokenizer","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"vvidday"},"content":"ListTasksCommandParser -\u003e ArgumentTokenizer : isFlagPresent(flags, \"-a\")","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"vvidday"},"content":"activate ArgumentTokenizer","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"vvidday"},"content":"ArgumentTokenizer --\u003e ListTasksCommandParser : showAll?","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"vvidday"},"content":"deactivate ArgumentTokenizer","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"vvidday"},"content":"create ListTasksCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"vvidday"},"content":"ListTasksCommandParser -\u003e ListTasksCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"vvidday"},"content":"activate ListTasksCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"vvidday"},"content":"ListTasksCommand --\u003e ListTasksCommandParser : command","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"vvidday"},"content":"deactivate ListTasksCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"vvidday"},"content":"ListTasksCommandParser --\u003e ModtrektParser : command","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"vvidday"},"content":"deactivate ListTasksCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"vvidday"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"vvidday"},"content":"ListTasksCommandParser -[hidden]-\u003e ModtrektParser","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"vvidday"},"content":"destroy ListTasksCommandParser","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"vvidday"},"content":"ModtrektParser --\u003e LogicManager : command","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"vvidday"},"content":"deactivate ModtrektParser","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"vvidday"},"content":"LogicManager -\u003e ListTasksCommand : execute()","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"vvidday"},"content":"activate ListTasksCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"vvidday"},"content":"alt -a flag is present","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"vvidday"},"content":"    ListTasksCommand -\u003e Model : updateFilteredTaskList(SHOW_ALL_TASKS)","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"vvidday"},"content":"    activate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"vvidday"},"content":"    Model --\u003e ListTasksCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"vvidday"},"content":"    deactivate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"vvidday"},"content":"else else","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"vvidday"},"content":"    ListTasksCommand -\u003e Model : updateFilteredTaskList(HIDE_ARCHIVED_TASKS)","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"vvidday"},"content":"    activate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"vvidday"},"content":"    Model --\u003e ListTasksCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"vvidday"},"content":"    deactivate Model","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"vvidday"},"content":"end","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"vvidday"},"content":"create CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"vvidday"},"content":"ListTasksCommand -\u003e CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"vvidday"},"content":"activate CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"vvidday"},"content":"CommandResult --\u003e ListTasksCommand : result","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"vvidday"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"vvidday"},"content":"ListTasksCommand --\u003e LogicManager : result","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"vvidday"},"content":"deactivate ListTasksCommand","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"vvidday"},"content":"[\u003c--LogicManager : result","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"vvidday"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"vvidday"},"content":"@enduml","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"vvidday":90}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"HoJunHao2000"},"content":"Participant \":ModuleListParser\" as abp LOGIC_COLOR","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"ecp -\u003e ec ++: index, editModuleDescriptor","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"-":19,"HoJunHao2000":2}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"title: ModtRekt","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W10-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W10-4/tp/actions)","lastModifiedDate":"2022-09-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-W10-4/tp/branch/master/graph/badge.svg?token\u003dRSDSWGQ5BC)](https://codecov.io/gh/AY2223S1-CS2103T-W10-4/tp)","lastModifiedDate":"2022-09-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"ModtRekt is a **desktop app for managing modules and tasks, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"* If you are interested in using ModtRekt, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"* If you are interested about developing ModtRekt, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jontmy":4,"-":15}},{"path":"docs/team/domoberzin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"domoberzin"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"domoberzin"},"content":"layout: page","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"domoberzin"},"content":"title: Dominic Berzin\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"domoberzin"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"### Project: ModtRekt","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":"ModtRekt is a desktop app for managing modules and tasks, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"* **New Feature**: `TBA`","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"domoberzin"},"content":"  * What it does: `TBA`","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"  * Justification: `TBA`","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"domoberzin"},"content":"  * Highlights: `TBA`","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"  * Credits: `TBA`","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":18,"author":{"gitId":"domoberzin"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003ddomoberzin\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-25"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"domoberzin"},"content":"* **Project management**: `TBA`","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"domoberzin"},"content":"* **Enhancements to existing features**: `TBA`","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"domoberzin"},"content":"* **Documentation**: `TBA`","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"domoberzin"},"content":"* **Community**: `TBA`","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"domoberzin"},"content":"* **Tools**: `TBA`","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"domoberzin":28}},{"path":"docs/team/hojunhao2000.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"HoJunHao2000"},"content":"layout: page","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"title: Ho Jun Hao\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"HoJunHao2000"},"content":"### Project: ModtRekt","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"ModtRekt - is a desktop app for undergraduates of NUS to manage their modules and tasks. It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"* **New Feature**: `To be added soon`","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"  * What it does: `To be added soon`","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"  * Justification: `To be added soon`","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"  * Highlights: `To be added soon`","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"  * Credits: *{`To be added soon`}*","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":"* **New Feature**: `To be added soon`","lastModifiedDate":"2022-09-25"},{"lineNumber":19,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"HoJunHao2000"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dHoJunHao2000\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"HoJunHao2000"},"content":"* **Project management**:","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"HoJunHao2000"},"content":"  * `To be added soon`","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"HoJunHao2000"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"HoJunHao2000"},"content":"  * `To be added soon`","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"HoJunHao2000"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"HoJunHao2000"},"content":"  * User Guide:","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"HoJunHao2000"},"content":"    * `To be added soon`","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"HoJunHao2000"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-25"},{"lineNumber":32,"author":{"gitId":"HoJunHao2000"},"content":"    * `To be added soon`","lastModifiedDate":"2022-09-25"},{"lineNumber":33,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":34,"author":{"gitId":"HoJunHao2000"},"content":"* **Community**:","lastModifiedDate":"2022-09-25"},{"lineNumber":35,"author":{"gitId":"HoJunHao2000"},"content":"  * `To be added soon`","lastModifiedDate":"2022-09-25"},{"lineNumber":36,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":37,"author":{"gitId":"HoJunHao2000"},"content":"* **Tools**:","lastModifiedDate":"2022-09-25"},{"lineNumber":38,"author":{"gitId":"HoJunHao2000"},"content":"  * `To be added soon`","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"HoJunHao2000":38}},{"path":"docs/team/jontmy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"layout: page","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"title: Jonathan Tay\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"### Project: ModtRekt","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"ModtRekt is a desktop app which helps undergraduate students plan their modules over their course","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"of study, and manage their tasks and deadlines for each of them.","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"ModtRekt is optimized for use via a CLI while still having the benefits of a GUI.","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"* **New Feature**: `TBA`","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"    * What it does: `TBA`","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"    * Justification: `TBA`","lastModifiedDate":"2022-09-25"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"    * Highlights: `TBA`","lastModifiedDate":"2022-09-25"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"    * Credits: `TBA`","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003djontmy\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"* **Project management**: `TBA`","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"* **Enhancements to existing features**: `TBA`","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"* **Documentation**: `TBA`","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"* **Community**: `TBA`","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"* **Tools**: `TBA`","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"jontmy":31}},{"path":"docs/team/midnightfeverrr.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"midnightfeverrr"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"midnightfeverrr"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"midnightfeverrr"},"content":"title: Marciano Renzo William\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"midnightfeverrr"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"midnightfeverrr"},"content":"### Project: ModtRekt","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"midnightfeverrr"},"content":"ModtRekt is a desktop app which helps undergraduate students plan their modules over their course","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"midnightfeverrr"},"content":"of study, and manage their tasks and deadlines for each of them.","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"midnightfeverrr"},"content":"ModtRekt is optimized for use via a CLI while still having the benefits of a GUI.","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"midnightfeverrr"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"midnightfeverrr"},"content":"* **New Feature**: `TBA`","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"midnightfeverrr"},"content":"  * What it does: `TBA`","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"midnightfeverrr"},"content":"  * Justification: `TBA`","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"midnightfeverrr"},"content":"  * Highlights: `TBA`","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"midnightfeverrr"},"content":"  * Credits: `TBA`","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"midnightfeverrr"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dmidnightfeverrr\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"midnightfeverrr"},"content":"* **Project management**: `TBA`","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"midnightfeverrr"},"content":"* **Enhancements to existing features**: `TBA`","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"midnightfeverrr"},"content":"* **Documentation**: `TBA`","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"midnightfeverrr"},"content":"* **Community**: `TBA`","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"midnightfeverrr"},"content":"* **Tools**: `TBA`","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"midnightfeverrr":31}},{"path":"docs/team/vvidday.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"layout: page","lastModifiedDate":"2022-09-25"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"title: vvidday\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-25"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"---","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"### Project: ModtRekt","lastModifiedDate":"2022-09-25"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"ModtRekt helps undergraduate students to plan their studies by allowing students to choose the modules they would like to take and add tasks/deadlines for each of them.","lastModifiedDate":"2022-09-25"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-25"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"* **New Feature**: `To be added soon`","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dvvidday\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2022-09-16\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2022-09-25"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"* **Project management**:","lastModifiedDate":"2022-09-25"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"  * `To be added soon`","lastModifiedDate":"2022-09-25"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-25"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"  * `To be added soon`","lastModifiedDate":"2022-09-25"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-25"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"  * User Guide:","lastModifiedDate":"2022-09-25"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"    * `To be added soon`","lastModifiedDate":"2022-09-25"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-25"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"    * `To be added soon`","lastModifiedDate":"2022-09-25"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"* **Community**:","lastModifiedDate":"2022-09-25"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"  * `To be added soon`","lastModifiedDate":"2022-09-25"},{"lineNumber":30,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":31,"author":{"gitId":"vvidday"},"content":"* **Tools**:","lastModifiedDate":"2022-09-25"},{"lineNumber":32,"author":{"gitId":"vvidday"},"content":"  * `To be added soon`","lastModifiedDate":"2022-09-25"}],"authorContributionMap":{"vvidday":32}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"This command allows users of the ModuleList application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"HoJunHao2000"},"content":"import Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"HoJunHao2000"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `ModuleListParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"HoJunHao2000"},"content":"import static CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"HoJunHao2000"},"content":":information_source: Don’t forget to update `ModuleListParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2022-10-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"HoJunHao2000"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Module` model. Each field in a Module is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2022-10-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"HoJunHao2000"},"content":"Simply add the following to [`ModuleCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-10-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"HoJunHao2000"},"content":"**`ModuleCard.java`:**","lastModifiedDate":"2022-10-09"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"HoJunHao2000"},"content":"Then insert the following into [`main/resources/view/ModuleListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-10-09"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"HoJunHao2000"},"content":"**`ModuleListCard.fxml`:**","lastModifiedDate":"2022-10-09"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"HoJunHao2000"},"content":"## Modify `Module` to support a `Remark` field","lastModifiedDate":"2022-10-09"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"HoJunHao2000"},"content":"Since `ModuleCard` displays data from a `Module`, we need to update `Module` to get our `Remark` displayed!","lastModifiedDate":"2022-10-09"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"HoJunHao2000"},"content":"### Modify `Module`","lastModifiedDate":"2022-10-09"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"HoJunHao2000"},"content":"We change the constructor of `Module` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2022-10-09"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"HoJunHao2000"},"content":"### Update other usages of `Module`","lastModifiedDate":"2022-10-09"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"HoJunHao2000"},"content":"Unfortunately, a change to `Module` will cause other commands to break, you will have to modify these commands to use the updated `Module`!","lastModifiedDate":"2022-10-09"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"HoJunHao2000"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Module` class to find these commands.","lastModifiedDate":"2022-10-09"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"HoJunHao2000"},"content":"ModuleList stores data by serializing `JsonAdaptedModule` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedModule` to work with our new `Module`!","lastModifiedDate":"2022-10-09"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"HoJunHao2000"},"content":":exclamation: You must delete ModuleList’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause ModuleList to default to an empty address book!","lastModifiedDate":"2022-10-09"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"HoJunHao2000"},"content":"Now that we have finalized the `Module` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2022-10-09"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"HoJunHao2000"},"content":"**`ModuleCard.java`:**","lastModifiedDate":"2022-10-09"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"HoJunHao2000"},"content":"public ModuleCard(Module person, int displayedIndex) {","lastModifiedDate":"2022-10-09"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"HoJunHao2000"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Module`. Since all fields in a `Module` are immutable, we create a new instance of a `Module` with the values that we want and","lastModifiedDate":"2022-10-09"},{"lineNumber":329,"author":{"gitId":"HoJunHao2000"},"content":"save it with `Model#setModule()`.","lastModifiedDate":"2022-10-09"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"HoJunHao2000"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Module: %1$s\";","lastModifiedDate":"2022-10-09"},{"lineNumber":336,"author":{"gitId":"HoJunHao2000"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Module: %1$s\";","lastModifiedDate":"2022-10-09"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"HoJunHao2000"},"content":"        List\u003cModule\u003e lastShownList \u003d model.getFilteredModuleList();","lastModifiedDate":"2022-10-09"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"HoJunHao2000"},"content":"        Module personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":347,"author":{"gitId":"HoJunHao2000"},"content":"        Module editedModule \u003d new Module(","lastModifiedDate":"2022-10-09"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"HoJunHao2000"},"content":"        model.setModule(personToEdit, editedModule);","lastModifiedDate":"2022-10-09"},{"lineNumber":352,"author":{"gitId":"HoJunHao2000"},"content":"        model.updateFilteredModuleList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-09"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"HoJunHao2000"},"content":"        return new CommandResult(generateSuccessMessage(editedModule));","lastModifiedDate":"2022-10-09"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"HoJunHao2000"},"content":"    private String generateSuccessMessage(Module personToEdit) {","lastModifiedDate":"2022-10-09"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"HoJunHao2000"},"content":"This concludes the tutorial for adding a new `Command` to ModuleList.","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"-":367,"HoJunHao2000":34}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Module` class.","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"HoJunHao2000"},"content":"The `address` field in `Module` is actually an instance of the `Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"HoJunHao2000"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditModuleDescriptor` may require more careful inspection.","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"HoJunHao2000"},"content":"Let’s try removing references to `Address` in `EditModuleDescriptor`.","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"HoJunHao2000"},"content":"1. Safe delete the field `address` in `EditModuleDescriptor`.","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"HoJunHao2000"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Module` class will require you to modify its constructor.","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"HoJunHao2000"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `ModuleCard` that has not been removed nor identified.","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"HoJunHao2000"},"content":"A quick look at the `ModuleCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"HoJunHao2000"},"content":"**`ModuleCard.java`**","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"HoJunHao2000"},"content":"**`ModuleCard.fxml`**","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"HoJunHao2000"},"content":"**`invalidModuleModuleList.json`:**","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"HoJunHao2000"},"content":"    \"name\": \"Module with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":100,"HoJunHao2000":12}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"HoJunHao2000"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `Logic`.","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"HoJunHao2000"},"content":"A quick look at the `Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"HoJunHao2000"},"content":"            storage.saveModuleList(model.getModuleList());","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"HoJunHao2000"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `ModuleListParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"HoJunHao2000"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditModuleDescriptor`. Recall that we can verify the contents of `editModuleDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"HoJunHao2000"},"content":"       Module personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":193,"author":{"gitId":"HoJunHao2000"},"content":"       Module editedModule \u003d createEditedModule(personToEdit, editModuleDescriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":194,"author":{"gitId":"HoJunHao2000"},"content":"       if (!personToEdit.isSameModule(editedModule) \u0026\u0026 model.hasModule(editedModule)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"HoJunHao2000"},"content":"       model.setModule(personToEdit, editedModule);","lastModifiedDate":"2022-10-09"},{"lineNumber":198,"author":{"gitId":"HoJunHao2000"},"content":"       model.updateFilteredModuleList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-09"},{"lineNumber":199,"author":{"gitId":"HoJunHao2000"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedModule));","lastModifiedDate":"2022-10-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"HoJunHao2000"},"content":"   * it uses the `setModule()` method (defined in the interface `Model` and implemented in `ModuleManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2022-10-09"},{"lineNumber":205,"author":{"gitId":"HoJunHao2000"},"content":"   * it uses the `updateFilteredModuleList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"HoJunHao2000"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveModuleList(model.getModuleList())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2022-10-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"HoJunHao2000"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonModuleList#saveModuleList()` method which calls the `JsonSerializableModuleList` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2022-10-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"HoJunHao2000"},"content":"    **`JsonSerializableModuleList` constructor:**","lastModifiedDate":"2022-10-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"HoJunHao2000"},"content":"     * Converts a given {@code ReadOnlyModuleList} into this class for Jackson use.","lastModifiedDate":"2022-10-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"HoJunHao2000"},"content":"     * {@code JsonSerializableModuleList}.","lastModifiedDate":"2022-10-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"HoJunHao2000"},"content":"    public JsonSerializableModuleList(ReadOnlyModuleList source) {","lastModifiedDate":"2022-10-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"HoJunHao2000"},"content":"            source.getModuleList()","lastModifiedDate":"2022-10-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"HoJunHao2000"},"content":"                  .map(JsonAdaptedModule::new)","lastModifiedDate":"2022-10-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"HoJunHao2000"},"content":"1. It appears that a `JsonAdaptedModule` is created for each `Module` and then added to the `JsonSerializableModuleList`.","lastModifiedDate":"2022-10-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"HoJunHao2000"},"content":"    5.  Add a new field to `Module`","lastModifiedDate":"2022-10-09"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":278,"HoJunHao2000":23}},{"path":"src/main/java/modtrekt/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.core.LogsCenter;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.util.FileUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"-":61,"HoJunHao2000":3}},{"path":"src/main/java/modtrekt/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Launches the application.","lastModifiedDate":"2022-09-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param args the command line arguments","lastModifiedDate":"2022-09-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        System.out.println(\"Launching...\");","lastModifiedDate":"2022-09-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"-":30,"HoJunHao2000":1}},{"path":"src/main/java/modtrekt/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.core.Config;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.core.LogsCenter;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.core.Version;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.util.ConfigUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.util.StringUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.Logic;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.LogicManager;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.ModelManager;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.ModuleList;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.ReadOnlyModuleList;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.TaskBook;","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.UserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.storage.JsonModuleListStorage;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"import modtrekt.storage.JsonTaskBookStorage;","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.storage.ModuleListStorage;","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.storage.Storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.storage.StorageManager;","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"domoberzin"},"content":"import modtrekt.storage.TaskBookStorage;","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.storage.UserPrefsStorage;","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.ui.Ui;","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.ui.UiManager;","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"HoJunHao2000"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing ModuleList ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"domoberzin"},"content":"        TaskBookStorage taskBookStorage \u003d new JsonTaskBookStorage(userPrefs.getTaskBookFilePath());","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"HoJunHao2000"},"content":"        ModuleListStorage moduleListStorage \u003d new JsonModuleListStorage(userPrefs.getModuleListFilePath());","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"vvidday"},"content":"        storage \u003d new StorageManager(taskBookStorage, moduleListStorage, userPrefsStorage);","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"HoJunHao2000"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s TaskBook and ModelList {@code","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"HoJunHao2000"},"content":"     * userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"HoJunHao2000"},"content":"     * The data from the sample TaskBook and ModelList will be used instead if {@code storage}\u0027s TaskBook and","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"HoJunHao2000"},"content":"     * ModelList is not found,","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"HoJunHao2000"},"content":"     * or an empty TaskBook and ModelList will be used instead if errors occur when reading {@code storage}\u0027s","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"HoJunHao2000"},"content":"     * TaskBook and ModelList.","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"vvidday"},"content":"        Optional\u003cReadOnlyTaskBook\u003e taskBookOptional;","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"vvidday"},"content":"        ReadOnlyTaskBook taskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"vvidday"},"content":"        Optional\u003cReadOnlyModuleList\u003e moduleListOptional;","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"vvidday"},"content":"        ReadOnlyModuleList moduleList;","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"vvidday"},"content":"            taskBookOptional \u003d storage.readTaskBook();","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"vvidday"},"content":"            if (!taskBookOptional.isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"vvidday"},"content":"                logger.info(\"Data file not found. Will be starting with a sample TaskBook\");","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"vvidday"},"content":"            taskBook \u003d taskBookOptional.orElseGet(SampleDataUtil::getSampleTaskBook);","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"vvidday"},"content":"            moduleListOptional \u003d storage.readModuleList();","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"vvidday"},"content":"            if (!moduleListOptional.isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"HoJunHao2000"},"content":"                logger.info(\"Data file not found. Will be starting with a sample ModuleList\");","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"vvidday"},"content":"            moduleList \u003d moduleListOptional.orElseGet(SampleDataUtil::getSampleModuleList);","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"HoJunHao2000"},"content":"            logger.warning(","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"HoJunHao2000"},"content":"                    \"Data file not in the correct format. Will be starting with an empty ModuleList and TaskBook.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"vvidday"},"content":"            taskBook \u003d new TaskBook();","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"vvidday"},"content":"            moduleList \u003d new ModuleList();","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":107,"author":{"gitId":"HoJunHao2000"},"content":"            logger.warning(","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"HoJunHao2000"},"content":"                    \"Problem while reading from the file. Will be starting with an empty ModuleList and TaskBook.\");","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"vvidday"},"content":"            taskBook \u003d new TaskBook();","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"vvidday"},"content":"            moduleList \u003d new ModuleList();","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"vvidday"},"content":"        return new ModelManager(moduleList, taskBook, userPrefs);","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"HoJunHao2000"},"content":"            logger.warning(","lastModifiedDate":"2022-10-13"},{"lineNumber":175,"author":{"gitId":"HoJunHao2000"},"content":"                    \"Problem while reading from the file. Will be starting with an empty ModuleList and TaskBook\");","lastModifiedDate":"2022-10-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"HoJunHao2000"},"content":"        logger.info(\"Starting ModuleList \" + MainApp.VERSION);","lastModifiedDate":"2022-10-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"HoJunHao2000"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping ModtRekt ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"vvidday":21,"domoberzin":3,"-":139,"HoJunHao2000":41}},{"path":"src/main/java/modtrekt/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.commons.core;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":62,"HoJunHao2000":1}},{"path":"src/main/java/modtrekt/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.commons.core;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":78,"HoJunHao2000":1}},{"path":"src/main/java/modtrekt/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.commons.core;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":111,"HoJunHao2000":1}},{"path":"src/main/java/modtrekt/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.commons.core;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"    public static final String MESSAGE_MISSING_COMMAND \u003d \"Please enter a command.\";","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"    public static final String MESSAGE_INVALID_MODULE_DISPLAYED_INDEX \u003d \"The module index provided is invalid\";","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"vvidday":1,"domoberzin":1,"-":8,"HoJunHao2000":2}},{"path":"src/main/java/modtrekt/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.commons.core;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":115,"HoJunHao2000":1}},{"path":"src/main/java/modtrekt/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.commons.core.index;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":53,"HoJunHao2000":1}},{"path":"src/main/java/modtrekt/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.commons.exceptions;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":10,"HoJunHao2000":1}},{"path":"src/main/java/modtrekt/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.commons.exceptions;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"HoJunHao2000":1}},{"path":"src/main/java/modtrekt/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.commons.util;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.MainApp;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":40,"HoJunHao2000":2}},{"path":"src/main/java/modtrekt/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.commons.util;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":34,"HoJunHao2000":1}},{"path":"src/main/java/modtrekt/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.commons.util;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.core.Config;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":20,"HoJunHao2000":3}},{"path":"src/main/java/modtrekt/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.commons.util;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":82,"HoJunHao2000":1}},{"path":"src/main/java/modtrekt/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.commons.util;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.core.LogsCenter;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":139,"HoJunHao2000":3}},{"path":"src/main/java/modtrekt/commons/util/LambdaExceptionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package modtrekt.commons.util;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":" * Allows throwing of checked exceptions from lambda expressions.","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":" * Source: https://stackoverflow.com/questions/27644361/how-can-i-throw-checked-exceptions-from-inside-java-8-streams/","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":" *","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":" * @author PaoloC","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"public final class LambdaExceptionUtil {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"     * Wraps a Consumer to allow for re-throwing checked exceptions.","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"    public static \u003cT, E extends Exception\u003e Consumer\u003cT\u003e rethrowConsumer(ConsumerWithExceptions\u003cT, E\u003e consumer) throws E {","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"        return t -\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"            try {","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"                consumer.accept(t);","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"            } catch (Exception exception) {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"                throwActualException(exception);","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"        };","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"     * Wraps a Function to allow for re-throwing checked exceptions.","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"    public static \u003cT, R, E extends Exception\u003e Function\u003cT, R\u003e rethrowFunction(FunctionWithExceptions\u003cT, R, E\u003e function)","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"            throws E {","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"        return t -\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"            try {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"                return function.apply(t);","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"            } catch (Exception exception) {","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"                throwActualException(exception);","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"                return null;","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"        };","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"    private static \u003cE extends Exception\u003e void throwActualException(Exception exception) throws E {","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"        throw (E) exception;","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"jontmy"},"content":"     * Wraps the Consumer functional interface to allow for re-throwing checked exceptions.","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"jontmy"},"content":"    @FunctionalInterface","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"jontmy"},"content":"    public interface ConsumerWithExceptions\u003cT, E extends Exception\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"jontmy"},"content":"        void accept(T t) throws E;","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"jontmy"},"content":"     * Wraps the Function functional interface to allow for re-throwing checked exceptions.","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"jontmy"},"content":"    @FunctionalInterface","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"jontmy"},"content":"    public interface FunctionWithExceptions\u003cT, R, E extends Exception\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"jontmy"},"content":"        R apply(T t) throws E;","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"jontmy":61}},{"path":"src/main/java/modtrekt/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.commons.util;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"import java.util.List;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":70,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"jontmy"},"content":"     * Pluralizes a word by appending an `s` to the singular form of the word if the count is 0 or more than 1.","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"jontmy"},"content":"     * This utility method does not account for irregular pluralization, e.g. `child` -\u003e `children`.","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"jontmy"},"content":"     * e.g. pluralize(0, \"task\") returns \"0 tasks\"","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"jontmy"},"content":"     * e.g. pluralize(1, \"task\") returns \"1 task\"","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"jontmy"},"content":"     * @param count    the count of the word","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"jontmy"},"content":"     * @param singular the singular form of the word","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"jontmy"},"content":"     * @return the pluralized word with its count","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"jontmy"},"content":"     * @since v1.2","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"jontmy"},"content":"    public static String pluralize(long count, String singular) {","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"jontmy"},"content":"        requireNonNull(singular);","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"jontmy"},"content":"        return String.format(\"%d %s\", count, count \u003d\u003d 1 ? singular : singular + \"s\");","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"jontmy"},"content":"     * Pluralizes a word if the count is 0 or more than 1, with a custom plural form.","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"jontmy"},"content":"     * e.g. pluralize(0, \"child\", \"children\") returns \"0 children\"","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"jontmy"},"content":"     * e.g. pluralize(1, \"child\", \"children\") returns \"1 child\"","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"jontmy"},"content":"     * @param count    the count of the word","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"jontmy"},"content":"     * @param singular the singular form of the word","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"jontmy"},"content":"     * @param plural   the plural form of the word","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"jontmy"},"content":"     * @return the pluralized word with its count","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":97,"author":{"gitId":"jontmy"},"content":"    public static String pluralize(long count, String singular, String plural) {","lastModifiedDate":"2022-10-04"},{"lineNumber":98,"author":{"gitId":"jontmy"},"content":"        requireNonNull(singular);","lastModifiedDate":"2022-10-04"},{"lineNumber":99,"author":{"gitId":"jontmy"},"content":"        requireNonNull(plural);","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"jontmy"},"content":"        return String.format(\"%d %s\", count, count \u003d\u003d 1 ? singular : plural);","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"vvidday"},"content":"     * Python\u0027s shlex for Java.","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"vvidday"},"content":"     * Source: https://stackoverflow.com/questions/1082953/shlex-alternative-for-java","lastModifiedDate":"2022-10-21"},{"lineNumber":106,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":107,"author":{"gitId":"jontmy"},"content":"    public static List\u003cString\u003e shellSplit(CharSequence string) {","lastModifiedDate":"2022-10-24"},{"lineNumber":108,"author":{"gitId":"vvidday"},"content":"        requireNonNull(string);","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"vvidday"},"content":"        List\u003cString\u003e tokens \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"vvidday"},"content":"        boolean escaping \u003d false;","lastModifiedDate":"2022-10-21"},{"lineNumber":111,"author":{"gitId":"vvidday"},"content":"        char quoteChar \u003d \u0027 \u0027;","lastModifiedDate":"2022-10-21"},{"lineNumber":112,"author":{"gitId":"vvidday"},"content":"        boolean quoting \u003d false;","lastModifiedDate":"2022-10-21"},{"lineNumber":113,"author":{"gitId":"vvidday"},"content":"        int lastCloseQuoteIndex \u003d Integer.MIN_VALUE;","lastModifiedDate":"2022-10-21"},{"lineNumber":114,"author":{"gitId":"vvidday"},"content":"        StringBuilder current \u003d new StringBuilder();","lastModifiedDate":"2022-10-21"},{"lineNumber":115,"author":{"gitId":"vvidday"},"content":"        for (int i \u003d 0; i \u003c string.length(); i++) {","lastModifiedDate":"2022-10-21"},{"lineNumber":116,"author":{"gitId":"vvidday"},"content":"            char c \u003d string.charAt(i);","lastModifiedDate":"2022-10-21"},{"lineNumber":117,"author":{"gitId":"vvidday"},"content":"            if (escaping) {","lastModifiedDate":"2022-10-21"},{"lineNumber":118,"author":{"gitId":"vvidday"},"content":"                current.append(c);","lastModifiedDate":"2022-10-21"},{"lineNumber":119,"author":{"gitId":"vvidday"},"content":"                escaping \u003d false;","lastModifiedDate":"2022-10-21"},{"lineNumber":120,"author":{"gitId":"vvidday"},"content":"            } else if (c \u003d\u003d \u0027\\\\\u0027 \u0026\u0026 !(quoting \u0026\u0026 quoteChar \u003d\u003d \u0027\\\u0027\u0027)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":121,"author":{"gitId":"vvidday"},"content":"                escaping \u003d true;","lastModifiedDate":"2022-10-21"},{"lineNumber":122,"author":{"gitId":"vvidday"},"content":"            } else if (quoting \u0026\u0026 c \u003d\u003d quoteChar) {","lastModifiedDate":"2022-10-21"},{"lineNumber":123,"author":{"gitId":"vvidday"},"content":"                quoting \u003d false;","lastModifiedDate":"2022-10-21"},{"lineNumber":124,"author":{"gitId":"vvidday"},"content":"                lastCloseQuoteIndex \u003d i;","lastModifiedDate":"2022-10-21"},{"lineNumber":125,"author":{"gitId":"vvidday"},"content":"            } else if (!quoting \u0026\u0026 (c \u003d\u003d \u0027\\\u0027\u0027 || c \u003d\u003d \u0027\"\u0027)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":126,"author":{"gitId":"vvidday"},"content":"                quoting \u003d true;","lastModifiedDate":"2022-10-21"},{"lineNumber":127,"author":{"gitId":"vvidday"},"content":"                quoteChar \u003d c;","lastModifiedDate":"2022-10-21"},{"lineNumber":128,"author":{"gitId":"vvidday"},"content":"            } else if (!quoting \u0026\u0026 Character.isWhitespace(c)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":129,"author":{"gitId":"vvidday"},"content":"                if (current.length() \u003e 0 || lastCloseQuoteIndex \u003d\u003d (i - 1)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":130,"author":{"gitId":"vvidday"},"content":"                    tokens.add(current.toString());","lastModifiedDate":"2022-10-21"},{"lineNumber":131,"author":{"gitId":"vvidday"},"content":"                    current \u003d new StringBuilder();","lastModifiedDate":"2022-10-21"},{"lineNumber":132,"author":{"gitId":"vvidday"},"content":"                }","lastModifiedDate":"2022-10-21"},{"lineNumber":133,"author":{"gitId":"vvidday"},"content":"            } else {","lastModifiedDate":"2022-10-21"},{"lineNumber":134,"author":{"gitId":"vvidday"},"content":"                current.append(c);","lastModifiedDate":"2022-10-21"},{"lineNumber":135,"author":{"gitId":"vvidday"},"content":"            }","lastModifiedDate":"2022-10-21"},{"lineNumber":136,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":137,"author":{"gitId":"vvidday"},"content":"        if (current.length() \u003e 0 || lastCloseQuoteIndex \u003d\u003d (string.length() - 1)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":138,"author":{"gitId":"vvidday"},"content":"            tokens.add(current.toString());","lastModifiedDate":"2022-10-21"},{"lineNumber":139,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":140,"author":{"gitId":"jontmy"},"content":"        return tokens;","lastModifiedDate":"2022-10-24"},{"lineNumber":141,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"vvidday":40,"jontmy":34,"-":66,"HoJunHao2000":2}},{"path":"src/main/java/modtrekt/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.logic;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.core.GuiSettings;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.commands.CommandResult;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.ReadOnlyModuleList;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.Module;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"vvidday"},"content":"     * Returns the task book.","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"domoberzin"},"content":"     * @see Model#getTaskBook()","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"domoberzin"},"content":"    ReadOnlyTaskBook getTaskBook();","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"HoJunHao2000"},"content":"    /** Returns an unmodifiable view of the filtered list of tasks */","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"domoberzin"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":40,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"vvidday"},"content":"     * Returns the module list.","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":43,"author":{"gitId":"HoJunHao2000"},"content":"     * @see Model#getModuleList()","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":45,"author":{"gitId":"HoJunHao2000"},"content":"    ReadOnlyModuleList getModuleList();","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":47,"author":{"gitId":"HoJunHao2000"},"content":"    /** Returns an unmodifiable view of the filtered list of modules */","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"HoJunHao2000"},"content":"    ObservableList\u003cModule\u003e getFilteredModuleList();","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"HoJunHao2000"},"content":"     * Returns the user prefs\u0027 TaskBook file path.","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"domoberzin"},"content":"    Path getTaskBookFilePath();","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"HoJunHao2000"},"content":"     * Returns the user prefs\u0027 ModuleList file path.","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"HoJunHao2000"},"content":"    Path getModuleListFilePath();","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"vvidday":6,"domoberzin":4,"-":40,"HoJunHao2000":19}},{"path":"src/main/java/modtrekt/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.logic;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.core.GuiSettings;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.core.LogsCenter;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.commands.Command;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.commands.CommandResult;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.parser.ModtrektParser;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.ReadOnlyModuleList;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.Module;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.storage.Storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"HoJunHao2000"},"content":"    private final ModtrektParser modtrektParser;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"HoJunHao2000"},"content":"        modtrektParser \u003d new ModtrektParser();","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"HoJunHao2000"},"content":"        Command command \u003d modtrektParser.parseCommand(commandText);","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"domoberzin"},"content":"            storage.saveTaskBook(model.getTaskBook());","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"HoJunHao2000"},"content":"            storage.saveModuleList(model.getModuleList());","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"domoberzin"},"content":"    public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"domoberzin"},"content":"        return model.getTaskBook();","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"domoberzin"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"domoberzin"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"domoberzin"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"domoberzin"},"content":"        return model.getTaskBookFilePath();","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"HoJunHao2000"},"content":"    public ReadOnlyModuleList getModuleList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"HoJunHao2000"},"content":"        return model.getModuleList();","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"HoJunHao2000"},"content":"    public ObservableList\u003cModule\u003e getFilteredModuleList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"HoJunHao2000"},"content":"        return model.getFilteredModuleList();","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"HoJunHao2000"},"content":"    public Path getModuleListFilePath() {","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"HoJunHao2000"},"content":"        return model.getModuleListFilePath();","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"vvidday":2,"domoberzin":7,"-":67,"HoJunHao2000":22}},{"path":"src/main/java/modtrekt/logic/commands/AddDeadlineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"package modtrekt.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"domoberzin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"import com.beust.jcommander.Parameter;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":"import com.beust.jcommander.Parameters;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"import modtrekt.logic.parser.converters.DeadlineConverter;","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"domoberzin"},"content":"import modtrekt.logic.parser.converters.DescriptionConverter;","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"import modtrekt.logic.parser.converters.ModCodeConverter;","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.task.Deadline;","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.task.Description;","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":" * Adds a deadline.","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"domoberzin"},"content":"@Parameters(commandDescription \u003d \"Adds a deadline to the task book\")","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"domoberzin"},"content":"    public static final String COMMAND_IDENTIFIER \u003d \"-t\";","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a deadline. \"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"vvidday"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"vvidday"},"content":"            + CliSyntax.PREFIX_TASK + \"Description \"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"vvidday"},"content":"            + CliSyntax.PREFIX_DEADLINE + \"YYYY-MM-DD \";","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"vvidday"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New deadline added: %1$s\";","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"domoberzin"},"content":"    @Parameter(names \u003d \"-t\", description \u003d \"Deadline description\",","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"domoberzin"},"content":"        converter \u003d DescriptionConverter.class)","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"domoberzin"},"content":"    private Description description;","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"domoberzin"},"content":"    @Parameter(names \u003d \"-d\", description \u003d \"Due date\", required \u003d true,","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"domoberzin"},"content":"            converter \u003d DeadlineConverter.class)","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"domoberzin"},"content":"    private LocalDate deadline;","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"domoberzin"},"content":"    @Parameter(names \u003d \"-c\", description \u003d \"Module code for deadline\", required \u003d true,","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"domoberzin"},"content":"            converter \u003d ModCodeConverter.class)","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"domoberzin"},"content":"    private ModCode modCode;","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":47,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"domoberzin"},"content":"     * Constructor with no parameters, for use with JCommander.","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"domoberzin"},"content":"    public AddDeadlineCommand() {","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"vvidday"},"content":"     * Creates an AddDeadlineCommand to add the specified {@code Deadline}","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"domoberzin"},"content":"    public AddDeadlineCommand(Description ds, ModCode code, LocalDate deadline) {","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"domoberzin"},"content":"        requireNonNull(ds);","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"domoberzin"},"content":"        requireNonNull(code);","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"domoberzin"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"domoberzin"},"content":"        this.description \u003d ds;","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"domoberzin"},"content":"        this.modCode \u003d code;","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"domoberzin"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"vvidday"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"vvidday"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"domoberzin"},"content":"        System.out.println(modCode);","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"domoberzin"},"content":"        if (!(model.hasModuleWithModCode(this.modCode))) {","lastModifiedDate":"2022-10-22"},{"lineNumber":70,"author":{"gitId":"domoberzin"},"content":"            throw new CommandException(\"Module code does not exist\");","lastModifiedDate":"2022-10-22"},{"lineNumber":71,"author":{"gitId":"domoberzin"},"content":"        }","lastModifiedDate":"2022-10-22"},{"lineNumber":72,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"domoberzin"},"content":"        Deadline newDeadline \u003d new Deadline(description, modCode, this.deadline, false, Task.Priority.NONE);","lastModifiedDate":"2022-10-22"},{"lineNumber":74,"author":{"gitId":"domoberzin"},"content":"        model.addTask(newDeadline);","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"domoberzin"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, newDeadline));","lastModifiedDate":"2022-10-22"},{"lineNumber":76,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"vvidday"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"vvidday"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"vvidday"},"content":"                || (other instanceof AddDeadlineCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"domoberzin"},"content":"                \u0026\u0026 this.description.equals(((AddDeadlineCommand) other).description)","lastModifiedDate":"2022-10-22"},{"lineNumber":83,"author":{"gitId":"domoberzin"},"content":"                \u0026\u0026 this.modCode.equals(((AddDeadlineCommand) other).modCode)","lastModifiedDate":"2022-10-22"},{"lineNumber":84,"author":{"gitId":"domoberzin"},"content":"                \u0026\u0026 this.deadline.equals(((AddDeadlineCommand) other).deadline));","lastModifiedDate":"2022-10-22"},{"lineNumber":85,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"vvidday"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"vvidday":39,"domoberzin":48}},{"path":"src/main/java/modtrekt/logic/commands/AddModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"domoberzin"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"import com.beust.jcommander.Parameter;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":"import com.beust.jcommander.Parameters;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"import modtrekt.logic.parser.converters.ModCodeConverter;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"import modtrekt.logic.parser.converters.ModCreditConverter;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"domoberzin"},"content":"import modtrekt.logic.parser.converters.ModNameConverter;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"import modtrekt.logic.parser.module.ModuleParser;","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.module.ModCredit;","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.module.ModName;","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.module.ModTaskCount;","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.Module;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"HoJunHao2000"},"content":" * Adds a module to the module list.","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"domoberzin"},"content":"@Parameters(commandDescription \u003d \"Add module to the module list\")","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"domoberzin"},"content":"public class AddModuleCommand extends Command {","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"domoberzin"},"content":"    public static final String COMMAND_WORD \u003d \"add module\";","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"domoberzin"},"content":"    public static final String COMMAND_WORD_SHORTHAND \u003d \"add mod\";","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"HoJunHao2000"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New module added: %1$s\";","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"domoberzin"},"content":"    public static final String MESSAGE_DUPLICATE_MODULE \u003d \"This module already exists in the module list\";","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"domoberzin"},"content":"    @Parameter(description \u003d \"code\", required \u003d true,","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"domoberzin"},"content":"            converter \u003d ModCodeConverter.class)","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"domoberzin"},"content":"    private ModCode modCode;","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"domoberzin"},"content":"    @Parameter(names \u003d \"-n\", description \u003d \"Module name\",","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"domoberzin"},"content":"            converter \u003d ModNameConverter.class)","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"domoberzin"},"content":"    private ModName name;","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"domoberzin"},"content":"    @Parameter(names \u003d \"-cr\", description \u003d \"Module credits\",","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"domoberzin"},"content":"            converter \u003d ModCreditConverter.class)","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"domoberzin"},"content":"    private ModCredit credit;","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"domoberzin"},"content":"     * Constructor with no parameters, for JCommander usage.","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"domoberzin"},"content":"    public AddModuleCommand() {","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"domoberzin"},"content":"     * Constructor taking in ModCode only, for modules fetched via NUSMods API.","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"domoberzin"},"content":"    public AddModuleCommand(ModCode code) {","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"domoberzin"},"content":"        requireNonNull(code);","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"domoberzin"},"content":"        this.modCode \u003d code;","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"domoberzin"},"content":"     * Creates an AddModuleCommand to add the specified {@code Module}","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"domoberzin"},"content":"    public AddModuleCommand(ModCode code, ModName name, ModCredit credit) {","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"domoberzin"},"content":"        requireNonNull(code);","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"domoberzin"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"domoberzin"},"content":"        requireNonNull(credit);","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"domoberzin"},"content":"        this.modCode \u003d code;","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"domoberzin"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"domoberzin"},"content":"        this.credit \u003d credit;","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"domoberzin"},"content":"        if (model.hasModuleWithModCode(modCode) || model.hasModuleWithModCode(modCode)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"domoberzin"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MODULE);","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"domoberzin"},"content":"        if (this.name \u003d\u003d null \u0026\u0026 this.credit \u003d\u003d null) {","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"domoberzin"},"content":"            try {","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"domoberzin"},"content":"                Module module \u003d ModuleParser.fetchModule(modCode);","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"domoberzin"},"content":"                if (module \u003d\u003d null) {","lastModifiedDate":"2022-10-25"},{"lineNumber":86,"author":{"gitId":"domoberzin"},"content":"                    throw new CommandException(\"Module code does not exist\");","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"domoberzin"},"content":"                }","lastModifiedDate":"2022-10-25"},{"lineNumber":88,"author":{"gitId":"domoberzin"},"content":"                model.addModule(module);","lastModifiedDate":"2022-10-25"},{"lineNumber":89,"author":{"gitId":"domoberzin"},"content":"                return new CommandResult(String.format(MESSAGE_SUCCESS, module));","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"domoberzin"},"content":"            } catch (IOException | InterruptedException e) {","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"domoberzin"},"content":"                throw new CommandException(","lastModifiedDate":"2022-10-25"},{"lineNumber":92,"author":{"gitId":"domoberzin"},"content":"                        \"Error fetching module data from NUSMods, please try inputting manually\");","lastModifiedDate":"2022-10-25"},{"lineNumber":93,"author":{"gitId":"domoberzin"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"domoberzin"},"content":"        } else if (this.name \u003d\u003d null || this.credit \u003d\u003d null) {","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"domoberzin"},"content":"            throw new CommandException(\"Invalid command\");","lastModifiedDate":"2022-10-25"},{"lineNumber":96,"author":{"gitId":"domoberzin"},"content":"        } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":97,"author":{"gitId":"domoberzin"},"content":"            Module module \u003d new Module(modCode, name, credit, new ModTaskCount(\"0\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"domoberzin"},"content":"            model.addModule(module);","lastModifiedDate":"2022-10-25"},{"lineNumber":99,"author":{"gitId":"domoberzin"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, module));","lastModifiedDate":"2022-10-25"},{"lineNumber":100,"author":{"gitId":"domoberzin"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":106,"author":{"gitId":"domoberzin"},"content":"                || (other instanceof AddModuleCommand // instanceof handles nulls","lastModifiedDate":"2022-10-25"},{"lineNumber":107,"author":{"gitId":"domoberzin"},"content":"                \u0026\u0026 modCode.equals(((AddModuleCommand) other).modCode));","lastModifiedDate":"2022-10-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"domoberzin":78,"-":25,"HoJunHao2000":6}},{"path":"src/main/java/modtrekt/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domoberzin"},"content":"package modtrekt.logic.commands;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"domoberzin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"domoberzin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"import com.beust.jcommander.Parameter;","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":"import com.beust.jcommander.Parameters;","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":"import modtrekt.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"import modtrekt.logic.parser.converters.DeadlineConverter;","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"import modtrekt.logic.parser.converters.DescriptionConverter;","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"domoberzin"},"content":"import modtrekt.logic.parser.converters.ModCodeConverter;","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.Model;","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.task.Deadline;","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.task.Description;","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"domoberzin"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"domoberzin"},"content":" * Adds a task or deadline to the task book.","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"domoberzin"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"domoberzin"},"content":"@Parameters(commandDescription \u003d \"Adds a task or deadline to the task book.\")","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"domoberzin"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"domoberzin"},"content":"    public static final String COMMAND_WORD \u003d \"add task\";","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"domoberzin"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"domoberzin"},"content":"    @Parameter(description \u003d \"Task description\", required \u003d true,","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"domoberzin"},"content":"            converter \u003d DescriptionConverter.class)","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"domoberzin"},"content":"    private Description description;","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"domoberzin"},"content":"    @Parameter(names \u003d \"-c\", description \u003d \"Module code for task\", required \u003d true,","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"domoberzin"},"content":"            converter \u003d ModCodeConverter.class)","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"domoberzin"},"content":"    private ModCode modCode;","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"domoberzin"},"content":"    @Parameter(names \u003d \"-d\", description \u003d \"Due date\",","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"domoberzin"},"content":"            converter \u003d DeadlineConverter.class)","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"domoberzin"},"content":"    private LocalDate deadline;","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":42,"author":{"gitId":"domoberzin"},"content":"     * Constructor with no parameters required, for use with JCommander.","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"domoberzin"},"content":"    public AddTaskCommand() {","lastModifiedDate":"2022-10-22"},{"lineNumber":45,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"domoberzin"},"content":"     * Creates an AddTaskCommand to add the specified {@code Task}","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"domoberzin"},"content":"    public AddTaskCommand(Description ds, ModCode code, LocalDate deadline) {","lastModifiedDate":"2022-10-22"},{"lineNumber":50,"author":{"gitId":"domoberzin"},"content":"        this.description \u003d ds;","lastModifiedDate":"2022-10-22"},{"lineNumber":51,"author":{"gitId":"domoberzin"},"content":"        this.modCode \u003d code;","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"domoberzin"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2022-10-22"},{"lineNumber":53,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"domoberzin"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"domoberzin"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"domoberzin"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"domoberzin"},"content":"        if (!(model.hasModuleWithModCode(this.modCode))) {","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"domoberzin"},"content":"            throw new CommandException(\"Module code does not exist\");","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"domoberzin"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"domoberzin"},"content":"        /* If deadline is not null, a Deadline object is created instead */","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"domoberzin"},"content":"        Task newTask \u003d deadline \u003d\u003d null","lastModifiedDate":"2022-10-22"},{"lineNumber":64,"author":{"gitId":"domoberzin"},"content":"                ? new Task(description, modCode, false, Task.Priority.NONE)","lastModifiedDate":"2022-10-22"},{"lineNumber":65,"author":{"gitId":"domoberzin"},"content":"                : new Deadline(description, modCode, deadline, false, Task.Priority.NONE);","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"domoberzin"},"content":"        model.addTask(newTask);","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"domoberzin"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, newTask));","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"domoberzin"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"domoberzin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"domoberzin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"domoberzin"},"content":"                || (other instanceof AddTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"domoberzin"},"content":"                \u0026\u0026 this.description.equals(((AddTaskCommand) other).description)","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"domoberzin"},"content":"                \u0026\u0026 this.modCode.equals(((AddTaskCommand) other).modCode)","lastModifiedDate":"2022-10-22"},{"lineNumber":76,"author":{"gitId":"domoberzin"},"content":"                \u0026\u0026 (this.deadline \u003d\u003d null || this.deadline.equals(((AddTaskCommand) other).deadline)));","lastModifiedDate":"2022-10-22"},{"lineNumber":77,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"domoberzin"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"domoberzin":78}},{"path":"src/main/java/modtrekt/logic/commands/CdModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"package modtrekt.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":" * Changes the current module that is shown to the user.","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"public class CdModuleCommand extends Command {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"    public static final String COMMAND_WORD \u003d \"cd\";","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \"\u003cmodule code\u003e: cds into specified module.\";","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"    /*","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"    If called with \"cd ..\", isExit is set to true.","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"    Otherwise, moduleCode will be populated.","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"    private final ModCode moduleCode;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"    private final boolean isExit;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"     * Creates a CdModuleCommand to enter the specified {@code moduleCode}","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"    public CdModuleCommand(ModCode moduleCode) {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"vvidday"},"content":"     * Creates an empty CdModuleCommand that exits the current module","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"vvidday"},"content":"    public CdModuleCommand() {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"vvidday"},"content":"        this.moduleCode \u003d null;","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"vvidday"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"vvidday"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"vvidday"},"content":"        if (isExit) {","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"vvidday"},"content":"            ModCode previousCode \u003d model.getCurrentModule();","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"vvidday"},"content":"            if (previousCode \u003d\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"vvidday"},"content":"                throw new CommandException(\"Already showing all modules.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"vvidday"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"vvidday"},"content":"            model.setCurrentModule(null);","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"vvidday"},"content":"            return new CommandResult(String.format(","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"vvidday"},"content":"                    \"Exited module %s, now showing all modules.\", previousCode));","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"vvidday"},"content":"        if (!model.hasModuleWithModCode(moduleCode)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"vvidday"},"content":"            throw new CommandException(String.format(\"Module code %s does not exist.\",","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"vvidday"},"content":"                    moduleCode.toString()));","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"vvidday"},"content":"        model.setCurrentModule(moduleCode);","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"vvidday"},"content":"        return new CommandResult(String.format(\"Changed current module to %s\", moduleCode.toString()));","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"vvidday"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"vvidday":55}},{"path":"src/main/java/modtrekt/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":17,"HoJunHao2000":3}},{"path":"src/main/java/modtrekt/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"midnightfeverrr"},"content":"     * Constructs a {@code CommandResult} with the specified fields,","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"midnightfeverrr"},"content":"     * other fields set to default value.","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":68,"midnightfeverrr":2,"HoJunHao2000":1}},{"path":"src/main/java/modtrekt/logic/commands/DoneModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"midnightfeverrr"},"content":"package modtrekt.logic.commands;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"midnightfeverrr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"midnightfeverrr"},"content":"import com.beust.jcommander.Parameter;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"midnightfeverrr"},"content":"import com.beust.jcommander.Parameters;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"midnightfeverrr"},"content":"import modtrekt.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"midnightfeverrr"},"content":"import modtrekt.logic.parser.converters.ModCodeConverter;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"midnightfeverrr"},"content":"import modtrekt.model.Model;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"midnightfeverrr"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"midnightfeverrr"},"content":"import modtrekt.model.module.Module;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"midnightfeverrr"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"midnightfeverrr"},"content":" * Marks a module as done.","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"midnightfeverrr"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"midnightfeverrr"},"content":"@Parameters(commandDescription \u003d \"Marks a module as done.\")","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"midnightfeverrr"},"content":"public class DoneModuleCommand extends Command {","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"midnightfeverrr"},"content":"    public static final String COMMAND_WORD \u003d \"done\";","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"midnightfeverrr"},"content":"    @Parameter(names \u003d \"-c\", description \u003d \"Module code of the module to mark done\",","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"midnightfeverrr"},"content":"            required \u003d true, converter \u003d ModCodeConverter.class)","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"midnightfeverrr"},"content":"    private ModCode moduleCode;","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"midnightfeverrr"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"midnightfeverrr"},"content":"     * Returns a new DoneModuleCommand object, with no fields initialized, for use with JCommander.","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"midnightfeverrr"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"midnightfeverrr"},"content":"    public DoneModuleCommand() {}","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"midnightfeverrr"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"midnightfeverrr"},"content":"     * Returns a new DoneModuleCommand object.","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"midnightfeverrr"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"midnightfeverrr"},"content":"     * @param moduleCode the module code of the module that wants to be marked as done.","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"midnightfeverrr"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"midnightfeverrr"},"content":"    public DoneModuleCommand(ModCode moduleCode) {","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"midnightfeverrr"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"midnightfeverrr"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"midnightfeverrr"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"midnightfeverrr"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"midnightfeverrr"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"midnightfeverrr"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"midnightfeverrr"},"content":"        ModCode previousCode \u003d model.getCurrentModule();","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"midnightfeverrr"},"content":"        if (previousCode !\u003d null) {","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"midnightfeverrr"},"content":"            throw new CommandException(\"Please exit current module first!\");","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"midnightfeverrr"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"midnightfeverrr"},"content":"        if (!model.hasModuleWithModCode(moduleCode)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"midnightfeverrr"},"content":"            throw new CommandException(String.format(\"Module code %s does not exist.\",","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"midnightfeverrr"},"content":"                    moduleCode.toString()));","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"midnightfeverrr"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"midnightfeverrr"},"content":"        Module target \u003d model.parseModuleFromCode(moduleCode);","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"midnightfeverrr"},"content":"        // Check that the module is not already unarchived.","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"midnightfeverrr"},"content":"        if (target.isDone()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"midnightfeverrr"},"content":"            throw new CommandException(String.format(\"Module %s is already marked as done.\", moduleCode.toString()));","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"midnightfeverrr"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"midnightfeverrr"},"content":"        // Done the module.","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"midnightfeverrr"},"content":"        model.setModule(target, target.done());","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"HoJunHao2000"},"content":"        model.archiveDoneModuleTasks(moduleCode);","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"midnightfeverrr"},"content":"        return new CommandResult(\"Marked module as done.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"midnightfeverrr"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"midnightfeverrr"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"midnightfeverrr":67,"HoJunHao2000":1}},{"path":"src/main/java/modtrekt/logic/commands/EditModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.logic.commands;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"HoJunHao2000"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":"import com.beust.jcommander.Parameter;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"import com.beust.jcommander.Parameters;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.parser.converters.ModCodeConverter;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.parser.converters.ModCreditConverter;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.parser.converters.ModNameConverter;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.Model;","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.ModCredit;","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.ModName;","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.ModTaskCount;","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.Module;","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"HoJunHao2000"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"HoJunHao2000"},"content":" * Edits a module in the module list.","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"HoJunHao2000"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"HoJunHao2000"},"content":"@Parameters(commandDescription \u003d \"Edits a a task in task book.\")","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"HoJunHao2000"},"content":"public class EditModuleCommand extends Command {","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"HoJunHao2000"},"content":"    public static final String COMMAND_WORD \u003d \"edit module\";","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"HoJunHao2000"},"content":"    public static final String MESSAGE_EDIT_MODULE_SUCCESS \u003d \"Module successfully edited: %1$s\";","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"HoJunHao2000"},"content":"    @Parameter(description \u003d \"Module code for the module to be edited\", required \u003d true,","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"HoJunHao2000"},"content":"            converter \u003d ModCodeConverter.class)","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"HoJunHao2000"},"content":"    private ModCode targetModCode;","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"HoJunHao2000"},"content":"    @Parameter(names \u003d \"-c\", description \u003d \"New module code to change to\",","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"HoJunHao2000"},"content":"            converter \u003d ModCodeConverter.class)","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"HoJunHao2000"},"content":"    private ModCode code;","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"HoJunHao2000"},"content":"    @Parameter(names \u003d \"-n\", description \u003d \"New name for the module, quoted if longer than one word\",","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"HoJunHao2000"},"content":"            converter \u003d ModNameConverter.class)","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"HoJunHao2000"},"content":"    private ModName name;","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"HoJunHao2000"},"content":"    @Parameter(names \u003d \"-cr\", description \u003d \"New credit for the module\",","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"HoJunHao2000"},"content":"            converter \u003d ModCreditConverter.class)","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"HoJunHao2000"},"content":"    private ModCredit credit;","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"HoJunHao2000"},"content":"     * Returns a new EditModuleCommand object, with no fields initialized, for use with JCommander.","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"HoJunHao2000"},"content":"    public EditModuleCommand() {","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"HoJunHao2000"},"content":"     * Creates an EditModuleCommand to edit the specified {@code Module}","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"HoJunHao2000"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"HoJunHao2000"},"content":"     * @param targetModCode the ModCode of the module","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"HoJunHao2000"},"content":"     * @param code          the module code that you want to change to","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"HoJunHao2000"},"content":"     * @param name          the module name that you want to change to","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"HoJunHao2000"},"content":"     * @param credit        the module credits that you want to change to","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"HoJunHao2000"},"content":"    public EditModuleCommand(ModCode targetModCode, ModCode code, ModName name, ModCredit credit) {","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"HoJunHao2000"},"content":"        this.targetModCode \u003d targetModCode;","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"HoJunHao2000"},"content":"        this.code \u003d code;","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"HoJunHao2000"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"HoJunHao2000"},"content":"        this.credit \u003d credit;","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"HoJunHao2000"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"HoJunHao2000"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"HoJunHao2000"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"HoJunHao2000"},"content":"        if (!model.hasModuleWithModCode(targetModCode)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"HoJunHao2000"},"content":"            throw new CommandException(String.format(\"Module code %s does not exist.\",","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"HoJunHao2000"},"content":"                    targetModCode.toString()));","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"HoJunHao2000"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"HoJunHao2000"},"content":"        Module targetModule \u003d model.parseModuleFromCode(targetModCode);","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"HoJunHao2000"},"content":"        if (code \u003d\u003d null \u0026\u0026 name \u003d\u003d null \u0026\u0026 credit \u003d\u003d null) {","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"HoJunHao2000"},"content":"            throw new CommandException(\"Please enter a parameter to edit\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"HoJunHao2000"},"content":"                    + \"\\t-c  New module code for the module\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"HoJunHao2000"},"content":"                    + \"\\t-n  New name for the module\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"HoJunHao2000"},"content":"                    + \"\\t-cr New credit for the module\");","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"HoJunHao2000"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":86,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"HoJunHao2000"},"content":"        boolean isDone \u003d targetModule.isDone();","lastModifiedDate":"2022-10-25"},{"lineNumber":88,"author":{"gitId":"HoJunHao2000"},"content":"        ModTaskCount newCount \u003d targetModule.getTaskCount();","lastModifiedDate":"2022-10-25"},{"lineNumber":89,"author":{"gitId":"HoJunHao2000"},"content":"        if (code !\u003d null \u0026\u0026 model.hasModuleWithModCode(code)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"HoJunHao2000"},"content":"            throw new CommandException(String.format(\"Module code %s already exists.\",","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"HoJunHao2000"},"content":"                    code.toString()));","lastModifiedDate":"2022-10-25"},{"lineNumber":92,"author":{"gitId":"HoJunHao2000"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":93,"author":{"gitId":"HoJunHao2000"},"content":"        ModCode newCode \u003d code !\u003d null ? code : targetModule.getCode();","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"HoJunHao2000"},"content":"        ModName newName \u003d name !\u003d null ? name : targetModule.getName();","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"HoJunHao2000"},"content":"        ModCredit newCredit \u003d credit !\u003d null ? credit : targetModule.getCredits();","lastModifiedDate":"2022-10-25"},{"lineNumber":96,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":97,"author":{"gitId":"HoJunHao2000"},"content":"        Module newModule \u003d new Module(newCode, newName, newCredit, newCount, isDone);","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":99,"author":{"gitId":"HoJunHao2000"},"content":"        model.deleteModule(targetModule);","lastModifiedDate":"2022-10-25"},{"lineNumber":100,"author":{"gitId":"HoJunHao2000"},"content":"        model.addModule(newModule);","lastModifiedDate":"2022-10-25"},{"lineNumber":101,"author":{"gitId":"HoJunHao2000"},"content":"        if (!targetModCode.equals(newCode)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":102,"author":{"gitId":"HoJunHao2000"},"content":"            model.updateTaskModule(targetModCode, newCode);","lastModifiedDate":"2022-10-25"},{"lineNumber":103,"author":{"gitId":"HoJunHao2000"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":104,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":105,"author":{"gitId":"HoJunHao2000"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_MODULE_SUCCESS, newModule));","lastModifiedDate":"2022-10-25"},{"lineNumber":106,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":107,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":108,"author":{"gitId":"HoJunHao2000"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":109,"author":{"gitId":"HoJunHao2000"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-25"},{"lineNumber":110,"author":{"gitId":"HoJunHao2000"},"content":"        return Objects.hash(targetModCode, code, name, credit);","lastModifiedDate":"2022-10-25"},{"lineNumber":111,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":112,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":113,"author":{"gitId":"HoJunHao2000"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":114,"author":{"gitId":"HoJunHao2000"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-25"},{"lineNumber":115,"author":{"gitId":"HoJunHao2000"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-25"},{"lineNumber":116,"author":{"gitId":"HoJunHao2000"},"content":"            return true;","lastModifiedDate":"2022-10-25"},{"lineNumber":117,"author":{"gitId":"HoJunHao2000"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":118,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":119,"author":{"gitId":"HoJunHao2000"},"content":"        if (other instanceof EditModuleCommand) {","lastModifiedDate":"2022-10-25"},{"lineNumber":120,"author":{"gitId":"HoJunHao2000"},"content":"            EditModuleCommand newOther \u003d (EditModuleCommand) other;","lastModifiedDate":"2022-10-25"},{"lineNumber":121,"author":{"gitId":"HoJunHao2000"},"content":"            return ((targetModCode \u003d\u003d null \u0026\u0026 newOther.targetModCode \u003d\u003d null)","lastModifiedDate":"2022-10-25"},{"lineNumber":122,"author":{"gitId":"HoJunHao2000"},"content":"                    || targetModCode.equals(newOther.targetModCode))","lastModifiedDate":"2022-10-25"},{"lineNumber":123,"author":{"gitId":"HoJunHao2000"},"content":"                    \u0026\u0026 ((code \u003d\u003d null \u0026\u0026 newOther.code \u003d\u003d null)","lastModifiedDate":"2022-10-25"},{"lineNumber":124,"author":{"gitId":"HoJunHao2000"},"content":"                    || code.equals(newOther.code))","lastModifiedDate":"2022-10-25"},{"lineNumber":125,"author":{"gitId":"HoJunHao2000"},"content":"                    \u0026\u0026 ((name \u003d\u003d null \u0026\u0026 newOther.name \u003d\u003d null)","lastModifiedDate":"2022-10-25"},{"lineNumber":126,"author":{"gitId":"HoJunHao2000"},"content":"                    || name.equals(newOther.name))","lastModifiedDate":"2022-10-25"},{"lineNumber":127,"author":{"gitId":"HoJunHao2000"},"content":"                    \u0026\u0026 ((credit \u003d\u003d null \u0026\u0026 newOther.credit \u003d\u003d null)","lastModifiedDate":"2022-10-25"},{"lineNumber":128,"author":{"gitId":"HoJunHao2000"},"content":"                    || credit.equals(newOther.credit));","lastModifiedDate":"2022-10-25"},{"lineNumber":129,"author":{"gitId":"HoJunHao2000"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":130,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":131,"author":{"gitId":"HoJunHao2000"},"content":"        return false;","lastModifiedDate":"2022-10-25"},{"lineNumber":132,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":133,"author":{"gitId":"HoJunHao2000"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"HoJunHao2000":133}},{"path":"src/main/java/modtrekt/logic/commands/EditTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"package modtrekt.logic.commands;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"import java.util.List;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"import com.beust.jcommander.Parameter;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"import com.beust.jcommander.Parameters;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"import modtrekt.commons.core.Messages;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"import modtrekt.commons.core.index.Index;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.parser.converters.DeadlineConverter;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.parser.converters.DescriptionConverter;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.parser.converters.IndexConverter;","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.parser.converters.ModCodeConverter;","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.Model;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Deadline;","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Description;","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":" * Edits a task in the task book.","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"@Parameters(commandDescription \u003d \"Edits a a task in task book.\")","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"vvidday"},"content":"public class EditTaskCommand extends Command {","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"HoJunHao2000"},"content":"    public static final String COMMAND_WORD \u003d \"edit task\";","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"vvidday"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Task successfully edited: %1$s\";","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"HoJunHao2000"},"content":"    @Parameter(description \u003d \"Index of the task to edit\", required \u003d true, converter \u003d IndexConverter.class)","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"vvidday"},"content":"    private Index targetIndex;","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"    @Parameter(names \u003d \"-c\", description \u003d \"New module code for the task\",","lastModifiedDate":"2022-10-22"},{"lineNumber":40,"author":{"gitId":"vvidday"},"content":"            converter \u003d ModCodeConverter.class)","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"vvidday"},"content":"    private ModCode targetModule;","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"    @Parameter(names \u003d \"-d\", description \u003d \"New deadline for the task\",","lastModifiedDate":"2022-10-22"},{"lineNumber":44,"author":{"gitId":"vvidday"},"content":"            converter \u003d DeadlineConverter.class)","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"vvidday"},"content":"    private LocalDate targetDeadline;","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"jontmy"},"content":"    @Parameter(names \u003d \"-ds\", description \u003d \"New description for the task, quoted if longer than one word\",","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"jontmy"},"content":"            converter \u003d DescriptionConverter.class)","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"vvidday"},"content":"    private Description targetDescription;","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"vvidday"},"content":"     * Returns a new EditTaskCommand object, with no fields initialized, for use with JCommander.","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"vvidday"},"content":"    public EditTaskCommand() {","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"vvidday"},"content":"     * Creates an EditTaskCommand to edit the specified {@code Task}","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"vvidday"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"HoJunHao2000"},"content":"     * @param targetIndex       the index of the task to edit","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"vvidday"},"content":"     * @param targetModule      the ModCode that you want to change to","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"vvidday"},"content":"     * @param targetDeadline    the Deadline that you want to change to","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"vvidday"},"content":"     * @param targetDescription the description that you want to change to","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"vvidday"},"content":"    public EditTaskCommand(Index targetIndex, ModCode targetModule, LocalDate targetDeadline,","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"vvidday"},"content":"                           Description targetDescription) {","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"vvidday"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"vvidday"},"content":"        this.targetModule \u003d targetModule;","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"vvidday"},"content":"        this.targetDeadline \u003d targetDeadline;","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"vvidday"},"content":"        this.targetDescription \u003d targetDescription;","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"vvidday"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"vvidday"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"vvidday"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"vvidday"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"vvidday"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"vvidday"},"content":"        Task taskToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"HoJunHao2000"},"content":"        if (targetModule \u003d\u003d null \u0026\u0026 targetDeadline \u003d\u003d null \u0026\u0026 targetDescription \u003d\u003d null) {","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"HoJunHao2000"},"content":"            throw new CommandException(\"Please enter a parameter to edit\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":86,"author":{"gitId":"HoJunHao2000"},"content":"                    + \"\\t-c  New module code for the task\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"HoJunHao2000"},"content":"                    + \"\\t-d  New deadline for the task\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":88,"author":{"gitId":"HoJunHao2000"},"content":"                    + \"\\t-ds New description for the task\");","lastModifiedDate":"2022-10-25"},{"lineNumber":89,"author":{"gitId":"HoJunHao2000"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"vvidday"},"content":"        boolean archived \u003d taskToEdit.isArchived();","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"vvidday"},"content":"        Task.Priority priority \u003d taskToEdit.getPriority();","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"vvidday"},"content":"        ModCode code \u003d targetModule !\u003d null ? targetModule : taskToEdit.getModule();","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"vvidday"},"content":"        if (!model.hasModuleWithModCode(code)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"vvidday"},"content":"            throw new CommandException(String.format(\"Module code %s does not exist.\",","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"vvidday"},"content":"                    code.toString()));","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"vvidday"},"content":"        Description description \u003d targetDescription !\u003d null ? targetDescription : taskToEdit.getDescription();","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"vvidday"},"content":"        LocalDate deadline \u003d targetDeadline !\u003d null","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"vvidday"},"content":"                ? targetDeadline","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"vvidday"},"content":"                : taskToEdit instanceof Deadline","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"vvidday"},"content":"                ? ((Deadline) taskToEdit).getDueDate()","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"vvidday"},"content":"                : null;","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"vvidday"},"content":"        Task newTask \u003d deadline !\u003d null","lastModifiedDate":"2022-10-21"},{"lineNumber":106,"author":{"gitId":"vvidday"},"content":"                ? new Deadline(description, code, deadline, archived, priority)","lastModifiedDate":"2022-10-21"},{"lineNumber":107,"author":{"gitId":"vvidday"},"content":"                : new Task(description, code, archived, priority);","lastModifiedDate":"2022-10-21"},{"lineNumber":108,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"vvidday"},"content":"        model.deleteTask(taskToEdit);","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"vvidday"},"content":"        model.addTask(newTask);","lastModifiedDate":"2022-10-21"},{"lineNumber":111,"author":{"gitId":"vvidday"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, newTask));","lastModifiedDate":"2022-10-21"},{"lineNumber":112,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":113,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":114,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":115,"author":{"gitId":"vvidday"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-21"},{"lineNumber":116,"author":{"gitId":"vvidday"},"content":"        return Objects.hash(targetIndex, targetModule, targetDeadline, targetDescription);","lastModifiedDate":"2022-10-21"},{"lineNumber":117,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":118,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":119,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":120,"author":{"gitId":"vvidday"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-21"},{"lineNumber":121,"author":{"gitId":"HoJunHao2000"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-25"},{"lineNumber":122,"author":{"gitId":"HoJunHao2000"},"content":"            return true;","lastModifiedDate":"2022-10-25"},{"lineNumber":123,"author":{"gitId":"HoJunHao2000"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":124,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":125,"author":{"gitId":"HoJunHao2000"},"content":"        if (other instanceof EditTaskCommand) {","lastModifiedDate":"2022-10-25"},{"lineNumber":126,"author":{"gitId":"HoJunHao2000"},"content":"            EditTaskCommand newOther \u003d (EditTaskCommand) other;","lastModifiedDate":"2022-10-25"},{"lineNumber":127,"author":{"gitId":"HoJunHao2000"},"content":"            return ((targetIndex \u003d\u003d null \u0026\u0026 newOther.targetIndex \u003d\u003d null) || targetIndex.equals(newOther.targetIndex))","lastModifiedDate":"2022-10-25"},{"lineNumber":128,"author":{"gitId":"HoJunHao2000"},"content":"                    \u0026\u0026 ((targetModule \u003d\u003d null \u0026\u0026 newOther.targetModule \u003d\u003d null)","lastModifiedDate":"2022-10-25"},{"lineNumber":129,"author":{"gitId":"HoJunHao2000"},"content":"                    || targetModule.equals(newOther.targetModule))","lastModifiedDate":"2022-10-25"},{"lineNumber":130,"author":{"gitId":"HoJunHao2000"},"content":"                    \u0026\u0026 ((targetDescription \u003d\u003d null \u0026\u0026 newOther.targetDescription \u003d\u003d null)","lastModifiedDate":"2022-10-25"},{"lineNumber":131,"author":{"gitId":"HoJunHao2000"},"content":"                    || targetDescription.equals(newOther.targetDescription))","lastModifiedDate":"2022-10-25"},{"lineNumber":132,"author":{"gitId":"HoJunHao2000"},"content":"                    \u0026\u0026 ((targetDeadline \u003d\u003d null \u0026\u0026 newOther.targetDeadline \u003d\u003d null)","lastModifiedDate":"2022-10-25"},{"lineNumber":133,"author":{"gitId":"HoJunHao2000"},"content":"                    || targetDeadline.equals(newOther.targetDeadline));","lastModifiedDate":"2022-10-25"},{"lineNumber":134,"author":{"gitId":"HoJunHao2000"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":135,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":136,"author":{"gitId":"HoJunHao2000"},"content":"        return false;","lastModifiedDate":"2022-10-25"},{"lineNumber":137,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":138,"author":{"gitId":"vvidday"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"vvidday":108,"jontmy":4,"HoJunHao2000":26}},{"path":"src/main/java/modtrekt/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting ModtRekt as requested ...\";","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"domoberzin":1,"-":16,"HoJunHao2000":2}},{"path":"src/main/java/modtrekt/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":19,"HoJunHao2000":2}},{"path":"src/main/java/modtrekt/logic/commands/RemoveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"package modtrekt.logic.commands;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"import modtrekt.commons.core.Messages;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"import modtrekt.commons.core.index.Index;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.module.Module;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":" * Deletes a module identified using it\u0027s displayed index from the module list.","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"HoJunHao2000"},"content":"public class RemoveCommand extends Command {","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"    public static final String COMMAND_WORD \u003d \"remove\";","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"HoJunHao2000"},"content":"            + \": Deletes the task/module identified by the index number.\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"HoJunHao2000"},"content":"            + \"Prefixes: \" + CliSyntax.PREFIX_MODULE + \": Modules, \" + CliSyntax.PREFIX_TASK + \": Tasks\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"HoJunHao2000"},"content":"            + \"Format: \" + COMMAND_WORD + \" \" + CliSyntax.PREFIX_MODULE + \" \u003cINDEX\u003e\";","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"    public static final String MESSAGE_DELETE_MODULE_SUCCESS \u003d \"Deleted Module: %1$s\";","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"HoJunHao2000"},"content":"    public RemoveCommand(Index targetIndex) {","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"vvidday"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"vvidday"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"vvidday"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"vvidday"},"content":"        List\u003cModule\u003e lastShownList \u003d model.getFilteredModuleList();","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"vvidday"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"vvidday"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MODULE_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"vvidday"},"content":"        Module moduleToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"vvidday"},"content":"        model.deleteModule(moduleToDelete);","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"domoberzin"},"content":"        model.deleteTasksOfModule(moduleToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"vvidday"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_MODULE_SUCCESS, moduleToDelete));","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"vvidday"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"vvidday"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"HoJunHao2000"},"content":"                || (other instanceof RemoveCommand // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"HoJunHao2000"},"content":"                \u0026\u0026 targetIndex.equals(((RemoveCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"vvidday"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"vvidday":44,"domoberzin":1,"HoJunHao2000":9}},{"path":"src/main/java/modtrekt/logic/commands/RemoveTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domoberzin"},"content":"package modtrekt.logic.commands;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"domoberzin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"domoberzin"},"content":"import java.util.List;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"import modtrekt.commons.core.Messages;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":"import modtrekt.commons.core.index.Index;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":"import modtrekt.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.Model;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":" * Deletes a task identified using it\u0027s displayed index from the task book.","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"domoberzin"},"content":"public class RemoveTaskCommand extends Command {","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":"    public static final String COMMAND_WORD \u003d \"remove\";","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"domoberzin"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"            + \": Deletes the task/module identified by the index number.\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"HoJunHao2000"},"content":"            + \"Prefixes: \" + CliSyntax.PREFIX_MODULE + \": Modules, \" + CliSyntax.PREFIX_TASK + \": Tasks\\n\"","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"HoJunHao2000"},"content":"            + \"Format: \" + COMMAND_WORD + \" \" + CliSyntax.PREFIX_MODULE + \" \u003cINDEX\u003e\";","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Removed Task: %1$s\";","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"domoberzin"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"domoberzin"},"content":"    public RemoveTaskCommand(Index targetIndex) {","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"domoberzin"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"domoberzin"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"domoberzin"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"domoberzin"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"domoberzin"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"domoberzin"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"domoberzin"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"domoberzin"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"domoberzin"},"content":"        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"domoberzin"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"domoberzin"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"domoberzin"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"domoberzin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"domoberzin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"domoberzin"},"content":"                || (other instanceof RemoveTaskCommand // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"domoberzin"},"content":"                \u0026\u0026 targetIndex.equals(((RemoveTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"domoberzin"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"vvidday":4,"domoberzin":46,"-":1,"HoJunHao2000":3}},{"path":"src/main/java/modtrekt/logic/commands/UndoneModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"midnightfeverrr"},"content":"package modtrekt.logic.commands;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"midnightfeverrr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"midnightfeverrr"},"content":"import com.beust.jcommander.Parameter;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"midnightfeverrr"},"content":"import com.beust.jcommander.Parameters;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"midnightfeverrr"},"content":"import modtrekt.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"midnightfeverrr"},"content":"import modtrekt.logic.parser.converters.ModCodeConverter;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"midnightfeverrr"},"content":"import modtrekt.model.Model;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"midnightfeverrr"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"midnightfeverrr"},"content":"import modtrekt.model.module.Module;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"midnightfeverrr"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"midnightfeverrr"},"content":" * Marks a module as undone.","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"midnightfeverrr"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"midnightfeverrr"},"content":"@Parameters(commandDescription \u003d \"Marks a module as done.\")","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"midnightfeverrr"},"content":"public class UndoneModuleCommand extends Command {","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"midnightfeverrr"},"content":"    public static final String COMMAND_WORD \u003d \"undone\";","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"midnightfeverrr"},"content":"    @Parameter(names \u003d \"-c\", description \u003d \"Module code of the module to mark undone\",","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"midnightfeverrr"},"content":"            required \u003d true, converter \u003d ModCodeConverter.class)","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"midnightfeverrr"},"content":"    private ModCode moduleCode;","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"midnightfeverrr"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"midnightfeverrr"},"content":"     * Returns a new UndoneModuleCommand object, with no fields initialized, for use with JCommander.","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"midnightfeverrr"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"midnightfeverrr"},"content":"    public UndoneModuleCommand() {}","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"midnightfeverrr"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"midnightfeverrr"},"content":"     * Returns a new UndoneModuleCommand object.","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"midnightfeverrr"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"midnightfeverrr"},"content":"     * @param moduleCode the module code of the module that wants to be marked as undone.","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"midnightfeverrr"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"midnightfeverrr"},"content":"    public UndoneModuleCommand(ModCode moduleCode) {","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"midnightfeverrr"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"midnightfeverrr"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"midnightfeverrr"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"midnightfeverrr"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"midnightfeverrr"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"midnightfeverrr"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"midnightfeverrr"},"content":"        ModCode previousCode \u003d model.getCurrentModule();","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"midnightfeverrr"},"content":"        if (previousCode !\u003d null) {","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"midnightfeverrr"},"content":"            throw new CommandException(\"Please exit current module first!\");","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"midnightfeverrr"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"midnightfeverrr"},"content":"        if (!model.hasModuleWithModCode(moduleCode)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"midnightfeverrr"},"content":"            throw new CommandException(String.format(\"Module code %s does not exist.\",","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"midnightfeverrr"},"content":"                    moduleCode.toString()));","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"midnightfeverrr"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"midnightfeverrr"},"content":"        Module target \u003d model.parseModuleFromCode(moduleCode);","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"midnightfeverrr"},"content":"        // Check that the module is not already unarchived.","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"midnightfeverrr"},"content":"        if (!target.isDone()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"midnightfeverrr"},"content":"            throw new CommandException(String.format(\"Module %s is already marked as undone.\", moduleCode.toString()));","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"midnightfeverrr"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"midnightfeverrr"},"content":"        // Undone the module.","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"midnightfeverrr"},"content":"        model.setModule(target, target.undone());","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"midnightfeverrr"},"content":"        return new CommandResult(\"Marked module as undone.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"midnightfeverrr"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"midnightfeverrr"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"midnightfeverrr":67}},{"path":"src/main/java/modtrekt/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.logic.commands.exceptions;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":16,"HoJunHao2000":1}},{"path":"src/main/java/modtrekt/logic/commands/tasks/ArchiveTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package modtrekt.logic.commands.tasks;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import com.beust.jcommander.Parameter;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"import com.beust.jcommander.Parameters;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"import modtrekt.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"import modtrekt.logic.commands.Command;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"import modtrekt.logic.commands.CommandResult;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"import modtrekt.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"import modtrekt.logic.parser.converters.IndexConverter;","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"import modtrekt.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":" * Archives a task in the task book.","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"@Parameters(commandDescription \u003d \"Archives a task in the task book.\")","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"public class ArchiveTaskCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"    public static final String COMMAND_WORD \u003d \"archive\";","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"    @Parameter(names \u003d \"-t\", description \u003d \"Index of the task to archive\",","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"            required \u003d true, converter \u003d IndexConverter.class)","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"    private Index index;","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"     * Returns a new ArchiveTaskCommand object, with no fields initialized, for use with JCommander.","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"    public ArchiveTaskCommand() {","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"     * Returns a new ArchiveTaskCommand object.","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"     * @param index the index of the task to be archived","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"    public ArchiveTaskCommand(Index index) {","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"jontmy"},"content":"        List\u003cTask\u003e tasks \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"vvidday"},"content":"        // Check that there is at least one task.","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"vvidday"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"vvidday"},"content":"            throw new CommandException(\"There are no tasks.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"jontmy"},"content":"        // Check that the task index is not out of bounds.","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"jontmy"},"content":"        // The 0-based index is guaranteed by the Index class invariant to be \u003e\u003d 0.","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"jontmy"},"content":"        if (index.getZeroBased() \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"jontmy"},"content":"            throw new CommandException(String.format(\"Task index must an integer between 1 and %d inclusive.\",","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"jontmy"},"content":"                    tasks.size()));","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"jontmy"},"content":"        Task target \u003d model.getFilteredTaskList().get(index.getZeroBased());","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"jontmy"},"content":"        // Check that the task is not already unarchived.","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"jontmy"},"content":"        if (target.isArchived()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"jontmy"},"content":"            throw new CommandException(String.format(\"Task #%d is already archived.\", index.getOneBased()));","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"jontmy"},"content":"        // Archive the task.","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"jontmy"},"content":"        model.setTask(target, target.archive());","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"jontmy"},"content":"        return new CommandResult(\"Archived task.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"vvidday":5,"jontmy":63}},{"path":"src/main/java/modtrekt/logic/commands/tasks/ListTasksCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package modtrekt.logic.commands.tasks;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import com.beust.jcommander.Parameter;","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"import com.beust.jcommander.Parameters;","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"import modtrekt.logic.commands.Command;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"import modtrekt.logic.commands.CommandResult;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"import modtrekt.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"import modtrekt.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":" * Lists all tasks.","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"@Parameters(commandDescription \u003d \"List tasks in the task book.\")","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"public class ListTasksCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"    public static final String COMMAND_WORD \u003d \"ls\";","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"    @Parameter(names \u003d \"-a\", description \u003d \"Show all tasks\")","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"    private boolean areArchivedTasksShown;","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"     * Returns a new ListTasksCommand object, with no fields initialized, for use with JCommander.","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"    public ListTasksCommand() {","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"    public ListTasksCommand(boolean areArchivedTasksShown) {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"        this.areArchivedTasksShown \u003d areArchivedTasksShown;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"        if (areArchivedTasksShown) {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"            model.updateFilteredTaskList(Model.PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"            return new CommandResult(\"Listed all tasks, including those archived.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"        } else {","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"            model.updateFilteredTaskList(Model.PREDICATE_HIDE_ARCHIVED_TASKS);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"            return new CommandResult(\"Listed all unarchived tasks.\");","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"jontmy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"                || (other instanceof ListTasksCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"jontmy"},"content":"                \u0026\u0026 areArchivedTasksShown \u003d\u003d (((ListTasksCommand) other).areArchivedTasksShown));","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"jontmy":48}},{"path":"src/main/java/modtrekt/logic/commands/tasks/PrioritizeTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"package modtrekt.logic.commands.tasks;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"import java.util.List;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"import com.beust.jcommander.Parameter;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"import com.beust.jcommander.Parameters;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"import modtrekt.commons.core.index.Index;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.commands.Command;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.commands.CommandResult;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.parser.converters.IndexConverter;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.parser.converters.PriorityConverter;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.Model;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":" * Sets the priority of a task to a specified level.","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"@Parameters(commandDescription \u003d \"Assigns a priority rating to a task in the task book.\")","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"public class PrioritizeTaskCommand extends Command {","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"    public static final String COMMAND_WORD \u003d \"prioritize\";","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"    @Parameter(names \u003d \"-t\", description \u003d \"Index of the task to set the priority\",","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"            required \u003d true, converter \u003d IndexConverter.class)","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":"    private Index index;","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"    @Parameter(names \u003d \"-p\", description \u003d \"Priority level for the task\",","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"            required \u003d true, converter \u003d PriorityConverter.class)","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"vvidday"},"content":"    private Task.Priority priority;","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"vvidday"},"content":"     * Returns a new PrioritizeTaskCommand object, with no fields initialized, for use with JCommander.","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"vvidday"},"content":"    public PrioritizeTaskCommand() {","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"vvidday"},"content":"     * Returns a new PrioritizeTaskCommand object.","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"vvidday"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"vvidday"},"content":"     * @param index    the index of the task to prioritize","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"vvidday"},"content":"     * @param priority the priority level to set the task","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"vvidday"},"content":"    public PrioritizeTaskCommand(Index index, Task.Priority priority) {","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"vvidday"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"vvidday"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"vvidday"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"vvidday"},"content":"        List\u003cTask\u003e tasks \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"vvidday"},"content":"        // Check that there is at least one task.","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"vvidday"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"vvidday"},"content":"            throw new CommandException(\"There are no tasks.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"vvidday"},"content":"        // Check that the task index is not out of bounds.","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"vvidday"},"content":"        // The 0-based index is guaranteed by the Index class invariant to be \u003e\u003d 0.","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"vvidday"},"content":"        if (index.getZeroBased() \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"jontmy"},"content":"            throw new CommandException(String.format(\"Task index must an integer between 1 and %d inclusive.\",","lastModifiedDate":"2022-10-22"},{"lineNumber":61,"author":{"gitId":"vvidday"},"content":"                    tasks.size()));","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"vvidday"},"content":"        Task target \u003d tasks.get(index.getZeroBased());","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"vvidday"},"content":"        // Check that the task does not already have the same priority rating.","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"vvidday"},"content":"        if (target.getPriority() \u003d\u003d priority) {","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"vvidday"},"content":"            if (priority \u003d\u003d Task.Priority.NONE) {","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"vvidday"},"content":"                throw new CommandException(String.format(\"Task #%d has already had no priority set.\",","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"vvidday"},"content":"                        index.getOneBased()","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"vvidday"},"content":"                ));","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"vvidday"},"content":"            }","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"vvidday"},"content":"            throw new CommandException(String.format(\"Task #%d has already been set to %s priority.\",","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"vvidday"},"content":"                    index.getOneBased(),","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"vvidday"},"content":"                    priority","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"vvidday"},"content":"            ));","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"vvidday"},"content":"        // Set the priority rating for the task.","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"vvidday"},"content":"        model.setTask(target, target.setPriority(priority));","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"vvidday"},"content":"        return new CommandResult(String.format(\"Set task #%d\u0027s priority to %s.\", index.getOneBased(), priority));","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"vvidday"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"vvidday"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"vvidday"},"content":"            return true;","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"vvidday"},"content":"        if (!(other instanceof PrioritizeTaskCommand)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"vvidday"},"content":"            return false;","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"vvidday"},"content":"        PrioritizeTaskCommand that \u003d (PrioritizeTaskCommand) other;","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"vvidday"},"content":"        return this.index.equals(that.index) \u0026\u0026 priority \u003d\u003d that.priority;","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"vvidday"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"vvidday"},"content":"        return Objects.hash(index, priority);","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"vvidday"},"content":"    public String toString() {","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"vvidday"},"content":"        return \"PrioritizeTaskCommand{\" + \"index\u003d\" + index + \", priority\u003d\" + priority + \u0027}\u0027;","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"vvidday"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"vvidday":102,"jontmy":2}},{"path":"src/main/java/modtrekt/logic/commands/tasks/UnarchiveTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package modtrekt.logic.commands.tasks;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import com.beust.jcommander.Parameter;","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"import com.beust.jcommander.Parameters;","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"import modtrekt.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"import modtrekt.logic.commands.Command;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"import modtrekt.logic.commands.CommandResult;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"import modtrekt.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"import modtrekt.logic.parser.converters.IndexConverter;","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"import modtrekt.model.Model;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":" * Unarchives a task in the task book.","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"@Parameters(commandDescription \u003d \"Unarchives a task in the task book.\")","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"public class UnarchiveTaskCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"    public static final String COMMAND_WORD \u003d \"unarchive\";","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"    @Parameter(names \u003d \"-t\", description \u003d \"Index of the task to unarchive\",","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"            required \u003d true, converter \u003d IndexConverter.class)","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"    private Index index;","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"     * Returns a new UnarchiveTaskCommand object, with no fields initialized, for use with JCommander.","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"    public UnarchiveTaskCommand() {","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"     * Returns a new UnarchiveTaskCommand object.","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"     * @param index   the index of the task to be unarchived","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"    public UnarchiveTaskCommand(Index index) {","lastModifiedDate":"2022-10-22"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"jontmy"},"content":"        List\u003cTask\u003e tasks \u003d model.getFilteredTaskList();","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"vvidday"},"content":"        // Check that there is at least one task.","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"vvidday"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"vvidday"},"content":"            throw new CommandException(\"There are no tasks.\");","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"jontmy"},"content":"        // Check that the task index is not out of bounds.","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"jontmy"},"content":"        // The 0-based index is guaranteed by the Index class invariant to be \u003e\u003d 0.","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"jontmy"},"content":"        if (index.getZeroBased() \u003e\u003d tasks.size()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"jontmy"},"content":"            throw new CommandException(String.format(\"Task index must an integer between 1 and %d inclusive.\",","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"vvidday"},"content":"                    tasks.size()));","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"jontmy"},"content":"        Task target \u003d model.getFilteredTaskList().get(index.getZeroBased());","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"jontmy"},"content":"        // Check that the task is not already unarchived.","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"jontmy"},"content":"        if (!target.isArchived()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"jontmy"},"content":"            throw new CommandException(String.format(\"Task #%d is already unarchived.\", index.getOneBased()));","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"jontmy"},"content":"        // Unarchive the task.","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"jontmy"},"content":"        model.setTask(target, target.unarchive());","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"jontmy"},"content":"        return new CommandResult(\"Unarchived task.\");","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"vvidday":5,"jontmy":62}},{"path":"src/main/java/modtrekt/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"-":59,"HoJunHao2000":1}},{"path":"src/main/java/modtrekt/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"     * Returns true if the given flag is present in the given arguments string.","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"     * Flags are prefixes without arguments, e.g. {@code -A}.","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"     * @param argsString Arguments string of the form: {@code preamble [\u003cprefix\u003evalue] ... \u003cflag\u003e ... [\u003cprefix\u003evalue]}","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"     * @param flag       Flag to search for","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"     * @return true if the flag is present in the arguments string","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"    public static boolean isFlagPresent(String argsString, Prefix flag) {","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"        return !findPrefixPositions(argsString, flag).isEmpty();","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"jontmy":12,"-":147,"HoJunHao2000":1}},{"path":"src/main/java/modtrekt/logic/parser/CdCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"package modtrekt.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.commands.CdModuleCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.commands.Command;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":" * Parser for a cd command that returns a CdModuleCommand","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"public class CdCommandParser implements Parser\u003cCdModuleCommand\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"     * Parses the give {@code string} in the context of the CdModuleCommand.","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"     * @throws ParseException if the provided module code is invalid","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"    public Command parse(String args) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"        ArgumentMultimap argMultiMap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"        String preamble \u003d argMultiMap.getPreamble();","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":"        if (preamble.equals(\"\")) {","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"            throw new ParseException(\"Please provide a module code.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"        if (preamble.equals(\"..\")) {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"            return new CdModuleCommand();","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"            ModCode moduleCode \u003d new ModCode(preamble);","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"            return new CdModuleCommand(moduleCode);","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"vvidday"},"content":"        } catch (IllegalArgumentException exception) {","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"vvidday"},"content":"            throw new ParseException(String.format(\"%s is not a valid module code.\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"vvidday"},"content":"                    + ModCode.MESSAGE_CONSTRAINTS, preamble));","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"vvidday"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"vvidday":37}},{"path":"src/main/java/modtrekt/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"    public static final Prefix PREFIX_TASK \u003d new Prefix(\"-t \");","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":"    public static final Prefix PREFIX_MODULE \u003d new Prefix(\"-m \");","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":"    public static final Prefix PREFIX_DEADLINE \u003d new Prefix(\"-d \");","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"    public static final Prefix PREFIX_MOD_NAME \u003d new Prefix(\"-n \");","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"    public static final Prefix PREFIX_MOD_CODE \u003d new Prefix(\"-c \");","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"domoberzin"},"content":"    public static final Prefix PREFIX_MOD_CREDIT \u003d new Prefix(\"-cr \");","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"    public static final Prefix PREFIX_TASK_DESCRIPTION \u003d new Prefix(\"-ds \");","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"    public static final Prefix FLAG_SHOW_ARCHIVED_TASKS \u003d new Prefix(\"-a\");","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"vvidday":2,"domoberzin":5,"-":7,"HoJunHao2000":2}},{"path":"src/main/java/modtrekt/logic/parser/ModtrektParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import java.util.List;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"import com.beust.jcommander.IUsageFormatter;","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"import com.beust.jcommander.JCommander;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"import com.beust.jcommander.ParameterException;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"import com.beust.jcommander.UnixStyleUsageFormatter;","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"import modtrekt.commons.core.Messages;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"import modtrekt.commons.util.StringUtil;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"import modtrekt.logic.commands.AddModuleCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"domoberzin"},"content":"import modtrekt.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.commands.CdModuleCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.commands.Command;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"midnightfeverrr"},"content":"import modtrekt.logic.commands.DoneModuleCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.commands.EditModuleCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.commands.EditTaskCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.commands.RemoveCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"midnightfeverrr"},"content":"import modtrekt.logic.commands.UndoneModuleCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"import modtrekt.logic.commands.tasks.ArchiveTaskCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"import modtrekt.logic.commands.tasks.ListTasksCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.commands.tasks.PrioritizeTaskCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"import modtrekt.logic.commands.tasks.UnarchiveTaskCommand;","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"HoJunHao2000"},"content":"public class ModtrektParser {","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"vvidday"},"content":"        if (userInput.isBlank()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"vvidday"},"content":"            throw new ParseException(Messages.MESSAGE_MISSING_COMMAND);","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"vvidday"},"content":"        // devs: Instantiate your commands here by passing it to addCommand() -","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"vvidday"},"content":"        //       you don\u0027t need any CommandParser classes anymore.","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"jontmy"},"content":"        JCommander jcommander \u003d JCommander.newBuilder().programName(\"\")","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"jontmy"},"content":"                .addCommand(ListTasksCommand.COMMAND_WORD, new ListTasksCommand())","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"jontmy"},"content":"                .addCommand(ArchiveTaskCommand.COMMAND_WORD, new ArchiveTaskCommand())","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"jontmy"},"content":"                .addCommand(UnarchiveTaskCommand.COMMAND_WORD, new UnarchiveTaskCommand())","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"vvidday"},"content":"                .addCommand(PrioritizeTaskCommand.COMMAND_WORD, new PrioritizeTaskCommand())","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"vvidday"},"content":"                .addCommand(EditTaskCommand.COMMAND_WORD, new EditTaskCommand())","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"HoJunHao2000"},"content":"                .addCommand(EditModuleCommand.COMMAND_WORD, new EditModuleCommand())","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"domoberzin"},"content":"                .addCommand(AddTaskCommand.COMMAND_WORD, new AddTaskCommand())","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"midnightfeverrr"},"content":"                .addCommand(DoneModuleCommand.COMMAND_WORD, new DoneModuleCommand())","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"midnightfeverrr"},"content":"                .addCommand(UndoneModuleCommand.COMMAND_WORD, new UndoneModuleCommand())","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"domoberzin"},"content":"                .addCommand(AddModuleCommand.COMMAND_WORD, new AddModuleCommand())","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"domoberzin"},"content":"                .addCommand(AddModuleCommand.COMMAND_WORD_SHORTHAND, new AddModuleCommand())","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"vvidday"},"content":"                .build();","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"vvidday"},"content":"        try {","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"jontmy"},"content":"            // Get the tokens from the user input.","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"jontmy"},"content":"            // ARGUMENTS WITH SPACES MUST BE SURROUNDED BY DOUBLE-QUOTES.","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"jontmy"},"content":"            List\u003cString\u003e tokens \u003d StringUtil.shellSplit(userInput.strip());","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"jontmy"},"content":"            // Since we\u0027re treating e.g. \"add task\" and \"add module\" as separate commands,","lastModifiedDate":"2022-10-24"},{"lineNumber":74,"author":{"gitId":"jontmy"},"content":"            // we\u0027ll consider \"task\" or \"module\" the scope of the command, and add it to the command word.","lastModifiedDate":"2022-10-24"},{"lineNumber":75,"author":{"gitId":"jontmy"},"content":"            String scope \u003d tokens.size() \u003e\u003d 2 ? tokens.get(1) : null;","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"domoberzin"},"content":"            String mainCommandWord \u003d tokens.size() \u003e\u003d 1 ? tokens.get(0) : null;","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"domoberzin"},"content":"            // support shorthand for module, no extra -m or module flag needed, hence we remove","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"domoberzin"},"content":"            // it from the token list.","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"domoberzin"},"content":"            if (\"module\".equals(scope) || \"mod\".equals(scope) || \"task\".equals(scope)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"jontmy"},"content":"                tokens.remove(1);","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"jontmy"},"content":"                tokens.set(0, tokens.get(0) + \" \" + scope);","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"domoberzin"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"jontmy"},"content":"            // Parse the command tokens with JCommander.","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"jontmy"},"content":"            // Invalid commands as well as missing, duplicate, or invalid options will throw a ParameterException.","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"jontmy"},"content":"            jcommander.parse(tokens.toArray(new String[0]));","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"vvidday"},"content":"            // This cast is safe since we only pass Command objects to jcommander::addCommand.","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"jontmy"},"content":"            return (Command) jcommander.getCommands().get(jcommander.getParsedCommand()).getObjects().get(0);","lastModifiedDate":"2022-10-22"},{"lineNumber":90,"author":{"gitId":"vvidday"},"content":"        } catch (ParameterException ex) {","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"vvidday"},"content":"            // Fallback to the legacy AB3 parser if the command is not recognized by JCommander.","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"vvidday"},"content":"            Command command \u003d parseLegacyCommand(userInput);","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"vvidday"},"content":"            if (command !\u003d null) {","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"vvidday"},"content":"                return command;","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"vvidday"},"content":"            }","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":97,"author":{"gitId":"jontmy"},"content":"            // Discard the main parameter error message if present as it\u0027s not relevant to users.","lastModifiedDate":"2022-10-22"},{"lineNumber":98,"author":{"gitId":"jontmy"},"content":"            String parsedCommand \u003d jcommander.getParsedCommand();","lastModifiedDate":"2022-10-22"},{"lineNumber":99,"author":{"gitId":"jontmy"},"content":"            if (parsedCommand \u003d\u003d null) { // unknown command","lastModifiedDate":"2022-10-22"},{"lineNumber":100,"author":{"gitId":"jontmy"},"content":"                throw new ParseException(ex.getMessage()); // JCommander has its own unknown command message","lastModifiedDate":"2022-10-22"},{"lineNumber":101,"author":{"gitId":"jontmy"},"content":"            }","lastModifiedDate":"2022-10-22"},{"lineNumber":102,"author":{"gitId":"jontmy"},"content":"            JCommander filteredJCommander \u003d jcommander.getCommands().get(parsedCommand);","lastModifiedDate":"2022-10-22"},{"lineNumber":103,"author":{"gitId":"jontmy"},"content":"            if (filteredJCommander \u003d\u003d null) { // guarding against NPE in case JCommander internals change","lastModifiedDate":"2022-10-22"},{"lineNumber":104,"author":{"gitId":"jontmy"},"content":"                throw new ParseException(ex.getMessage());","lastModifiedDate":"2022-10-22"},{"lineNumber":105,"author":{"gitId":"jontmy"},"content":"            }","lastModifiedDate":"2022-10-22"},{"lineNumber":106,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":107,"author":{"gitId":"jontmy"},"content":"            // Add the formatted usage message to the error message.","lastModifiedDate":"2022-10-22"},{"lineNumber":108,"author":{"gitId":"jontmy"},"content":"            String message \u003d ex.getMessage().endsWith(\"no main parameter was defined in your arg class\")","lastModifiedDate":"2022-10-22"},{"lineNumber":109,"author":{"gitId":"jontmy"},"content":"                    ? \"Syntax error. If your command arguments contain spaces, surround them with quotes.\"","lastModifiedDate":"2022-10-22"},{"lineNumber":110,"author":{"gitId":"jontmy"},"content":"                    : ex.getMessage();","lastModifiedDate":"2022-10-22"},{"lineNumber":111,"author":{"gitId":"jontmy"},"content":"            IUsageFormatter usageFormatter \u003d new UnixStyleUsageFormatter(filteredJCommander);","lastModifiedDate":"2022-10-22"},{"lineNumber":112,"author":{"gitId":"jontmy"},"content":"            StringBuilder usageBuilder \u003d new StringBuilder(message).append(\"\\n\\n\");","lastModifiedDate":"2022-10-22"},{"lineNumber":113,"author":{"gitId":"jontmy"},"content":"            usageFormatter.usage(usageBuilder);","lastModifiedDate":"2022-10-22"},{"lineNumber":114,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":115,"author":{"gitId":"vvidday"},"content":"            // Rethrow the JCommander unknown command ParameterException using ModtRekt\u0027s ParseException as","lastModifiedDate":"2022-10-21"},{"lineNumber":116,"author":{"gitId":"vvidday"},"content":"            // it displays the error message in the UI.","lastModifiedDate":"2022-10-21"},{"lineNumber":117,"author":{"gitId":"jontmy"},"content":"            throw new ParseException(usageBuilder.toString());","lastModifiedDate":"2022-10-22"},{"lineNumber":118,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":119,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":120,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":121,"author":{"gitId":"vvidday"},"content":"    private Command parseLegacyCommand(String userInput) throws ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"jontmy"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"HoJunHao2000"},"content":"        case RemoveCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"vvidday"},"content":"            return new RemoveCommandParser().parse(arguments);","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"vvidday"},"content":"        case CdModuleCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"vvidday"},"content":"            return new CdCommandParser().parse(arguments);","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":138,"author":{"gitId":"vvidday"},"content":"            return null;","lastModifiedDate":"2022-10-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"vvidday":35,"domoberzin":11,"jontmy":45,"-":36,"midnightfeverrr":4,"HoJunHao2000":10}},{"path":"src/main/java/modtrekt/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.commands.Command;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"    Command parse(String userInput) throws ParseException;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"vvidday":1,"-":12,"HoJunHao2000":3}},{"path":"src/main/java/modtrekt/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.core.index.Index;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.util.StringUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.ModCredit;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.ModName;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Description;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index must be a non-zero unsigned integer.\";","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"HoJunHao2000"},"content":"     * Parses a {@code String name} into a {@code ModName}.","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"domoberzin"},"content":"    public static Description parseDescription(String name) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"domoberzin"},"content":"        if (!Description.isValidDescription(trimmedName)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"domoberzin"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"domoberzin"},"content":"        return new Description(trimmedName);","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"vvidday"},"content":"     * Parses a {@code String date} into a {@code localDate}","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"vvidday"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"vvidday"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"vvidday"},"content":"    public static LocalDate parseDueDate(String date) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"vvidday"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"vvidday"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"vvidday"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"vvidday"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-M-d\");","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"vvidday"},"content":"            return LocalDate.parse(trimmedDate, formatter);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"vvidday"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"vvidday"},"content":"            throw new ParseException(\"Invalid date, date must be in YYYY-MM-DD format\");","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"vvidday"},"content":"     * Parses a {@code String name} into a {@code ModName}.","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"vvidday"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"vvidday"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"vvidday"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"HoJunHao2000"},"content":"    public static ModName parseName(String name) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"HoJunHao2000"},"content":"        if (!ModName.isValidName(trimmedName)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"HoJunHao2000"},"content":"            throw new ParseException(ModName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"HoJunHao2000"},"content":"        return new ModName(trimmedName);","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"HoJunHao2000"},"content":"     * Parses a {@code String credit} into an {@code ModCredit}.","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"HoJunHao2000"},"content":"     * @throws ParseException if the given {@code credit} is invalid.","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"HoJunHao2000"},"content":"    public static ModCredit parseCredit(String address) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"HoJunHao2000"},"content":"        String trimmedCredit \u003d address.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"HoJunHao2000"},"content":"        if (!ModCredit.isValidCredit(trimmedCredit)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"HoJunHao2000"},"content":"            throw new ParseException(ModCredit.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"HoJunHao2000"},"content":"        return new ModCredit(trimmedCredit);","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"HoJunHao2000"},"content":"     * Parses a {@code String code} into an {@code ModCode}.","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"HoJunHao2000"},"content":"     * @throws ParseException if the given {@code code} is invalid.","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":104,"author":{"gitId":"HoJunHao2000"},"content":"    public static ModCode parseCode(String code) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"HoJunHao2000"},"content":"        requireNonNull(code);","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"HoJunHao2000"},"content":"        String trimmedCode \u003d code.trim();","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"HoJunHao2000"},"content":"        if (!ModCode.isValidCode(trimmedCode)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"HoJunHao2000"},"content":"            throw new ParseException(ModCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":110,"author":{"gitId":"HoJunHao2000"},"content":"        return new ModCode(trimmedCode);","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":112,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"vvidday"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"vvidday"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"vvidday"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"vvidday"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"vvidday":38,"domoberzin":4,"jontmy":1,"-":51,"HoJunHao2000":27}},{"path":"src/main/java/modtrekt/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"-":38,"HoJunHao2000":1}},{"path":"src/main/java/modtrekt/logic/parser/RemoveCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"package modtrekt.logic.parser;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"import static modtrekt.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"import static modtrekt.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"import modtrekt.commons.core.index.Index;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.commands.Command;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.commands.RemoveCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.commands.RemoveTaskCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":" * Parses input arguments for remove command and returns a Command object","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"public class RemoveCommandParser implements Parser\u003cRemoveTaskCommand\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"     * Parses the given {@code String} of arguments in the context of RemoveCommand.","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"    public Command parse(String args) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"                CliSyntax.PREFIX_MODULE, CliSyntax.PREFIX_TASK);","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"        if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_TASK)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"            // Remove task","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":"            try {","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"                Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(CliSyntax.PREFIX_TASK).get());","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"                return new RemoveTaskCommand(index);","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"vvidday"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"vvidday"},"content":"                throw new ParseException(","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"vvidday"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"vvidday"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"vvidday"},"content":"        } else if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_MODULE)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"vvidday"},"content":"            // Remove module","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"vvidday"},"content":"            try {","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"vvidday"},"content":"                Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(CliSyntax.PREFIX_MODULE).get());","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"HoJunHao2000"},"content":"                return new RemoveCommand(index);","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"vvidday"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"vvidday"},"content":"                throw new ParseException(","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"HoJunHao2000"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"vvidday"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"HoJunHao2000"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"vvidday"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"vvidday":44,"HoJunHao2000":4}},{"path":"src/main/java/modtrekt/logic/parser/RemoveTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domoberzin"},"content":"package modtrekt.logic.parser;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"domoberzin"},"content":"import static modtrekt.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"domoberzin"},"content":"import modtrekt.commons.core.index.Index;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"import modtrekt.logic.commands.RemoveTaskCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"import modtrekt.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"public class RemoveTaskCommandParser implements Parser\u003cRemoveTaskCommand\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":"    public RemoveTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"domoberzin"},"content":"            return new RemoveTaskCommand(index);","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"domoberzin"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"domoberzin":9,"-":20}},{"path":"src/main/java/modtrekt/logic/parser/converters/DeadlineConverter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"package modtrekt.logic.parser.converters;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"import com.beust.jcommander.IStringConverter;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"import com.beust.jcommander.ParameterException;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":" * Converts an input String into LocalDate, for use with JCommander annotations.","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"public class DeadlineConverter implements IStringConverter\u003cLocalDate\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"    public LocalDate convert(String value) {","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"        String trimmedDate \u003d value.trim();","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"        try {","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-M-d\");","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"            return LocalDate.parse(trimmedDate, formatter);","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"        } catch (DateTimeParseException exception) {","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":"            throw new ParameterException(\"Invalid date, date must be in YYYY-MM-DD format\");","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"vvidday":24}},{"path":"src/main/java/modtrekt/logic/parser/converters/DescriptionConverter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"package modtrekt.logic.parser.converters;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"import com.beust.jcommander.IStringConverter;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"import com.beust.jcommander.ParameterException;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Description;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":" * Converts an input String into Description, for use with JCommander annotations.","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"public class DescriptionConverter implements IStringConverter\u003cDescription\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"    public Description convert(String value) {","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"        if (!Description.isValidDescription(value)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"            throw new ParameterException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"        return new Description(value);","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"vvidday":19}},{"path":"src/main/java/modtrekt/logic/parser/converters/IndexConverter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"package modtrekt.logic.parser.converters;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"import com.beust.jcommander.IStringConverter;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"import com.beust.jcommander.ParameterException;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"import modtrekt.commons.core.index.Index;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"import modtrekt.commons.util.StringUtil;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":" * Converts an input String into an Index, for use with JCommander annotations.","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"public class IndexConverter implements IStringConverter\u003cIndex\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"    public Index convert(String value) {","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(value)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"            throw new ParameterException(\"The index must be a non-zero unsigned integer.\");","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"        return Index.fromOneBased(Integer.parseInt(value));","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"vvidday":19,"jontmy":1}},{"path":"src/main/java/modtrekt/logic/parser/converters/ModCodeConverter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"package modtrekt.logic.parser.converters;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"import com.beust.jcommander.IStringConverter;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"import com.beust.jcommander.ParameterException;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":" * Converts an input String into ModCode, for use with JCommander annotations.","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"public class ModCodeConverter implements IStringConverter\u003cModCode\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"    public ModCode convert(String value) {","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"        String trimmedCode \u003d value.trim();","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"        if (!ModCode.isValidCode(trimmedCode)) {","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"            throw new ParameterException(ModCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"        return new ModCode(trimmedCode);","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"vvidday":20}},{"path":"src/main/java/modtrekt/logic/parser/converters/ModCreditConverter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domoberzin"},"content":"package modtrekt.logic.parser.converters;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"domoberzin"},"content":"import com.beust.jcommander.IStringConverter;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"domoberzin"},"content":"import com.beust.jcommander.ParameterException;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.module.ModCredit;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":" * Converts an input String into ModCredit, for use with JCommander annotations.","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"public class ModCreditConverter implements IStringConverter\u003cModCredit\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"domoberzin"},"content":"    public ModCredit convert(String value) {","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"        String trimmedString \u003d value.trim();","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"domoberzin"},"content":"        if (!ModCredit.isValidCredit(trimmedString)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"            throw new ParameterException(ModCredit.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"domoberzin"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"domoberzin"},"content":"        return new ModCredit(trimmedString);","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"domoberzin"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"domoberzin":20}},{"path":"src/main/java/modtrekt/logic/parser/converters/ModNameConverter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domoberzin"},"content":"package modtrekt.logic.parser.converters;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"domoberzin"},"content":"import com.beust.jcommander.IStringConverter;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"domoberzin"},"content":"import com.beust.jcommander.ParameterException;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.module.ModName;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":" * Converts an input String into ModName, for use with JCommander annotations.","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"public class ModNameConverter implements IStringConverter\u003cModName\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"domoberzin"},"content":"    public ModName convert(String value) {","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"        String trimmedName \u003d value.trim();","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"domoberzin"},"content":"        if (!ModName.isValidName(trimmedName)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"            throw new ParameterException(ModName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"domoberzin"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"domoberzin"},"content":"        return new ModName(trimmedName);","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"domoberzin"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"domoberzin":20}},{"path":"src/main/java/modtrekt/logic/parser/converters/PriorityConverter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"package modtrekt.logic.parser.converters;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"import com.beust.jcommander.IStringConverter;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"import com.beust.jcommander.ParameterException;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"/**","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":" * Converts a String into a Priority, for use with JCommander annotations.","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":" */","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"public class PriorityConverter implements IStringConverter\u003cTask.Priority\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"    public Task.Priority convert(String value) {","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"        switch (value.toLowerCase().strip()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"        case \"high\":","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"            return Task.Priority.HIGH;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"        case \"medium\":","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"            return Task.Priority.MEDIUM;","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"        case \"low\":","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"            return Task.Priority.LOW;","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":"        case \"none\":","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"            return Task.Priority.NONE;","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"        default:","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"            throw new ParameterException(String.format(\"The priority %s does not exist.\", value));","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"vvidday":27}},{"path":"src/main/java/modtrekt/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.logic.parser.exceptions;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"-":15,"HoJunHao2000":2}},{"path":"src/main/java/modtrekt/logic/parser/module/ModuleParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.logic.parser.module;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"domoberzin"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"domoberzin"},"content":"import java.net.URI;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"domoberzin"},"content":"import java.net.http.HttpClient;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"import java.net.http.HttpRequest;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"import java.net.http.HttpResponse;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":"import com.fasterxml.jackson.databind.JsonNode;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.module.Module;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"domoberzin"},"content":" * This class returns the module details based on the inputted module code.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"domoberzin"},"content":" * Info obtained via NUSMods API.","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"domoberzin"},"content":"public class ModuleParser {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"domoberzin"},"content":"    private static final HttpClient httpClient \u003d HttpClient.newBuilder()","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"domoberzin"},"content":"            .version(HttpClient.Version.HTTP_2)","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"domoberzin"},"content":"            .build();","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"domoberzin"},"content":"    private static final String NUSMODS_ENDPOINT \u003d \"https://api.nusmods.com/v2/2022-2023/modules/\";","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"domoberzin"},"content":"    private static Module sendGet(String code) throws IOException, InterruptedException {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"domoberzin"},"content":"        HttpRequest request \u003d HttpRequest.newBuilder()","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"domoberzin"},"content":"                .GET()","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"domoberzin"},"content":"                .uri(URI.create(NUSMODS_ENDPOINT + code + \".json\"))","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"domoberzin"},"content":"                .build();","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"domoberzin"},"content":"        HttpResponse\u003cString\u003e response \u003d httpClient.send(request, HttpResponse.BodyHandlers.ofString());","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"domoberzin"},"content":"        if (response.statusCode() !\u003d 200) {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"domoberzin"},"content":"            return null;","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"domoberzin"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"domoberzin"},"content":"        String res \u003d response.body();","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"domoberzin"},"content":"        ObjectMapper mapper \u003d new ObjectMapper();","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"domoberzin"},"content":"        JsonNode node \u003d mapper.readValue(res, JsonNode.class);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"domoberzin"},"content":"        String moduleCredit \u003d (node.get(\"moduleCredit\")).toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"domoberzin"},"content":"        String moduleName \u003d (node.get(\"title\")).toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"domoberzin"},"content":"        moduleCredit \u003d moduleCredit.substring(1, moduleCredit.length() - 1);","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"domoberzin"},"content":"        moduleName \u003d moduleName.substring(1, moduleName.length() - 1)","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"domoberzin"},"content":"                .replaceAll(\"[^a-zA-Z0-9\\\\s]\", \" \")","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"domoberzin"},"content":"                .trim().replaceAll(\" +\", \" \");","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"HoJunHao2000"},"content":"        return new Module(code, moduleName, moduleCredit, \"0\");","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"domoberzin"},"content":"    public static Module fetchModule(ModCode code) throws IOException, InterruptedException {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"domoberzin"},"content":"        return sendGet(code.toString());","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"domoberzin"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"domoberzin":56,"HoJunHao2000":2}},{"path":"src/main/java/modtrekt/logic/parser/util/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package modtrekt.logic.parser.util;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import static modtrekt.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"import modtrekt.commons.util.StringUtil;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"import modtrekt.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"import modtrekt.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"import modtrekt.logic.parser.Prefix;","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"import modtrekt.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":" * CommandParser provides an alternative pathway for parsing commands.","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":" * \u003cbr\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":" * Unlike ArgumentTokenizer, CommandParser allows validation of required prefixes, as well as","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":" * specifying optional prefixes and expected usage message with a fluent API.","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":" * Additionally, CommandParser also exposes its utility methods used to validate the arguments of a command.","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":" * \u003cbr\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":" * The usage message is printed whenever a required prefix is missing via the ParseException that is thrown,","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":" * along with a list of the missing prefixes.","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":" * \u003cbr\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":" * Use CommandParserBuilder to create a CommandParser with a fluent API.","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":" * @deprecated Use JCommander instead.","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"vvidday"},"content":"@Deprecated","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"public class CommandParser {","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"    private final String usageMessage;","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"    private final Prefix[] requiredPrefixes;","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"    private final Prefix[] optionalPrefixes;","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"     * Constructs a CommandParser object.","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"     * @param optionalPrefixes the array of optional prefixes","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"     * @param requiredPrefixes the array of required prefixes","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"    CommandParser(String usageMessage, Prefix[] optionalPrefixes, Prefix[] requiredPrefixes) {","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"        this.usageMessage \u003d usageMessage;","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"jontmy"},"content":"        this.optionalPrefixes \u003d optionalPrefixes;","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"        this.requiredPrefixes \u003d requiredPrefixes;","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"jontmy"},"content":"     * Validates a command\u0027s argument string, asserting that the specified prefixes are present.","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"jontmy"},"content":"     * @param args              the argument string to validate","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"jontmy"},"content":"     * @param prefixes          the prefixes to check for","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"jontmy"},"content":"     * @param additionalMessage the additional message after the list of missing prefixes in the exception message","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"jontmy"},"content":"     * @throws ParseException if the argument string has any missing prefixes","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"jontmy"},"content":"    public static void requirePrefixes(String args, String additionalMessage, Prefix... prefixes)","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"jontmy"},"content":"            throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"jontmy"},"content":"        requireAllNonNull(args, prefixes);","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"jontmy"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, prefixes);","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"jontmy"},"content":"        List\u003cPrefix\u003e missingPrefixes \u003d Arrays.stream(prefixes)","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"jontmy"},"content":"                .filter(prefix -\u003e argMultimap.getValue(prefix)","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"jontmy"},"content":"                        .isEmpty())","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"jontmy"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"jontmy"},"content":"        if (missingPrefixes.isEmpty()) {","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"jontmy"},"content":"            return;","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"jontmy"},"content":"        String message \u003d String.format(","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"jontmy"},"content":"                \"Missing %s: %s.%s\",","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"jontmy"},"content":"                StringUtil.pluralize(missingPrefixes.size(), \"prefix\", \"prefixes\"),","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"jontmy"},"content":"                missingPrefixes.stream()","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"jontmy"},"content":"                        .map(Prefix::getPrefix)","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"jontmy"},"content":"                        .collect(Collectors.joining(\", \")),","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"jontmy"},"content":"                additionalMessage \u003d\u003d null ? \"\" : \"\\n\" + additionalMessage","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"jontmy"},"content":"        );","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"HoJunHao2000"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, message));","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"jontmy"},"content":"     * Validates a command\u0027s argument string, asserting that the specified prefixes are present,","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"jontmy"},"content":"     * without any additional message in the exception thrown.","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"jontmy"},"content":"     * @param args     the argument string to validate","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"jontmy"},"content":"     * @param prefixes the prefixes to check for","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"jontmy"},"content":"     * @throws ParseException if the argument string has any missing prefixes","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"jontmy"},"content":"    public static void requirePrefixes(String args, Prefix... prefixes) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"jontmy"},"content":"        requirePrefixes(args, null, prefixes);","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"jontmy"},"content":"     * Returns a ParsedCommand object from which the arguments of this command get be retrieved, consumed, or mapped.","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"jontmy"},"content":"     * Checks that all required prefixes are present.","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"jontmy"},"content":"     * @param args the argument string to parse","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"jontmy"},"content":"     * @return a ParsedCommand object","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"jontmy"},"content":"    public ParsedCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"jontmy"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"jontmy"},"content":"        requirePrefixes(args, usageMessage, requiredPrefixes);","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"jontmy"},"content":"        Prefix[] allPrefixes \u003d new Prefix[optionalPrefixes.length + requiredPrefixes.length];","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"jontmy"},"content":"        System.arraycopy(optionalPrefixes, 0, allPrefixes, 0, optionalPrefixes.length);","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"jontmy"},"content":"        System.arraycopy(requiredPrefixes, 0, allPrefixes, optionalPrefixes.length, requiredPrefixes.length);","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"jontmy"},"content":"        return new ParsedCommand(ArgumentTokenizer.tokenize(args, allPrefixes));","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"vvidday":2,"jontmy":101,"HoJunHao2000":2}},{"path":"src/main/java/modtrekt/logic/parser/util/CommandParserBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package modtrekt.logic.parser.util;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"import modtrekt.logic.parser.Prefix;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":" * Builder for a CommandParser object via a fluent API.","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":" * @deprecated Use JCommander instead.","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"@Deprecated","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"public class CommandParserBuilder {","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"    private final List\u003cPrefix\u003e requiredPrefixes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"    private final List\u003cPrefix\u003e optionalPrefixes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"    private String usageMessage;","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"     * Adds required prefixes to the CommandParser.","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"     * @param prefixes the prefixes to add","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"     * @return the CommandParserBuilder object","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"    public CommandParserBuilder requiredPrefixes(Prefix... prefixes) {","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"        requiredPrefixes.addAll(Arrays.asList(prefixes));","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"        return this;","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"     * Adds optional prefixes to the CommandParser.","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"     * @param prefixes the prefixes to add","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"     * @return the CommandParserBuilder object","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"    public CommandParserBuilder optionalPrefixes(Prefix... prefixes) {","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"        optionalPrefixes.addAll(Arrays.asList(prefixes));","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"        return this;","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"     * Sets the usage message of the CommandParser.","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"jontmy"},"content":"     * @param usageMessage the usage message to set","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"     * @return the CommandParserBuilder object","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"jontmy"},"content":"    public CommandParserBuilder usageMessage(String usageMessage) {","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"jontmy"},"content":"        this.usageMessage \u003d usageMessage;","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"jontmy"},"content":"        return this;","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"jontmy"},"content":"     * Returns a CommandParser object with all prefixes specified so far.","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"jontmy"},"content":"     * @return the CommandParser object","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"jontmy"},"content":"    public CommandParser build() {","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"jontmy"},"content":"        return new CommandParser(","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"jontmy"},"content":"                usageMessage,","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"jontmy"},"content":"                optionalPrefixes.toArray(new Prefix[0]),","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"jontmy"},"content":"                requiredPrefixes.toArray(new Prefix[0]));","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"vvidday":2,"jontmy":61}},{"path":"src/main/java/modtrekt/logic/parser/util/ParsedCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package modtrekt.logic.parser.util;","lastModifiedDate":"2022-10-11"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import static modtrekt.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"import java.util.function.Function;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"import modtrekt.logic.parser.ArgumentMultimap;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"import modtrekt.logic.parser.Prefix;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"import modtrekt.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":" * ParsedCommand is a wrapper for a command and its multi-map of prefixes to arguments.","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":" * @deprecated Use JCommander instead.","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"@Deprecated","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"public class ParsedCommand {","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"    private final ArgumentMultimap argMultimap;","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"    public ParsedCommand(ArgumentMultimap argsMultimap) {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"        this.argMultimap \u003d argsMultimap;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"    // \u003d\u003d\u003d \u003d\u003d\u003d \u003d\u003d\u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"    // Command argument handling","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"     * Maps an argument from the given command\u0027s argument string to a new value if it is present.","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"     * @param prefix the prefix of the argument to parse","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"     * @param mapper the function to map the argument with","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"     * @param \u003cT\u003e    the type of the mapped argument","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"     * @return an Optional of the mapped argument","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"    public \u003cT\u003e Optional\u003cT\u003e mapOptionalArgument(Prefix prefix, Function\u003cString, T\u003e mapper) {","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"        requireAllNonNull(prefix, mapper);","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"        return argMultimap.getValue(prefix)","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"                .map(mapper);","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"     * Maps an argument from the given command\u0027s argument string to a new value.","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"jontmy"},"content":"     * @param prefix the prefix of the argument to parse","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"     * @param mapper the function to map the argument with","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"jontmy"},"content":"     * @param \u003cT\u003e    the type of the mapped argument","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"jontmy"},"content":"     * @return the mapped argument","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"jontmy"},"content":"     * @throws ParseException if the prefix is not present in the argument string","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"jontmy"},"content":"    public \u003cT\u003e T mapMandatoryArgument(Prefix prefix, Function\u003cString, T\u003e mapper) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"jontmy"},"content":"        requireAllNonNull(prefix, mapper);","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"jontmy"},"content":"        // We know that the prefix is present, so we can safely get the wrapped value.","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"jontmy"},"content":"        return mapOptionalArgument(prefix, mapper).orElseThrow(IllegalStateException::new);","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"jontmy"},"content":"     * Returns the internal argument multimap as an escape hatch.","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"jontmy"},"content":"     * @return the internal argument multimap","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"jontmy"},"content":"    public ArgumentMultimap getArgMultimap() {","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"jontmy"},"content":"        return argMultimap;","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"vvidday":2,"jontmy":62}},{"path":"src/main/java/modtrekt/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.core.GuiSettings;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.Module;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"HoJunHao2000"},"content":"    Predicate\u003cModule\u003e PREDICATE_SHOW_ALL_MODULES \u003d module -\u003e true;","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"    Predicate\u003cTask\u003e PREDICATE_HIDE_ARCHIVED_TASKS \u003d task -\u003e !task.isArchived();","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d task -\u003e true;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"HoJunHao2000"},"content":"     * Returns the user prefs\u0027 task book file path.","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"domoberzin"},"content":"    Path getTaskBookFilePath();","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"HoJunHao2000"},"content":"     * Returns the user prefs\u0027 module list file path.","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"HoJunHao2000"},"content":"    Path getModuleListFilePath();","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"HoJunHao2000"},"content":"     * Sets the user prefs\u0027 task book/module list file path.","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"HoJunHao2000"},"content":"    void setTaskBookFilePath(Path taskBookFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"HoJunHao2000"},"content":"    void setModuleListFilePath(Path moduleListFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"domoberzin"},"content":"     * Replaces task book data with the data in {@code taskBook}.","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"HoJunHao2000"},"content":"    void setTaskBook(ReadOnlyTaskBook taskBook);","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"domoberzin"},"content":"    /** Returns the taskBook */","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"domoberzin"},"content":"    ReadOnlyTaskBook getTaskBook();","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"HoJunHao2000"},"content":"     * Replaces module list data with the data in {@code moduleList}.","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"HoJunHao2000"},"content":"    void setModuleList(ReadOnlyModuleList moduleList);","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"HoJunHao2000"},"content":"    /** Returns the ModuleList */","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"HoJunHao2000"},"content":"    ReadOnlyModuleList getModuleList();","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"domoberzin"},"content":"     * Deletes the given task.","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"HoJunHao2000"},"content":"     * The task must exist in the task book.","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"domoberzin"},"content":"    void deleteTask(Task target);","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"domoberzin"},"content":"    /** Check if given module exists within module list */","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"HoJunHao2000"},"content":"    boolean hasModule(Module module);","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"domoberzin"},"content":"    /** Check if given module exists within module list based on module code */","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"domoberzin"},"content":"    boolean hasModuleWithModCode(ModCode code);","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"domoberzin"},"content":"    /** Updates module list after task removal */","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"HoJunHao2000"},"content":"    void updateModuleTaskCount(Task t);","lastModifiedDate":"2022-10-25"},{"lineNumber":88,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"domoberzin"},"content":"    /** Updates task list after module removal */","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"jontmy"},"content":"    void deleteTasksOfModule(Module target);","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"domoberzin"},"content":"     * Adds the given task.","lastModifiedDate":"2022-10-08"},{"lineNumber":94,"author":{"gitId":"domoberzin"},"content":"     * {@code task} must not already exist in the task book.","lastModifiedDate":"2022-10-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"domoberzin"},"content":"    void addTask(Task t);","lastModifiedDate":"2022-10-08"},{"lineNumber":97,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"domoberzin"},"content":"    /** Deletes the given module, must exist within the module list */","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"HoJunHao2000"},"content":"    void deleteModule(Module target);","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"domoberzin"},"content":"    /** Parses module within module list from a given module code */","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"domoberzin"},"content":"    Module parseModuleFromCode(ModCode code);","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"vvidday"},"content":"    /** Gets the current module code, if any */","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"vvidday"},"content":"    ModCode getCurrentModule();","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"vvidday"},"content":"    /** Sets the current module code */","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"vvidday"},"content":"    void setCurrentModule(ModCode code);","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":111,"author":{"gitId":"HoJunHao2000"},"content":"     * Updates the ModCodes of tasks after an edit to module.","lastModifiedDate":"2022-10-25"},{"lineNumber":112,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":113,"author":{"gitId":"HoJunHao2000"},"content":"    void updateTaskModule(ModCode oldCode, ModCode newCode);","lastModifiedDate":"2022-10-25"},{"lineNumber":114,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"domoberzin"},"content":"     * Replaces the given task {@code target} with {@code editedTask}.","lastModifiedDate":"2022-10-08"},{"lineNumber":117,"author":{"gitId":"domoberzin"},"content":"     * {@code target} must exist in the task book.","lastModifiedDate":"2022-10-08"},{"lineNumber":118,"author":{"gitId":"HoJunHao2000"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the task book.","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"domoberzin"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2022-10-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":123,"author":{"gitId":"HoJunHao2000"},"content":"     * Archives all the tasks in the done module.","lastModifiedDate":"2022-10-25"},{"lineNumber":124,"author":{"gitId":"HoJunHao2000"},"content":"     *","lastModifiedDate":"2022-10-25"},{"lineNumber":125,"author":{"gitId":"HoJunHao2000"},"content":"     * @param code the code of the module that is marked as done.","lastModifiedDate":"2022-10-25"},{"lineNumber":126,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":127,"author":{"gitId":"HoJunHao2000"},"content":"    void archiveDoneModuleTasks(ModCode code);","lastModifiedDate":"2022-10-25"},{"lineNumber":128,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":129,"author":{"gitId":"domoberzin"},"content":"    /** Returns an unmodifiable view of the filtered task list */","lastModifiedDate":"2022-10-08"},{"lineNumber":130,"author":{"gitId":"domoberzin"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2022-10-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"domoberzin"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":136,"author":{"gitId":"domoberzin"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":137,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"domoberzin"},"content":"     * Adds the given module.","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"domoberzin"},"content":"     * {@code module} must not already exist in the task book.","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"HoJunHao2000"},"content":"    void addModule(Module module);","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":145,"author":{"gitId":"HoJunHao2000"},"content":"     * Replaces the given module {@code target} with {@code editedModule}.","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"HoJunHao2000"},"content":"     * {@code target} must exist in the module list.","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"HoJunHao2000"},"content":"     * The module identity of {@code editedModule} must not be the same as another existing module in the module list.","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":149,"author":{"gitId":"HoJunHao2000"},"content":"    void setModule(Module target, Module editedModule);","lastModifiedDate":"2022-10-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":151,"author":{"gitId":"HoJunHao2000"},"content":"    /** Returns an unmodifiable view of the filtered module list */","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"HoJunHao2000"},"content":"    ObservableList\u003cModule\u003e getFilteredModuleList();","lastModifiedDate":"2022-10-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":155,"author":{"gitId":"HoJunHao2000"},"content":"     * Updates the filter of the filtered module list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":158,"author":{"gitId":"HoJunHao2000"},"content":"    void updateFilteredModuleList(Predicate\u003cModule\u003e predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"vvidday":7,"domoberzin":35,"jontmy":3,"-":67,"HoJunHao2000":47}},{"path":"src/main/java/modtrekt/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.core.GuiSettings;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.core.LogsCenter;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.module.Module;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.task.Deadline;","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"domoberzin"},"content":" * Represents the in-memory model of the task book data.","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"    private final ModuleList moduleList;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"domoberzin"},"content":"    private final TaskBook taskBook;","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"domoberzin"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"    private final FilteredList\u003cModule\u003e filteredModules;","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"vvidday"},"content":"    private ModCode currentModule;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"domoberzin"},"content":"     * Initializes a ModelManager with the given taskBook and userPrefs.","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"vvidday"},"content":"    public ModelManager(ReadOnlyModuleList moduleList, ReadOnlyTaskBook taskBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"vvidday"},"content":"        requireAllNonNull(moduleList, taskBook, userPrefs);","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"domoberzin"},"content":"        logger.fine(\"Initializing with task book: \" + taskBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"vvidday"},"content":"        this.moduleList \u003d new ModuleList(moduleList);","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"domoberzin"},"content":"        this.taskBook \u003d new TaskBook(taskBook);","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"domoberzin"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.taskBook.getTaskList());","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"vvidday"},"content":"        filteredModules \u003d new FilteredList\u003c\u003e(this.moduleList.getModuleList());","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"vvidday"},"content":"        currentModule \u003d null;","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"vvidday"},"content":"        this(new ModuleList(), new TaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"domoberzin"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"domoberzin"},"content":"        return userPrefs.getTaskBookFilePath();","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"domoberzin"},"content":"    public void setTaskBookFilePath(Path taskBookFilePath) {","lastModifiedDate":"2022-10-08"},{"lineNumber":83,"author":{"gitId":"domoberzin"},"content":"        requireNonNull(taskBookFilePath);","lastModifiedDate":"2022-10-08"},{"lineNumber":84,"author":{"gitId":"domoberzin"},"content":"        userPrefs.setTaskBookFilePath(taskBookFilePath);","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"vvidday"},"content":"    public Path getModuleListFilePath() {","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"vvidday"},"content":"        return userPrefs.getModuleListFilePath();","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"vvidday"},"content":"    public void setModuleListFilePath(Path moduleListFilePath) {","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"vvidday"},"content":"        requireNonNull(moduleListFilePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"vvidday"},"content":"        userPrefs.setModuleListFilePath(moduleListFilePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"domoberzin"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"domoberzin"},"content":"    public void setTaskBook(ReadOnlyTaskBook taskBook) {","lastModifiedDate":"2022-10-08"},{"lineNumber":102,"author":{"gitId":"domoberzin"},"content":"        this.taskBook.resetData(taskBook);","lastModifiedDate":"2022-10-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"domoberzin"},"content":"    public ReadOnlyTaskBook getTaskBook() {","lastModifiedDate":"2022-10-08"},{"lineNumber":107,"author":{"gitId":"domoberzin"},"content":"        return taskBook;","lastModifiedDate":"2022-10-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"domoberzin"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2022-10-08"},{"lineNumber":112,"author":{"gitId":"domoberzin"},"content":"        taskBook.removeTask(target);","lastModifiedDate":"2022-10-08"},{"lineNumber":113,"author":{"gitId":"HoJunHao2000"},"content":"        updateModuleTaskCount(target);","lastModifiedDate":"2022-10-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":117,"author":{"gitId":"domoberzin"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2022-10-08"},{"lineNumber":118,"author":{"gitId":"domoberzin"},"content":"        taskBook.addTask(t);","lastModifiedDate":"2022-10-08"},{"lineNumber":119,"author":{"gitId":"HoJunHao2000"},"content":"        updateModuleTaskCount(t);","lastModifiedDate":"2022-10-25"},{"lineNumber":120,"author":{"gitId":"HoJunHao2000"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"domoberzin"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-08"},{"lineNumber":125,"author":{"gitId":"domoberzin"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-10-08"},{"lineNumber":126,"author":{"gitId":"domoberzin"},"content":"        taskBook.setTask(target, editedTask);","lastModifiedDate":"2022-10-08"},{"lineNumber":127,"author":{"gitId":"HoJunHao2000"},"content":"        updateModuleTaskCount(editedTask);","lastModifiedDate":"2022-10-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"domoberzin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"HoJunHao2000"},"content":"    public void archiveDoneModuleTasks(ModCode code) {","lastModifiedDate":"2022-10-25"},{"lineNumber":132,"author":{"gitId":"HoJunHao2000"},"content":"        FilteredList\u003cTask\u003e tempList \u003d new FilteredList\u003c\u003e(this.taskBook.getTaskList());","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"HoJunHao2000"},"content":"        Predicate\u003cTask\u003e newPredicate \u003d task -\u003e task.getModule().equals(code);","lastModifiedDate":"2022-10-25"},{"lineNumber":134,"author":{"gitId":"HoJunHao2000"},"content":"        tempList.setPredicate(newPredicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"HoJunHao2000"},"content":"        for (Task t : tempList) {","lastModifiedDate":"2022-10-25"},{"lineNumber":136,"author":{"gitId":"HoJunHao2000"},"content":"            setTask(t, t.archive());","lastModifiedDate":"2022-10-25"},{"lineNumber":137,"author":{"gitId":"HoJunHao2000"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":138,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"HoJunHao2000"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":141,"author":{"gitId":"HoJunHao2000"},"content":"    public void updateTaskModule(ModCode oldCode, ModCode newCode) {","lastModifiedDate":"2022-10-25"},{"lineNumber":142,"author":{"gitId":"HoJunHao2000"},"content":"        FilteredList\u003cTask\u003e tempList \u003d new FilteredList\u003c\u003e(this.taskBook.getTaskList());","lastModifiedDate":"2022-10-25"},{"lineNumber":143,"author":{"gitId":"HoJunHao2000"},"content":"        Predicate\u003cTask\u003e newPredicate \u003d task -\u003e task.getModule().equals(oldCode);","lastModifiedDate":"2022-10-25"},{"lineNumber":144,"author":{"gitId":"HoJunHao2000"},"content":"        tempList.setPredicate(newPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":145,"author":{"gitId":"HoJunHao2000"},"content":"        for (Task t : tempList) {","lastModifiedDate":"2022-10-25"},{"lineNumber":146,"author":{"gitId":"HoJunHao2000"},"content":"            Task newTask;","lastModifiedDate":"2022-10-25"},{"lineNumber":147,"author":{"gitId":"HoJunHao2000"},"content":"            if (t instanceof Deadline) {","lastModifiedDate":"2022-10-25"},{"lineNumber":148,"author":{"gitId":"HoJunHao2000"},"content":"                Deadline d \u003d (Deadline) t;","lastModifiedDate":"2022-10-25"},{"lineNumber":149,"author":{"gitId":"HoJunHao2000"},"content":"                newTask \u003d new Deadline(d.getDescription(), newCode, d.getDueDate(), d.isArchived(), d.getPriority());","lastModifiedDate":"2022-10-25"},{"lineNumber":150,"author":{"gitId":"HoJunHao2000"},"content":"            } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":151,"author":{"gitId":"HoJunHao2000"},"content":"                newTask \u003d new Task(t.getDescription(), newCode, t.isArchived(), t.getPriority());","lastModifiedDate":"2022-10-25"},{"lineNumber":152,"author":{"gitId":"HoJunHao2000"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":153,"author":{"gitId":"HoJunHao2000"},"content":"            addTask(newTask);","lastModifiedDate":"2022-10-25"},{"lineNumber":154,"author":{"gitId":"HoJunHao2000"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":155,"author":{"gitId":"HoJunHao2000"},"content":"        taskBook.removeTasksWithModCode(oldCode);","lastModifiedDate":"2022-10-25"},{"lineNumber":156,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":157,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":158,"author":{"gitId":"vvidday"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ModuleList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":159,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":160,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":161,"author":{"gitId":"vvidday"},"content":"    public void setModuleList(ReadOnlyModuleList moduleList) {","lastModifiedDate":"2022-10-09"},{"lineNumber":162,"author":{"gitId":"vvidday"},"content":"        this.moduleList.resetData(moduleList);","lastModifiedDate":"2022-10-09"},{"lineNumber":163,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":164,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":165,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":166,"author":{"gitId":"vvidday"},"content":"    public ReadOnlyModuleList getModuleList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":167,"author":{"gitId":"vvidday"},"content":"        return moduleList;","lastModifiedDate":"2022-10-09"},{"lineNumber":168,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":169,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":170,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":171,"author":{"gitId":"vvidday"},"content":"    public boolean hasModule(Module module) {","lastModifiedDate":"2022-10-09"},{"lineNumber":172,"author":{"gitId":"vvidday"},"content":"        requireNonNull(module);","lastModifiedDate":"2022-10-09"},{"lineNumber":173,"author":{"gitId":"vvidday"},"content":"        return moduleList.hasModule(module);","lastModifiedDate":"2022-10-09"},{"lineNumber":174,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":175,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":176,"author":{"gitId":"domoberzin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"domoberzin"},"content":"    public boolean hasModuleWithModCode(ModCode code) {","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"domoberzin"},"content":"        requireNonNull(code);","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"domoberzin"},"content":"        return moduleList.hasModuleWithModCode(code);","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":183,"author":{"gitId":"vvidday"},"content":"    public void deleteModule(Module target) {","lastModifiedDate":"2022-10-09"},{"lineNumber":184,"author":{"gitId":"vvidday"},"content":"        moduleList.removeModule(target);","lastModifiedDate":"2022-10-09"},{"lineNumber":185,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":186,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":187,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":188,"author":{"gitId":"vvidday"},"content":"    public void addModule(Module module) {","lastModifiedDate":"2022-10-09"},{"lineNumber":189,"author":{"gitId":"vvidday"},"content":"        moduleList.addModule(module);","lastModifiedDate":"2022-10-09"},{"lineNumber":190,"author":{"gitId":"vvidday"},"content":"        updateFilteredModuleList(PREDICATE_SHOW_ALL_MODULES);","lastModifiedDate":"2022-10-09"},{"lineNumber":191,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":192,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":193,"author":{"gitId":"domoberzin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":194,"author":{"gitId":"domoberzin"},"content":"    public Module parseModuleFromCode(ModCode code) {","lastModifiedDate":"2022-10-10"},{"lineNumber":195,"author":{"gitId":"domoberzin"},"content":"        requireNonNull(code);","lastModifiedDate":"2022-10-10"},{"lineNumber":196,"author":{"gitId":"domoberzin"},"content":"        return moduleList.getModuleFromCode(code);","lastModifiedDate":"2022-10-10"},{"lineNumber":197,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":198,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":199,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":200,"author":{"gitId":"vvidday"},"content":"    public void setModule(Module target, Module editedModule) {","lastModifiedDate":"2022-10-09"},{"lineNumber":201,"author":{"gitId":"vvidday"},"content":"        requireAllNonNull(target, editedModule);","lastModifiedDate":"2022-10-09"},{"lineNumber":202,"author":{"gitId":"vvidday"},"content":"        moduleList.setModule(target, editedModule);","lastModifiedDate":"2022-10-09"},{"lineNumber":203,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":204,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":205,"author":{"gitId":"domoberzin"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":206,"author":{"gitId":"domoberzin"},"content":"    public void deleteTasksOfModule(Module target) {","lastModifiedDate":"2022-10-10"},{"lineNumber":207,"author":{"gitId":"domoberzin"},"content":"        requireAllNonNull(target);","lastModifiedDate":"2022-10-10"},{"lineNumber":208,"author":{"gitId":"domoberzin"},"content":"        taskBook.removeTasksWithModCode(target.getCode());","lastModifiedDate":"2022-10-10"},{"lineNumber":209,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":210,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":211,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":212,"author":{"gitId":"vvidday"},"content":"    public ModCode getCurrentModule() {","lastModifiedDate":"2022-10-12"},{"lineNumber":213,"author":{"gitId":"vvidday"},"content":"        return currentModule;","lastModifiedDate":"2022-10-12"},{"lineNumber":214,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":215,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":216,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":217,"author":{"gitId":"vvidday"},"content":"    public void setCurrentModule(ModCode code) {","lastModifiedDate":"2022-10-12"},{"lineNumber":218,"author":{"gitId":"vvidday"},"content":"        currentModule \u003d code;","lastModifiedDate":"2022-10-12"},{"lineNumber":219,"author":{"gitId":"vvidday"},"content":"        if (currentModule \u003d\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":220,"author":{"gitId":"vvidday"},"content":"            updateFilteredModuleList(Model.PREDICATE_SHOW_ALL_MODULES);","lastModifiedDate":"2022-10-12"},{"lineNumber":221,"author":{"gitId":"vvidday"},"content":"            updateFilteredTaskList(Model.PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2022-10-12"},{"lineNumber":222,"author":{"gitId":"vvidday"},"content":"        } else {","lastModifiedDate":"2022-10-12"},{"lineNumber":223,"author":{"gitId":"vvidday"},"content":"            updateFilteredModuleList(model -\u003e model.getCode().equals(code));","lastModifiedDate":"2022-10-12"},{"lineNumber":224,"author":{"gitId":"vvidday"},"content":"            updateFilteredTaskList(task -\u003e task.getModule().equals(code));","lastModifiedDate":"2022-10-12"},{"lineNumber":225,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":226,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":227,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":228,"author":{"gitId":"HoJunHao2000"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":229,"author":{"gitId":"HoJunHao2000"},"content":"    public void updateModuleTaskCount(Task t) {","lastModifiedDate":"2022-10-25"},{"lineNumber":230,"author":{"gitId":"HoJunHao2000"},"content":"        Module toUpdate \u003d parseModuleFromCode(t.getModule());","lastModifiedDate":"2022-10-25"},{"lineNumber":231,"author":{"gitId":"HoJunHao2000"},"content":"        FilteredList\u003cTask\u003e tempList \u003d new FilteredList\u003c\u003e(this.taskBook.getTaskList());","lastModifiedDate":"2022-10-25"},{"lineNumber":232,"author":{"gitId":"HoJunHao2000"},"content":"        Predicate\u003cTask\u003e newPredicate \u003d task -\u003e task.getModule().equals(toUpdate.getCode()) \u0026\u0026 !task.isArchived();","lastModifiedDate":"2022-10-25"},{"lineNumber":233,"author":{"gitId":"HoJunHao2000"},"content":"        tempList.setPredicate(newPredicate);","lastModifiedDate":"2022-10-25"},{"lineNumber":234,"author":{"gitId":"HoJunHao2000"},"content":"        toUpdate.updateTaskCount(tempList.size());","lastModifiedDate":"2022-10-25"},{"lineNumber":235,"author":{"gitId":"HoJunHao2000"},"content":"        setModule(toUpdate, toUpdate);","lastModifiedDate":"2022-10-25"},{"lineNumber":236,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":237,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":238,"author":{"gitId":"domoberzin"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":241,"author":{"gitId":"domoberzin"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2022-10-08"},{"lineNumber":242,"author":{"gitId":"domoberzin"},"content":"     * {@code versionedTaskBook}","lastModifiedDate":"2022-10-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":245,"author":{"gitId":"domoberzin"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2022-10-08"},{"lineNumber":246,"author":{"gitId":"vvidday"},"content":"        return filteredTasks.sorted();","lastModifiedDate":"2022-10-21"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":250,"author":{"gitId":"domoberzin"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2022-10-08"},{"lineNumber":251,"author":{"gitId":"domoberzin"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":252,"author":{"gitId":"vvidday"},"content":"        if (currentModule \u003d\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":253,"author":{"gitId":"domoberzin"},"content":"            filteredTasks.setPredicate(predicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":254,"author":{"gitId":"vvidday"},"content":"        } else {","lastModifiedDate":"2022-10-12"},{"lineNumber":255,"author":{"gitId":"vvidday"},"content":"            Predicate\u003cTask\u003e newPredicate \u003d task -\u003e predicate.test(task)","lastModifiedDate":"2022-10-12"},{"lineNumber":256,"author":{"gitId":"vvidday"},"content":"                    \u0026\u0026 task.getModule().equals(currentModule);","lastModifiedDate":"2022-10-12"},{"lineNumber":257,"author":{"gitId":"vvidday"},"content":"            filteredTasks.setPredicate(newPredicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":258,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":274,"author":{"gitId":"domoberzin"},"content":"        return taskBook.equals(other.taskBook)","lastModifiedDate":"2022-10-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":276,"author":{"gitId":"vvidday"},"content":"                \u0026\u0026 filteredTasks.equals(other.filteredTasks)","lastModifiedDate":"2022-10-09"},{"lineNumber":277,"author":{"gitId":"vvidday"},"content":"                \u0026\u0026 moduleList.equals(other.moduleList)","lastModifiedDate":"2022-10-09"},{"lineNumber":278,"author":{"gitId":"vvidday"},"content":"                \u0026\u0026 filteredModules.equals(other.filteredModules);","lastModifiedDate":"2022-10-09"},{"lineNumber":279,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":280,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":281,"author":{"gitId":"vvidday"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Module List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":282,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":283,"author":{"gitId":"vvidday"},"content":"     * Returns an unmodifiable view of the list of {@code Module} backed by the internal list of","lastModifiedDate":"2022-10-09"},{"lineNumber":284,"author":{"gitId":"vvidday"},"content":"     * {@code versionedModuleList}","lastModifiedDate":"2022-10-09"},{"lineNumber":285,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":286,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":287,"author":{"gitId":"vvidday"},"content":"    public ObservableList\u003cModule\u003e getFilteredModuleList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":288,"author":{"gitId":"vvidday"},"content":"        return filteredModules;","lastModifiedDate":"2022-10-09"},{"lineNumber":289,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":290,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":291,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":292,"author":{"gitId":"vvidday"},"content":"    public void updateFilteredModuleList(Predicate\u003cModule\u003e predicate) {","lastModifiedDate":"2022-10-09"},{"lineNumber":293,"author":{"gitId":"vvidday"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":294,"author":{"gitId":"vvidday"},"content":"        if (currentModule \u003d\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":295,"author":{"gitId":"vvidday"},"content":"            filteredModules.setPredicate(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":296,"author":{"gitId":"vvidday"},"content":"        } else {","lastModifiedDate":"2022-10-12"},{"lineNumber":297,"author":{"gitId":"vvidday"},"content":"            Predicate\u003cModule\u003e newPredicate \u003d module -\u003e predicate.test(module)","lastModifiedDate":"2022-10-12"},{"lineNumber":298,"author":{"gitId":"vvidday"},"content":"                    \u0026\u0026 module.getCode().equals(currentModule);","lastModifiedDate":"2022-10-12"},{"lineNumber":299,"author":{"gitId":"vvidday"},"content":"            filteredModules.setPredicate(newPredicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":300,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"vvidday":106,"domoberzin":54,"-":99,"HoJunHao2000":44}},{"path":"src/main/java/modtrekt/model/ModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.Module;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.UniqueModuleList;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":" * Duplicates are not allowed (by .isSameModule comparison)","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"public class ModuleList implements ReadOnlyModuleList {","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":"    private final UniqueModuleList modules;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"HoJunHao2000"},"content":"        modules \u003d new UniqueModuleList();","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"HoJunHao2000"},"content":"    public ModuleList() {}","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"HoJunHao2000"},"content":"     * Creates an ModuleList using the Modules in the {@code toBeCopied}","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"HoJunHao2000"},"content":"    public ModuleList(ReadOnlyModuleList toBeCopied) {","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"HoJunHao2000"},"content":"     * Replaces the contents of the module list with {@code modules}.","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"HoJunHao2000"},"content":"     * {@code modules} must not contain duplicate modules.","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"HoJunHao2000"},"content":"    public void setModules(List\u003cModule\u003e modules) {","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"HoJunHao2000"},"content":"        this.modules.setModules(modules);","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"HoJunHao2000"},"content":"     * Resets the existing data of this {@code ModuleList} with {@code newData}.","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"HoJunHao2000"},"content":"    public void resetData(ReadOnlyModuleList newData) {","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"HoJunHao2000"},"content":"        setModules(newData.getModuleList());","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"HoJunHao2000"},"content":"    //// module-level operations","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"HoJunHao2000"},"content":"     * Returns true if a module with the same identity as {@code module} exists in the module list.","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"HoJunHao2000"},"content":"    public boolean hasModule(Module module) {","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"HoJunHao2000"},"content":"        requireNonNull(module);","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"HoJunHao2000"},"content":"        return modules.contains(module);","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"domoberzin"},"content":"     * Returns true if a module with the same code as {@code code} exists in the module list.","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"domoberzin"},"content":"    public boolean hasModuleWithModCode(ModCode code) {","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"domoberzin"},"content":"        requireNonNull(code);","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"domoberzin"},"content":"        return modules.containsCode(code);","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"domoberzin"},"content":"     * Returns a module with the same code as {@code code} from the module list.","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"domoberzin"},"content":"    public Module getModuleFromCode(ModCode code) {","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"domoberzin"},"content":"        requireNonNull(code);","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"domoberzin"},"content":"        return modules.getModuleFromCode(code);","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"HoJunHao2000"},"content":"     * Adds a module to the module list.","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"HoJunHao2000"},"content":"     * The module must not already exist in the module list.","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"HoJunHao2000"},"content":"    public void addModule(Module m) {","lastModifiedDate":"2022-10-19"},{"lineNumber":91,"author":{"gitId":"HoJunHao2000"},"content":"        modules.add(m);","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"HoJunHao2000"},"content":"     * Replaces the given module {@code target} in the list with {@code editedModule}.","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"HoJunHao2000"},"content":"     * {@code target} must exist in the module list.","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"HoJunHao2000"},"content":"     * The module identity of {@code editedModule} must not be the same as another existing module in the module list.","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"HoJunHao2000"},"content":"    public void setModule(Module target, Module editedModule) {","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"HoJunHao2000"},"content":"        requireNonNull(editedModule);","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":102,"author":{"gitId":"HoJunHao2000"},"content":"        modules.setModule(target, editedModule);","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"HoJunHao2000"},"content":"     * Removes {@code key} from this {@code ModuleList}.","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"HoJunHao2000"},"content":"     * {@code key} must exist in the module list.","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"HoJunHao2000"},"content":"    public void removeModule(Module key) {","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"HoJunHao2000"},"content":"        modules.remove(key);","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"HoJunHao2000"},"content":"        return modules.asUnmodifiableObservableList().size() + \" modules\";","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"HoJunHao2000"},"content":"    public ObservableList\u003cModule\u003e getModuleList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"HoJunHao2000"},"content":"        return modules.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"HoJunHao2000"},"content":"                || (other instanceof ModuleList // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"HoJunHao2000"},"content":"                \u0026\u0026 modules.equals(((ModuleList) other).modules));","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"HoJunHao2000"},"content":"        return modules.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"domoberzin":17,"-":77,"HoJunHao2000":42}},{"path":"src/main/java/modtrekt/model/ReadOnlyModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.Module;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":" * Unmodifiable view of a module list","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"public interface ReadOnlyModuleList {","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"     * Returns an unmodifiable view of the modules list.","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"     * This list will not contain any duplicate modules.","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"    ObservableList\u003cModule\u003e getModuleList();","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"vvidday":1,"-":10,"HoJunHao2000":7}},{"path":"src/main/java/modtrekt/model/ReadOnlyTaskBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":" * Unmodifiable view of an task book","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":"public interface ReadOnlyTaskBook {","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"     * Returns an unmodifiable view of the tasks list.","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"domoberzin"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"vvidday":1,"domoberzin":3,"-":10,"HoJunHao2000":4}},{"path":"src/main/java/modtrekt/model/ReadOnlyTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domoberzin"},"content":"package modtrekt.model;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"domoberzin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":" * Unmodifiable view of a task book","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":"public interface ReadOnlyTaskList {","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"     * Returns an unmodifiable view of the tasks list.","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"domoberzin"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"domoberzin":13,"HoJunHao2000":2}},{"path":"src/main/java/modtrekt/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.core.GuiSettings;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"    Path getTaskBookFilePath();","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"    Path getModuleListFilePath();","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"domoberzin":1,"-":13,"HoJunHao2000":3}},{"path":"src/main/java/modtrekt/model/TaskBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domoberzin"},"content":"package modtrekt.model;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"domoberzin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"domoberzin"},"content":"import java.util.List;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.task.UniqueTaskList;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"domoberzin"},"content":" * Wraps all data at the task-book level","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":" * Duplicates are not allowed (by .isSameTask comparison)","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"domoberzin"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"public class TaskBook implements ReadOnlyTaskBook {","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"domoberzin"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"domoberzin"},"content":"    /*","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"domoberzin"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"domoberzin"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"domoberzin"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"domoberzin"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"domoberzin"},"content":"     *   among constructors.","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"domoberzin"},"content":"    {","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"domoberzin"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"domoberzin"},"content":"    public TaskBook() {}","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"HoJunHao2000"},"content":"     * Creates an TaskBook using the Tasks in the {@code toBeCopied}","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"domoberzin"},"content":"    public TaskBook(ReadOnlyTaskBook toBeCopied) {","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"domoberzin"},"content":"        this();","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"domoberzin"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"domoberzin"},"content":"    //// list overwrite operations","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"HoJunHao2000"},"content":"     * Replaces the contents of the Task list with {@code tasks}.","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"HoJunHao2000"},"content":"     * {@code tasks} must not contain duplicate Tasks.","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"domoberzin"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"domoberzin"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"domoberzin"},"content":"     * Resets the existing data of this {@code TaskBook} with {@code newData}.","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"domoberzin"},"content":"    public void resetData(ReadOnlyTaskBook newData) {","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"domoberzin"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"domoberzin"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"domoberzin"},"content":"    //// task-level operations","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"domoberzin"},"content":"     * Adds a task to the task book.","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"domoberzin"},"content":"     * The task must not already exist in the task book.","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"domoberzin"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"domoberzin"},"content":"        tasks.add(t);","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"domoberzin"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"domoberzin"},"content":"     * {@code target} must exist in the task book.","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"HoJunHao2000"},"content":"     * The Task identity of {@code editedTask} must not be the same as another existing task in the task book.","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"HoJunHao2000"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"HoJunHao2000"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"HoJunHao2000"},"content":"        tasks.setTask(target, editedTask);","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":80,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":81,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":82,"author":{"gitId":"domoberzin"},"content":"     * Removes {@code key} from this {@code TaskBook}.","lastModifiedDate":"2022-10-08"},{"lineNumber":83,"author":{"gitId":"domoberzin"},"content":"     * {@code key} must exist in the task book.","lastModifiedDate":"2022-10-08"},{"lineNumber":84,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"domoberzin"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"domoberzin"},"content":"        tasks.remove(key);","lastModifiedDate":"2022-10-08"},{"lineNumber":87,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":88,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":89,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"domoberzin"},"content":"     * Removes {@code key} from this {@code TaskBook}.","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"domoberzin"},"content":"     * {@code key} must exist in the task book.","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"domoberzin"},"content":"    public void removeTasksWithModCode(ModCode code) {","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"domoberzin"},"content":"        tasks.removeTasksWithModCode(code);","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"domoberzin"},"content":"    //// util methods","lastModifiedDate":"2022-10-08"},{"lineNumber":98,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":99,"author":{"gitId":"domoberzin"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":100,"author":{"gitId":"domoberzin"},"content":"    public String toString() {","lastModifiedDate":"2022-10-08"},{"lineNumber":101,"author":{"gitId":"domoberzin"},"content":"        return tasks.asUnmodifiableObservableList().size() + \" tasks\";","lastModifiedDate":"2022-10-08"},{"lineNumber":102,"author":{"gitId":"domoberzin"},"content":"        // TODO: refine later","lastModifiedDate":"2022-10-08"},{"lineNumber":103,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":104,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":105,"author":{"gitId":"domoberzin"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":106,"author":{"gitId":"domoberzin"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2022-10-08"},{"lineNumber":107,"author":{"gitId":"domoberzin"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-08"},{"lineNumber":108,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":109,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":110,"author":{"gitId":"domoberzin"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":111,"author":{"gitId":"domoberzin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":112,"author":{"gitId":"domoberzin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":113,"author":{"gitId":"domoberzin"},"content":"                || (other instanceof TaskBook // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":114,"author":{"gitId":"domoberzin"},"content":"                \u0026\u0026 tasks.equals(((TaskBook) other).tasks));","lastModifiedDate":"2022-10-08"},{"lineNumber":115,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":116,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":117,"author":{"gitId":"domoberzin"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":118,"author":{"gitId":"domoberzin"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-08"},{"lineNumber":119,"author":{"gitId":"domoberzin"},"content":"        return tasks.hashCode();","lastModifiedDate":"2022-10-08"},{"lineNumber":120,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":121,"author":{"gitId":"domoberzin"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"domoberzin":113,"HoJunHao2000":8}},{"path":"src/main/java/modtrekt/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.core.GuiSettings;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"domoberzin"},"content":"    private Path taskBookFilePath \u003d Paths.get(\"data\" , \"taskbook.json\");","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":"    private Path moduleListFilePath \u003d Paths.get(\"data\" , \"modulelist.json\");","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"domoberzin"},"content":"        setTaskBookFilePath(newUserPrefs.getTaskBookFilePath());","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"HoJunHao2000"},"content":"        setModuleListFilePath(newUserPrefs.getModuleListFilePath());","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"domoberzin"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"domoberzin"},"content":"        return taskBookFilePath;","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"domoberzin"},"content":"    public void setTaskBookFilePath(Path taskBookFilePath) {","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"domoberzin"},"content":"        requireNonNull(taskBookFilePath);","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"domoberzin"},"content":"        this.taskBookFilePath \u003d taskBookFilePath;","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"HoJunHao2000"},"content":"    public Path getModuleListFilePath() {","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"HoJunHao2000"},"content":"        return moduleListFilePath;","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"HoJunHao2000"},"content":"    public void setModuleListFilePath(Path moduleListFilePath) {","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"HoJunHao2000"},"content":"        requireNonNull(moduleListFilePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"HoJunHao2000"},"content":"        this.moduleListFilePath \u003d moduleListFilePath;","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"vvidday"},"content":"                \u0026\u0026 taskBookFilePath.equals(o.taskBookFilePath)","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"HoJunHao2000"},"content":"                \u0026\u0026 moduleListFilePath.equals(o.moduleListFilePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"vvidday"},"content":"        return Objects.hash(guiSettings, taskBookFilePath, moduleListFilePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"domoberzin"},"content":"        sb.append(\"\\nLocal data file location : \" + taskBookFilePath);","lastModifiedDate":"2022-10-08"},{"lineNumber":96,"author":{"gitId":"HoJunHao2000"},"content":"        sb.append(\"\\nLocal data file location : \" + moduleListFilePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"vvidday":2,"domoberzin":8,"-":79,"HoJunHao2000":11}},{"path":"src/main/java/modtrekt/model/module/ModCode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.model.module;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"HoJunHao2000"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":" * Represents a Module\u0027s code in the module list.","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCode(String)}","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"public class ModCode {","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Code should contain alphanumeric characters and no white space\";","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"    public static final String VALIDATION_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"    private final String value;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"HoJunHao2000"},"content":"     * Constructs an {@code ModCode}.","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"HoJunHao2000"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"HoJunHao2000"},"content":"     * @param code A valid email address.","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"HoJunHao2000"},"content":"    public ModCode(String code) {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"HoJunHao2000"},"content":"        requireNonNull(code);","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"HoJunHao2000"},"content":"        checkArgument(isValidCode(code), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"domoberzin"},"content":"        value \u003d code.toUpperCase();","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"HoJunHao2000"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"HoJunHao2000"},"content":"    public static boolean isValidCode(String test) {","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"HoJunHao2000"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"HoJunHao2000"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"HoJunHao2000"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"HoJunHao2000"},"content":"        return value;","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"HoJunHao2000"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"HoJunHao2000"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"HoJunHao2000"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"HoJunHao2000"},"content":"                || (other instanceof ModCode // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"HoJunHao2000"},"content":"                \u0026\u0026 value.equals(((ModCode) other).value)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"HoJunHao2000"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"HoJunHao2000"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"HoJunHao2000"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"jontmy"},"content":"    public String getValue() {","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"jontmy"},"content":"        return value;","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"HoJunHao2000"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"domoberzin":1,"jontmy":4,"HoJunHao2000":51}},{"path":"src/main/java/modtrekt/model/module/ModCredit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.model.module;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"HoJunHao2000"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":" * Represents a Module\u0027s credit in the module list.","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCredit(String)}","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"public class ModCredit {","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"            \"Credit should only contain numbers, and it should be only 1 digits long\";","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{1,}\";","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"    public final String value;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"HoJunHao2000"},"content":"     * Constructs a {@code Credit}.","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"HoJunHao2000"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"HoJunHao2000"},"content":"     * @param credit A valid module credit.","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"HoJunHao2000"},"content":"    public ModCredit(String credit) {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"HoJunHao2000"},"content":"        requireNonNull(credit);","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"HoJunHao2000"},"content":"        checkArgument(isValidCredit(credit), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"HoJunHao2000"},"content":"        value \u003d credit;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"HoJunHao2000"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"HoJunHao2000"},"content":"    public static boolean isValidCredit(String test) {","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"HoJunHao2000"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"HoJunHao2000"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"HoJunHao2000"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"HoJunHao2000"},"content":"        return value;","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"HoJunHao2000"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"HoJunHao2000"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"HoJunHao2000"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"HoJunHao2000"},"content":"                || (other instanceof ModCredit // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"HoJunHao2000"},"content":"                \u0026\u0026 value.equals(((ModCredit) other).value)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"HoJunHao2000"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"HoJunHao2000"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"HoJunHao2000"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"jontmy"},"content":"    public String getValue() {","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"jontmy"},"content":"        return value;","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"jontmy"},"content":"    public int getIntValue() {","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"jontmy"},"content":"        return Integer.parseInt(value);","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"HoJunHao2000"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jontmy":7,"HoJunHao2000":53}},{"path":"src/main/java/modtrekt/model/module/ModName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.model.module;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":" * Represents a Module\u0027s name in the module list.","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"public class ModName {","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"    private final String fullName;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"HoJunHao2000"},"content":"     * Constructs a {@code ModName}.","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"HoJunHao2000"},"content":"    public ModName(String name) {","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"HoJunHao2000"},"content":"                || (other instanceof ModName // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"HoJunHao2000"},"content":"                \u0026\u0026 fullName.equals(((ModName) other).fullName)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"jontmy"},"content":"    public String getFullName() {","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"jontmy"},"content":"        return fullName;","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jontmy":4,"-":49,"HoJunHao2000":8}},{"path":"src/main/java/modtrekt/model/module/ModTaskCount.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.model.module;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"HoJunHao2000"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":" * Represents a Module\u0027s number of tasks.","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCount(String)}","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"public class ModTaskCount {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"            \"Task count should only contain numeric characters and it should not be blank\";","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"    /*","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"HoJunHao2000"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"HoJunHao2000"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\";","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"HoJunHao2000"},"content":"    private final String taskCount;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"HoJunHao2000"},"content":"     * Constructs a {@code ModTaskCount}.","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"HoJunHao2000"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"HoJunHao2000"},"content":"     * @param count A valid number of tasks.","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"HoJunHao2000"},"content":"    public ModTaskCount(String count) {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"HoJunHao2000"},"content":"        requireNonNull(count);","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"HoJunHao2000"},"content":"        checkArgument(isValidCount(count), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"HoJunHao2000"},"content":"        taskCount \u003d count;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"HoJunHao2000"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"HoJunHao2000"},"content":"    public static boolean isValidCount(String test) {","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"HoJunHao2000"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"HoJunHao2000"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"HoJunHao2000"},"content":"    public String toString() {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"HoJunHao2000"},"content":"        return taskCount;","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"HoJunHao2000"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"HoJunHao2000"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"HoJunHao2000"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"HoJunHao2000"},"content":"                || (other instanceof ModTaskCount // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"HoJunHao2000"},"content":"                \u0026\u0026 taskCount.equals(((ModTaskCount) other).taskCount)); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"HoJunHao2000"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"HoJunHao2000"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"HoJunHao2000"},"content":"        return taskCount.hashCode();","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"HoJunHao2000"},"content":"    public String getTaskCount() {","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"HoJunHao2000"},"content":"        return taskCount;","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"HoJunHao2000"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"HoJunHao2000":61}},{"path":"src/main/java/modtrekt/model/module/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package modtrekt.model.module;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":" * Represents a module in the module list.","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"public class Module {","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"    private final ModCode code;","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"    private final ModName name;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"    private final ModCredit credits;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"midnightfeverrr"},"content":"    private final boolean isDone;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"    private ModTaskCount taskCount;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"midnightfeverrr"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"midnightfeverrr"},"content":"     * Creates a Module with the given code, name, credits and tasks.","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"midnightfeverrr"},"content":"     *","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"midnightfeverrr"},"content":"     * @param code    the module code","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"midnightfeverrr"},"content":"     * @param name    the module name","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"midnightfeverrr"},"content":"     * @param credits the number of credits for the module","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"midnightfeverrr"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"HoJunHao2000"},"content":"    public Module(ModCode code, ModName name, ModCredit credits, ModTaskCount taskCount) {","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"midnightfeverrr"},"content":"        this.code \u003d code;","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"midnightfeverrr"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"midnightfeverrr"},"content":"        this.credits \u003d credits;","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"midnightfeverrr"},"content":"        this.taskCount \u003d taskCount;","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"HoJunHao2000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"midnightfeverrr"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"HoJunHao2000"},"content":"     * Creates a Module with the given code, name, credits, tasks, and isDone.","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"     * @param code    the module code","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"     * @param name    the module name","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"     * @param credits the number of credits for the module","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"HoJunHao2000"},"content":"    public Module(ModCode code, ModName name, ModCredit credits, ModTaskCount taskCount, boolean isDone) {","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"        this.code \u003d code;","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"        this.credits \u003d credits;","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"HoJunHao2000"},"content":"        this.taskCount \u003d taskCount;","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"HoJunHao2000"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"domoberzin"},"content":"     * Creates a Module with the string representation of code, name, credits and tasks.","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"domoberzin"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"domoberzin"},"content":"     * @param code    the module code","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"domoberzin"},"content":"     * @param name    the module name","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"domoberzin"},"content":"     * @param credits the number of credits for the module","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"HoJunHao2000"},"content":"    public Module(String code, String name, String credits, String taskCount) {","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"domoberzin"},"content":"        this.code \u003d new ModCode(code);","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"domoberzin"},"content":"        this.name \u003d new ModName(name);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"domoberzin"},"content":"        this.credits \u003d new ModCredit(credits);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"HoJunHao2000"},"content":"        this.taskCount \u003d new ModTaskCount(taskCount);","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"midnightfeverrr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"HoJunHao2000"},"content":"    public ModName getName() {","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"jontmy"},"content":"        return name;","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"HoJunHao2000"},"content":"    public ModCode getCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"jontmy"},"content":"        return code;","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":69,"author":{"gitId":"HoJunHao2000"},"content":"    public ModCredit getCredits() {","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"jontmy"},"content":"        return credits;","lastModifiedDate":"2022-10-04"},{"lineNumber":71,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"HoJunHao2000"},"content":"    public String getTaskCountStr() {","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"HoJunHao2000"},"content":"        return taskCount.toString();","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"HoJunHao2000"},"content":"    public ModTaskCount getTaskCount() {","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"HoJunHao2000"},"content":"        return taskCount;","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"HoJunHao2000"},"content":"    public int getTaskCountInt() {","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"HoJunHao2000"},"content":"        return Integer.parseInt(taskCount.toString());","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"midnightfeverrr"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"midnightfeverrr"},"content":"        return this.isDone;","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"midnightfeverrr"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"midnightfeverrr"},"content":"    public Module done() {","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"midnightfeverrr"},"content":"        return new Module(this.code, this.name, this.credits, this.taskCount, true);","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"midnightfeverrr"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"midnightfeverrr"},"content":"    public Module undone() {","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"midnightfeverrr"},"content":"        return new Module(this.code, this.name, this.credits, this.taskCount, false);","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"midnightfeverrr"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"HoJunHao2000"},"content":"     * Updates the number of tasks the module has.","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"HoJunHao2000"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"HoJunHao2000"},"content":"     * @param taskCount the updated number of tasks.","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"HoJunHao2000"},"content":"    public void updateTaskCount(int taskCount) {","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"HoJunHao2000"},"content":"        String updatedCount \u003d Integer.toString(taskCount);","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"HoJunHao2000"},"content":"        this.taskCount \u003d new ModTaskCount(updatedCount);","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"HoJunHao2000"},"content":"     * Returns true if both modules have the same name.","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"HoJunHao2000"},"content":"     * This defines a weaker notion of equality between two modules.","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"HoJunHao2000"},"content":"    public boolean isSameModule(Module otherModule) {","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"HoJunHao2000"},"content":"        if (otherModule \u003d\u003d this) {","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"HoJunHao2000"},"content":"            return true;","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"HoJunHao2000"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"HoJunHao2000"},"content":"        return otherModule !\u003d null","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"midnightfeverrr"},"content":"                \u0026\u0026 otherModule.getName().equals(getName())","lastModifiedDate":"2022-10-21"},{"lineNumber":117,"author":{"gitId":"midnightfeverrr"},"content":"                \u0026\u0026 otherModule.isDone() \u003d\u003d this.isDone();","lastModifiedDate":"2022-10-21"},{"lineNumber":118,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"domoberzin"},"content":"     * Returns true if both modules have the same name.","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"domoberzin"},"content":"     * This defines a weaker notion of equality between two modules.","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"domoberzin"},"content":"    public boolean isSameCodeModule(ModCode otherModule) {","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"domoberzin"},"content":"        return otherModule !\u003d null","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"domoberzin"},"content":"                \u0026\u0026 otherModule.equals(getCode());","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"HoJunHao2000"},"content":"     * Returns true if both modules have the same identity and data fields.","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"HoJunHao2000"},"content":"     * This defines a stronger notion of equality between two modules.","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"HoJunHao2000"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"HoJunHao2000"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"HoJunHao2000"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"HoJunHao2000"},"content":"            return true;","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"HoJunHao2000"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"HoJunHao2000"},"content":"        if (!(other instanceof Module)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"HoJunHao2000"},"content":"            return false;","lastModifiedDate":"2022-10-09"},{"lineNumber":142,"author":{"gitId":"HoJunHao2000"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":144,"author":{"gitId":"HoJunHao2000"},"content":"        Module otherModule \u003d (Module) other;","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"HoJunHao2000"},"content":"        return otherModule.getName().equals(getName())","lastModifiedDate":"2022-10-09"},{"lineNumber":146,"author":{"gitId":"HoJunHao2000"},"content":"                \u0026\u0026 otherModule.getCode().equals(getCode())","lastModifiedDate":"2022-10-09"},{"lineNumber":147,"author":{"gitId":"midnightfeverrr"},"content":"                \u0026\u0026 otherModule.getCredits() \u003d\u003d getCredits()","lastModifiedDate":"2022-10-21"},{"lineNumber":148,"author":{"gitId":"midnightfeverrr"},"content":"                \u0026\u0026 otherModule.isDone() \u003d\u003d this.isDone();","lastModifiedDate":"2022-10-21"},{"lineNumber":149,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":150,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":151,"author":{"gitId":"HoJunHao2000"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":152,"author":{"gitId":"HoJunHao2000"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-09"},{"lineNumber":153,"author":{"gitId":"HoJunHao2000"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-10-09"},{"lineNumber":154,"author":{"gitId":"HoJunHao2000"},"content":"        return Objects.hash(name, code, credits);","lastModifiedDate":"2022-10-09"},{"lineNumber":155,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":156,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":157,"author":{"gitId":"HoJunHao2000"},"content":"    @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":158,"author":{"gitId":"HoJunHao2000"},"content":"    public String toString() {","lastModifiedDate":"2022-10-09"},{"lineNumber":159,"author":{"gitId":"midnightfeverrr"},"content":"        return getName() + \", Code: \" + getCode() + \", Credits: \" + getCredits() + (isDone ? \"(DONE)\" : \"\");","lastModifiedDate":"2022-10-21"},{"lineNumber":160,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":161,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"domoberzin":26,"jontmy":32,"midnightfeverrr":32,"HoJunHao2000":71}},{"path":"src/main/java/modtrekt/model/module/UniqueModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.model.module;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.exceptions.DuplicateModuleException;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.exceptions.ModuleNotFoundException;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":" * A list of modules that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":" * A module is considered unique by comparing using {@code Module#isSameModule(Module)}. As such, adding and updating of","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"HoJunHao2000"},"content":" * modules uses Module#isSameModule(Module) for equality so as to ensure that the module being added or updated is","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":" * unique in terms of identity in the UniqueModuleList. However, the removal of a module uses Module#equals(Object) so","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"HoJunHao2000"},"content":" * as to ensure that the module with exactly the same fields will be removed.","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"HoJunHao2000"},"content":" * @see Module#isSameModule(Module)","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"HoJunHao2000"},"content":"public class UniqueModuleList implements Iterable\u003cModule\u003e {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"HoJunHao2000"},"content":"    private final ObservableList\u003cModule\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"HoJunHao2000"},"content":"    private final ObservableList\u003cModule\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"HoJunHao2000"},"content":"     * Returns true if the list contains an equivalent module as the given argument.","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"HoJunHao2000"},"content":"    public boolean contains(Module toCheck) {","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"HoJunHao2000"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"HoJunHao2000"},"content":"     * Returns true if the list contains an equivalent module as the given argument.","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"domoberzin"},"content":"    public boolean containsCode(ModCode toCheck) {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"domoberzin"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"domoberzin"},"content":"        ObservableList\u003cModule\u003e checkList \u003d internalList.filtered(x -\u003e x.getCode().equals(toCheck));","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"domoberzin"},"content":"        return checkList.size() \u003e 0;","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"HoJunHao2000"},"content":"     * Returns true if the list contains an equivalent module as the given argument.","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"domoberzin"},"content":"    public Module getModuleFromCode(ModCode toCheck) {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"domoberzin"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"domoberzin"},"content":"        ObservableList\u003cModule\u003e checkList \u003d internalList.filtered(x -\u003e x.getCode().equals(toCheck));","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"domoberzin"},"content":"        if (checkList.size() \u003e 0) {","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"domoberzin"},"content":"            return checkList.get(0);","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"domoberzin"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"domoberzin"},"content":"        return null;","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"HoJunHao2000"},"content":"     * Adds a module to the list.","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"HoJunHao2000"},"content":"     * The module must not already exist in the list.","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"HoJunHao2000"},"content":"    public void add(Module toAdd) {","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"HoJunHao2000"},"content":"            throw new DuplicateModuleException();","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"HoJunHao2000"},"content":"     * Replaces the module {@code target} in the list with {@code editedModule}.","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"HoJunHao2000"},"content":"     * The module identity of {@code editedModule} must not be the same as another existing module in the list.","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"HoJunHao2000"},"content":"    public void setModule(Module target, Module editedModule) {","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"HoJunHao2000"},"content":"        requireAllNonNull(target, editedModule);","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":85,"author":{"gitId":"HoJunHao2000"},"content":"            throw new ModuleNotFoundException();","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":88,"author":{"gitId":"HoJunHao2000"},"content":"        if (!target.isSameModule(editedModule) \u0026\u0026 contains(editedModule)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"HoJunHao2000"},"content":"            throw new DuplicateModuleException();","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"HoJunHao2000"},"content":"        internalList.set(index, editedModule);","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"HoJunHao2000"},"content":"     * Removes the equivalent module from the list.","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"HoJunHao2000"},"content":"     * The module must exist in the list.","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"HoJunHao2000"},"content":"    public void remove(Module toRemove) {","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":102,"author":{"gitId":"HoJunHao2000"},"content":"            throw new ModuleNotFoundException();","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"HoJunHao2000"},"content":"    public void setModules(UniqueModuleList replacement) {","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"HoJunHao2000"},"content":"     * Replaces the contents of this list with {@code modules}.","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"HoJunHao2000"},"content":"     * {@code modules} must not contain duplicate modules.","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"HoJunHao2000"},"content":"    public void setModules(List\u003cModule\u003e modules) {","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"HoJunHao2000"},"content":"        requireAllNonNull(modules);","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"HoJunHao2000"},"content":"        if (!modulesAreUnique(modules)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"HoJunHao2000"},"content":"            throw new DuplicateModuleException();","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":121,"author":{"gitId":"HoJunHao2000"},"content":"        internalList.setAll(modules);","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":127,"author":{"gitId":"HoJunHao2000"},"content":"    public ObservableList\u003cModule\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"HoJunHao2000"},"content":"    public Iterator\u003cModule\u003e iterator() {","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"HoJunHao2000"},"content":"                || (other instanceof UniqueModuleList // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"HoJunHao2000"},"content":"                \u0026\u0026 internalList.equals(((UniqueModuleList) other).internalList));","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"HoJunHao2000"},"content":"     * Returns true if {@code modules} contains only unique modules.","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"HoJunHao2000"},"content":"    private boolean modulesAreUnique(List\u003cModule\u003e modules) {","lastModifiedDate":"2022-10-09"},{"lineNumber":152,"author":{"gitId":"HoJunHao2000"},"content":"        for (int i \u003d 0; i \u003c modules.size() - 1; i++) {","lastModifiedDate":"2022-10-09"},{"lineNumber":153,"author":{"gitId":"HoJunHao2000"},"content":"            for (int j \u003d i + 1; j \u003c modules.size(); j++) {","lastModifiedDate":"2022-10-09"},{"lineNumber":154,"author":{"gitId":"HoJunHao2000"},"content":"                if (modules.get(i).isSameModule(modules.get(j))) {","lastModifiedDate":"2022-10-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"domoberzin":22,"-":88,"HoJunHao2000":51}},{"path":"src/main/java/modtrekt/model/module/exceptions/DuplicateModuleException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.model.module.exceptions;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":" * Signals that the operation will result in duplicate Modules (Modules are considered duplicates if they have the same","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"HoJunHao2000"},"content":" * identity).","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"HoJunHao2000"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":"public class DuplicateModuleException extends RuntimeException {","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"    public DuplicateModuleException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"        super(\"Operation would result in duplicate modules\");","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"HoJunHao2000":11}},{"path":"src/main/java/modtrekt/model/module/exceptions/ModuleNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.model.module.exceptions;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":" * Signals that the operation is unable to find the specified module.","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"HoJunHao2000"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"HoJunHao2000"},"content":"public class ModuleNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"HoJunHao2000":6}},{"path":"src/main/java/modtrekt/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.model.person;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.util.StringUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"domoberzin"},"content":"    public boolean test(Task t) {","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"domoberzin"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(t.getDescription().description, keyword));","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"domoberzin":4,"-":26,"HoJunHao2000":2}},{"path":"src/main/java/modtrekt/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.model.person;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.task.Description;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"    private final Description description;","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"domoberzin"},"content":"    public Person(Description description) {","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"domoberzin"},"content":"        requireAllNonNull(description);","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"domoberzin"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"domoberzin"},"content":"    public Description getName() {","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"domoberzin"},"content":"        return description;","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"domoberzin"},"content":"        return otherPerson.getName().equals(getName());","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"domoberzin"},"content":"        return Objects.hash(description);","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"domoberzin"},"content":"        builder.append(getName());","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"domoberzin":10,"-":64,"HoJunHao2000":2}},{"path":"src/main/java/modtrekt/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.model.tag;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":52,"HoJunHao2000":2}},{"path":"src/main/java/modtrekt/model/task/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"package modtrekt.model.task;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":" * Represents a deadline in the task list.","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":" * Similar to task, but accepts a due date.","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"    private final LocalDate dueDate;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"     * Constructor for an instance of Deadline with a priority.","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"     * @param description description of task","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"     * @param module      module code of note\u0027s module","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"     * @param isArchived  true if task is completed/archived","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"     * @param priority    priority of task","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"    public Deadline(Description description, ModCode module, LocalDate dueDate, boolean isArchived, Priority priority) {","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"        super(description, module, isArchived, priority);","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"     * Gets due date of deadline.","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"     * @return Due date of deadline","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"vvidday"},"content":"    public LocalDate getDueDate() {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"vvidday"},"content":"        return dueDate;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"vvidday"},"content":"    public Task archive() {","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"vvidday"},"content":"        return new Deadline(this.getDescription(), this.getModule(), this.getDueDate(), true, this.getPriority());","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"vvidday"},"content":"    public Task unarchive() {","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"vvidday"},"content":"        return new Deadline(this.getDescription(), this.getModule(), this.getDueDate(), false, this.getPriority());","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"vvidday"},"content":"    public Task setPriority(Priority priority) {","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"vvidday"},"content":"        return new Deadline(this.getDescription(), this.getModule(), this.getDueDate(), this.isArchived(), priority);","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"vvidday"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"vvidday"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"vvidday"},"content":"            return true;","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"vvidday"},"content":"        if (super.equals(other) \u0026\u0026 other instanceof Deadline) {","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"vvidday"},"content":"            return ((Deadline) other).getDueDate().isEqual(dueDate);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"vvidday"},"content":"        return false;","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"vvidday"},"content":"    public String toString() {","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"jontmy"},"content":"        return String.format(\"%s due %s\", super.toString(), dueDate);","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"vvidday"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"vvidday":63,"jontmy":2}},{"path":"src/main/java/modtrekt/model/task/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domoberzin"},"content":"package modtrekt.model.task;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"domoberzin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"domoberzin"},"content":"import static modtrekt.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":" * Represents a Tasks\u0027s description in the task book.","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"public class Description implements Comparable\u003cDescription\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"domoberzin"},"content":"            \"Descriptions should not be blank\";","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"domoberzin"},"content":"    /*","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"     * The first character of the task must not be a whitespace,","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"domoberzin"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"domoberzin"},"content":"    public final String description;","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"domoberzin"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"domoberzin"},"content":"     *","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"domoberzin"},"content":"     * @param description A valid description.","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"domoberzin"},"content":"    public Description(String description) {","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"domoberzin"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"domoberzin"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"domoberzin"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"domoberzin"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"domoberzin"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"domoberzin"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"domoberzin"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"domoberzin"},"content":"    public String toString() {","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"domoberzin"},"content":"        return description;","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"domoberzin"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"domoberzin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"domoberzin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"domoberzin"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"domoberzin"},"content":"                \u0026\u0026 this.description.equals(((Description) other).description)); // state check","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"domoberzin"},"content":"    @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"domoberzin"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"domoberzin"},"content":"        return description.hashCode();","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"vvidday"},"content":"    public int compareTo(Description that) {","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"vvidday"},"content":"        return this.description.compareTo(that.description);","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"domoberzin"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"vvidday":5,"domoberzin":58}},{"path":"src/main/java/modtrekt/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domoberzin"},"content":"package modtrekt.model.task;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.util.DeadlineComparator;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":" * Represents a basic immutable task in the task list.","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":" * Ensures that necessary details are valid, present and non-null.","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"public class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"    public static final Comparator\u003cTask\u003e PRIORITY_COMPARATOR \u003d Comparator.comparingInt(t -\u003e t.getPriority().ordinal());","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"    public static final Comparator\u003cTask\u003e ARCHIVAL_COMPARATOR \u003d Comparator.comparing(Task::isArchived);","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"    public static final Comparator\u003cTask\u003e DESCRIPTION_COMPARATOR \u003d Comparator.comparing(Task::getDescription);","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"    public static final Comparator\u003cTask\u003e DEADLINE_COMPARATOR \u003d new DeadlineComparator();","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"     * String representing description of task","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"domoberzin"},"content":"    public final ModCode module;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"    private final Description description;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"    private final Priority priority;","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"    private final boolean isArchived;","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":"     * Constructor for an instance of Task with a priority.","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"domoberzin"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"domoberzin"},"content":"     * @param description description of task","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"vvidday"},"content":"     * @param module      module code of note\u0027s module","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"vvidday"},"content":"     * @param isArchived  true if task is completed/archived","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"vvidday"},"content":"     * @param priority    priority of task","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"vvidday"},"content":"    public Task(Description description, ModCode module, boolean isArchived, Priority priority) {","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"        this.module \u003d module;","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"domoberzin"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"vvidday"},"content":"        this.isArchived \u003d isArchived;","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"vvidday"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"domoberzin"},"content":"    public Description getDescription() {","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"domoberzin"},"content":"        return this.description;","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"domoberzin"},"content":"    public ModCode getModule() {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"domoberzin"},"content":"        return this.module;","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"vvidday"},"content":"    public Priority getPriority() {","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"vvidday"},"content":"        return priority;","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"jontmy"},"content":"    public boolean isArchived() {","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"jontmy"},"content":"        return this.isArchived;","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"vvidday"},"content":"    public Task setPriority(Priority priority) {","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"vvidday"},"content":"        return new Task(description, module, isArchived, priority);","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"jontmy"},"content":"    public Task archive() {","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"vvidday"},"content":"        return new Task(this.description, this.module, true, priority);","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"jontmy"},"content":"    public Task unarchive() {","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"vvidday"},"content":"        return new Task(this.description, this.module, false, priority);","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"domoberzin"},"content":"     * Compares task object with another task object and checks if they are the same.","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"domoberzin"},"content":"    public boolean isSameTask(Task o) {","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"domoberzin"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"domoberzin"},"content":"            return true;","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"domoberzin"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"vvidday"},"content":"        return o !\u003d null \u0026\u0026 o.description.equals(this.description) \u0026\u0026 o.module.equals(this.module)","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"vvidday"},"content":"                \u0026\u0026 o.isArchived() \u003d\u003d this.isArchived() \u0026\u0026 o.priority \u003d\u003d this.priority;","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":80,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":81,"author":{"gitId":"domoberzin"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":82,"author":{"gitId":"domoberzin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":83,"author":{"gitId":"domoberzin"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":84,"author":{"gitId":"domoberzin"},"content":"            return true;","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"domoberzin"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"jontmy"},"content":"        return (other instanceof Task) \u0026\u0026 isSameTask((Task) other);","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":88,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":89,"author":{"gitId":"domoberzin"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"domoberzin"},"content":"    public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"vvidday"},"content":"        return String.format(\"%s %s %s %s\", description, module, priority, isArchived ? \"(ARCHIVED)\" : \"\");","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"vvidday"},"content":"    public int compareTo(Task that) {","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"vvidday"},"content":"        return ARCHIVAL_COMPARATOR.thenComparing(PRIORITY_COMPARATOR.reversed())","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"vvidday"},"content":"                .thenComparing(DEADLINE_COMPARATOR.reversed())","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"vvidday"},"content":"                .thenComparing(DESCRIPTION_COMPARATOR)","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"vvidday"},"content":"                .compare(this, that);","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"vvidday"},"content":"     * The different priority levels for tasks.","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"vvidday"},"content":"    public enum Priority {","lastModifiedDate":"2022-10-21"},{"lineNumber":106,"author":{"gitId":"vvidday"},"content":"        NONE, LOW, MEDIUM, HIGH","lastModifiedDate":"2022-10-21"},{"lineNumber":107,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":108,"author":{"gitId":"domoberzin"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"vvidday":45,"domoberzin":45,"jontmy":18}},{"path":"src/main/java/modtrekt/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domoberzin"},"content":"package modtrekt.model.task;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"domoberzin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"domoberzin"},"content":"import static modtrekt.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"import java.util.List;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"domoberzin"},"content":" * A list of tasks that does not allow nulls.","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":" *","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"domoberzin"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"domoberzin"},"content":" *","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"domoberzin"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"domoberzin"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"domoberzin"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"domoberzin"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"domoberzin"},"content":"     * Adds a task to the list.","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"domoberzin"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"domoberzin"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"domoberzin"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"domoberzin"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"domoberzin"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"domoberzin"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"domoberzin"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"domoberzin"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"domoberzin"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"domoberzin"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"domoberzin"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"domoberzin"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"domoberzin"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"domoberzin"},"content":"     * The task must exist in the list.","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"domoberzin"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"domoberzin"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"domoberzin"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"domoberzin"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"domoberzin"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"domoberzin"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"domoberzin"},"content":"     * The task must exist in the list.","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"domoberzin"},"content":"    public void removeTasksWithModCode(ModCode code) {","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"domoberzin"},"content":"        requireNonNull(code);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"domoberzin"},"content":"        internalList.removeIf(t -\u003e t.getModule().equals(code));","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"domoberzin"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"domoberzin"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"domoberzin"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"domoberzin"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"domoberzin"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"domoberzin"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":80,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":81,"author":{"gitId":"domoberzin"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-08"},{"lineNumber":82,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":83,"author":{"gitId":"domoberzin"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-08"},{"lineNumber":84,"author":{"gitId":"domoberzin"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":87,"author":{"gitId":"domoberzin"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":88,"author":{"gitId":"domoberzin"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2022-10-08"},{"lineNumber":89,"author":{"gitId":"domoberzin"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-08"},{"lineNumber":90,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":91,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":92,"author":{"gitId":"domoberzin"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":93,"author":{"gitId":"domoberzin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":94,"author":{"gitId":"domoberzin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":95,"author":{"gitId":"domoberzin"},"content":"                || (other instanceof UniqueTaskList // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":96,"author":{"gitId":"domoberzin"},"content":"                        \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));","lastModifiedDate":"2022-10-08"},{"lineNumber":97,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":98,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":99,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":100,"author":{"gitId":"domoberzin"},"content":"     * Checks if two tasks are equal.","lastModifiedDate":"2022-10-08"},{"lineNumber":101,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":102,"author":{"gitId":"domoberzin"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2022-10-08"},{"lineNumber":103,"author":{"gitId":"domoberzin"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-08"},{"lineNumber":104,"author":{"gitId":"domoberzin"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2022-10-08"},{"lineNumber":105,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":106,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":107,"author":{"gitId":"domoberzin"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":108,"author":{"gitId":"domoberzin"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-08"},{"lineNumber":109,"author":{"gitId":"domoberzin"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-08"},{"lineNumber":110,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":111,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":112,"author":{"gitId":"domoberzin"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"domoberzin":112}},{"path":"src/main/java/modtrekt/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domoberzin"},"content":"package modtrekt.model.task.exceptions;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"domoberzin"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"domoberzin"},"content":" * Signals that the operation is unable to find the specified task.","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"domoberzin"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"public class TaskNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"domoberzin":10}},{"path":"src/main/java/modtrekt/model/util/DeadlineComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"package modtrekt.model.util;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Deadline;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":" * Comparator that compares tasks based on","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":" * 1) Whether they are a deadline or not, deadlines are considered greater","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":" * 2) If they are a deadline, which deadline\u0027s due date is sooner.","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"public class DeadlineComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"    public int compare(Task t1, Task t2) {","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"        if (t1 instanceof Deadline \u0026\u0026 !(t2 instanceof Deadline)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"            return 1;","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"        } else if (!(t1 instanceof Deadline) \u0026\u0026 t2 instanceof Deadline) {","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"            return -1;","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"        } else if (t1 instanceof Deadline \u0026\u0026 t2 instanceof Deadline) {","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":"            // Both deadlines, multiply by -1 since default compareTo method puts earlier date as greater","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"            return -1 * ((Deadline) t1).getDueDate().compareTo(((Deadline) t2).getDueDate());","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"        } else {","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"            // Both tasks","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"            return 0;","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"vvidday":28}},{"path":"src/main/java/modtrekt/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.model.util;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.ModuleList;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.ReadOnlyModuleList;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.TaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.ModCredit;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.ModName;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.ModTaskCount;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.Module;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Description;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":" * Contains utility methods for populating {@code ModuleList} with sample data.","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"HoJunHao2000"},"content":"    public static Module[] getSampleModules() {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"HoJunHao2000"},"content":"        return new Module[]{","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"HoJunHao2000"},"content":"            new Module(new ModCode(\"CS2109S\"), new ModName(\"Intro to AI and machine learning\"), new ModCredit(\"4\"),","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"HoJunHao2000"},"content":"                new ModTaskCount(\"0\")),","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"HoJunHao2000"},"content":"            new Module(new ModCode(\"CS2040S\"), new ModName(\"Data Structures and Algorithms\"), new ModCredit(\"4\"),","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"HoJunHao2000"},"content":"                    new ModTaskCount(\"0\"))","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"domoberzin"},"content":"    public static Task[] getSampleTasks() {","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"domoberzin"},"content":"        return new Task[]{","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"midnightfeverrr"},"content":"            new Task(new Description(\"Assignment 1\"), new ModCode(\"CS2109S\"), false, Task.Priority.MEDIUM),","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"midnightfeverrr"},"content":"            new Task(new Description(\"Attend lecture\"), new ModCode(\"CS2040S\"), false, Task.Priority.NONE),","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"            new Task(new Description(\"Attend exam\"), new ModCode(\"CS2040S\"), true, Task.Priority.LOW),","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"midnightfeverrr"},"content":"            new Task(new Description(\"Study for exam\"), new ModCode(\"CS2109S\"), false, Task.Priority.HIGH),","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"HoJunHao2000"},"content":"    public static ReadOnlyModuleList getSampleModuleList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"HoJunHao2000"},"content":"        ModuleList sampleAb \u003d new ModuleList();","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"HoJunHao2000"},"content":"        for (Module sampleModule : getSampleModules()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"HoJunHao2000"},"content":"            sampleAb.addModule(sampleModule);","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":45,"author":{"gitId":"domoberzin"},"content":"    public static ReadOnlyTaskBook getSampleTaskBook() {","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"domoberzin"},"content":"        TaskBook sampleAb \u003d new TaskBook();","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"domoberzin"},"content":"        for (Task sampleTask : getSampleTasks()) {","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"domoberzin"},"content":"            sampleAb.addTask(sampleTask);","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"vvidday":4,"domoberzin":6,"jontmy":1,"-":19,"midnightfeverrr":3,"HoJunHao2000":19}},{"path":"src/main/java/modtrekt/storage/JsonAdaptedModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.storage;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.ModCredit;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.ModName;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.ModTaskCount;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.Module;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":" * Jackson-friendly version of {@link Module}.","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"class JsonAdaptedModule {","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Module\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"HoJunHao2000"},"content":"    private final String name;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"HoJunHao2000"},"content":"    private final String code;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"HoJunHao2000"},"content":"    private final String credit;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"HoJunHao2000"},"content":"    private final String taskCount;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"midnightfeverrr"},"content":"    private final boolean isDone;","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"HoJunHao2000"},"content":"     * Constructs a {@code JsonAdaptedModule} with the given module details.","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"HoJunHao2000"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"HoJunHao2000"},"content":"    public JsonAdaptedModule(@JsonProperty(\"name\") String name, @JsonProperty(\"code\") String code,","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"domoberzin"},"content":"                             @JsonProperty(\"credit\") String credit,","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"midnightfeverrr"},"content":"                             @JsonProperty(\"taskCount\") String taskCount,","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"midnightfeverrr"},"content":"                             @JsonProperty(\"isDone\") boolean isDone) {","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"HoJunHao2000"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"HoJunHao2000"},"content":"        this.credit \u003d credit;","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"HoJunHao2000"},"content":"        this.code \u003d code;","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"HoJunHao2000"},"content":"        this.taskCount \u003d taskCount;","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"midnightfeverrr"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"HoJunHao2000"},"content":"     * Converts a given {@code Module} into this class for Jackson use.","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"HoJunHao2000"},"content":"    public JsonAdaptedModule(Module source) {","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"        name \u003d source.getName().getFullName();","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"jontmy"},"content":"        code \u003d source.getCode().getValue();","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"jontmy"},"content":"        credit \u003d source.getCredits().toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"HoJunHao2000"},"content":"        taskCount \u003d source.getTaskCountStr();","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"midnightfeverrr"},"content":"        isDone \u003d source.isDone();","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"HoJunHao2000"},"content":"     * Converts this Jackson-friendly adapted module object into the model\u0027s {@code Module} object.","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"HoJunHao2000"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"HoJunHao2000"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted module.","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"HoJunHao2000"},"content":"    public Module toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"HoJunHao2000"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"HoJunHao2000"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, ModName.class.getSimpleName()));","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"HoJunHao2000"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"HoJunHao2000"},"content":"        if (!ModName.isValidName(name)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"HoJunHao2000"},"content":"            throw new IllegalValueException(ModName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"HoJunHao2000"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"HoJunHao2000"},"content":"        final ModName modelName \u003d new ModName(name);","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"HoJunHao2000"},"content":"        if (credit \u003d\u003d null) {","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"HoJunHao2000"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"HoJunHao2000"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, ModCredit.class.getSimpleName()));","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"HoJunHao2000"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"HoJunHao2000"},"content":"        if (!ModCredit.isValidCredit(credit)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"HoJunHao2000"},"content":"            throw new IllegalValueException(ModCredit.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"HoJunHao2000"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"HoJunHao2000"},"content":"        final ModCredit modelCredit \u003d new ModCredit(credit);","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"HoJunHao2000"},"content":"        if (code \u003d\u003d null) {","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"HoJunHao2000"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, ModCode.class.getSimpleName()));","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"HoJunHao2000"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"HoJunHao2000"},"content":"        if (!ModCode.isValidCode(code)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"HoJunHao2000"},"content":"            throw new IllegalValueException(ModCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"HoJunHao2000"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"HoJunHao2000"},"content":"        final ModCode modelCode \u003d new ModCode(code);","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"HoJunHao2000"},"content":"        if (!ModTaskCount.isValidCount(taskCount)) {","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"HoJunHao2000"},"content":"            throw new IllegalValueException(ModTaskCount.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"HoJunHao2000"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"HoJunHao2000"},"content":"        final ModTaskCount modelTaskCount \u003d new ModTaskCount(taskCount);","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"midnightfeverrr"},"content":"        final boolean modelIsDone \u003d isDone;","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"midnightfeverrr"},"content":"        return new Module(modelCode, modelName, modelCredit, modelTaskCount, modelIsDone);","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"HoJunHao2000"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"domoberzin":1,"jontmy":3,"midnightfeverrr":8,"HoJunHao2000":81}},{"path":"src/main/java/modtrekt/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.tag.Tag;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":45,"HoJunHao2000":3}},{"path":"src/main/java/modtrekt/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domoberzin"},"content":"package modtrekt.storage;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"domoberzin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"import java.util.List;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"import modtrekt.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.parser.converters.PriorityConverter;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Deadline;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.task.Description;","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"domoberzin"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"domoberzin"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"domoberzin"},"content":"public class JsonAdaptedTask {","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"domoberzin"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"domoberzin"},"content":"    private final String description;","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"domoberzin"},"content":"    private final String modCode;","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"    private final String dueDate;","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":"    private final String priority;","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"    private final boolean isArchived;","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"domoberzin"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"HoJunHao2000"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"domoberzin"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"vvidday"},"content":"    public JsonAdaptedTask(@JsonProperty(\"description\") String name, @JsonProperty(\"module code\") String modCode,","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"vvidday"},"content":"                           @JsonProperty(\"dueDate\") String dueDate,","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"vvidday"},"content":"                           @JsonProperty(\"priority\") String priority,","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"vvidday"},"content":"                           @JsonProperty(\"isArchived\") boolean isArchived) {","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"domoberzin"},"content":"        this.description \u003d name;","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"domoberzin"},"content":"        this.modCode \u003d modCode;","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"vvidday"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"vvidday"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"        this.isArchived \u003d isArchived;","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"domoberzin"},"content":"     * Converts a given {@code task} into this class for Jackson use.","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"domoberzin"},"content":"    public JsonAdaptedTask(Task task) {","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"domoberzin"},"content":"        this.description \u003d task.getDescription().toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"domoberzin"},"content":"        this.modCode \u003d task.getModule().toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"vvidday"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"vvidday"},"content":"            dueDate \u003d ((Deadline) task).getDueDate().toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"vvidday"},"content":"        } else {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"vvidday"},"content":"            dueDate \u003d null;","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"vvidday"},"content":"        this.priority \u003d task.getPriority().toString();","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"jontmy"},"content":"        this.isArchived \u003d task.isArchived();","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"HoJunHao2000"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"domoberzin"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"HoJunHao2000"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"domoberzin"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"domoberzin"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"domoberzin"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"domoberzin"},"content":"                    Description.class.getSimpleName()));","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"domoberzin"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"domoberzin"},"content":"        if (modCode \u003d\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"domoberzin"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"domoberzin"},"content":"                    ModCode.class.getSimpleName()));","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"domoberzin"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"domoberzin"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"domoberzin"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"domoberzin"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"domoberzin"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"domoberzin"},"content":"        final ModCode modCode \u003d new ModCode(this.modCode);","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":81,"author":{"gitId":"vvidday"},"content":"        Task.Priority modelPriority \u003d new PriorityConverter().convert(priority);","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"vvidday"},"content":"        if (dueDate \u003d\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"vvidday"},"content":"            return new Task(modelDescription, modCode, isArchived, modelPriority);","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"domoberzin"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"vvidday"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-M-d\");","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"vvidday"},"content":"        LocalDate dueDateObj \u003d LocalDate.parse(dueDate, formatter);","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"vvidday"},"content":"        return new Deadline(modelDescription, modCode, dueDateObj, isArchived, modelPriority);","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"domoberzin"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"vvidday":25,"domoberzin":58,"jontmy":3,"HoJunHao2000":3}},{"path":"src/main/java/modtrekt/storage/JsonModuleListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.core.LogsCenter;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.util.FileUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.util.JsonUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.ReadOnlyModuleList;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":" * A class to access ModuleList data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"HoJunHao2000"},"content":"public class JsonModuleListStorage implements ModuleListStorage {","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"HoJunHao2000"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonModuleListStorage.class);","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"HoJunHao2000"},"content":"    public JsonModuleListStorage(Path filePath) {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"HoJunHao2000"},"content":"    public Path getModuleListFilePath() {","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"HoJunHao2000"},"content":"    public Optional\u003cReadOnlyModuleList\u003e readModuleList() throws DataConversionException {","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"HoJunHao2000"},"content":"        return readModuleList(filePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"HoJunHao2000"},"content":"     * Similar to {@link #readModuleList()}.","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"HoJunHao2000"},"content":"    public Optional\u003cReadOnlyModuleList\u003e readModuleList(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"HoJunHao2000"},"content":"        Optional\u003cJsonSerializableModuleList\u003e jsonModuleList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"HoJunHao2000"},"content":"                filePath, JsonSerializableModuleList.class);","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"HoJunHao2000"},"content":"        if (!jsonModuleList.isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"HoJunHao2000"},"content":"            return Optional.of(jsonModuleList.get().toModelType());","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"HoJunHao2000"},"content":"    public void saveModuleList(ReadOnlyModuleList moduleList) throws IOException {","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"HoJunHao2000"},"content":"        saveModuleList(moduleList, filePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"HoJunHao2000"},"content":"     * Similar to {@link #saveModuleList(ReadOnlyModuleList)}.","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"HoJunHao2000"},"content":"    public void saveModuleList(ReadOnlyModuleList moduleList, Path filePath) throws IOException {","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"HoJunHao2000"},"content":"        requireNonNull(moduleList);","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"HoJunHao2000"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableModuleList(moduleList), filePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":54,"HoJunHao2000":26}},{"path":"src/main/java/modtrekt/storage/JsonSerializableModuleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.storage;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"HoJunHao2000"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.ModuleList;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.ReadOnlyModuleList;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.Module;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"HoJunHao2000"},"content":" * An Immutable ModuleList that is serializable to JSON format.","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"HoJunHao2000"},"content":"@JsonRootName(value \u003d \"moduleList\")","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"HoJunHao2000"},"content":"class JsonSerializableModuleList {","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"HoJunHao2000"},"content":"    public static final String MESSAGE_DUPLICATE_MODULE \u003d \"Module list contains duplicate module(s).\";","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"HoJunHao2000"},"content":"    private final List\u003cJsonAdaptedModule\u003e modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"HoJunHao2000"},"content":"     * Constructs a {@code JsonSerializableModuleList} with the given modules.","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"HoJunHao2000"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"HoJunHao2000"},"content":"    public JsonSerializableModuleList(@JsonProperty(\"modules\") List\u003cJsonAdaptedModule\u003e modules) {","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"HoJunHao2000"},"content":"        this.modules.addAll(modules);","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"HoJunHao2000"},"content":"     * Converts a given {@code ReadOnlyModuleList} into this class for Jackson use.","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"HoJunHao2000"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"HoJunHao2000"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableModuleList}.","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"HoJunHao2000"},"content":"    public JsonSerializableModuleList(ReadOnlyModuleList source) {","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"HoJunHao2000"},"content":"        modules.addAll(source.getModuleList().stream().map(JsonAdaptedModule::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"HoJunHao2000"},"content":"     * Converts this module list into the model\u0027s {@code ModuleList} object.","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"HoJunHao2000"},"content":"     *","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"HoJunHao2000"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"HoJunHao2000"},"content":"    public ModuleList toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"HoJunHao2000"},"content":"        ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"HoJunHao2000"},"content":"        for (JsonAdaptedModule jsonAdaptedModule : modules) {","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"HoJunHao2000"},"content":"            Module module \u003d jsonAdaptedModule.toModelType();","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"HoJunHao2000"},"content":"            if (moduleList.hasModule(module)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"HoJunHao2000"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_MODULE);","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"HoJunHao2000"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"HoJunHao2000"},"content":"            moduleList.addModule(module);","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"HoJunHao2000"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"HoJunHao2000"},"content":"        return moduleList;","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"HoJunHao2000"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"HoJunHao2000":60}},{"path":"src/main/java/modtrekt/storage/JsonSerializableTaskBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"domoberzin"},"content":"package modtrekt.storage;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"domoberzin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"domoberzin"},"content":"import java.util.List;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"domoberzin"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"import modtrekt.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.TaskBook;","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"domoberzin"},"content":" * An Immutable TaskBook that is serializable to JSON format.","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"domoberzin"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":"@JsonRootName(value \u003d \"taskbook\")","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"domoberzin"},"content":"class JsonSerializableTaskBook {","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"domoberzin"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"domoberzin"},"content":"     * Constructs a {@code JsonSerializableTaskBook} with the given tasks.","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"domoberzin"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"domoberzin"},"content":"    public JsonSerializableTaskBook(@JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"domoberzin"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"domoberzin"},"content":"     * Converts a given {@code ReadOnlyTaskBook} into this class for Jackson use.","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"domoberzin"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"domoberzin"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableTaskBook}.","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"domoberzin"},"content":"    public JsonSerializableTaskBook(ReadOnlyTaskBook source) {","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"domoberzin"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"domoberzin"},"content":"     * Converts this task book into the model\u0027s {@code TaskBook} object.","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"domoberzin"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"domoberzin"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"domoberzin"},"content":"    public TaskBook toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"domoberzin"},"content":"        TaskBook taskBook \u003d new TaskBook();","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"domoberzin"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"domoberzin"},"content":"            Task t \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"domoberzin"},"content":"            taskBook.addTask(t);","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"domoberzin"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"domoberzin"},"content":"        return taskBook;","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"domoberzin"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"domoberzin":55}},{"path":"src/main/java/modtrekt/storage/JsonTaskBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.core.LogsCenter;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.util.FileUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.util.JsonUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"domoberzin"},"content":" * A class to access TaskBook data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"domoberzin"},"content":"public class JsonTaskBookStorage implements TaskBookStorage {","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"domoberzin"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTaskBookStorage.class);","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"domoberzin"},"content":"    public JsonTaskBookStorage(Path filePath) {","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"domoberzin"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"domoberzin"},"content":"    public Optional\u003cReadOnlyTaskBook\u003e readTaskBook() throws DataConversionException {","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"domoberzin"},"content":"        return readTaskBook(filePath);","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"domoberzin"},"content":"     * Similar to {@link #readTaskBook()}.","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"domoberzin"},"content":"    public Optional\u003cReadOnlyTaskBook\u003e readTaskBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"domoberzin"},"content":"        Optional\u003cJsonSerializableTaskBook\u003e jsonTaskBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"domoberzin"},"content":"                filePath, JsonSerializableTaskBook.class);","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"domoberzin"},"content":"        if (!jsonTaskBook.isPresent()) {","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"domoberzin"},"content":"            return Optional.of(jsonTaskBook.get().toModelType());","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"domoberzin"},"content":"    public void saveTaskBook(ReadOnlyTaskBook taskBook) throws IOException {","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"domoberzin"},"content":"        saveTaskBook(taskBook, filePath);","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"domoberzin"},"content":"     * Similar to {@link #saveTaskBook(ReadOnlyTaskBook)}.","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"domoberzin"},"content":"    public void saveTaskBook(ReadOnlyTaskBook taskBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"domoberzin"},"content":"        requireNonNull(taskBook);","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"domoberzin"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTaskBook(taskBook), filePath);","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"domoberzin":20,"-":54,"HoJunHao2000":6}},{"path":"src/main/java/modtrekt/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.util.JsonUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.UserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":42,"HoJunHao2000":5}},{"path":"src/main/java/modtrekt/storage/ModuleListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.storage;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"HoJunHao2000"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.ReadOnlyModuleList;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.Module;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":" * Represents a storage for {@link Module}.","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"public interface ModuleListStorage {","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"HoJunHao2000"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"HoJunHao2000"},"content":"    Path getModuleListFilePath();","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"HoJunHao2000"},"content":"     * Returns ModuleList data as a {@link ReadOnlyModuleList}.","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"HoJunHao2000"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"HoJunHao2000"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"HoJunHao2000"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"HoJunHao2000"},"content":"    Optional\u003cReadOnlyModuleList\u003e readModuleList() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"HoJunHao2000"},"content":"     * @see #getModuleListFilePath()","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"HoJunHao2000"},"content":"    Optional\u003cReadOnlyModuleList\u003e readModuleList(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"HoJunHao2000"},"content":"     * Saves the given {@link ReadOnlyModuleList} to the storage.","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"HoJunHao2000"},"content":"     * @param moduleList cannot be null.","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"HoJunHao2000"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"HoJunHao2000"},"content":"    void saveModuleList(ReadOnlyModuleList moduleList) throws IOException;","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"HoJunHao2000"},"content":"     * @see #saveModuleList(ReadOnlyModuleList)","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"HoJunHao2000"},"content":"    void saveModuleList(ReadOnlyModuleList moduleList, Path filePath) throws IOException;","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"HoJunHao2000"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"HoJunHao2000":46}},{"path":"src/main/java/modtrekt/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.ReadOnlyModuleList;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.UserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"public interface Storage extends TaskBookStorage, ModuleListStorage, UserPrefsStorage {","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"domoberzin"},"content":"    Path getTaskBookFilePath();","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"domoberzin"},"content":"    Optional\u003cReadOnlyTaskBook\u003e readTaskBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"HoJunHao2000"},"content":"    void saveTaskBook(ReadOnlyTaskBook taskBook) throws IOException;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"HoJunHao2000"},"content":"    Path getModuleListFilePath();","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"HoJunHao2000"},"content":"    Optional\u003cReadOnlyModuleList\u003e readModuleList() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"HoJunHao2000"},"content":"    void saveModuleList(ReadOnlyModuleList moduleList) throws IOException;","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"vvidday":2,"domoberzin":2,"-":27,"HoJunHao2000":9}},{"path":"src/main/java/modtrekt/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.core.LogsCenter;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.ReadOnlyModuleList;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.UserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":" * Manages storage of ModuleList data in local storage.","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"domoberzin"},"content":"    private TaskBookStorage taskBookStorage;","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"HoJunHao2000"},"content":"    private ModuleListStorage moduleListStorage;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"HoJunHao2000"},"content":"     * Creates a {@code StorageManager} with the given {@code ModuleListStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"    public StorageManager(TaskBookStorage taskBookStorage, ModuleListStorage moduleListStorage,","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"                          UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"domoberzin"},"content":"        this.taskBookStorage \u003d taskBookStorage;","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"HoJunHao2000"},"content":"        this.moduleListStorage \u003d moduleListStorage;","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"HoJunHao2000"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ModuleList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"domoberzin"},"content":"    public Path getTaskBookFilePath() {","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"domoberzin"},"content":"        return taskBookStorage.getTaskBookFilePath();","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"domoberzin"},"content":"    public Optional\u003cReadOnlyTaskBook\u003e readTaskBook() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"domoberzin"},"content":"        return readTaskBook(taskBookStorage.getTaskBookFilePath());","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"domoberzin"},"content":"    public Optional\u003cReadOnlyTaskBook\u003e readTaskBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"domoberzin"},"content":"        return taskBookStorage.readTaskBook(filePath);","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"HoJunHao2000"},"content":"    public void saveTaskBook(ReadOnlyTaskBook taskBook) throws IOException {","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"HoJunHao2000"},"content":"        saveTaskBook(taskBook, taskBookStorage.getTaskBookFilePath());","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"HoJunHao2000"},"content":"    public void saveTaskBook(ReadOnlyTaskBook taskBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"HoJunHao2000"},"content":"        taskBookStorage.saveTaskBook(taskBook, filePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"HoJunHao2000"},"content":"    public Path getModuleListFilePath() {","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"HoJunHao2000"},"content":"        return moduleListStorage.getModuleListFilePath();","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"HoJunHao2000"},"content":"    public Optional\u003cReadOnlyModuleList\u003e readModuleList() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"HoJunHao2000"},"content":"        return readModuleList(moduleListStorage.getModuleListFilePath());","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":90,"author":{"gitId":"HoJunHao2000"},"content":"    public Optional\u003cReadOnlyModuleList\u003e readModuleList(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":92,"author":{"gitId":"HoJunHao2000"},"content":"        return moduleListStorage.readModuleList(filePath);","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"HoJunHao2000"},"content":"    public void saveModuleList(ReadOnlyModuleList moduleList) throws IOException {","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"HoJunHao2000"},"content":"        saveModuleList(moduleList, moduleListStorage.getModuleListFilePath());","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":101,"author":{"gitId":"HoJunHao2000"},"content":"    public void saveModuleList(ReadOnlyModuleList moduleList, Path filePath) throws IOException {","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":103,"author":{"gitId":"HoJunHao2000"},"content":"        moduleListStorage.saveModuleList(moduleList, filePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"vvidday":3,"domoberzin":8,"-":70,"HoJunHao2000":25}},{"path":"src/main/java/modtrekt/storage/TaskBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.TaskBook;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":" * Represents a storage for {@link TaskBook}.","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"public interface TaskBookStorage {","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":"    Path getTaskBookFilePath();","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"HoJunHao2000"},"content":"     * Returns TaskBook data as a {@link ReadOnlyTaskBook}.","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"domoberzin"},"content":"    Optional\u003cReadOnlyTaskBook\u003e readTaskBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"domoberzin"},"content":"     * @see #getTaskBookFilePath()","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"domoberzin"},"content":"    Optional\u003cReadOnlyTaskBook\u003e readTaskBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"domoberzin"},"content":"     * Saves the given {@link ReadOnlyTaskBook} to the storage.","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"domoberzin"},"content":"     * @param taskBook cannot be null.","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"domoberzin"},"content":"    void saveTaskBook(ReadOnlyTaskBook taskBook) throws IOException;","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"domoberzin"},"content":"     * @see #saveTaskBook(ReadOnlyTaskBook)","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"domoberzin"},"content":"    void saveTaskBook(ReadOnlyTaskBook taskBook, Path filePath) throws IOException;","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"domoberzin":13,"-":30,"HoJunHao2000":3}},{"path":"src/main/java/modtrekt/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.UserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"HoJunHao2000"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":30,"HoJunHao2000":6}},{"path":"src/main/java/modtrekt/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.ui;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.Logic;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.commands.CommandResult;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"HoJunHao2000"},"content":"         * @see Logic#execute(String)","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"-":80,"HoJunHao2000":6}},{"path":"src/main/java/modtrekt/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.ui;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.core.LogsCenter;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103t-w10-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"HoJunHao2000"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"HoJunHao2000"},"content":"     * @throws IllegalStateException \u003cul\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *                                       \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"HoJunHao2000"},"content":"     *                                           if this method is called on a thread other than the JavaFX","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"HoJunHao2000"},"content":"     *                                           Application Thread.","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *                                       \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *                                       \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *                                           if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *                                       \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *                                       \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *                                           if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *                                       \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *                                       \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *                                           if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *                                       \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *                                   \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":96,"HoJunHao2000":7}},{"path":"src/main/java/modtrekt/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.ui;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.core.GuiSettings;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.core.LogsCenter;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.Logic;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.commands.CommandResult;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"import modtrekt.ui.modules.ModuleListPanel;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"midnightfeverrr"},"content":"import modtrekt.ui.tasks.TaskListPanel;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"    private ModuleListPanel moduleListPanel;","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"midnightfeverrr"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":40,"author":{"gitId":"midnightfeverrr"},"content":"    private ProfileSidePanel profileSidePanel;","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"midnightfeverrr"},"content":"    private StackPane moduleListPanelPlaceholder;","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"midnightfeverrr"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"midnightfeverrr"},"content":"    @FXML","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"midnightfeverrr"},"content":"    private StackPane profileSidePanelPlaceholder;","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"jontmy"},"content":"        // TODO: Replace the hardcoded modules with the module list from `logic`.","lastModifiedDate":"2022-10-04"},{"lineNumber":121,"author":{"gitId":"HoJunHao2000"},"content":"        moduleListPanel \u003d new ModuleListPanel(logic.getFilteredModuleList());","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"midnightfeverrr"},"content":"        moduleListPanelPlaceholder.getChildren().add(moduleListPanel.getRoot());","lastModifiedDate":"2022-10-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"domoberzin"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2022-10-08"},{"lineNumber":125,"author":{"gitId":"midnightfeverrr"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2022-10-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"midnightfeverrr"},"content":"        profileSidePanel \u003d new ProfileSidePanel(logic);","lastModifiedDate":"2022-10-23"},{"lineNumber":131,"author":{"gitId":"midnightfeverrr"},"content":"        profileSidePanelPlaceholder.getChildren().add(profileSidePanel.getRoot());","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"jontmy"},"content":"    public ModuleListPanel getModuleListPanel() {","lastModifiedDate":"2022-10-04"},{"lineNumber":178,"author":{"gitId":"jontmy"},"content":"        return moduleListPanel;","lastModifiedDate":"2022-10-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"HoJunHao2000"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2022-10-03"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"midnightfeverrr"},"content":"            profileSidePanel.refresh(logic);","lastModifiedDate":"2022-10-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"domoberzin"},"content":"            logger.info(\"Invalid command: \" + e.getMessage());","lastModifiedDate":"2022-10-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"domoberzin":3,"jontmy":5,"-":179,"midnightfeverrr":13,"HoJunHao2000":9}},{"path":"src/main/java/modtrekt/ui/ProfileSidePanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"midnightfeverrr"},"content":"package modtrekt.ui;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"midnightfeverrr"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"midnightfeverrr"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"midnightfeverrr"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"midnightfeverrr"},"content":"import modtrekt.commons.util.StringUtil;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"midnightfeverrr"},"content":"import modtrekt.logic.Logic;","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"midnightfeverrr"},"content":"import modtrekt.model.Model;","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"midnightfeverrr"},"content":"import modtrekt.model.module.Module;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"midnightfeverrr"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"midnightfeverrr"},"content":" * Panel containing the progress (MCs, modules completed, CAP info) of the user.","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"midnightfeverrr"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"midnightfeverrr"},"content":"public class ProfileSidePanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"midnightfeverrr"},"content":"    public static final String FXML \u003d \"ProfileSidePanel.fxml\";","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"midnightfeverrr"},"content":"    @FXML","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"midnightfeverrr"},"content":"    private Label creditsCount;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"midnightfeverrr"},"content":"    @FXML","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"midnightfeverrr"},"content":"    private Label activeTasks;","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"midnightfeverrr"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"midnightfeverrr"},"content":"     * Creates a {@code ModuleListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"midnightfeverrr"},"content":"     * @param logic Logic","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"midnightfeverrr"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"midnightfeverrr"},"content":"    public ProfileSidePanel(Logic logic) {","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"midnightfeverrr"},"content":"        super(FXML);","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"midnightfeverrr"},"content":"        refresh(logic);","lastModifiedDate":"2022-10-23"},{"lineNumber":32,"author":{"gitId":"midnightfeverrr"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":34,"author":{"gitId":"midnightfeverrr"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":35,"author":{"gitId":"midnightfeverrr"},"content":"     * Method to refresh user data.","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"midnightfeverrr"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"midnightfeverrr"},"content":"    public void refresh(Logic logic) {","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"midnightfeverrr"},"content":"        // Count MC Completed","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"midnightfeverrr"},"content":"        int totalCredits \u003d logic.getModuleList().getModuleList()","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"midnightfeverrr"},"content":"                        .stream()","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"midnightfeverrr"},"content":"                        .filter(Module::isDone)","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"midnightfeverrr"},"content":"                        .mapToInt(mod -\u003e mod.getCredits().getIntValue())","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"midnightfeverrr"},"content":"                        .sum();","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"midnightfeverrr"},"content":"        // Count Active Tasks","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"midnightfeverrr"},"content":"        int totalTasks \u003d logic.getTaskBook().getTaskList().filtered(Model.PREDICATE_HIDE_ARCHIVED_TASKS).size();","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"midnightfeverrr"},"content":"        // Update UI","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"midnightfeverrr"},"content":"        creditsCount.setText(StringUtil.pluralize(totalCredits, \"MC\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"midnightfeverrr"},"content":"        activeTasks.setText(String.valueOf(totalTasks));","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"midnightfeverrr"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"midnightfeverrr"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"midnightfeverrr":50}},{"path":"src/main/java/modtrekt/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.ui;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"midnightfeverrr"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":21,"author":{"gitId":"midnightfeverrr"},"content":"    @FXML","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"midnightfeverrr"},"content":"    private ImageView avatarDisplay;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"     * Creates a {@code ResultDisplay} with the avatar.","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"        avatarDisplay.setImage(new Image(\"/images/snorlax.png\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"vvidday":5,"-":26,"midnightfeverrr":4,"HoJunHao2000":1}},{"path":"src/main/java/modtrekt/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.ui;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":27,"HoJunHao2000":1}},{"path":"src/main/java/modtrekt/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.ui;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":12,"HoJunHao2000":1}},{"path":"src/main/java/modtrekt/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.ui;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.MainApp;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.core.LogsCenter;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.util.StringUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.Logic;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"midnightfeverrr"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/ModtRekt.png\";","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":82,"midnightfeverrr":1,"HoJunHao2000":5}},{"path":"src/main/java/modtrekt/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.ui;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.MainApp;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":86,"HoJunHao2000":2}},{"path":"src/main/java/modtrekt/ui/modules/ModuleCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package modtrekt.ui.modules;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"import modtrekt.commons.util.StringUtil;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"import modtrekt.model.module.Module;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"import modtrekt.ui.UiPart;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":" * An UI component that displays information of a {@code Module}.","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"public class ModuleCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"    private static final String FXML \u003d \"modules/ModuleCard.fxml\";","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"    private final Module module;","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"    private Text name;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"    private Label code;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"    private Label credits;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"    private FlowPane badges;","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"     * Creates a {@code ModuleCard} with the given {@code Module} to display.","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"     * @param module the module to display¸","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"    public ModuleCard(Module module) {","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"        super(FXML);","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"        this.module \u003d module;","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"        this.name.setText(module.getName().getFullName());","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"        this.code.setText(module.getCode().getValue());","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"        this.credits.setText(StringUtil.pluralize(module.getCredits().getIntValue(), \"MC\", \"MCs\"));","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"        // Add the task count badge, pluralizing `task` if necessary.","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"HoJunHao2000"},"content":"        Label taskBadge \u003d new Label(StringUtil.pluralize(module.getTaskCountInt(), \"task\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"        this.badges.getChildren().add(taskBadge);","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"midnightfeverrr"},"content":"        if (module.isDone()) {","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"midnightfeverrr"},"content":"            // Add the `done` badge if the module is done.","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"midnightfeverrr"},"content":"            Label doneBadge \u003d new Label(\"DONE\");","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"midnightfeverrr"},"content":"            this.badges.getChildren().add(doneBadge);","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"midnightfeverrr"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"jontmy"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"jontmy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"jontmy"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"jontmy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"jontmy"},"content":"            return true;","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"jontmy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"jontmy"},"content":"        if (!(other instanceof ModuleCard)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"jontmy"},"content":"            return false;","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"jontmy"},"content":"        // state check","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"jontmy"},"content":"        ModuleCard card \u003d (ModuleCard) other;","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"jontmy"},"content":"        return code.getText().equals(card.code.getText()) \u0026\u0026 module.equals(card.module);","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":64,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"jontmy":57,"midnightfeverrr":6,"HoJunHao2000":1}},{"path":"src/main/java/modtrekt/ui/modules/ModuleListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"package modtrekt.ui.modules;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"import modtrekt.commons.core.LogsCenter;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"import modtrekt.model.module.Module;","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"import modtrekt.ui.UiPart;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":" * Panel containing the list of modules.","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"public class ModuleListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"    private static final String FXML \u003d \"modules/ModuleListPanel.fxml\";","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ModuleListPanel.class);","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"    private ListView\u003cModule\u003e moduleListView;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"     * Creates a {@code ModuleListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"    public ModuleListPanel(ObservableList\u003cModule\u003e moduleList) {","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"        super(FXML);","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"        moduleListView.setItems(moduleList);","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"        moduleListView.setCellFactory(listView -\u003e new ModuleListPanelCell());","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Module} using a {@code","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"     * ModuleCard}.","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"    private static class ModuleListPanelCell extends ListCell\u003cModule\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"        @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"        protected void updateItem(Module module, boolean empty) {","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"            super.updateItem(module, empty);","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"            if (empty || module \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"                setText(null);","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"jontmy"},"content":"            } else {","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"                setGraphic(new ModuleCard(module).getRoot());","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"jontmy"},"content":"            }","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"jontmy":49}},{"path":"src/main/java/modtrekt/ui/tasks/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"midnightfeverrr"},"content":"package modtrekt.ui.tasks;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"midnightfeverrr"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"midnightfeverrr"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"midnightfeverrr"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"midnightfeverrr"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"midnightfeverrr"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Deadline;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"midnightfeverrr"},"content":"import modtrekt.ui.UiPart;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"midnightfeverrr"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":" * An UI component that displays information of a {@code Module}.","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"midnightfeverrr"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"midnightfeverrr"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"midnightfeverrr"},"content":"    private static final String FXML \u003d \"tasks/TaskListCard.fxml\";","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"midnightfeverrr"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"midnightfeverrr"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"midnightfeverrr"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"midnightfeverrr"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"midnightfeverrr"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"HoJunHao2000"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on ModuleList level 4\u003c/a\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"midnightfeverrr"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"    public final Task task;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"midnightfeverrr"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"midnightfeverrr"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"midnightfeverrr"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"midnightfeverrr"},"content":"    private Label id;","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"midnightfeverrr"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"    private Label module;","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"    @FXML","lastModifiedDate":"2022-10-22"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"    private Label description;","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"    @FXML","lastModifiedDate":"2022-10-22"},{"lineNumber":38,"author":{"gitId":"vvidday"},"content":"    private Label dueDate;","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"midnightfeverrr"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"    private FlowPane badges;","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"midnightfeverrr"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"HoJunHao2000"},"content":"     * Creates a {@code ModuleCode} with the given {@code Module} and index to display.","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"midnightfeverrr"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"domoberzin"},"content":"    public TaskCard(Task t, int displayedIndex) {","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"midnightfeverrr"},"content":"        super(FXML);","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"domoberzin"},"content":"        this.task \u003d t;","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"jontmy"},"content":"        id.setText(\"#\" + displayedIndex);","lastModifiedDate":"2022-10-22"},{"lineNumber":49,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"domoberzin"},"content":"        description.setText(task.getDescription().toString());","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"jontmy"},"content":"        module.setText(t.getModule().toString());","lastModifiedDate":"2022-10-22"},{"lineNumber":52,"author":{"gitId":"vvidday"},"content":"        if (t instanceof Deadline) {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"jontmy"},"content":"            dueDate.setText(\"due \" + ((Deadline) t).getDueDate().toString());","lastModifiedDate":"2022-10-22"},{"lineNumber":54,"author":{"gitId":"jontmy"},"content":"            dueDate.setVisible(true);","lastModifiedDate":"2022-10-22"},{"lineNumber":55,"author":{"gitId":"jontmy"},"content":"            dueDate.setManaged(true);","lastModifiedDate":"2022-10-22"},{"lineNumber":56,"author":{"gitId":"jontmy"},"content":"        } else {","lastModifiedDate":"2022-10-22"},{"lineNumber":57,"author":{"gitId":"jontmy"},"content":"            // Setting it to invisible will still give the text vertical height, unless it is not managed.","lastModifiedDate":"2022-10-22"},{"lineNumber":58,"author":{"gitId":"jontmy"},"content":"            dueDate.setVisible(false);","lastModifiedDate":"2022-10-22"},{"lineNumber":59,"author":{"gitId":"jontmy"},"content":"            dueDate.setManaged(false);","lastModifiedDate":"2022-10-22"},{"lineNumber":60,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"jontmy"},"content":"        this.badges.setVisible(false);","lastModifiedDate":"2022-10-22"},{"lineNumber":62,"author":{"gitId":"jontmy"},"content":"        this.badges.setManaged(false);","lastModifiedDate":"2022-10-22"},{"lineNumber":63,"author":{"gitId":"jontmy"},"content":"        if (task.isArchived()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"jontmy"},"content":"            // Add the `archived` badge if the task is archived.","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"jontmy"},"content":"            Label archivedBadge \u003d new Label(\"archived\");","lastModifiedDate":"2022-10-22"},{"lineNumber":66,"author":{"gitId":"jontmy"},"content":"            this.badges.getChildren().add(archivedBadge);","lastModifiedDate":"2022-10-22"},{"lineNumber":67,"author":{"gitId":"jontmy"},"content":"            this.badges.setVisible(true);","lastModifiedDate":"2022-10-22"},{"lineNumber":68,"author":{"gitId":"jontmy"},"content":"            this.badges.setManaged(true);","lastModifiedDate":"2022-10-22"},{"lineNumber":69,"author":{"gitId":"jontmy"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"vvidday"},"content":"        if (task.getPriority() !\u003d Task.Priority.NONE) {","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"vvidday"},"content":"            // Add the priority badge only if it has been set.","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"jontmy"},"content":"            Label priorityBadge \u003d new Label(task.getPriority().toString().toLowerCase() + \" priority\");","lastModifiedDate":"2022-10-22"},{"lineNumber":73,"author":{"gitId":"jontmy"},"content":"            this.badges.getChildren().add(priorityBadge);","lastModifiedDate":"2022-10-22"},{"lineNumber":74,"author":{"gitId":"jontmy"},"content":"            this.badges.setVisible(true);","lastModifiedDate":"2022-10-22"},{"lineNumber":75,"author":{"gitId":"jontmy"},"content":"            this.badges.setManaged(true);","lastModifiedDate":"2022-10-22"},{"lineNumber":76,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"midnightfeverrr"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"midnightfeverrr"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":80,"author":{"gitId":"midnightfeverrr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"midnightfeverrr"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"midnightfeverrr"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"midnightfeverrr"},"content":"            return true;","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"midnightfeverrr"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"midnightfeverrr"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":87,"author":{"gitId":"HoJunHao2000"},"content":"        if (!(other instanceof TaskCard)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"midnightfeverrr"},"content":"            return false;","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"midnightfeverrr"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"midnightfeverrr"},"content":"        // state check","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"midnightfeverrr"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"midnightfeverrr"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"jontmy"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"midnightfeverrr"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"midnightfeverrr"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"vvidday":8,"domoberzin":4,"jontmy":29,"midnightfeverrr":51,"HoJunHao2000":4}},{"path":"src/main/java/modtrekt/ui/tasks/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"midnightfeverrr"},"content":"package modtrekt.ui.tasks;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"midnightfeverrr"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"midnightfeverrr"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"midnightfeverrr"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"midnightfeverrr"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"midnightfeverrr"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"midnightfeverrr"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"midnightfeverrr"},"content":"import modtrekt.commons.core.LogsCenter;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"midnightfeverrr"},"content":"import modtrekt.ui.UiPart;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"midnightfeverrr"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"domoberzin"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"midnightfeverrr"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"midnightfeverrr"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"midnightfeverrr"},"content":"    private static final String FXML \u003d \"tasks/TaskListPanel.fxml\";","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"midnightfeverrr"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"midnightfeverrr"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"domoberzin"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"midnightfeverrr"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"HoJunHao2000"},"content":"     * Creates a {@code ModuleListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"midnightfeverrr"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"domoberzin"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"midnightfeverrr"},"content":"        super(FXML);","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"domoberzin"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"midnightfeverrr"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"midnightfeverrr"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"midnightfeverrr"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"HoJunHao2000"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Module} using a {@code ModuleCard}.","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"midnightfeverrr"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"domoberzin"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"midnightfeverrr"},"content":"        @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"domoberzin"},"content":"        protected void updateItem(Task t, boolean empty) {","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"domoberzin"},"content":"            super.updateItem(t, empty);","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"domoberzin"},"content":"            if (empty || t \u003d\u003d null) {","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"midnightfeverrr"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"midnightfeverrr"},"content":"                setText(null);","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"midnightfeverrr"},"content":"            } else {","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"domoberzin"},"content":"                setGraphic(new TaskCard(t, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"midnightfeverrr"},"content":"            }","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"midnightfeverrr"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"midnightfeverrr"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"midnightfeverrr"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"domoberzin":10,"midnightfeverrr":38,"HoJunHao2000":2}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"midnightfeverrr"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\" styleClass\u003d\"command-box\" stylesheets\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"jontmy":1,"-":6,"midnightfeverrr":1}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"jontmy"},"content":".pane-without-border {","lastModifiedDate":"2022-10-22"},{"lineNumber":146,"author":{"gitId":"jontmy"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-10-22"},{"lineNumber":147,"author":{"gitId":"jontmy"},"content":"    -fx-border-width: 0px;","lastModifiedDate":"2022-10-22"},{"lineNumber":148,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-10-22"},{"lineNumber":149,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"jontmy"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-10-22"},{"lineNumber":206,"author":{"gitId":"jontmy"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-10-22"},{"lineNumber":207,"author":{"gitId":"jontmy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-22"},{"lineNumber":208,"author":{"gitId":"jontmy"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2022-10-22"},{"lineNumber":209,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-10-22"},{"lineNumber":210,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":211,"author":{"gitId":"jontmy"},"content":".menu-item .label {","lastModifiedDate":"2022-10-22"},{"lineNumber":212,"author":{"gitId":"jontmy"},"content":"    -fx-font-size: 9pt;","lastModifiedDate":"2022-10-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"jontmy"},"content":".corner {","lastModifiedDate":"2022-10-22"},{"lineNumber":297,"author":{"gitId":"jontmy"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-22"},{"lineNumber":298,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-10-22"},{"lineNumber":299,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":300,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":301,"author":{"gitId":"jontmy"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-22"},{"lineNumber":302,"author":{"gitId":"jontmy"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-10-22"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":305,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"jontmy"},"content":".scroll-bar .thumb:hover {","lastModifiedDate":"2022-10-22"},{"lineNumber":311,"author":{"gitId":"jontmy"},"content":"    -fx-background-color: derive(#1d1d1d, 40%);","lastModifiedDate":"2022-10-22"},{"lineNumber":312,"author":{"gitId":"jontmy"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2022-10-22"},{"lineNumber":313,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-10-22"},{"lineNumber":314,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":315,"author":{"gitId":"jontmy"},"content":".scroll-bar:vertical {","lastModifiedDate":"2022-10-22"},{"lineNumber":316,"author":{"gitId":"jontmy"},"content":"    -fx-border-radius: 100%;","lastModifiedDate":"2022-10-22"},{"lineNumber":317,"author":{"gitId":"jontmy"},"content":"    -fx-pref-width: 16.5;","lastModifiedDate":"2022-10-22"},{"lineNumber":318,"author":{"gitId":"jontmy"},"content":"    -fx-padding: 3;","lastModifiedDate":"2022-10-22"},{"lineNumber":319,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-10-22"},{"lineNumber":320,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":321,"author":{"gitId":"jontmy"},"content":".scroll-bar:horizontal {","lastModifiedDate":"2022-10-22"},{"lineNumber":322,"author":{"gitId":"jontmy"},"content":"    -fx-border-radius: 100%;","lastModifiedDate":"2022-10-22"},{"lineNumber":323,"author":{"gitId":"jontmy"},"content":"    -fx-pref-height: 16.5;","lastModifiedDate":"2022-10-22"},{"lineNumber":324,"author":{"gitId":"jontmy"},"content":"    -fx-padding: 3;","lastModifiedDate":"2022-10-22"},{"lineNumber":325,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-10-22"},{"lineNumber":326,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":327,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-shape : \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"jontmy"},"content":"    -fx-padding :0.15em 0.0;","lastModifiedDate":"2022-10-22"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":337,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":338,"author":{"gitId":"jontmy"},"content":"    -fx-padding: 0 8 0 8;","lastModifiedDate":"2022-10-22"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":342,"author":{"gitId":"jontmy"},"content":"    -fx-padding: 8 0 8 0;","lastModifiedDate":"2022-10-22"},{"lineNumber":343,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-10-22"},{"lineNumber":344,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":345,"author":{"gitId":"jontmy"},"content":"#menuBar {","lastModifiedDate":"2022-10-22"},{"lineNumber":346,"author":{"gitId":"jontmy"},"content":"    -fx-border-width: 0 0 2px 0;","lastModifiedDate":"2022-10-22"},{"lineNumber":347,"author":{"gitId":"jontmy"},"content":"    -fx-border-color: #333333;","lastModifiedDate":"2022-10-22"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":360,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":366,"author":{"gitId":"jontmy"},"content":"    -fx-font-family: \"JetBrains Mono\", \"monospace\";","lastModifiedDate":"2022-10-22"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":369,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":371,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":373,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":375,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":380,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":383,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":385,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":392,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":393,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":394,"author":{"gitId":"jontmy"},"content":"/*","lastModifiedDate":"2022-10-22"},{"lineNumber":395,"author":{"gitId":"jontmy"},"content":" * Custom fonts","lastModifiedDate":"2022-10-22"},{"lineNumber":396,"author":{"gitId":"jontmy"},"content":" */","lastModifiedDate":"2022-10-22"},{"lineNumber":397,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":398,"author":{"gitId":"jontmy"},"content":"@font-face {","lastModifiedDate":"2022-10-22"},{"lineNumber":399,"author":{"gitId":"jontmy"},"content":"    src: url(\u0027../fonts/JetBrainsMono[wght].ttf\u0027);","lastModifiedDate":"2022-10-22"},{"lineNumber":400,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-10-22"},{"lineNumber":401,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":402,"author":{"gitId":"midnightfeverrr"},"content":"/*","lastModifiedDate":"2022-10-10"},{"lineNumber":403,"author":{"gitId":"midnightfeverrr"},"content":"CommandBox","lastModifiedDate":"2022-10-10"},{"lineNumber":404,"author":{"gitId":"midnightfeverrr"},"content":"*/","lastModifiedDate":"2022-10-10"},{"lineNumber":405,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":406,"author":{"gitId":"midnightfeverrr"},"content":".command-box-container {","lastModifiedDate":"2022-10-10"},{"lineNumber":407,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-pref-height: 60px;","lastModifiedDate":"2022-10-10"},{"lineNumber":408,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-min-height: 60px;","lastModifiedDate":"2022-10-10"},{"lineNumber":409,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-max-height: 60px;","lastModifiedDate":"2022-10-10"},{"lineNumber":410,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-10-13"},{"lineNumber":411,"author":{"gitId":"midnightfeverrr"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":412,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":413,"author":{"gitId":"midnightfeverrr"},"content":".command-box {","lastModifiedDate":"2022-10-10"},{"lineNumber":414,"author":{"gitId":"jontmy"},"content":"    -fx-background-color: #EEEEEE !important;","lastModifiedDate":"2022-10-22"},{"lineNumber":415,"author":{"gitId":"jontmy"},"content":"    -fx-background-radius: 4;","lastModifiedDate":"2022-10-22"},{"lineNumber":416,"author":{"gitId":"jontmy"},"content":"    -fx-font-size: 14px !important;","lastModifiedDate":"2022-10-22"},{"lineNumber":417,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-text-fill: #2a2a2a !important;","lastModifiedDate":"2022-10-13"},{"lineNumber":418,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-border-color: transparent !important;","lastModifiedDate":"2022-10-13"},{"lineNumber":419,"author":{"gitId":"jontmy"},"content":"    -fx-min-height: 2.5em;","lastModifiedDate":"2022-10-22"},{"lineNumber":420,"author":{"gitId":"jontmy"},"content":"    -fx-font-family: \"JetBrains Mono\", monospace;","lastModifiedDate":"2022-10-22"},{"lineNumber":421,"author":{"gitId":"midnightfeverrr"},"content":"}","lastModifiedDate":"2022-10-10"},{"lineNumber":422,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":423,"author":{"gitId":"midnightfeverrr"},"content":"/*ProfilePanel*/","lastModifiedDate":"2022-10-13"},{"lineNumber":424,"author":{"gitId":"midnightfeverrr"},"content":".profile-panel-container {","lastModifiedDate":"2022-10-13"},{"lineNumber":425,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-min-width: 300px !important;","lastModifiedDate":"2022-10-13"},{"lineNumber":426,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-min-height: 400px !important;","lastModifiedDate":"2022-10-13"},{"lineNumber":427,"author":{"gitId":"midnightfeverrr"},"content":"}","lastModifiedDate":"2022-10-13"},{"lineNumber":428,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":429,"author":{"gitId":"midnightfeverrr"},"content":".profile-side-panel {","lastModifiedDate":"2022-10-13"},{"lineNumber":430,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-10-13"},{"lineNumber":431,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-border-style: solid;","lastModifiedDate":"2022-10-13"},{"lineNumber":432,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2022-10-13"},{"lineNumber":433,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-background-radius: 20;","lastModifiedDate":"2022-10-13"},{"lineNumber":434,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-padding: 16px;","lastModifiedDate":"2022-10-13"},{"lineNumber":435,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-min-width: 200px;","lastModifiedDate":"2022-10-21"},{"lineNumber":436,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-pref-width: 300px;","lastModifiedDate":"2022-10-21"},{"lineNumber":437,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-max-width: 300px;","lastModifiedDate":"2022-10-21"},{"lineNumber":438,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-min-height: 200px !important;","lastModifiedDate":"2022-10-13"},{"lineNumber":439,"author":{"gitId":"midnightfeverrr"},"content":"}","lastModifiedDate":"2022-10-13"},{"lineNumber":440,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":441,"author":{"gitId":"midnightfeverrr"},"content":".course-name {","lastModifiedDate":"2022-10-13"},{"lineNumber":442,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2022-10-13"},{"lineNumber":443,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-text-fill: #94D8DA;","lastModifiedDate":"2022-10-13"},{"lineNumber":444,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-font-size: 18px !important;","lastModifiedDate":"2022-10-13"},{"lineNumber":445,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-pref-width: 300px;","lastModifiedDate":"2022-10-21"},{"lineNumber":446,"author":{"gitId":"midnightfeverrr"},"content":"}","lastModifiedDate":"2022-10-13"},{"lineNumber":447,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":448,"author":{"gitId":"midnightfeverrr"},"content":".inspirational-quote {","lastModifiedDate":"2022-10-13"},{"lineNumber":449,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-padding: 12px 0px;","lastModifiedDate":"2022-10-13"},{"lineNumber":450,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2022-10-13"},{"lineNumber":451,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2022-10-13"},{"lineNumber":452,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-min-width: 200px;","lastModifiedDate":"2022-10-21"},{"lineNumber":453,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-max-width: 300px;","lastModifiedDate":"2022-10-21"},{"lineNumber":454,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-pref-width: 300px;","lastModifiedDate":"2022-10-21"},{"lineNumber":455,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-font-size: 14px !important;","lastModifiedDate":"2022-10-13"},{"lineNumber":456,"author":{"gitId":"midnightfeverrr"},"content":"}","lastModifiedDate":"2022-10-13"},{"lineNumber":457,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":458,"author":{"gitId":"midnightfeverrr"},"content":".progress-content {","lastModifiedDate":"2022-10-21"},{"lineNumber":459,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-background-color: #545454;","lastModifiedDate":"2022-10-21"},{"lineNumber":460,"author":{"gitId":"jontmy"},"content":"    -fx-background-radius: 4;","lastModifiedDate":"2022-10-22"},{"lineNumber":461,"author":{"gitId":"jontmy"},"content":"    -fx-padding: 20px 15px;","lastModifiedDate":"2022-10-22"},{"lineNumber":462,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-border-insets: 5px;","lastModifiedDate":"2022-10-21"},{"lineNumber":463,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-background-insets: 5px;","lastModifiedDate":"2022-10-21"},{"lineNumber":464,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-min-width: 100px;","lastModifiedDate":"2022-10-21"},{"lineNumber":465,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-pref-width: 140px;","lastModifiedDate":"2022-10-21"},{"lineNumber":466,"author":{"gitId":"midnightfeverrr"},"content":"}","lastModifiedDate":"2022-10-21"},{"lineNumber":467,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":468,"author":{"gitId":"midnightfeverrr"},"content":".credits-count {","lastModifiedDate":"2022-10-13"},{"lineNumber":469,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-text-fill: #FFFFFF !important;","lastModifiedDate":"2022-10-21"},{"lineNumber":470,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-font-size: 21px !important;","lastModifiedDate":"2022-10-21"},{"lineNumber":471,"author":{"gitId":"midnightfeverrr"},"content":"}","lastModifiedDate":"2022-10-21"},{"lineNumber":472,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":473,"author":{"gitId":"midnightfeverrr"},"content":".credits-count-completed {","lastModifiedDate":"2022-10-21"},{"lineNumber":474,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-text-fill: #FFFFFF !important;","lastModifiedDate":"2022-10-13"},{"lineNumber":475,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-font-size: 13px !important;","lastModifiedDate":"2022-10-13"},{"lineNumber":476,"author":{"gitId":"midnightfeverrr"},"content":"}","lastModifiedDate":"2022-10-13"},{"lineNumber":477,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":478,"author":{"gitId":"midnightfeverrr"},"content":".progress-label {","lastModifiedDate":"2022-10-13"},{"lineNumber":479,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-font-size: 13px !important;","lastModifiedDate":"2022-10-13"},{"lineNumber":480,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2022-10-13"},{"lineNumber":481,"author":{"gitId":"midnightfeverrr"},"content":"}","lastModifiedDate":"2022-10-13"},{"lineNumber":482,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":483,"author":{"gitId":"midnightfeverrr"},"content":".progress-value {","lastModifiedDate":"2022-10-13"},{"lineNumber":484,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-font-size: 13px !important;","lastModifiedDate":"2022-10-13"},{"lineNumber":485,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2022-10-13"},{"lineNumber":486,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2022-10-13"},{"lineNumber":487,"author":{"gitId":"midnightfeverrr"},"content":"}","lastModifiedDate":"2022-10-13"},{"lineNumber":488,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":489,"author":{"gitId":"midnightfeverrr"},"content":".cap {","lastModifiedDate":"2022-10-21"},{"lineNumber":490,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2022-10-21"},{"lineNumber":491,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2022-10-21"},{"lineNumber":492,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-font-size: 14px !important;","lastModifiedDate":"2022-10-21"},{"lineNumber":493,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-min-width: 200px;","lastModifiedDate":"2022-10-21"},{"lineNumber":494,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-max-width: 300px;","lastModifiedDate":"2022-10-21"},{"lineNumber":495,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-pref-width: 300px;","lastModifiedDate":"2022-10-21"},{"lineNumber":496,"author":{"gitId":"midnightfeverrr"},"content":"}","lastModifiedDate":"2022-10-21"},{"lineNumber":497,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":498,"author":{"gitId":"midnightfeverrr"},"content":"/*Result Display*/","lastModifiedDate":"2022-10-13"},{"lineNumber":499,"author":{"gitId":"midnightfeverrr"},"content":".result-display-container {","lastModifiedDate":"2022-10-13"},{"lineNumber":500,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-pref-height: 100px;","lastModifiedDate":"2022-10-13"},{"lineNumber":501,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-min-height: 100px;","lastModifiedDate":"2022-10-13"},{"lineNumber":502,"author":{"gitId":"midnightfeverrr"},"content":"}","lastModifiedDate":"2022-10-13"},{"lineNumber":503,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":504,"author":{"gitId":"midnightfeverrr"},"content":".result-display {","lastModifiedDate":"2022-10-13"},{"lineNumber":505,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-padding: 0px 12px;","lastModifiedDate":"2022-10-13"},{"lineNumber":506,"author":{"gitId":"jontmy"},"content":"    -fx-background-color: #494949;","lastModifiedDate":"2022-10-22"},{"lineNumber":507,"author":{"gitId":"jontmy"},"content":"    -fx-background-radius: 4;","lastModifiedDate":"2022-10-22"},{"lineNumber":508,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2022-10-13"},{"lineNumber":509,"author":{"gitId":"midnightfeverrr"},"content":"}","lastModifiedDate":"2022-10-13"},{"lineNumber":510,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":511,"author":{"gitId":"midnightfeverrr"},"content":".result-display .text-area {","lastModifiedDate":"2022-10-13"},{"lineNumber":512,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-13"},{"lineNumber":513,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2022-10-13"},{"lineNumber":514,"author":{"gitId":"jontmy"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2022-10-22"},{"lineNumber":515,"author":{"gitId":"jontmy"},"content":"    -fx-text-fill: #EEEEEE;","lastModifiedDate":"2022-10-22"},{"lineNumber":516,"author":{"gitId":"jontmy"},"content":"    -fx-font-family: \"JetBrains Mono\", monospace;","lastModifiedDate":"2022-10-22"},{"lineNumber":517,"author":{"gitId":"midnightfeverrr"},"content":"}","lastModifiedDate":"2022-10-13"},{"lineNumber":518,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":519,"author":{"gitId":"midnightfeverrr"},"content":".result-display .label {","lastModifiedDate":"2022-10-13"},{"lineNumber":520,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-text-fill: white !important;","lastModifiedDate":"2022-10-13"},{"lineNumber":521,"author":{"gitId":"midnightfeverrr"},"content":"}","lastModifiedDate":"2022-10-13"},{"lineNumber":522,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":523,"author":{"gitId":"midnightfeverrr"},"content":"#resultDisplay .content {","lastModifiedDate":"2022-10-13"},{"lineNumber":524,"author":{"gitId":"jontmy"},"content":"    -fx-background-color: #494949;","lastModifiedDate":"2022-10-22"},{"lineNumber":525,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-10-13"},{"lineNumber":526,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2022-10-13"},{"lineNumber":527,"author":{"gitId":"midnightfeverrr"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-13"},{"lineNumber":528,"author":{"gitId":"midnightfeverrr"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"jontmy":65,"-":347,"midnightfeverrr":116}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-background: #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"/* MODULE UI CSS */","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"#code, #module {","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"    -fx-text-fill: #94D8DA;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"#id {","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"#badges .label {","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"    -fx-text-fill: #3F3F3F;","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"    -fx-background-color: #94D8DA;","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"jontmy":18,"-":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"\u003c?import java.net.*?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.stage.*?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"800\" onCloseRequest\u003d\"#handleExit\" title\u003d\"ModtRekt\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":13,"author":{"gitId":"midnightfeverrr"},"content":"        \u003cImage url\u003d\"@/images/ModtRekt.png\" /\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"                \u003cHBox spacing\u003d\"15\" styleClass\u003d\"pane-without-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"                    \u003cStackPane fx:id\u003d\"profileSidePanelPlaceholder\" HBox.hgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"                    \u003cStackPane fx:id\u003d\"moduleListPanelPlaceholder\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"                    \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":35,"author":{"gitId":"midnightfeverrr"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"                        \u003cInsets bottom\u003d\"15\" left\u003d\"15\" right\u003d\"15\" top\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":37,"author":{"gitId":"midnightfeverrr"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"midnightfeverrr"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"                \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" minHeight\u003d\"100\" prefHeight\u003d\"250\" styleClass\u003d\"pane-without-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":41,"author":{"gitId":"midnightfeverrr"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"                        \u003cInsets left\u003d\"15\" right\u003d\"15\" top\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":43,"author":{"gitId":"midnightfeverrr"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"midnightfeverrr"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"jontmy"},"content":"                \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" minHeight\u003d\"200\" styleClass\u003d\"command-box-container\" stylesheets\u003d\"@DarkTheme.css\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":46,"author":{"gitId":"midnightfeverrr"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"jontmy"},"content":"                        \u003cInsets bottom\u003d\"15\" left\u003d\"15\" right\u003d\"15\" top\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":48,"author":{"gitId":"midnightfeverrr"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"midnightfeverrr"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"jontmy":18,"-":25,"midnightfeverrr":10}},{"path":"src/main/resources/view/ProfileSidePanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"midnightfeverrr"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"midnightfeverrr"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"midnightfeverrr"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"midnightfeverrr"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"midnightfeverrr"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"midnightfeverrr"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"midnightfeverrr"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"midnightfeverrr"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"midnightfeverrr"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"\u003cVBox styleClass\u003d\"profile-side-panel\" stylesheets\u003d\"@DarkTheme.css\" xmlns\u003d\"http://javafx.com/javafx/11\"","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"      xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"        \u003cInsets bottom\u003d\"2.0\" left\u003d\"2.0\" right\u003d\"2.0\" top\u003d\"2.0\"/\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"    \u003cLabel fx:id\u003d\"courseNameLabel\" styleClass\u003d\"course-name\" text\u003d\"My Course\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"","lastModifiedDate":"2022-10-22"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"           HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"    \u003cLabel fx:id\u003d\"inspirationalQuote\" styleClass\u003d\"inspirational-quote\"","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"           text\u003d\"\u0026quot;Strive for progress, not perfection.\u0026quot;\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"           HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"    \u003cVBox styleClass\u003d\"progress-content\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"        \u003cLabel fx:id\u003d\"creditsCount\" styleClass\u003d\"credits-count\" text\u003d\"0 MCs\" textFill\u003d\"WHITE\" /\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"        \u003cLabel styleClass\u003d\"credits-count-completed\" text\u003d\"Completed\" textFill\u003d\"WHITE\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"midnightfeverrr"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"    \u003cVBox styleClass\u003d\"progress-content\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"        \u003cLabel fx:id\u003d\"activeTasks\" styleClass\u003d\"credits-count\" text\u003d\"0\" textFill\u003d\"WHITE\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"        \u003cLabel styleClass\u003d\"credits-count-completed\" text\u003d\"Active Tasks\" textFill\u003d\"WHITE\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"midnightfeverrr"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"midnightfeverrr"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"jontmy":16,"midnightfeverrr":13}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"midnightfeverrr"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":5,"author":{"gitId":"midnightfeverrr"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"midnightfeverrr"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"\u003cHBox fx:id\u003d\"placeHolder\" prefHeight\u003d\"100.0\" stylesheets\u003d\"@DarkTheme.css\" xmlns\u003d\"http://javafx.com/javafx/11\"","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"      xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"    \u003cHBox alignment\u003d\"CENTER\" styleClass\u003d\"result-display\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"        \u003cImageView fx:id\u003d\"avatarDisplay\" fitHeight\u003d\"80.0\" fitWidth\u003d\"80.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"","lastModifiedDate":"2022-10-22"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"                   scaleX\u003d\"0.9\" scaleY\u003d\"0.9\"/\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"        \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"text-area\"","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"                  wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"midnightfeverrr"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"midnightfeverrr"},"content":"                \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"midnightfeverrr"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"midnightfeverrr"},"content":"        \u003c/TextArea\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"midnightfeverrr"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"midnightfeverrr"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"vvidday":1,"jontmy":6,"-":3,"midnightfeverrr":9}},{"path":"src/main/resources/view/modules/ModuleCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"jontmy"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" spacing\u003d\"4.0\" GridPane.columnIndex\u003d\"0\" GridPane.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"                \u003cLabel fx:id\u003d\"code\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$code\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"midnightfeverrr"},"content":"                \u003cLabel fx:id\u003d\"credits\" styleClass\u003d\"cell_small_label\" text\u003d\"\\\\$credits\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"jontmy"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"            \u003cTextFlow maxWidth\u003d\"1.7976931348623157E308\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"                \u003cText fx:id\u003d\"name\" fill\u003d\"WHITE\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$name\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"            \u003c/TextFlow\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"midnightfeverrr"},"content":"            \u003cFlowPane fx:id\u003d\"badges\" hgap\u003d\"5\"\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"               \u003cInsets top\u003d\"4.0\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"jontmy"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"jontmy"},"content":"            \u003c/FlowPane\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"jontmy"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"jontmy"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"jontmy"},"content":"            \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"jontmy"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"jontmy"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"jontmy"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"jontmy"},"content":"      \u003cInsets bottom\u003d\"8.0\" top\u003d\"8.0\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"jontmy"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"jontmy"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"jontmy":41,"midnightfeverrr":2}},{"path":"src/main/resources/view/modules/ModuleListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jontmy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"jontmy"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"    \u003cListView fx:id\u003d\"moduleListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"jontmy"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"jontmy":8}},{"path":"src/main/resources/view/tasks/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"midnightfeverrr"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":4,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":5,"author":{"gitId":"jontmy"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":6,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"jontmy"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" alignment\u003d\"CENTER_LEFT\" spacing\u003d\"2\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":8,"author":{"gitId":"midnightfeverrr"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"midnightfeverrr"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"midnightfeverrr"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"midnightfeverrr"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"jontmy"},"content":"        \u003cVBox id\u003d\"task-card\" alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\" GridPane.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":13,"author":{"gitId":"jontmy"},"content":"            \u003cHBox alignment\u003d\"BASELINE_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":14,"author":{"gitId":"jontmy"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":15,"author":{"gitId":"jontmy"},"content":"                \u003cLabel fx:id\u003d\"module\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":16,"author":{"gitId":"midnightfeverrr"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"                \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":18,"author":{"gitId":"jontmy"},"content":"                \u003cLabel fx:id\u003d\"dueDate\" styleClass\u003d\"cell_small_label\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":19,"author":{"gitId":"jontmy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":20,"author":{"gitId":"jontmy"},"content":"               \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":21,"author":{"gitId":"jontmy"},"content":"            \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":22,"author":{"gitId":"jontmy"},"content":"                \u003cFlowPane fx:id\u003d\"badges\" hgap\u003d\"5\" vgap\u003d\"5\"\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":24,"author":{"gitId":"jontmy"},"content":"               \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":25,"author":{"gitId":"jontmy"},"content":"            \u003c/padding\u003e\u003c/FlowPane\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":26,"author":{"gitId":"midnightfeverrr"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"            \u003cInsets bottom\u003d\"20.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":30,"author":{"gitId":"jontmy"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":31,"author":{"gitId":"jontmy"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":32,"author":{"gitId":"jontmy"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-22"},{"lineNumber":33,"author":{"gitId":"midnightfeverrr"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"midnightfeverrr"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"jontmy":23,"midnightfeverrr":11}},{"path":"src/main/resources/view/tasks/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"midnightfeverrr"},"content":"    \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"-":7,"midnightfeverrr":1}},{"path":"src/test/java/modtrekt/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"-":57,"HoJunHao2000":1}},{"path":"src/test/java/modtrekt/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.commons.core;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":26,"HoJunHao2000":1}},{"path":"src/test/java/modtrekt/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.commons.core;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":133,"HoJunHao2000":2}},{"path":"src/test/java/modtrekt/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.commons.core.index;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"HoJunHao2000"},"content":"        final Index fifthModuleIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"HoJunHao2000"},"content":"        assertTrue(fifthModuleIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"HoJunHao2000"},"content":"        assertTrue(fifthModuleIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"HoJunHao2000"},"content":"        assertTrue(fifthModuleIndex.equals(fifthModuleIndex));","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"HoJunHao2000"},"content":"        assertFalse(fifthModuleIndex.equals(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"HoJunHao2000"},"content":"        assertFalse(fifthModuleIndex.equals(5.0f));","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"HoJunHao2000"},"content":"        assertFalse(fifthModuleIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":51,"HoJunHao2000":9}},{"path":"src/test/java/modtrekt/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.commons.util;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"midnightfeverrr"},"content":"        assertNotNull(AppUtil.getImage(\"/images/ModtRekt.png\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":33,"midnightfeverrr":1,"HoJunHao2000":2}},{"path":"src/test/java/modtrekt/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.commons.util;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"-":105,"HoJunHao2000":3}},{"path":"src/test/java/modtrekt/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.commons.util;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.core.Config;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":112,"HoJunHao2000":4}},{"path":"src/test/java/modtrekt/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.commons.util;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":21,"HoJunHao2000":2}},{"path":"src/test/java/modtrekt/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.commons.util;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.testutil.SerializableTestClass;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.testutil.TestUtil;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"domoberzin"},"content":"        assertEquals(serializableTestClass.getDescription(), SerializableTestClass.getDescTestValue());","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"domoberzin":1,"-":41,"HoJunHao2000":3}},{"path":"src/test/java/modtrekt/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.commons.util;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":145,"author":{"gitId":"vvidday"},"content":"    // \u003d\u003d\u003d \u003d\u003d\u003d \u003d\u003d\u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":146,"author":{"gitId":"vvidday"},"content":"    // SHELL SPLIT","lastModifiedDate":"2022-10-21"},{"lineNumber":147,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":148,"author":{"gitId":"vvidday"},"content":"    public void shellSplit_nullInput_throwsNullPointerException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":149,"author":{"gitId":"vvidday"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.shellSplit(null));","lastModifiedDate":"2022-10-21"},{"lineNumber":150,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":151,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":152,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":153,"author":{"gitId":"vvidday"},"content":"    public void shellSplit_emptyInput_returnsEmptyArray() {","lastModifiedDate":"2022-10-21"},{"lineNumber":154,"author":{"gitId":"jontmy"},"content":"        assertEquals(0, StringUtil.shellSplit(\"\").size());","lastModifiedDate":"2022-10-24"},{"lineNumber":155,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":156,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":157,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":158,"author":{"gitId":"vvidday"},"content":"    public void shellSplit_blankInput_returnsEmptyArray() {","lastModifiedDate":"2022-10-21"},{"lineNumber":159,"author":{"gitId":"jontmy"},"content":"        assertEquals(0, StringUtil.shellSplit(\" \\n \\r  \\r\\n \").size());","lastModifiedDate":"2022-10-24"},{"lineNumber":160,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":161,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":162,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":163,"author":{"gitId":"vvidday"},"content":"    public void shellSplit_validInputsWithoutSpaces_returnsCorrectArray() {","lastModifiedDate":"2022-10-21"},{"lineNumber":164,"author":{"gitId":"jontmy"},"content":"        assertArrayEquals(new String[]{\"test\"}, StringUtil.shellSplit(\"test\").toArray());","lastModifiedDate":"2022-10-24"},{"lineNumber":165,"author":{"gitId":"jontmy"},"content":"        assertArrayEquals(new String[]{\"test\", \"-a\"}, StringUtil.shellSplit(\"test -a\").toArray());","lastModifiedDate":"2022-10-24"},{"lineNumber":166,"author":{"gitId":"jontmy"},"content":"        assertArrayEquals(new String[]{\"test\", \"-a\"}, StringUtil.shellSplit(\"test      -a\").toArray());","lastModifiedDate":"2022-10-24"},{"lineNumber":167,"author":{"gitId":"jontmy"},"content":"        assertArrayEquals(new String[]{\"test\", \"-a\", \"abc\"}, StringUtil.shellSplit(\"test -a abc\").toArray());","lastModifiedDate":"2022-10-24"},{"lineNumber":168,"author":{"gitId":"jontmy"},"content":"        assertArrayEquals(new String[]{\"test\", \"-a\", \"abc\", \"-b\", \"xyz\"},","lastModifiedDate":"2022-10-24"},{"lineNumber":169,"author":{"gitId":"jontmy"},"content":"                StringUtil.shellSplit(\"test -a abc -b xyz\").toArray());","lastModifiedDate":"2022-10-24"},{"lineNumber":170,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":171,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":172,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":173,"author":{"gitId":"vvidday"},"content":"    public void shellSplit_validInputsWithSpaces_returnsCorrectArray() {","lastModifiedDate":"2022-10-21"},{"lineNumber":174,"author":{"gitId":"vvidday"},"content":"        assertArrayEquals(","lastModifiedDate":"2022-10-21"},{"lineNumber":175,"author":{"gitId":"vvidday"},"content":"                new String[]{\"test\", \"-a\", \"abc\", \"def\", \"ghi\"},","lastModifiedDate":"2022-10-21"},{"lineNumber":176,"author":{"gitId":"jontmy"},"content":"                StringUtil.shellSplit(\"test -a abc def ghi\").toArray()","lastModifiedDate":"2022-10-24"},{"lineNumber":177,"author":{"gitId":"vvidday"},"content":"        );","lastModifiedDate":"2022-10-21"},{"lineNumber":178,"author":{"gitId":"vvidday"},"content":"        assertArrayEquals(","lastModifiedDate":"2022-10-21"},{"lineNumber":179,"author":{"gitId":"vvidday"},"content":"                new String[]{\"test\", \"-a\", \"abc def ghi\"},","lastModifiedDate":"2022-10-21"},{"lineNumber":180,"author":{"gitId":"jontmy"},"content":"                StringUtil.shellSplit(\"test -a \\\"abc def ghi\\\"\").toArray()","lastModifiedDate":"2022-10-24"},{"lineNumber":181,"author":{"gitId":"vvidday"},"content":"        );","lastModifiedDate":"2022-10-21"},{"lineNumber":182,"author":{"gitId":"vvidday"},"content":"        assertArrayEquals(","lastModifiedDate":"2022-10-21"},{"lineNumber":183,"author":{"gitId":"vvidday"},"content":"                new String[]{\"test\", \"-a\", \"abc def ghi\", \"-b\", \"w\", \"x\", \"y\", \"z\"},","lastModifiedDate":"2022-10-21"},{"lineNumber":184,"author":{"gitId":"jontmy"},"content":"                StringUtil.shellSplit(\"test -a \\\"abc def ghi\\\" -b w x y z\").toArray()","lastModifiedDate":"2022-10-24"},{"lineNumber":185,"author":{"gitId":"vvidday"},"content":"        );","lastModifiedDate":"2022-10-21"},{"lineNumber":186,"author":{"gitId":"vvidday"},"content":"        assertArrayEquals(","lastModifiedDate":"2022-10-21"},{"lineNumber":187,"author":{"gitId":"vvidday"},"content":"                new String[]{\"test\", \"-b\", \"w\", \"x\", \"y\", \"z\", \"-a\", \"abc def ghi\"},","lastModifiedDate":"2022-10-21"},{"lineNumber":188,"author":{"gitId":"jontmy"},"content":"                StringUtil.shellSplit(\"test -b w x y z -a \\\"abc def ghi\\\"\").toArray()","lastModifiedDate":"2022-10-24"},{"lineNumber":189,"author":{"gitId":"vvidday"},"content":"        );","lastModifiedDate":"2022-10-21"},{"lineNumber":190,"author":{"gitId":"vvidday"},"content":"        assertArrayEquals(","lastModifiedDate":"2022-10-21"},{"lineNumber":191,"author":{"gitId":"vvidday"},"content":"                new String[]{\"test\", \"-a\", \"abc def ghi\", \"-b\", \"w x y z\"},","lastModifiedDate":"2022-10-21"},{"lineNumber":192,"author":{"gitId":"jontmy"},"content":"                StringUtil.shellSplit(\"test -a \\\"abc def ghi\\\" -b \\\"w x y z\\\"\").toArray()","lastModifiedDate":"2022-10-24"},{"lineNumber":193,"author":{"gitId":"vvidday"},"content":"        );","lastModifiedDate":"2022-10-21"},{"lineNumber":194,"author":{"gitId":"vvidday"},"content":"        assertArrayEquals(","lastModifiedDate":"2022-10-21"},{"lineNumber":195,"author":{"gitId":"vvidday"},"content":"                new String[]{\"test\", \"-a\", \"a b  c   d     e\\nf\"},","lastModifiedDate":"2022-10-21"},{"lineNumber":196,"author":{"gitId":"jontmy"},"content":"                StringUtil.shellSplit(\"test -a \\\"a b  c   d     e\\nf\\\"\").toArray()","lastModifiedDate":"2022-10-24"},{"lineNumber":197,"author":{"gitId":"vvidday"},"content":"        );","lastModifiedDate":"2022-10-21"},{"lineNumber":198,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"vvidday":42,"jontmy":14,"-":141,"HoJunHao2000":2}},{"path":"src/test/java/modtrekt/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.logic;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"import static modtrekt.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.core.Messages;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.commands.CommandResult;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.ModelManager;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.ReadOnlyTaskBook;","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.UserPrefs;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.storage.JsonModuleListStorage;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"import modtrekt.storage.JsonTaskBookStorage;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.storage.StorageManager;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"vvidday"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"domoberzin"},"content":"        JsonTaskBookStorage taskBookStorage \u003d","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"domoberzin"},"content":"                new JsonTaskBookStorage(temporaryFolder.resolve(\"taskBook.json\"));","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"vvidday"},"content":"        JsonModuleListStorage moduleListStorage \u003d new JsonModuleListStorage(temporaryFolder.resolve(\"modulelist.json\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"vvidday"},"content":"        StorageManager storage \u003d new StorageManager(taskBookStorage, moduleListStorage, userPrefsStorage);","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":49,"author":{"gitId":"vvidday"},"content":"        assertParseException(invalidCommand, \"Expected a command, got uicfhmowqewca\");","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":52,"author":{"gitId":"domoberzin"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"domoberzin"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"vvidday"},"content":"        String deleteCommand \u003d \"remove -t 9\";","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"domoberzin"},"content":"        assertCommandException(deleteCommand, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"domoberzin"},"content":"    //    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"domoberzin"},"content":"    //    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"domoberzin"},"content":"    //        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"domoberzin"},"content":"    //        JsonTaskBookStorage taskBookStorage \u003d","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"domoberzin"},"content":"    //                new JsonTaskBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"domoberzin"},"content":"    //        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"domoberzin"},"content":"    //                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"domoberzin"},"content":"    //        StorageManager storage \u003d new StorageManager(taskBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"domoberzin"},"content":"    //        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"domoberzin"},"content":"    //","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"domoberzin"},"content":"    //        // Execute add command","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"domoberzin"},"content":"    //        String addCommand \u003d AddTaskCommand.COMMAND_WORD + \" -t \" + CommandTestUtil.VALID_DESC_1;","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"domoberzin"},"content":"    //        Task expectedTask \u003d new TaskBuilder(TypicalTasks.TASK_1).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"domoberzin"},"content":"    //            ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"domoberzin"},"content":"    //        expectedModel.addTask(expectedTask);","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"domoberzin"},"content":"    //        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"domoberzin"},"content":"    //        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"domoberzin"},"content":"    //    }","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"HoJunHao2000"},"content":"    public void getFilteredModuleList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredModuleList().remove(0));","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"HoJunHao2000"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":99,"author":{"gitId":"HoJunHao2000"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":108,"author":{"gitId":"HoJunHao2000"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"HoJunHao2000"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"vvidday"},"content":"        Model expectedModel \u003d new ModelManager(model.getModuleList(), model.getTaskBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"HoJunHao2000"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"vvidday"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"domoberzin"},"content":"    private static class JsonTaskBookIoExceptionThrowingStub extends JsonTaskBookStorage {","lastModifiedDate":"2022-10-08"},{"lineNumber":144,"author":{"gitId":"domoberzin"},"content":"        private JsonTaskBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-10-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"domoberzin"},"content":"        public void saveTaskBook(ReadOnlyTaskBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"vvidday":9,"domoberzin":29,"-":95,"HoJunHao2000":20}},{"path":"src/test/java/modtrekt/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"-":53,"HoJunHao2000":1}},{"path":"src/test/java/modtrekt/logic/commands/DoneModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"midnightfeverrr"},"content":"package modtrekt.logic.commands;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"midnightfeverrr"},"content":"import static modtrekt.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"midnightfeverrr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"midnightfeverrr"},"content":"import modtrekt.model.Model;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"midnightfeverrr"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"midnightfeverrr"},"content":"public class DoneModuleCommandTest {","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"midnightfeverrr"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"midnightfeverrr"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"midnightfeverrr"},"content":"        ModCode moduleCode \u003d null;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"midnightfeverrr"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DoneModuleCommand(moduleCode));","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"midnightfeverrr"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"midnightfeverrr"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"midnightfeverrr"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"midnightfeverrr"},"content":"        Model model \u003d null;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"midnightfeverrr"},"content":"        ModCode moduleCode \u003d new ModCode(\"CS1101S\");","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"midnightfeverrr"},"content":"        DoneModuleCommand command \u003d new DoneModuleCommand(moduleCode);","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"midnightfeverrr"},"content":"        assertThrows(NullPointerException.class, () -\u003e command.execute(model));","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"midnightfeverrr"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"midnightfeverrr"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"midnightfeverrr":24}},{"path":"src/test/java/modtrekt/logic/commands/EditModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.logic.commands;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"HoJunHao2000"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.parser.ModtrektParser;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.ModCredit;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.ModName;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"class EditModuleCommandTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"HoJunHao2000"},"content":"    // \u003d\u003d\u003d \u003d\u003d\u003d \u003d\u003d\u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":"    // Positive test cases","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"HoJunHao2000"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"HoJunHao2000"},"content":"    public void testCommand_sameObjectReferenceEquals_returnsTrue() {","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"HoJunHao2000"},"content":"        EditModuleCommand cmd \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"HoJunHao2000"},"content":"                new EditModuleCommand(new ModCode(\"CS2100\"), new ModCode(\"CS2109S\"),","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"HoJunHao2000"},"content":"                        new ModName(\"Intro to AI and machine learning\"), new ModCredit(\"4\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"HoJunHao2000"},"content":"        assertEquals(cmd, cmd);","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"HoJunHao2000"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"HoJunHao2000"},"content":"    public void testCommand_differentObjectValuesEquals_returnsFalse() {","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"HoJunHao2000"},"content":"        EditModuleCommand a \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"HoJunHao2000"},"content":"                new EditModuleCommand(new ModCode(\"CS2100\"), new ModCode(\"CS2109S\"),","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"HoJunHao2000"},"content":"                        new ModName(\"Intro to AI and machine learning\"), new ModCredit(\"4\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"HoJunHao2000"},"content":"        EditModuleCommand b \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"HoJunHao2000"},"content":"                new EditModuleCommand(new ModCode(\"CS2103T\"), new ModCode(\"CS2109S\"),","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"HoJunHao2000"},"content":"                        new ModName(\"Intro to AI and machine learning\"), new ModCredit(\"4\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"HoJunHao2000"},"content":"        EditModuleCommand c \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"HoJunHao2000"},"content":"                new EditModuleCommand(new ModCode(\"CS2100\"), new ModCode(\"CS2103T\"),","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"HoJunHao2000"},"content":"                        new ModName(\"Intro to AI and machine learning\"), new ModCredit(\"4\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"HoJunHao2000"},"content":"        EditModuleCommand d \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"HoJunHao2000"},"content":"                new EditModuleCommand(new ModCode(\"CS2100\"), new ModCode(\"CS2109S\"),","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"HoJunHao2000"},"content":"                        new ModName(\"AI and ML\"), new ModCredit(\"4\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"HoJunHao2000"},"content":"        EditModuleCommand e \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"HoJunHao2000"},"content":"                new EditModuleCommand(new ModCode(\"CS2100\"), new ModCode(\"CS2109S\"),","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"HoJunHao2000"},"content":"                        new ModName(\"Intro to AI and machine learning\"), new ModCredit(\"2\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"HoJunHao2000"},"content":"        assertNotEquals(a, b);","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"HoJunHao2000"},"content":"        assertNotEquals(a, c);","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"HoJunHao2000"},"content":"        assertNotEquals(a, d);","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"HoJunHao2000"},"content":"        assertNotEquals(a, e);","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"HoJunHao2000"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"HoJunHao2000"},"content":"    public void testCommand_sameObjectValuesEquals_returnsTrue() {","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"HoJunHao2000"},"content":"        EditModuleCommand cmd1 \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"HoJunHao2000"},"content":"                new EditModuleCommand(new ModCode(\"CS2100\"), new ModCode(\"CS2109S\"),","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"HoJunHao2000"},"content":"                        new ModName(\"Intro to AI and machine learning\"), new ModCredit(\"4\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"HoJunHao2000"},"content":"        EditModuleCommand cmd2 \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"HoJunHao2000"},"content":"                new EditModuleCommand(new ModCode(\"CS2100\"), new ModCode(\"CS2109S\"),","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"HoJunHao2000"},"content":"                        new ModName(\"Intro to AI and machine learning\"), new ModCredit(\"4\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"HoJunHao2000"},"content":"        assertEquals(cmd1, cmd2);","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"HoJunHao2000"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"HoJunHao2000"},"content":"    public void testModtRektParser_validCommandWord_returnsValidCommand() throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"HoJunHao2000"},"content":"        EditModuleCommand expected \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"HoJunHao2000"},"content":"                new EditModuleCommand(new ModCode(\"CS2100\"), new ModCode(\"CS2109S\"),","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"HoJunHao2000"},"content":"                        new ModName(\"Intro to AI and machine learning\"), new ModCredit(\"4\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"HoJunHao2000"},"content":"        Command actual \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"HoJunHao2000"},"content":"                new ModtrektParser()","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"HoJunHao2000"},"content":"                        .parseCommand(\"edit module CS2100 -c CS2109S -n \\\"Intro to AI and machine learning\\\" -cr 4\");","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"HoJunHao2000"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"HoJunHao2000"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"HoJunHao2000"},"content":"    public void testParser_validModCode_returnsValidCommand() throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"HoJunHao2000"},"content":"        EditModuleCommand ai \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"HoJunHao2000"},"content":"                new EditModuleCommand(new ModCode(\"CS2100\"), new ModCode(\"CS2109S\"), null, null);","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"HoJunHao2000"},"content":"        EditModuleCommand swe \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"HoJunHao2000"},"content":"                new EditModuleCommand(new ModCode(\"CS2100\"), new ModCode(\"CS2103T\"), null, null);","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"HoJunHao2000"},"content":"        assertEquals(ai, new ModtrektParser().parseCommand(\"edit module CS2100 -c CS2109S\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"HoJunHao2000"},"content":"        assertEquals(swe, new ModtrektParser().parseCommand(\"edit module CS2100 -c CS2103T\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"HoJunHao2000"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"HoJunHao2000"},"content":"    public void testParser_validName_returnsValidCommand() throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":86,"author":{"gitId":"HoJunHao2000"},"content":"        EditModuleCommand name1 \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"HoJunHao2000"},"content":"                new EditModuleCommand(new ModCode(\"CS2100\"), null,","lastModifiedDate":"2022-10-25"},{"lineNumber":88,"author":{"gitId":"HoJunHao2000"},"content":"                        new ModName(\"Intro to AI and machine learning\"), null);","lastModifiedDate":"2022-10-25"},{"lineNumber":89,"author":{"gitId":"HoJunHao2000"},"content":"        EditModuleCommand name2 \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"HoJunHao2000"},"content":"                new EditModuleCommand(new ModCode(\"CS2100\"), null,","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"HoJunHao2000"},"content":"                        new ModName(\"Software Engineering\"), null);","lastModifiedDate":"2022-10-25"},{"lineNumber":92,"author":{"gitId":"HoJunHao2000"},"content":"        assertEquals(name1,","lastModifiedDate":"2022-10-25"},{"lineNumber":93,"author":{"gitId":"HoJunHao2000"},"content":"                new ModtrektParser().parseCommand(\"edit module CS2100 -n \\\"Intro to AI and machine learning\\\"\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"HoJunHao2000"},"content":"        assertEquals(name2, new ModtrektParser().parseCommand(\"edit module CS2100 -n \\\"Software Engineering\\\"\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":96,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":97,"author":{"gitId":"HoJunHao2000"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"HoJunHao2000"},"content":"    public void testParser_validCredit_returnsValidCommand() throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":99,"author":{"gitId":"HoJunHao2000"},"content":"        EditModuleCommand credit1 \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":100,"author":{"gitId":"HoJunHao2000"},"content":"                new EditModuleCommand(new ModCode(\"CS2100\"), null, null, new ModCredit(\"1\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":101,"author":{"gitId":"HoJunHao2000"},"content":"        EditModuleCommand credit2 \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":102,"author":{"gitId":"HoJunHao2000"},"content":"                new EditModuleCommand(new ModCode(\"CS2100\"), null, null, new ModCredit(\"2\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":103,"author":{"gitId":"HoJunHao2000"},"content":"        assertEquals(credit1, new ModtrektParser().parseCommand(\"edit module CS2100 -cr 1\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":104,"author":{"gitId":"HoJunHao2000"},"content":"        assertEquals(credit2, new ModtrektParser().parseCommand(\"edit module CS2100 -cr 2\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":105,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":106,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":107,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":108,"author":{"gitId":"HoJunHao2000"},"content":"    // \u003d\u003d\u003d \u003d\u003d\u003d \u003d\u003d\u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":109,"author":{"gitId":"HoJunHao2000"},"content":"    // Negative test cases","lastModifiedDate":"2022-10-25"},{"lineNumber":110,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":111,"author":{"gitId":"HoJunHao2000"},"content":"    // NULL","lastModifiedDate":"2022-10-25"},{"lineNumber":112,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":113,"author":{"gitId":"HoJunHao2000"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":114,"author":{"gitId":"HoJunHao2000"},"content":"    public void testParser_nullInput_throwsNullPointerException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":115,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ModtrektParser().parseCommand(null));","lastModifiedDate":"2022-10-25"},{"lineNumber":116,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":117,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":118,"author":{"gitId":"HoJunHao2000"},"content":"    // FLAGS","lastModifiedDate":"2022-10-25"},{"lineNumber":119,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":120,"author":{"gitId":"HoJunHao2000"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":121,"author":{"gitId":"HoJunHao2000"},"content":"    public void testParser_invalidFlags_throwsParseException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":122,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"edit module CS2100 -p high\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":123,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"edit -b -c -p high\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":124,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":125,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":126,"author":{"gitId":"HoJunHao2000"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":127,"author":{"gitId":"HoJunHao2000"},"content":"    public void testParser_missingFlags_throwsParseException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":128,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"edit module\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":129,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":130,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":131,"author":{"gitId":"HoJunHao2000"},"content":"    // MODULES","lastModifiedDate":"2022-10-25"},{"lineNumber":132,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":133,"author":{"gitId":"HoJunHao2000"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":134,"author":{"gitId":"HoJunHao2000"},"content":"    public void testParser_invalidModule_throwsParseException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":135,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"edit module ST2334 -c CS@0\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":136,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":137,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":138,"author":{"gitId":"HoJunHao2000"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":139,"author":{"gitId":"HoJunHao2000"},"content":"    public void testParser_multipleModules_throwsParseException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":140,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser()","lastModifiedDate":"2022-10-25"},{"lineNumber":141,"author":{"gitId":"HoJunHao2000"},"content":"                .parseCommand(\"edit module ST2334 -c CS2100 CS2103T\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":142,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":143,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":144,"author":{"gitId":"HoJunHao2000"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":145,"author":{"gitId":"HoJunHao2000"},"content":"    public void testParser_missingModule_throwsParseException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":146,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"edit module ST2334 -c\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":147,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":148,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":149,"author":{"gitId":"HoJunHao2000"},"content":"    // CREDIT","lastModifiedDate":"2022-10-25"},{"lineNumber":150,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":151,"author":{"gitId":"HoJunHao2000"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":152,"author":{"gitId":"HoJunHao2000"},"content":"    public void testParser_invalidCredit_throwsParseException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":153,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"edit module ST2334 -cr a\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":154,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":155,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":156,"author":{"gitId":"HoJunHao2000"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":157,"author":{"gitId":"HoJunHao2000"},"content":"    public void testParser_multipleCredit_throwsParseException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":158,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser()","lastModifiedDate":"2022-10-25"},{"lineNumber":159,"author":{"gitId":"HoJunHao2000"},"content":"                .parseCommand(\"edit module ST2334 -cr 2 -cr 3\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":160,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":161,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":162,"author":{"gitId":"HoJunHao2000"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":163,"author":{"gitId":"HoJunHao2000"},"content":"    public void testParser_missingCredit_throwsParseException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":164,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"edit module ST2334 -cr\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":165,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":166,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":167,"author":{"gitId":"HoJunHao2000"},"content":"    // NAME","lastModifiedDate":"2022-10-25"},{"lineNumber":168,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":169,"author":{"gitId":"HoJunHao2000"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":170,"author":{"gitId":"HoJunHao2000"},"content":"    public void testParser_missingName_throwsParseException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":171,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"edit module ST2334 -n\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":172,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":173,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":174,"author":{"gitId":"HoJunHao2000"},"content":"    // TARGET","lastModifiedDate":"2022-10-25"},{"lineNumber":175,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":176,"author":{"gitId":"HoJunHao2000"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":177,"author":{"gitId":"HoJunHao2000"},"content":"    public void testParser_doesNotExist_throwsParseException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":178,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"edit module abc s -c CS2103T\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":179,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":180,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":181,"author":{"gitId":"HoJunHao2000"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":182,"author":{"gitId":"HoJunHao2000"},"content":"    public void testParser_missingIndex_throwsParseException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":183,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"edit module -c CS2103T\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":184,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"edit -c CS2103T\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":185,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":186,"author":{"gitId":"HoJunHao2000"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"HoJunHao2000":186}},{"path":"src/test/java/modtrekt/logic/commands/EditTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"package modtrekt.logic.commands;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"import static modtrekt.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"import modtrekt.commons.core.index.Index;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.parser.ModtrektParser;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Description;","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"class EditTaskCommandTest {","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"    // \u003d\u003d\u003d \u003d\u003d\u003d \u003d\u003d\u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":"    // Positive test cases","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"    public void testCommand_sameObjectReferenceEquals_returnsTrue() {","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"        EditTaskCommand cmd \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"                new EditTaskCommand(Index.fromOneBased(1), new ModCode(\"CS2109S\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":"                        LocalDate.parse(\"2000-12-11\".trim(), DateTimeFormatter.ofPattern(\"yyyy-M-d\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"                        new Description(\"study for exams\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"        assertEquals(cmd, cmd);","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"vvidday"},"content":"    public void testCommand_differentObjectValuesEquals_returnsFalse() {","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"vvidday"},"content":"        EditTaskCommand a \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"vvidday"},"content":"                new EditTaskCommand(Index.fromOneBased(1), new ModCode(\"CS2109S\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"vvidday"},"content":"                        LocalDate.parse(\"2000-12-11\".trim(), DateTimeFormatter.ofPattern(\"yyyy-M-d\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"vvidday"},"content":"                        new Description(\"study for exams\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"vvidday"},"content":"        EditTaskCommand b \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"vvidday"},"content":"                new EditTaskCommand(Index.fromOneBased(2), new ModCode(\"CS2109S\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"vvidday"},"content":"                        LocalDate.parse(\"2000-12-11\".trim(), DateTimeFormatter.ofPattern(\"yyyy-M-d\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"vvidday"},"content":"                        new Description(\"study for exams\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"vvidday"},"content":"        EditTaskCommand c \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"vvidday"},"content":"                new EditTaskCommand(Index.fromOneBased(1), new ModCode(\"CS2103T\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"vvidday"},"content":"                        LocalDate.parse(\"2000-12-11\".trim(), DateTimeFormatter.ofPattern(\"yyyy-M-d\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"vvidday"},"content":"                        new Description(\"study for exams\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"vvidday"},"content":"        EditTaskCommand d \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"vvidday"},"content":"                new EditTaskCommand(Index.fromOneBased(1), new ModCode(\"CS2109S\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"vvidday"},"content":"                        LocalDate.parse(\"2000-12-11\".trim(), DateTimeFormatter.ofPattern(\"yyyy-M-d\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"vvidday"},"content":"                        new Description(\"preparing for exams\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"vvidday"},"content":"        EditTaskCommand e \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"vvidday"},"content":"                new EditTaskCommand(Index.fromOneBased(1), new ModCode(\"CS2109S\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"vvidday"},"content":"                        LocalDate.parse(\"1999-12-11\".trim(), DateTimeFormatter.ofPattern(\"yyyy-M-d\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"vvidday"},"content":"                        new Description(\"studying for exams\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"vvidday"},"content":"        assertNotEquals(a, b);","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"vvidday"},"content":"        assertNotEquals(a, c);","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"vvidday"},"content":"        assertNotEquals(a, d);","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"vvidday"},"content":"        assertNotEquals(a, e);","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"vvidday"},"content":"    public void testCommand_sameObjectValuesEquals_returnsTrue() {","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"vvidday"},"content":"        EditTaskCommand cmd1 \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"vvidday"},"content":"                new EditTaskCommand(Index.fromOneBased(1), new ModCode(\"CS2109S\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"vvidday"},"content":"                        LocalDate.parse(\"2000-12-11\".trim(), DateTimeFormatter.ofPattern(\"yyyy-M-d\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"vvidday"},"content":"                        new Description(\"study for exams\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"vvidday"},"content":"        EditTaskCommand cmd2 \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"vvidday"},"content":"                new EditTaskCommand(Index.fromOneBased(1), new ModCode(\"CS2109S\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"vvidday"},"content":"                        LocalDate.parse(\"2000-12-11\".trim(), DateTimeFormatter.ofPattern(\"yyyy-M-d\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"vvidday"},"content":"                        new Description(\"study for exams\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"vvidday"},"content":"        assertEquals(cmd1, cmd2);","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"vvidday"},"content":"    public void testModtRektParser_validCommandWord_returnsValidCommand() throws ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"vvidday"},"content":"        EditTaskCommand expected \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"vvidday"},"content":"                new EditTaskCommand(Index.fromOneBased(1), new ModCode(\"CS2109S\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"vvidday"},"content":"                        LocalDate.parse(\"2000-12-11\".trim(), DateTimeFormatter.ofPattern(\"yyyy-M-d\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"vvidday"},"content":"                        new Description(\"study for exams\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"vvidday"},"content":"        Command actual \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"vvidday"},"content":"                new ModtrektParser()","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"HoJunHao2000"},"content":"                        .parseCommand(\"edit task 1 -c CS2109S -d 2000-12-11 -ds \\\"study for exams\\\"\");","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"vvidday"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"vvidday"},"content":"    public void testParser_validModule_returnsValidCommand() throws ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"vvidday"},"content":"        EditTaskCommand ai \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"vvidday"},"content":"                new EditTaskCommand(Index.fromOneBased(1), new ModCode(\"CS2109S\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"vvidday"},"content":"                        null, null);","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"vvidday"},"content":"        EditTaskCommand swe \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"vvidday"},"content":"                new EditTaskCommand(Index.fromOneBased(1), new ModCode(\"CS2103T\"),","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"vvidday"},"content":"                        null, null);","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"HoJunHao2000"},"content":"        assertEquals(ai, new ModtrektParser().parseCommand(\"edit task 1 -c CS2109S\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"HoJunHao2000"},"content":"        assertEquals(swe, new ModtrektParser().parseCommand(\"edit task 1 -c CS2103T\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":96,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"vvidday"},"content":"    public void testParser_validDeadline_returnsValidCommand() throws ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"vvidday"},"content":"        EditTaskCommand date1 \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"vvidday"},"content":"                new EditTaskCommand(Index.fromOneBased(1), null,","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"vvidday"},"content":"                        LocalDate.parse(\"2000-12-11\".trim(), DateTimeFormatter.ofPattern(\"yyyy-M-d\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"vvidday"},"content":"                        null);","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"vvidday"},"content":"        EditTaskCommand date2 \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"vvidday"},"content":"                new EditTaskCommand(Index.fromOneBased(1), null,","lastModifiedDate":"2022-10-21"},{"lineNumber":106,"author":{"gitId":"vvidday"},"content":"                        LocalDate.parse(\"1998-12-11\".trim(), DateTimeFormatter.ofPattern(\"yyyy-M-d\")),","lastModifiedDate":"2022-10-21"},{"lineNumber":107,"author":{"gitId":"vvidday"},"content":"                        null);","lastModifiedDate":"2022-10-21"},{"lineNumber":108,"author":{"gitId":"HoJunHao2000"},"content":"        assertEquals(date1, new ModtrektParser().parseCommand(\"edit task 1 -d 2000-12-11\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":109,"author":{"gitId":"HoJunHao2000"},"content":"        assertEquals(date2, new ModtrektParser().parseCommand(\"edit task 1 -d 1998-12-11\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":110,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":111,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":112,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":113,"author":{"gitId":"vvidday"},"content":"    public void testParser_validDescription_returnsValidCommand() throws ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":114,"author":{"gitId":"vvidday"},"content":"        EditTaskCommand read \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":115,"author":{"gitId":"vvidday"},"content":"                new EditTaskCommand(Index.fromOneBased(1), null, null,","lastModifiedDate":"2022-10-21"},{"lineNumber":116,"author":{"gitId":"vvidday"},"content":"                        new Description(\"read book\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":117,"author":{"gitId":"vvidday"},"content":"        EditTaskCommand buy \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":118,"author":{"gitId":"vvidday"},"content":"                new EditTaskCommand(Index.fromOneBased(1), null, null,","lastModifiedDate":"2022-10-21"},{"lineNumber":119,"author":{"gitId":"vvidday"},"content":"                        new Description(\"buy book\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":120,"author":{"gitId":"HoJunHao2000"},"content":"        assertEquals(read, new ModtrektParser().parseCommand(\"edit task 1 -ds \\\"read book\\\"\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":121,"author":{"gitId":"HoJunHao2000"},"content":"        assertEquals(buy, new ModtrektParser().parseCommand(\"edit task 1 -ds \\\"buy book\\\"\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":122,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":123,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":124,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":125,"author":{"gitId":"vvidday"},"content":"    // \u003d\u003d\u003d \u003d\u003d\u003d \u003d\u003d\u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":126,"author":{"gitId":"vvidday"},"content":"    // Negative test cases","lastModifiedDate":"2022-10-21"},{"lineNumber":127,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":128,"author":{"gitId":"vvidday"},"content":"    // NULL","lastModifiedDate":"2022-10-21"},{"lineNumber":129,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":130,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":131,"author":{"gitId":"vvidday"},"content":"    public void testParser_nullInput_throwsNullPointerException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":132,"author":{"gitId":"vvidday"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ModtrektParser().parseCommand(null));","lastModifiedDate":"2022-10-21"},{"lineNumber":133,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":134,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":135,"author":{"gitId":"vvidday"},"content":"    // FLAGS","lastModifiedDate":"2022-10-21"},{"lineNumber":136,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":137,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":138,"author":{"gitId":"vvidday"},"content":"    public void testParser_invalidFlags_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":139,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"edit task 1 -p high\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":140,"author":{"gitId":"vvidday"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"edit -a -b -c -p high\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":141,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":142,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":143,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":144,"author":{"gitId":"vvidday"},"content":"    public void testParser_missingFlags_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":145,"author":{"gitId":"vvidday"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"edit\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":146,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":147,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":148,"author":{"gitId":"vvidday"},"content":"    // MODULES","lastModifiedDate":"2022-10-21"},{"lineNumber":149,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":150,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":151,"author":{"gitId":"vvidday"},"content":"    public void testParser_invalidModule_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":152,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"edit task 1 -c CS@0\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":153,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":154,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":155,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":156,"author":{"gitId":"vvidday"},"content":"    public void testParser_multipleModules_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":157,"author":{"gitId":"vvidday"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser()","lastModifiedDate":"2022-10-21"},{"lineNumber":158,"author":{"gitId":"HoJunHao2000"},"content":"                .parseCommand(\"edit task 1 -c CS2100 CS2103T\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":159,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":160,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":161,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":162,"author":{"gitId":"vvidday"},"content":"    public void testParser_missingModule_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":163,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"edit task 1 -c\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":164,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":165,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":166,"author":{"gitId":"vvidday"},"content":"    // DEADLINES","lastModifiedDate":"2022-10-21"},{"lineNumber":167,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":168,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":169,"author":{"gitId":"vvidday"},"content":"    public void testParser_invalidDeadline_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":170,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"edit task 1 -d 12-12-2000\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":171,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":172,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":173,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":174,"author":{"gitId":"vvidday"},"content":"    public void testParser_multipleDeadline_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":175,"author":{"gitId":"vvidday"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser()","lastModifiedDate":"2022-10-21"},{"lineNumber":176,"author":{"gitId":"HoJunHao2000"},"content":"                .parseCommand(\"edit task 1 -d 2000-12-12 1999-12-12\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":177,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":178,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":179,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":180,"author":{"gitId":"vvidday"},"content":"    public void testParser_missingDeadline_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":181,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"edit task 1 -d\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":182,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":183,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":184,"author":{"gitId":"vvidday"},"content":"    // DESCRIPTION","lastModifiedDate":"2022-10-21"},{"lineNumber":185,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":186,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":187,"author":{"gitId":"vvidday"},"content":"    public void testParser_missingDes_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":188,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"edit task 1 -d\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":189,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":190,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":191,"author":{"gitId":"vvidday"},"content":"    // INDICES","lastModifiedDate":"2022-10-21"},{"lineNumber":192,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":193,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":194,"author":{"gitId":"vvidday"},"content":"    public void testParser_nonNumericIndex_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":195,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"edit task abc -c CS2103T\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":196,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":197,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":198,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":199,"author":{"gitId":"vvidday"},"content":"    public void testParser_zeroIndex_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":200,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"edit task 0 -c CS2103T\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":201,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":202,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":203,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":204,"author":{"gitId":"vvidday"},"content":"    public void testParser_negativeIndex_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":205,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"edit task -1 -c CS2103T\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":206,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":207,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":208,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":209,"author":{"gitId":"vvidday"},"content":"    public void testParser_multipleIndices_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":210,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"edit task 1 2 3 -c CS2103T\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":211,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":212,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":213,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":214,"author":{"gitId":"vvidday"},"content":"    public void testParser_missingIndex_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":215,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"edit task -c CS2103T\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":216,"author":{"gitId":"vvidday"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"edit -c CS2103T\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":217,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":218,"author":{"gitId":"vvidday"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"vvidday":198,"HoJunHao2000":20}},{"path":"src/test/java/modtrekt/logic/commands/PrioritizeTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"package modtrekt.logic.commands;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"import static modtrekt.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"import modtrekt.commons.core.index.Index;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.commands.tasks.PrioritizeTaskCommand;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.parser.ModtrektParser;","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"import modtrekt.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"public class PrioritizeTaskCommandTest {","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"    // \u003d\u003d\u003d \u003d\u003d\u003d \u003d\u003d\u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"    // Positive test cases","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"    public void testCommand_sameObjectReferenceEquals_returnsTrue() {","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":"        PrioritizeTaskCommand cmd \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"                new PrioritizeTaskCommand(Index.fromOneBased(1), Task.Priority.HIGH);","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"        assertEquals(cmd, cmd);","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":"    public void testCommand_differentObjectValuesEquals_returnsFalse() {","lastModifiedDate":"2022-10-21"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"        PrioritizeTaskCommand a \u003d new PrioritizeTaskCommand(Index.fromOneBased(1), Task.Priority.HIGH);","lastModifiedDate":"2022-10-21"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"        PrioritizeTaskCommand b \u003d new PrioritizeTaskCommand(Index.fromOneBased(1), Task.Priority.LOW);","lastModifiedDate":"2022-10-21"},{"lineNumber":30,"author":{"gitId":"vvidday"},"content":"        PrioritizeTaskCommand c \u003d new PrioritizeTaskCommand(Index.fromOneBased(2), Task.Priority.LOW);","lastModifiedDate":"2022-10-21"},{"lineNumber":31,"author":{"gitId":"vvidday"},"content":"        assertNotEquals(a, b);","lastModifiedDate":"2022-10-21"},{"lineNumber":32,"author":{"gitId":"vvidday"},"content":"        assertNotEquals(b, c);","lastModifiedDate":"2022-10-21"},{"lineNumber":33,"author":{"gitId":"vvidday"},"content":"        assertNotEquals(a, c);","lastModifiedDate":"2022-10-21"},{"lineNumber":34,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":35,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":36,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":37,"author":{"gitId":"vvidday"},"content":"    public void testCommand_sameObjectValuesEquals_returnsTrue() {","lastModifiedDate":"2022-10-21"},{"lineNumber":38,"author":{"gitId":"vvidday"},"content":"        PrioritizeTaskCommand a \u003d new PrioritizeTaskCommand(Index.fromOneBased(1), Task.Priority.HIGH);","lastModifiedDate":"2022-10-21"},{"lineNumber":39,"author":{"gitId":"vvidday"},"content":"        PrioritizeTaskCommand b \u003d new PrioritizeTaskCommand(Index.fromOneBased(1), Task.Priority.HIGH);","lastModifiedDate":"2022-10-21"},{"lineNumber":40,"author":{"gitId":"vvidday"},"content":"        assertEquals(a, b);","lastModifiedDate":"2022-10-21"},{"lineNumber":41,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":42,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":43,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":44,"author":{"gitId":"vvidday"},"content":"    public void testModtRektParser_validCommandWord_returnsValidCommand() throws ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":45,"author":{"gitId":"vvidday"},"content":"        PrioritizeTaskCommand expected \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":46,"author":{"gitId":"vvidday"},"content":"                new PrioritizeTaskCommand(Index.fromOneBased(1), Task.Priority.HIGH);","lastModifiedDate":"2022-10-21"},{"lineNumber":47,"author":{"gitId":"vvidday"},"content":"        Command actual \u003d new ModtrektParser().parseCommand(\"prioritize -t 1 -p high\");","lastModifiedDate":"2022-10-21"},{"lineNumber":48,"author":{"gitId":"vvidday"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-10-21"},{"lineNumber":49,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":51,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":52,"author":{"gitId":"vvidday"},"content":"    public void testParser_validPriorities_returnsValidCommand() throws ParseException {","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"vvidday"},"content":"        PrioritizeTaskCommand high \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":54,"author":{"gitId":"vvidday"},"content":"                new PrioritizeTaskCommand(Index.fromOneBased(1), Task.Priority.HIGH);","lastModifiedDate":"2022-10-21"},{"lineNumber":55,"author":{"gitId":"vvidday"},"content":"        PrioritizeTaskCommand medium \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":56,"author":{"gitId":"vvidday"},"content":"                new PrioritizeTaskCommand(Index.fromOneBased(2), Task.Priority.MEDIUM);","lastModifiedDate":"2022-10-21"},{"lineNumber":57,"author":{"gitId":"vvidday"},"content":"        PrioritizeTaskCommand low \u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"vvidday"},"content":"                new PrioritizeTaskCommand(Index.fromOneBased(Integer.MAX_VALUE), Task.Priority.LOW);","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"vvidday"},"content":"        assertEquals(high, new ModtrektParser().parseCommand(\"prioritize -t 1 -p high\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"vvidday"},"content":"        assertEquals(medium, new ModtrektParser().parseCommand(\"prioritize -t 2 -p medium\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":61,"author":{"gitId":"vvidday"},"content":"        assertEquals(low, new ModtrektParser().parseCommand(\"prioritize -t 2147483647 -p low\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":62,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":63,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":64,"author":{"gitId":"vvidday"},"content":"    // \u003d\u003d\u003d \u003d\u003d\u003d \u003d\u003d\u003d","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"vvidday"},"content":"    // Negative test cases","lastModifiedDate":"2022-10-21"},{"lineNumber":66,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":67,"author":{"gitId":"vvidday"},"content":"    // NULL","lastModifiedDate":"2022-10-21"},{"lineNumber":68,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":69,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":70,"author":{"gitId":"vvidday"},"content":"    public void testParser_nullInput_throwsNullPointerException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":71,"author":{"gitId":"vvidday"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ModtrektParser().parseCommand(null));","lastModifiedDate":"2022-10-21"},{"lineNumber":72,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":73,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":74,"author":{"gitId":"vvidday"},"content":"    // FLAGS","lastModifiedDate":"2022-10-21"},{"lineNumber":75,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":76,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":77,"author":{"gitId":"vvidday"},"content":"    public void testParser_invalidFlags_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":78,"author":{"gitId":"vvidday"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"prioritize -t 1 -p high -a -b -c\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":79,"author":{"gitId":"vvidday"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"prioritize -a -b -c -t 1 -p high\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":80,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":83,"author":{"gitId":"vvidday"},"content":"    public void testParser_duplicateFlags_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":84,"author":{"gitId":"vvidday"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser()","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"vvidday"},"content":"                .parseCommand(\"prioritize -t 1 -t 2 -t 3 -p high\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"vvidday"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser()","lastModifiedDate":"2022-10-21"},{"lineNumber":87,"author":{"gitId":"vvidday"},"content":"                .parseCommand(\"prioritize -t 1 -p high -p medium -p low\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":88,"author":{"gitId":"vvidday"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser()","lastModifiedDate":"2022-10-21"},{"lineNumber":89,"author":{"gitId":"vvidday"},"content":"                .parseCommand(\"prioritize -t 1 -2 -t 3 -p high -p medium -p low\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":90,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":91,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":92,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":93,"author":{"gitId":"vvidday"},"content":"    public void testParser_missingFlags_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":94,"author":{"gitId":"vvidday"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"prioritize\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":95,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":96,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":97,"author":{"gitId":"vvidday"},"content":"    // PRIORITIES","lastModifiedDate":"2022-10-21"},{"lineNumber":98,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":99,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":100,"author":{"gitId":"vvidday"},"content":"    public void testParser_invalidPriority_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":101,"author":{"gitId":"vvidday"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"prioritize -t 0 -p abc\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":102,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":103,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":104,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":105,"author":{"gitId":"vvidday"},"content":"    public void testParser_multiplePriorities_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":106,"author":{"gitId":"vvidday"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser()","lastModifiedDate":"2022-10-21"},{"lineNumber":107,"author":{"gitId":"vvidday"},"content":"                .parseCommand(\"prioritize -t 0 -p low medium high\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":108,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":109,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":110,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":111,"author":{"gitId":"vvidday"},"content":"    public void testParser_missingPriority_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":112,"author":{"gitId":"vvidday"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"prioritize -t 0 -p\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":113,"author":{"gitId":"vvidday"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"prioritize -t 0\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":114,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":115,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":116,"author":{"gitId":"vvidday"},"content":"    // INDICES","lastModifiedDate":"2022-10-21"},{"lineNumber":117,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":118,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":119,"author":{"gitId":"vvidday"},"content":"    public void testParser_nonNumericIndex_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":120,"author":{"gitId":"vvidday"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"prioritize -t abc -p high\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":121,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":122,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":123,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":124,"author":{"gitId":"vvidday"},"content":"    public void testParser_zeroIndex_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":125,"author":{"gitId":"vvidday"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"prioritize -t 0 -p high\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":126,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":127,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":128,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":129,"author":{"gitId":"vvidday"},"content":"    public void testParser_negativeIndex_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":130,"author":{"gitId":"vvidday"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"prioritize -t -1 -p high\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":131,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":132,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":133,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":134,"author":{"gitId":"vvidday"},"content":"    public void testParser_multipleIndices_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":135,"author":{"gitId":"vvidday"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"prioritize -t 1 2 3 -p high\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":136,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":137,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":138,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":139,"author":{"gitId":"vvidday"},"content":"    public void testParser_missingIndex_throwsParseException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":140,"author":{"gitId":"vvidday"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"prioritize -t -p high\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":141,"author":{"gitId":"vvidday"},"content":"        assertThrows(ParseException.class, () -\u003e new ModtrektParser().parseCommand(\"prioritize -p high\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":142,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":143,"author":{"gitId":"vvidday"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"vvidday":143}},{"path":"src/test/java/modtrekt/logic/commands/UndoneModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"midnightfeverrr"},"content":"package modtrekt.logic.commands;","lastModifiedDate":"2022-10-21"},{"lineNumber":2,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":3,"author":{"gitId":"midnightfeverrr"},"content":"import static modtrekt.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"midnightfeverrr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"midnightfeverrr"},"content":"import modtrekt.model.Model;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"midnightfeverrr"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"midnightfeverrr"},"content":"public class UndoneModuleCommandTest {","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"midnightfeverrr"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":12,"author":{"gitId":"midnightfeverrr"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":13,"author":{"gitId":"midnightfeverrr"},"content":"        ModCode moduleCode \u003d null;","lastModifiedDate":"2022-10-21"},{"lineNumber":14,"author":{"gitId":"midnightfeverrr"},"content":"        assertThrows(NullPointerException.class, () -\u003e new UndoneModuleCommand(moduleCode));","lastModifiedDate":"2022-10-21"},{"lineNumber":15,"author":{"gitId":"midnightfeverrr"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":16,"author":{"gitId":"midnightfeverrr"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":17,"author":{"gitId":"midnightfeverrr"},"content":"    @Test","lastModifiedDate":"2022-10-21"},{"lineNumber":18,"author":{"gitId":"midnightfeverrr"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2022-10-21"},{"lineNumber":19,"author":{"gitId":"midnightfeverrr"},"content":"        Model model \u003d null;","lastModifiedDate":"2022-10-21"},{"lineNumber":20,"author":{"gitId":"midnightfeverrr"},"content":"        ModCode moduleCode \u003d new ModCode(\"CS1101S\");","lastModifiedDate":"2022-10-21"},{"lineNumber":21,"author":{"gitId":"midnightfeverrr"},"content":"        UndoneModuleCommand command \u003d new UndoneModuleCommand(moduleCode);","lastModifiedDate":"2022-10-21"},{"lineNumber":22,"author":{"gitId":"midnightfeverrr"},"content":"        assertThrows(NullPointerException.class, () -\u003e command.execute(model));","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"midnightfeverrr"},"content":"    }","lastModifiedDate":"2022-10-21"},{"lineNumber":24,"author":{"gitId":"midnightfeverrr"},"content":"}","lastModifiedDate":"2022-10-21"}],"authorContributionMap":{"midnightfeverrr":24}},{"path":"src/test/java/modtrekt/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":149,"HoJunHao2000":1}},{"path":"src/test/java/modtrekt/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.commands.Command;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"-":36,"HoJunHao2000":3}},{"path":"src/test/java/modtrekt/logic/parser/ModtrektParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"domoberzin"},"content":"import static modtrekt.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"import modtrekt.commons.core.Messages;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"import modtrekt.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"import modtrekt.logic.commands.RemoveTaskCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"domoberzin"},"content":"import modtrekt.testutil.TaskBuilder;","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"domoberzin"},"content":"import modtrekt.testutil.TaskUtil;","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"HoJunHao2000"},"content":"public class ModtrektParserTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"HoJunHao2000"},"content":"    private final ModtrektParser parser \u003d new ModtrektParser();","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"domoberzin"},"content":"    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"domoberzin"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"domoberzin"},"content":"        Task t \u003d new TaskBuilder().build();","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"domoberzin"},"content":"        AddTaskCommand command \u003d (AddTaskCommand) parser.parseCommand(TaskUtil.getAddCommand(t));","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"domoberzin"},"content":"        assertEquals(new AddTaskCommand(t.getDescription(), t.getModule(), null), command);","lastModifiedDate":"2022-10-22"},{"lineNumber":29,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"domoberzin"},"content":"        RemoveTaskCommand command \u003d (RemoveTaskCommand) parser.parseCommand(","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"vvidday"},"content":"                RemoveTaskCommand.COMMAND_WORD + \" -t \" + INDEX_FIRST_TASK.getOneBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"domoberzin"},"content":"        assertEquals(new RemoveTaskCommand(INDEX_FIRST_TASK), command);","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"vvidday"},"content":"        assertThrows(ParseException.class, Messages.MESSAGE_MISSING_COMMAND, ()","lastModifiedDate":"2022-10-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"vvidday"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2022-10-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"vvidday":4,"domoberzin":14,"-":35,"HoJunHao2000":7}},{"path":"src/test/java/modtrekt/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"domoberzin"},"content":"import static modtrekt.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.task.Description;","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"    private static final String VALID_DESC \u003d \"Update User Guide\";","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":34,"author":{"gitId":"domoberzin"},"content":"        assertEquals(INDEX_FIRST_TASK, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":37,"author":{"gitId":"domoberzin"},"content":"        assertEquals(INDEX_FIRST_TASK, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"domoberzin"},"content":"    public void parseDesc_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"domoberzin"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDescription((String) null));","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"domoberzin"},"content":"    public void parseDesc_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"domoberzin"},"content":"        Description expectedDescription \u003d new Description(VALID_DESC);","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"domoberzin"},"content":"        assertEquals(expectedDescription, ParserUtil.parseDescription(VALID_DESC));","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":52,"author":{"gitId":"domoberzin"},"content":"    public void parseDesc_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"domoberzin"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_DESC + WHITESPACE;","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"domoberzin"},"content":"        Description expectedDescription \u003d new Description(VALID_DESC);","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"domoberzin"},"content":"        assertEquals(expectedDescription, ParserUtil.parseDescription(nameWithWhitespace));","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"domoberzin":15,"-":39,"HoJunHao2000":4}},{"path":"src/test/java/modtrekt/logic/parser/RemoveTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"import static modtrekt.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":"import modtrekt.logic.commands.RemoveTaskCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":"public class RemoveTaskCommandParserTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"domoberzin"},"content":"    private RemoveTaskCommandParser parser \u003d new RemoveTaskCommandParser();","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"domoberzin"},"content":"        assertParseSuccess(parser, \"1\", new RemoveTaskCommand(INDEX_FIRST_TASK));","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"domoberzin"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"domoberzin"},"content":"                RemoveTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"domoberzin":7,"-":22,"HoJunHao2000":4}},{"path":"src/test/java/modtrekt/model/ModuleListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.model;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.testutil.TypicalModules.ST2334;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.testutil.TypicalModules.getTypicalModuleList;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"HoJunHao2000"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.Module;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"HoJunHao2000"},"content":"public class ModuleListTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"HoJunHao2000"},"content":"    private final ModuleList moduleList \u003d new ModuleList();","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"HoJunHao2000"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"HoJunHao2000"},"content":"    public void constructor() {","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"HoJunHao2000"},"content":"        assertEquals(Collections.emptyList(), moduleList.getModuleList());","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"HoJunHao2000"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"HoJunHao2000"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(NullPointerException.class, () -\u003e moduleList.resetData(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"HoJunHao2000"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"HoJunHao2000"},"content":"    public void resetData_withValidReadOnlyModuleList_replacesData() {","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"HoJunHao2000"},"content":"        ModuleList newData \u003d getTypicalModuleList();","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"HoJunHao2000"},"content":"        moduleList.resetData(newData);","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"HoJunHao2000"},"content":"        assertEquals(newData, moduleList);","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"HoJunHao2000"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"HoJunHao2000"},"content":"    public void hasModule_nullModule_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(NullPointerException.class, () -\u003e moduleList.hasModule(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"HoJunHao2000"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"HoJunHao2000"},"content":"    public void hasModule_personNotInModuleList_returnsFalse() {","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"HoJunHao2000"},"content":"        assertFalse(moduleList.hasModule(ST2334));","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"HoJunHao2000"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"HoJunHao2000"},"content":"    public void hasModule_personInModuleList_returnsTrue() {","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"HoJunHao2000"},"content":"        moduleList.addModule(ST2334);","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"HoJunHao2000"},"content":"        assertTrue(moduleList.hasModule(ST2334));","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"HoJunHao2000"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"HoJunHao2000"},"content":"    public void getModuleList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e moduleList.getModuleList().remove(0));","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"HoJunHao2000"},"content":"     * A stub ReadOnlyModuleList whose persons list can violate interface constraints.","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"HoJunHao2000"},"content":"    private static class ModuleListStub implements ReadOnlyModuleList {","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"HoJunHao2000"},"content":"        private final ObservableList\u003cModule\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"HoJunHao2000"},"content":"        ModuleListStub(Collection\u003cModule\u003e persons) {","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"HoJunHao2000"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"HoJunHao2000"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"HoJunHao2000"},"content":"        @Override","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"HoJunHao2000"},"content":"        public ObservableList\u003cModule\u003e getModuleList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"HoJunHao2000"},"content":"            return persons;","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"HoJunHao2000"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"HoJunHao2000"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"HoJunHao2000":77}},{"path":"src/test/java/modtrekt/model/ModuleManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.testutil.TypicalModules.MA1521;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.core.GuiSettings;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"public class ModuleManagerTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"domoberzin"},"content":"        assertEquals(new TaskBook(), new TaskBook(modelManager.getTaskBook()));","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"HoJunHao2000"},"content":"        assertEquals(new ModuleList(), new ModuleList(modelManager.getModuleList()));","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"domoberzin"},"content":"        userPrefs.setTaskBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"HoJunHao2000"},"content":"        userPrefs.setModuleListFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"domoberzin"},"content":"        userPrefs.setTaskBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"HoJunHao2000"},"content":"        userPrefs.setModuleListFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"domoberzin"},"content":"    public void setTaskBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"domoberzin"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setTaskBookFilePath(null));","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"domoberzin"},"content":"    public void setTaskBookFilePath_validPath_setsTaskBookFilePath() {","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"domoberzin"},"content":"        modelManager.setTaskBookFilePath(path);","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"domoberzin"},"content":"        assertEquals(path, modelManager.getTaskBookFilePath());","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"domoberzin"},"content":"    //    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"domoberzin"},"content":"    //    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"domoberzin"},"content":"    //        assertThrows(NullPointerException.class, () -\u003e modelManager.hasTask(null));","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"domoberzin"},"content":"    //    }","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"domoberzin"},"content":"    //","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"domoberzin"},"content":"    //    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"domoberzin"},"content":"    //    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-10-08"},{"lineNumber":80,"author":{"gitId":"domoberzin"},"content":"    //        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2022-10-08"},{"lineNumber":81,"author":{"gitId":"domoberzin"},"content":"    //    }","lastModifiedDate":"2022-10-08"},{"lineNumber":82,"author":{"gitId":"domoberzin"},"content":"    //","lastModifiedDate":"2022-10-08"},{"lineNumber":83,"author":{"gitId":"domoberzin"},"content":"    //    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":84,"author":{"gitId":"domoberzin"},"content":"    //    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"domoberzin"},"content":"    //        modelManager.addPerson(ALICE);","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"domoberzin"},"content":"    //        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2022-10-08"},{"lineNumber":87,"author":{"gitId":"domoberzin"},"content":"    //    }","lastModifiedDate":"2022-10-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"domoberzin"},"content":"    //    @Test","lastModifiedDate":"2022-10-08"},{"lineNumber":90,"author":{"gitId":"domoberzin"},"content":"    //    public void equals() {","lastModifiedDate":"2022-10-08"},{"lineNumber":91,"author":{"gitId":"domoberzin"},"content":"    //        TaskBook addressBook \u003d new AddressBookBuilder().withTas (task1).withTask(BENSON).build();","lastModifiedDate":"2022-10-08"},{"lineNumber":92,"author":{"gitId":"domoberzin"},"content":"    //        TaskBook differentAddressBook \u003d new TaskBook();","lastModifiedDate":"2022-10-08"},{"lineNumber":93,"author":{"gitId":"domoberzin"},"content":"    //        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-08"},{"lineNumber":94,"author":{"gitId":"domoberzin"},"content":"    //","lastModifiedDate":"2022-10-08"},{"lineNumber":95,"author":{"gitId":"domoberzin"},"content":"    //        // same values -\u003e returns true","lastModifiedDate":"2022-10-08"},{"lineNumber":96,"author":{"gitId":"domoberzin"},"content":"    //        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2022-10-08"},{"lineNumber":97,"author":{"gitId":"domoberzin"},"content":"    //        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2022-10-08"},{"lineNumber":98,"author":{"gitId":"domoberzin"},"content":"    //        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2022-10-08"},{"lineNumber":99,"author":{"gitId":"domoberzin"},"content":"    //","lastModifiedDate":"2022-10-08"},{"lineNumber":100,"author":{"gitId":"domoberzin"},"content":"    //        // same object -\u003e returns true","lastModifiedDate":"2022-10-08"},{"lineNumber":101,"author":{"gitId":"domoberzin"},"content":"    //        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2022-10-08"},{"lineNumber":102,"author":{"gitId":"domoberzin"},"content":"    //","lastModifiedDate":"2022-10-08"},{"lineNumber":103,"author":{"gitId":"domoberzin"},"content":"    //        // null -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":104,"author":{"gitId":"domoberzin"},"content":"    //        assertFalse(modelManager.equals(null));","lastModifiedDate":"2022-10-08"},{"lineNumber":105,"author":{"gitId":"domoberzin"},"content":"    //","lastModifiedDate":"2022-10-08"},{"lineNumber":106,"author":{"gitId":"domoberzin"},"content":"    //        // different types -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":107,"author":{"gitId":"domoberzin"},"content":"    //        assertFalse(modelManager.equals(5));","lastModifiedDate":"2022-10-08"},{"lineNumber":108,"author":{"gitId":"domoberzin"},"content":"    //","lastModifiedDate":"2022-10-08"},{"lineNumber":109,"author":{"gitId":"domoberzin"},"content":"    //        // different addressBook -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":110,"author":{"gitId":"domoberzin"},"content":"    //        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2022-10-08"},{"lineNumber":111,"author":{"gitId":"domoberzin"},"content":"    //","lastModifiedDate":"2022-10-08"},{"lineNumber":112,"author":{"gitId":"domoberzin"},"content":"    //        // different filteredList -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":113,"author":{"gitId":"domoberzin"},"content":"    //        String[] keywords \u003d task1.getName().description.split(\"\\\\s+\");","lastModifiedDate":"2022-10-08"},{"lineNumber":114,"author":{"gitId":"domoberzin"},"content":"    //        modelManager.updateFilteredTaskList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-10-08"},{"lineNumber":115,"author":{"gitId":"domoberzin"},"content":"    //        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2022-10-08"},{"lineNumber":116,"author":{"gitId":"domoberzin"},"content":"    //","lastModifiedDate":"2022-10-08"},{"lineNumber":117,"author":{"gitId":"domoberzin"},"content":"    //        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2022-10-08"},{"lineNumber":118,"author":{"gitId":"domoberzin"},"content":"    //        modelManager.updateFilteredTaskList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2022-10-08"},{"lineNumber":119,"author":{"gitId":"domoberzin"},"content":"    //","lastModifiedDate":"2022-10-08"},{"lineNumber":120,"author":{"gitId":"domoberzin"},"content":"    //        // different userPrefs -\u003e returns false","lastModifiedDate":"2022-10-08"},{"lineNumber":121,"author":{"gitId":"domoberzin"},"content":"    //        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-08"},{"lineNumber":122,"author":{"gitId":"domoberzin"},"content":"    //        differentUserPrefs.setTaskBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-10-08"},{"lineNumber":123,"author":{"gitId":"domoberzin"},"content":"    //        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2022-10-08"},{"lineNumber":124,"author":{"gitId":"domoberzin"},"content":"    //    }","lastModifiedDate":"2022-10-08"},{"lineNumber":125,"author":{"gitId":"HoJunHao2000"},"content":"    public void setModuleListFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setModuleListFilePath(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"HoJunHao2000"},"content":"    public void setModuleListFilePath_validPath_setsModuleListFilePath() {","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"HoJunHao2000"},"content":"        modelManager.setModuleListFilePath(path);","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"HoJunHao2000"},"content":"        assertEquals(path, modelManager.getModuleListFilePath());","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"HoJunHao2000"},"content":"    public void hasModule_nullModule_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":138,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasModule(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"HoJunHao2000"},"content":"    public void hasModule_personNotInModuleList_returnsFalse() {","lastModifiedDate":"2022-10-09"},{"lineNumber":143,"author":{"gitId":"HoJunHao2000"},"content":"        assertFalse(modelManager.hasModule(MA1521));","lastModifiedDate":"2022-10-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"HoJunHao2000"},"content":"    public void hasModule_personInModuleList_returnsTrue() {","lastModifiedDate":"2022-10-09"},{"lineNumber":148,"author":{"gitId":"HoJunHao2000"},"content":"        modelManager.addModule(MA1521);","lastModifiedDate":"2022-10-09"},{"lineNumber":149,"author":{"gitId":"HoJunHao2000"},"content":"        assertTrue(modelManager.hasModule(MA1521));","lastModifiedDate":"2022-10-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":153,"author":{"gitId":"HoJunHao2000"},"content":"    public void getFilteredModuleList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":154,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredModuleList().remove(0));","lastModifiedDate":"2022-10-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"vvidday"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":160,"author":{"gitId":"HoJunHao2000"},"content":"        ModuleList addressBook \u003d new ModuleListBuilder().withModule(MA1521).withModule(MA2001).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":161,"author":{"gitId":"HoJunHao2000"},"content":"        ModuleList differentModuleList \u003d new ModuleList();","lastModifiedDate":"2022-10-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"vvidday"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2022-10-09"},{"lineNumber":166,"author":{"gitId":"HoJunHao2000"},"content":"        ModuleManager modelManagerCopy \u003d new ModuleManager(addressBook, userPrefs);","lastModifiedDate":"2022-10-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"HoJunHao2000"},"content":"        assertFalse(modelManager.equals(new ModuleManager(differentModuleList, userPrefs)));","lastModifiedDate":"2022-10-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":182,"author":{"gitId":"HoJunHao2000"},"content":"        modelManager.updateFilteredModuleList(PREDICATE_SHOW_ALL_MODULES);","lastModifiedDate":"2022-10-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"HoJunHao2000"},"content":"        differentUserPrefs.setModuleListFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":187,"author":{"gitId":"HoJunHao2000"},"content":"        assertFalse(modelManager.equals(new ModuleManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2022-10-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"vvidday":6,"domoberzin":59,"-":96,"HoJunHao2000":29}},{"path":"src/test/java/modtrekt/model/TaskAndDeadlineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"package modtrekt.model;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Deadline;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Description;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"import modtrekt.testutil.TaskBuilder;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"public class TaskAndDeadlineTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"    public void prioritizeTask_isTask_returnsTask() {","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"        Task newTask \u003d task.setPriority(Task.Priority.HIGH);","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":"        assertTrue(newTask instanceof Task);","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"    public void prioritizeTask_isDeadline_returnsDeadline() {","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"        Task deadline \u003d new Deadline(new Description(\"desc\"), new ModCode(\"CS2102\"),","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":"                LocalDate.of(2022, 04, 12), false,","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"                Task.Priority.NONE);","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"        Task newDeadline \u003d deadline.setPriority(Task.Priority.HIGH);","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"vvidday"},"content":"        assertTrue(newDeadline instanceof Deadline);","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"vvidday"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"vvidday":32}},{"path":"src/test/java/modtrekt/model/TaskOrderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"package modtrekt.model;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"import java.util.List;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":"import modtrekt.testutil.DeadlineBuilder;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"import modtrekt.testutil.TaskBuilder;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"public class TaskOrderTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"    // Tasks","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"    private final Task none \u003d new TaskBuilder().build();","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"    private final Task noneLexiAfter \u003d new TaskBuilder().withDescription(\"z\").build();","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"    private final Task low \u003d new TaskBuilder().withPriority(Task.Priority.LOW).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":"    private final Task medium \u003d new TaskBuilder().withPriority(Task.Priority.MEDIUM).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"    private final Task high \u003d new TaskBuilder().withPriority(Task.Priority.HIGH).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"    private final Task noneArch \u003d new TaskBuilder().withIsArchived(true).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"    private final Task lowArch \u003d new TaskBuilder().withPriority(Task.Priority.LOW)","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"            .withIsArchived(true).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"    private final Task mediumArch \u003d new TaskBuilder().withPriority(Task.Priority.MEDIUM)","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":"            .withIsArchived(true).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"    private final Task highArch \u003d new TaskBuilder().withPriority(Task.Priority.HIGH)","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"            .withIsArchived(true).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"vvidday"},"content":"    // Deadlines","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"vvidday"},"content":"    private final Task dNone \u003d new DeadlineBuilder().build();","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"vvidday"},"content":"    private final Task dNoneLexiAfter \u003d new DeadlineBuilder().withDescription(\"z\").build();","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"vvidday"},"content":"    private final Task dLow \u003d new DeadlineBuilder().withPriority(Task.Priority.LOW).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"vvidday"},"content":"    private final Task dMed \u003d new DeadlineBuilder().withPriority(Task.Priority.MEDIUM).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"vvidday"},"content":"    private final Task dHigh \u003d new DeadlineBuilder().withPriority(Task.Priority.HIGH).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"vvidday"},"content":"    private final Task dNoneArch \u003d new DeadlineBuilder().withIsArchived(true).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"vvidday"},"content":"    private final Task dLowArch \u003d new DeadlineBuilder().withPriority(Task.Priority.LOW)","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"vvidday"},"content":"            .withIsArchived(true).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"vvidday"},"content":"    private final Task dMedArch \u003d new DeadlineBuilder().withPriority(Task.Priority.MEDIUM)","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"vvidday"},"content":"            .withIsArchived(true).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"vvidday"},"content":"    private final Task dHighArch \u003d new DeadlineBuilder().withPriority(Task.Priority.HIGH)","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"vvidday"},"content":"            .withIsArchived(true).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"vvidday"},"content":"    // Different dates","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"vvidday"},"content":"    private final Task dNoneLater \u003d new DeadlineBuilder().withDueDate(LocalDate.of(2023, 01, 01)).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"vvidday"},"content":"    private final Task dLowLater \u003d new DeadlineBuilder().withDueDate(LocalDate.of(2023, 01, 01))","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"vvidday"},"content":"            .withPriority(Task.Priority.LOW).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"vvidday"},"content":"    private final Task dMedLater \u003d new DeadlineBuilder().withDueDate(LocalDate.of(2023, 01, 01))","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"vvidday"},"content":"            .withPriority(Task.Priority.MEDIUM).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"vvidday"},"content":"    private final Task dHighLater \u003d new DeadlineBuilder().withDueDate(LocalDate.of(2023, 01, 01))","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"vvidday"},"content":"            .withPriority(Task.Priority.HIGH).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"vvidday"},"content":"    private final Task dNoneArchLater \u003d new DeadlineBuilder().withDueDate(LocalDate.of(2023, 01, 01))","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"vvidday"},"content":"            .withIsArchived(true).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"vvidday"},"content":"    private final Task dLowArchLater \u003d new DeadlineBuilder().withDueDate(LocalDate.of(2023, 01, 01))","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"vvidday"},"content":"            .withIsArchived(true).withPriority(Task.Priority.LOW).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"vvidday"},"content":"    private final Task dMedArchLater \u003d new DeadlineBuilder().withDueDate(LocalDate.of(2023, 01, 01))","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"vvidday"},"content":"            .withIsArchived(true).withPriority(Task.Priority.MEDIUM).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"vvidday"},"content":"    private final Task dHighArchLater \u003d new DeadlineBuilder().withDueDate(LocalDate.of(2023, 01, 01))","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"vvidday"},"content":"            .withIsArchived(true).withPriority(Task.Priority.HIGH).build();","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"vvidday"},"content":"    List\u003cTask\u003e listBuilder(Task ...tasks) {","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"vvidday"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"vvidday"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"vvidday"},"content":"            taskList.add(task);","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"vvidday"},"content":"        taskList.sort(null);","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"vvidday"},"content":"        return taskList;","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"vvidday"},"content":"    boolean isOrderedCorrectly(List\u003cTask\u003e tasks, Task ...correctOrder) {","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"vvidday"},"content":"        for (int i \u003d 0; i \u003c correctOrder.length; i++) {","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"vvidday"},"content":"            if (!(tasks.get(i).equals(correctOrder[i]))) {","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"vvidday"},"content":"                return false;","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"vvidday"},"content":"            }","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"vvidday"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"vvidday"},"content":"        return true;","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"vvidday"},"content":"    public void order_onlyTasks_byPriority() {","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"vvidday"},"content":"        List\u003cTask\u003e taskList \u003d listBuilder(none, medium, low, high);","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"vvidday"},"content":"        assertTrue(isOrderedCorrectly(taskList, high, medium, low, none));","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":86,"author":{"gitId":"vvidday"},"content":"    public void order_tasksDeadlines_priorityFirstThenDeadlines() {","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"vvidday"},"content":"        List\u003cTask\u003e taskList \u003d listBuilder(medium, high, dLow, low, dMed);","lastModifiedDate":"2022-10-25"},{"lineNumber":88,"author":{"gitId":"vvidday"},"content":"        assertTrue(isOrderedCorrectly(taskList, high, dMed, medium, dLow, low));","lastModifiedDate":"2022-10-25"},{"lineNumber":89,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":92,"author":{"gitId":"vvidday"},"content":"    public void order_tasksDeadlines_archivedAlwaysOnBottom() {","lastModifiedDate":"2022-10-25"},{"lineNumber":93,"author":{"gitId":"vvidday"},"content":"        List\u003cTask\u003e taskList \u003d listBuilder(dHighArch, highArch, mediumArch, none, dNone);","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"vvidday"},"content":"        assertTrue(isOrderedCorrectly(taskList, dNone, none, dHighArch, highArch, mediumArch));","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":96,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":97,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"vvidday"},"content":"    public void order_tasksDeadlines_deadlinesByEarlierDate() {","lastModifiedDate":"2022-10-25"},{"lineNumber":99,"author":{"gitId":"vvidday"},"content":"        List\u003cTask\u003e taskList \u003d listBuilder(dMedLater, dMed, medium, dHighArchLater, dHighArch);","lastModifiedDate":"2022-10-25"},{"lineNumber":100,"author":{"gitId":"vvidday"},"content":"        assertTrue(isOrderedCorrectly(taskList,","lastModifiedDate":"2022-10-25"},{"lineNumber":101,"author":{"gitId":"vvidday"},"content":"                dMed, dMedLater, medium, dHighArch, dHighArchLater));","lastModifiedDate":"2022-10-25"},{"lineNumber":102,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":103,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":104,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":105,"author":{"gitId":"vvidday"},"content":"    public void order_tasksDeadlines_lexigraphicalTiebreaks() {","lastModifiedDate":"2022-10-25"},{"lineNumber":106,"author":{"gitId":"vvidday"},"content":"        List\u003cTask\u003e taskList \u003d listBuilder(none, noneLexiAfter, dNoneLexiAfter, dNone);","lastModifiedDate":"2022-10-25"},{"lineNumber":107,"author":{"gitId":"vvidday"},"content":"        assertTrue(isOrderedCorrectly(taskList, dNone, dNoneLexiAfter, none, noneLexiAfter));","lastModifiedDate":"2022-10-25"},{"lineNumber":108,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":109,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":110,"author":{"gitId":"vvidday"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":111,"author":{"gitId":"vvidday"},"content":"    public void order_all_archiveThenPriorityThenDeadlinesThenDuedateThenLexi() {","lastModifiedDate":"2022-10-25"},{"lineNumber":112,"author":{"gitId":"vvidday"},"content":"        List\u003cTask\u003e taskList \u003d listBuilder(none, noneLexiAfter, low, medium, high, noneArch,","lastModifiedDate":"2022-10-25"},{"lineNumber":113,"author":{"gitId":"vvidday"},"content":"                lowArch, mediumArch, highArch, dNone, dNoneLexiAfter, dLow, dMed, dHigh,","lastModifiedDate":"2022-10-25"},{"lineNumber":114,"author":{"gitId":"vvidday"},"content":"                dNoneArch, dLowArch, dMedArch, dHighArch, dNoneLater, dLowLater, dMedLater,","lastModifiedDate":"2022-10-25"},{"lineNumber":115,"author":{"gitId":"vvidday"},"content":"                dHighLater, dNoneArchLater, dLowArchLater, dMedArchLater, dHighArchLater);","lastModifiedDate":"2022-10-25"},{"lineNumber":116,"author":{"gitId":"vvidday"},"content":"        assertTrue(isOrderedCorrectly(taskList,","lastModifiedDate":"2022-10-25"},{"lineNumber":117,"author":{"gitId":"vvidday"},"content":"                // Unarchived deadlines high","lastModifiedDate":"2022-10-25"},{"lineNumber":118,"author":{"gitId":"vvidday"},"content":"                dHigh, dHighLater,","lastModifiedDate":"2022-10-25"},{"lineNumber":119,"author":{"gitId":"vvidday"},"content":"                // Unarchived tasks high","lastModifiedDate":"2022-10-25"},{"lineNumber":120,"author":{"gitId":"vvidday"},"content":"                high,","lastModifiedDate":"2022-10-25"},{"lineNumber":121,"author":{"gitId":"vvidday"},"content":"                // Unarchived deadlines medium","lastModifiedDate":"2022-10-25"},{"lineNumber":122,"author":{"gitId":"vvidday"},"content":"                dMed, dMedLater,","lastModifiedDate":"2022-10-25"},{"lineNumber":123,"author":{"gitId":"vvidday"},"content":"                // Unarchived tasks medium","lastModifiedDate":"2022-10-25"},{"lineNumber":124,"author":{"gitId":"vvidday"},"content":"                medium,","lastModifiedDate":"2022-10-25"},{"lineNumber":125,"author":{"gitId":"vvidday"},"content":"                // Unarchived deadlines low","lastModifiedDate":"2022-10-25"},{"lineNumber":126,"author":{"gitId":"vvidday"},"content":"                dLow, dLowLater,","lastModifiedDate":"2022-10-25"},{"lineNumber":127,"author":{"gitId":"vvidday"},"content":"                // Unarchived tasks low","lastModifiedDate":"2022-10-25"},{"lineNumber":128,"author":{"gitId":"vvidday"},"content":"                low,","lastModifiedDate":"2022-10-25"},{"lineNumber":129,"author":{"gitId":"vvidday"},"content":"                // Unarchived deadlines none","lastModifiedDate":"2022-10-25"},{"lineNumber":130,"author":{"gitId":"vvidday"},"content":"                dNone, dNoneLexiAfter, dNoneLater,","lastModifiedDate":"2022-10-25"},{"lineNumber":131,"author":{"gitId":"vvidday"},"content":"                // Unarchived tasks none","lastModifiedDate":"2022-10-25"},{"lineNumber":132,"author":{"gitId":"vvidday"},"content":"                none, noneLexiAfter,","lastModifiedDate":"2022-10-25"},{"lineNumber":133,"author":{"gitId":"vvidday"},"content":"                // Archived deadlines high","lastModifiedDate":"2022-10-25"},{"lineNumber":134,"author":{"gitId":"vvidday"},"content":"                dHighArch, dHighArchLater,","lastModifiedDate":"2022-10-25"},{"lineNumber":135,"author":{"gitId":"vvidday"},"content":"                // Archived tasks high","lastModifiedDate":"2022-10-25"},{"lineNumber":136,"author":{"gitId":"vvidday"},"content":"                highArch,","lastModifiedDate":"2022-10-25"},{"lineNumber":137,"author":{"gitId":"vvidday"},"content":"                // Archived deadlines medium","lastModifiedDate":"2022-10-25"},{"lineNumber":138,"author":{"gitId":"vvidday"},"content":"                dMedArch, dMedArchLater,","lastModifiedDate":"2022-10-25"},{"lineNumber":139,"author":{"gitId":"vvidday"},"content":"                // Archived tasks medium","lastModifiedDate":"2022-10-25"},{"lineNumber":140,"author":{"gitId":"vvidday"},"content":"                mediumArch,","lastModifiedDate":"2022-10-25"},{"lineNumber":141,"author":{"gitId":"vvidday"},"content":"                // Archived deadlines low","lastModifiedDate":"2022-10-25"},{"lineNumber":142,"author":{"gitId":"vvidday"},"content":"                dLowArch, dLowArchLater,","lastModifiedDate":"2022-10-25"},{"lineNumber":143,"author":{"gitId":"vvidday"},"content":"                // Unarchived tasks low","lastModifiedDate":"2022-10-25"},{"lineNumber":144,"author":{"gitId":"vvidday"},"content":"                lowArch,","lastModifiedDate":"2022-10-25"},{"lineNumber":145,"author":{"gitId":"vvidday"},"content":"                // Unarchived deadlines none","lastModifiedDate":"2022-10-25"},{"lineNumber":146,"author":{"gitId":"vvidday"},"content":"                dNoneArch, dNoneArchLater,","lastModifiedDate":"2022-10-25"},{"lineNumber":147,"author":{"gitId":"vvidday"},"content":"                // Unarchived tasks none","lastModifiedDate":"2022-10-25"},{"lineNumber":148,"author":{"gitId":"vvidday"},"content":"                noneArch","lastModifiedDate":"2022-10-25"},{"lineNumber":149,"author":{"gitId":"vvidday"},"content":"                ));","lastModifiedDate":"2022-10-25"},{"lineNumber":150,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":151,"author":{"gitId":"vvidday"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"vvidday":151}},{"path":"src/test/java/modtrekt/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.model;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"    public void setModuleListFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"domoberzin"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setTaskBookFilePath(null));","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"HoJunHao2000"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setModuleListFilePath(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"domoberzin":1,"-":17,"HoJunHao2000":4}},{"path":"src/test/java/modtrekt/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.testutil;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"-":33,"HoJunHao2000":1}},{"path":"src/test/java/modtrekt/testutil/DeadlineBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vvidday"},"content":"package modtrekt.testutil;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"vvidday"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Deadline;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Description;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"vvidday"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":" * A utility class to help with building Deadline objects.","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"vvidday"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"public class DeadlineBuilder {","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"vvidday"},"content":"    public static final String DEFAULT_DESC \u003d \"Complete Assignment\";","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"vvidday"},"content":"    public static final String DEFAULT_MOD_CODE \u003d \"CS2103T\";","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"vvidday"},"content":"    public static final LocalDate DEFAULT_DUE_DATE \u003d LocalDate.of(2022, 01, 01);","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"vvidday"},"content":"    public static final boolean DEFAULT_ARCHIVE_STATUS \u003d false;","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"    public static final Task.Priority DEFAULT_PRIORITY \u003d Task.Priority.NONE;","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"vvidday"},"content":"    private Description description;","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"vvidday"},"content":"    private ModCode modCode;","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"vvidday"},"content":"    private LocalDate dueDate;","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"vvidday"},"content":"    private boolean isArchived;","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"vvidday"},"content":"    private Task.Priority priority;","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"     * Creates a {@code DeadlineBuilder} with the default details.","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"vvidday"},"content":"    public DeadlineBuilder() {","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"vvidday"},"content":"        description \u003d new Description(DEFAULT_DESC);","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"vvidday"},"content":"        dueDate \u003d DEFAULT_DUE_DATE;","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"vvidday"},"content":"        modCode \u003d new ModCode(DEFAULT_MOD_CODE);","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"vvidday"},"content":"        isArchived \u003d DEFAULT_ARCHIVE_STATUS;","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"vvidday"},"content":"        priority \u003d DEFAULT_PRIORITY;","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"vvidday"},"content":"     * Sets the {@code Description} of the {@code Deadline} that we are building.","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"vvidday"},"content":"    public DeadlineBuilder withDescription(String desc) {","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"vvidday"},"content":"        this.description \u003d new Description(desc);","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"vvidday"},"content":"        return this;","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"vvidday"},"content":"     * Sets the {@code ModCode} of the {@code Deadline} that we are building.","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"vvidday"},"content":"    public DeadlineBuilder withModCode(String code) {","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"vvidday"},"content":"        this.modCode \u003d new ModCode(code);","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"vvidday"},"content":"        return this;","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"vvidday"},"content":"     * Sets the {@code dueDate} of the {@code Deadline} that we are building.","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"vvidday"},"content":"    public DeadlineBuilder withDueDate(LocalDate dueDate) {","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"vvidday"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"vvidday"},"content":"        return this;","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"vvidday"},"content":"     * Sets the {@code isArchived} of the {@code Deadline} that we are building.","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"vvidday"},"content":"    public DeadlineBuilder withIsArchived(boolean isArchived) {","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"vvidday"},"content":"        this.isArchived \u003d isArchived;","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"vvidday"},"content":"        return this;","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"vvidday"},"content":"     * Sets the {@code priority} of the {@code Deadline} that we are building.","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"vvidday"},"content":"    public DeadlineBuilder withPriority(Task.Priority priority) {","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"vvidday"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"vvidday"},"content":"        return this;","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"vvidday"},"content":"    public Deadline build() {","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"vvidday"},"content":"        return new Deadline(description, modCode, dueDate, isArchived, priority);","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"vvidday"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"vvidday":79}},{"path":"src/test/java/modtrekt/testutil/ModuleBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.testutil;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.ModCredit;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.ModName;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.ModTaskCount;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.Module;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":" * A utility class to help with building Module objects.","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"public class ModuleBuilder {","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"    public static final String DEFAULT_NAME \u003d \"Discrete Structures\";","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"    public static final String DEFAULT_CODE \u003d \"CS1231S\";","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"    public static final String DEFAULT_CREDIT \u003d \"4\";","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":"    private ModName name;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"HoJunHao2000"},"content":"    private ModCode code;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"HoJunHao2000"},"content":"    private ModCredit credit;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"HoJunHao2000"},"content":"     * Creates a {@code ModuleBuilder} with the default details.","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"HoJunHao2000"},"content":"    public ModuleBuilder() {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"HoJunHao2000"},"content":"        name \u003d new ModName(DEFAULT_NAME);","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"HoJunHao2000"},"content":"        code \u003d new ModCode(DEFAULT_CODE);","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"HoJunHao2000"},"content":"        credit \u003d new ModCredit(DEFAULT_CREDIT);","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"HoJunHao2000"},"content":"     * Initializes the ModuleBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"HoJunHao2000"},"content":"    public ModuleBuilder(Module moduleToCopy) {","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"HoJunHao2000"},"content":"        name \u003d moduleToCopy.getName();","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"HoJunHao2000"},"content":"        code \u003d moduleToCopy.getCode();","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"HoJunHao2000"},"content":"        credit \u003d moduleToCopy.getCredits();","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"HoJunHao2000"},"content":"     * Sets the {@code ModName} of the {@code Module} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"HoJunHao2000"},"content":"    public ModuleBuilder withName(String name) {","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"HoJunHao2000"},"content":"        this.name \u003d new ModName(name);","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"HoJunHao2000"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"HoJunHao2000"},"content":"     * Sets the {@code ModCode} of the {@code Module} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"HoJunHao2000"},"content":"    public ModuleBuilder withCode(String code) {","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"HoJunHao2000"},"content":"        this.code \u003d new ModCode(code);","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"HoJunHao2000"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"HoJunHao2000"},"content":"     * Sets the {@code ModCredit} of the {@code Module} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"HoJunHao2000"},"content":"    public ModuleBuilder withCredit(String credit) {","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"HoJunHao2000"},"content":"        this.credit \u003d new ModCredit(credit);","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"HoJunHao2000"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"HoJunHao2000"},"content":"    public Module build() {","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"HoJunHao2000"},"content":"        return new Module(code, name, credit, new ModTaskCount(\"0\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"HoJunHao2000"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"HoJunHao2000":69}},{"path":"src/test/java/modtrekt/testutil/ModuleListBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.testutil;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.ModuleList;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.Module;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"HoJunHao2000"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":" *     {@code ModuleList ab \u003d new ModuleListBuilder().withModule(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":"public class ModuleListBuilder {","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"    private ModuleList moduleList;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"    public ModuleListBuilder() {","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"        moduleList \u003d new ModuleList();","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"HoJunHao2000"},"content":"    public ModuleListBuilder(ModuleList addressBook) {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"HoJunHao2000"},"content":"        this.moduleList \u003d addressBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"HoJunHao2000"},"content":"     * Adds a new {@code Module} to the {@code ModuleList} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"HoJunHao2000"},"content":"    public ModuleListBuilder withModule(Module module) {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"HoJunHao2000"},"content":"        moduleList.addModule(module);","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"HoJunHao2000"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"HoJunHao2000"},"content":"    public ModuleList build() {","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"HoJunHao2000"},"content":"        return moduleList;","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"HoJunHao2000"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"HoJunHao2000":34}},{"path":"src/test/java/modtrekt/testutil/ModuleUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.testutil;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.logic.parser.CliSyntax.PREFIX_MOD_CODE;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.logic.parser.CliSyntax.PREFIX_MOD_CREDIT;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.logic.parser.CliSyntax.PREFIX_MOD_NAME;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"import modtrekt.logic.commands.AddModuleCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.Module;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":" * A utility class for Module.","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"public class ModuleUtil {","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":"    public static String getAddCommand(Module person) {","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":"        return AddModuleCommand.COMMAND_WORD + \" \" + getModuleDetails(person);","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"HoJunHao2000"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"HoJunHao2000"},"content":"    public static String getModuleDetails(Module module) {","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"HoJunHao2000"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"jontmy"},"content":"        sb.append(PREFIX_MOD_NAME + module.getName().getFullName() + \" \");","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"jontmy"},"content":"        sb.append(PREFIX_MOD_CODE + module.getCode().getValue() + \" \");","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"jontmy"},"content":"        sb.append(PREFIX_MOD_CREDIT + module.getCredits().getValue() + \" \");","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"HoJunHao2000"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"HoJunHao2000"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"domoberzin":2,"jontmy":3,"HoJunHao2000":28}},{"path":"src/test/java/modtrekt/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.testutil;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"domoberzin"},"content":"            + \"  \\\"description\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"domoberzin"},"content":"    private static final String DESC_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"domoberzin"},"content":"    private String description;","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"domoberzin"},"content":"    public static String getDescTestValue() {","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"domoberzin"},"content":"        return DESC_TEST_VALUE;","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"domoberzin"},"content":"        description \u003d getDescTestValue();","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"domoberzin"},"content":"    public String getDescription() {","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"domoberzin"},"content":"        return description;","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"domoberzin":8,"-":63,"HoJunHao2000":1}},{"path":"src/test/java/modtrekt/testutil/TaskBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"domoberzin"},"content":"package modtrekt.testutil;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.TaskBook;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":" * A utility class to help with building TaskBook objects.","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":" *     {@code TaskBook ab \u003d new TaskBookBuilder().withTask(\"Do something\").build();}","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"public class TaskBookBuilder {","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"domoberzin"},"content":"    private TaskBook taskBook;","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"domoberzin"},"content":"    public TaskBookBuilder() {","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"        taskBook \u003d new TaskBook();","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":"    public TaskBookBuilder(TaskBook taskBook) {","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"domoberzin"},"content":"        this.taskBook \u003d taskBook;","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"domoberzin"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"domoberzin"},"content":"    public TaskBookBuilder withTask(Task t) {","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"domoberzin"},"content":"        taskBook.addTask(t);","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"domoberzin"},"content":"        return this;","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"domoberzin"},"content":"    public TaskBook build() {","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"domoberzin"},"content":"        return taskBook;","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"domoberzin"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"domoberzin":34}},{"path":"src/test/java/modtrekt/testutil/TaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"domoberzin"},"content":"package modtrekt.testutil;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.module.ModCode;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.task.Description;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"domoberzin"},"content":" * A utility class to help with building Task objects.","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":"public class TaskBuilder {","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"    public static final String DEFAULT_DESC \u003d \"Complete Assignment\";","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"    public static final String DEFAULT_MOD_CODE \u003d \"CS2103T\";","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"vvidday"},"content":"    public static final Task.Priority DEFAULT_PRIORITY \u003d Task.Priority.NONE;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"domoberzin"},"content":"    private Description description;","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"domoberzin"},"content":"    private ModCode modCode;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"jontmy"},"content":"    private boolean isArchived;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"vvidday"},"content":"    private Task.Priority priority;","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"domoberzin"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"domoberzin"},"content":"    public TaskBuilder() {","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"domoberzin"},"content":"        description \u003d new Description(DEFAULT_DESC);","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"domoberzin"},"content":"        modCode \u003d new ModCode(DEFAULT_MOD_CODE);","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"vvidday"},"content":"        priority \u003d DEFAULT_PRIORITY;","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"domoberzin"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"domoberzin"},"content":"    public TaskBuilder(Task taskToCopy) {","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"domoberzin"},"content":"        description \u003d taskToCopy.getDescription();","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"domoberzin"},"content":"     * Sets the {@code Description} of the {@code Task} that we are building.","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"domoberzin"},"content":"    public TaskBuilder withDescription(String desc) {","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"domoberzin"},"content":"        this.description \u003d new Description(desc);","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"domoberzin"},"content":"        return this;","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"domoberzin"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"domoberzin"},"content":"     * Sets the {@code ModCode} of the {@code Task} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"domoberzin"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"domoberzin"},"content":"    public TaskBuilder withModCode(String code) {","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"domoberzin"},"content":"        this.modCode \u003d new ModCode(code);","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"domoberzin"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"jontmy"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"jontmy"},"content":"     * Sets the {@code isArchived} of the {@code Task} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"jontmy"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"jontmy"},"content":"    public TaskBuilder withIsArchived(boolean isArchived) {","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"jontmy"},"content":"        this.isArchived \u003d isArchived;","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"jontmy"},"content":"        return this;","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"jontmy"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"domoberzin"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"vvidday"},"content":"     * Sets the {@code priority} of the {@code Task} that we are building.","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"vvidday"},"content":"    public TaskBuilder withPriority(Task.Priority priority) {","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"vvidday"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"vvidday"},"content":"        return this;","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"domoberzin"},"content":"    public Task build() {","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"vvidday"},"content":"        return new Task(description, modCode, isArchived, priority);","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"domoberzin"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"domoberzin"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"vvidday":12,"domoberzin":51,"jontmy":8}},{"path":"src/test/java/modtrekt/testutil/TaskUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.testutil;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"domoberzin"},"content":"import modtrekt.logic.commands.AddTaskCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"domoberzin"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"domoberzin"},"content":" * A utility class for Task.","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":"public class TaskUtil {","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"domoberzin"},"content":"     * Returns an add command string for adding the {@code task}.","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"domoberzin"},"content":"    public static String getAddCommand(Task t) {","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"domoberzin"},"content":"        return AddTaskCommand.COMMAND_WORD + \" \" + getTaskDetails(t);","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":19,"author":{"gitId":"domoberzin"},"content":"     * Returns the part of command string for the given {@code task}\u0027s details.","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":21,"author":{"gitId":"domoberzin"},"content":"    public static String getTaskDetails(Task t) {","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"domoberzin"},"content":"        return \"\u0027\" + t.getDescription().description + \"\u0027\" + \" -c \" + t.getModule()","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"jontmy"},"content":"                .toString();","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"domoberzin":10,"jontmy":1,"-":13,"HoJunHao2000":1}},{"path":"src/test/java/modtrekt/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.testutil;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.core.index.Index;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.Module;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"vvidday"},"content":"import modtrekt.model.task.Task;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"domoberzin"},"content":"     * Returns the middle index of the task in the {@code model}\u0027s task list.","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"vvidday"},"content":"    public static Index getMidIndexTasks(Model model) {","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"domoberzin"},"content":"        return Index.fromOneBased(model.getFilteredTaskList().size() / 2);","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"vvidday"},"content":"     * Returns the middle index of the task in the {@code model}\u0027s module list.","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"vvidday"},"content":"    public static Index getMidIndexModules(Model model) {","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"vvidday"},"content":"        return Index.fromOneBased(model.getFilteredModuleList().size() / 2);","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"domoberzin"},"content":"     * Returns the last index of the task in the {@code model}\u0027s task list.","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"vvidday"},"content":"    public static Index getLastIndexTasks(Model model) {","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"domoberzin"},"content":"        return Index.fromOneBased(model.getFilteredTaskList().size());","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"vvidday"},"content":"     * Returns the last index of the task in the {@code model}\u0027s module list.","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"vvidday"},"content":"    public static Index getLastIndexModules(Model model) {","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"HoJunHao2000"},"content":"        return Index.fromOneBased(model.getFilteredModuleList().size());","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":66,"author":{"gitId":"vvidday"},"content":"    public static Task getTask(Model model, Index index) {","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"domoberzin"},"content":"        return model.getFilteredTaskList().get(index.getZeroBased());","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"vvidday"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"vvidday"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"vvidday"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"vvidday"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"vvidday"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"HoJunHao2000"},"content":"    public static Module getModule(Model model, Index index) {","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"HoJunHao2000"},"content":"        return model.getFilteredModuleList().get(index.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"vvidday":21,"domoberzin":5,"-":43,"HoJunHao2000":7}},{"path":"src/test/java/modtrekt/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.testutil;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.commons.core.index.Index;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"domoberzin"},"content":"    public static final Index INDEX_FIRST_TASK \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"domoberzin"},"content":"    public static final Index INDEX_SECOND_TASK \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"domoberzin"},"content":"    public static final Index INDEX_THIRD_TASK \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":"    public static final Index INDEX_FIRST_MODULE \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"    public static final Index INDEX_SECOND_MODULE \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"    public static final Index INDEX_THIRD_MODULE \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"domoberzin":3,"-":7,"HoJunHao2000":5}},{"path":"src/test/java/modtrekt/testutil/TypicalModules.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.testutil;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"HoJunHao2000"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"HoJunHao2000"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.ModuleList;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.model.module.Module;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"HoJunHao2000"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"HoJunHao2000"},"content":" * A utility class containing a list of {@code Module} objects to be used in tests.","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"HoJunHao2000"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"HoJunHao2000"},"content":"public class TypicalModules {","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"    public static final Module MA2001 \u003d new ModuleBuilder().withName(\"Linear Algebra 1\")","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"            .withCredit(\"4\").withCode(\"MA2001\").build();","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"HoJunHao2000"},"content":"    public static final Module ST2334 \u003d new ModuleBuilder().withName(\"Probability and Statistics\")","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"HoJunHao2000"},"content":"            .withCredit(\"4\").withCode(\"ST2334\").build();","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"HoJunHao2000"},"content":"    public static final Module MA1521 \u003d new ModuleBuilder().withName(\"Calculus for Computing\")","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"HoJunHao2000"},"content":"            .withCredit(\"4\").withCode(\"MA1521\").build();","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"domoberzin"},"content":"    public static final Module CS2103T \u003d new ModuleBuilder().withName(\"Software Engineering\")","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"domoberzin"},"content":"            .withCredit(\"4\").withCode(\"CS2103T\").build();","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"HoJunHao2000"},"content":"    private TypicalModules() {","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"HoJunHao2000"},"content":"    } // prevents instantiation","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"HoJunHao2000"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"HoJunHao2000"},"content":"     * Returns an {@code ModuleList} with all the typical persons.","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"HoJunHao2000"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"HoJunHao2000"},"content":"    public static ModuleList getTypicalModuleList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"HoJunHao2000"},"content":"        ModuleList ab \u003d new ModuleList();","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"HoJunHao2000"},"content":"        for (Module person : getTypicalModules()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"HoJunHao2000"},"content":"            ab.addModule(person);","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"HoJunHao2000"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"HoJunHao2000"},"content":"        return ab;","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"HoJunHao2000"},"content":"    public static List\u003cModule\u003e getTypicalModules() {","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"domoberzin"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(MA1521, ST2334, MA2001, CS2103T));","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"HoJunHao2000"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"HoJunHao2000"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"domoberzin":3,"HoJunHao2000":38}},{"path":"src/test/java/modtrekt/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.ui;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":34,"HoJunHao2000":1}},{"path":"src/test/java/modtrekt/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"HoJunHao2000"},"content":"package modtrekt.ui;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"import static modtrekt.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.MainApp;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"HoJunHao2000"},"content":"import modtrekt.testutil.Assert;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"HoJunHao2000"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"HoJunHao2000"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":103,"HoJunHao2000":6}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"\u003c?import modtrekt.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":3,"HoJunHao2000":1}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"HoJunHao2000"},"content":"\u003cfx:root type\u003d\"TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":5,"HoJunHao2000":1}}]
